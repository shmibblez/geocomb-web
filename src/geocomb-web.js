

// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module !== 'undefined' ? Module : {};

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
// {{PRE_JSES}}

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

var arguments_ = [];
var thisProgram = './this.program';
var quit_ = function(status, toThrow) {
  throw toThrow;
};

// Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).

var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
ENVIRONMENT_IS_WEB = typeof window === 'object';
ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
// N.b. Electron.js environment is simultaneously a NODE-environment, but
// also a web environment.
ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';
ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (Module['ENVIRONMENT']) {
  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');
}

// `/` should be present at the end if `scriptDirectory` is not empty
var scriptDirectory = '';
function locateFile(path) {
  if (Module['locateFile']) {
    return Module['locateFile'](path, scriptDirectory);
  }
  return scriptDirectory + path;
}

// Hooks that are implemented differently in different runtime environments.
var read_,
    readAsync,
    readBinary,
    setWindowTitle;

var nodeFS;
var nodePath;

if (ENVIRONMENT_IS_NODE) {
  if (ENVIRONMENT_IS_WORKER) {
    scriptDirectory = require('path').dirname(scriptDirectory) + '/';
  } else {
    scriptDirectory = __dirname + '/';
  }

// include: node_shell_read.js


read_ = function shell_read(filename, binary) {
  var ret = tryParseAsDataURI(filename);
  if (ret) {
    return binary ? ret : ret.toString();
  }
  if (!nodeFS) nodeFS = require('fs');
  if (!nodePath) nodePath = require('path');
  filename = nodePath['normalize'](filename);
  return nodeFS['readFileSync'](filename, binary ? null : 'utf8');
};

readBinary = function readBinary(filename) {
  var ret = read_(filename, true);
  if (!ret.buffer) {
    ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
};

// end include: node_shell_read.js
  if (process['argv'].length > 1) {
    thisProgram = process['argv'][1].replace(/\\/g, '/');
  }

  arguments_ = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  process['on']('unhandledRejection', abort);

  quit_ = function(status) {
    process['exit'](status);
  };

  Module['inspect'] = function () { return '[Emscripten Module object]'; };

} else
if (ENVIRONMENT_IS_SHELL) {

  if (typeof read != 'undefined') {
    read_ = function shell_read(f) {
      var data = tryParseAsDataURI(f);
      if (data) {
        return intArrayToString(data);
      }
      return read(f);
    };
  }

  readBinary = function readBinary(f) {
    var data;
    data = tryParseAsDataURI(f);
    if (data) {
      return data;
    }
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    arguments_ = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    arguments_ = arguments;
  }

  if (typeof quit === 'function') {
    quit_ = function(status) {
      quit(status);
    };
  }

  if (typeof print !== 'undefined') {
    // Prefer to use print/printErr where they exist, as they usually work better.
    if (typeof console === 'undefined') console = /** @type{!Console} */({});
    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);
    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr !== 'undefined' ? printErr : print);
  }

} else

// Note that this includes Node.js workers when relevant (pthreads is enabled).
// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and
// ENVIRONMENT_IS_NODE.
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled
    scriptDirectory = self.location.href;
  } else if (typeof document !== 'undefined' && document.currentScript) { // web
    scriptDirectory = document.currentScript.src;
  }
  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.
  // otherwise, slice off the final part of the url to find the script directory.
  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,
  // and scriptDirectory will correctly be replaced with an empty string.
  if (scriptDirectory.indexOf('blob:') !== 0) {
    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);
  } else {
    scriptDirectory = '';
  }

  // Differentiate the Web Worker from the Node Worker case, as reading must
  // be done differently.
  {

// include: web_or_worker_shell_read.js


  read_ = function(url) {
    try {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
    } catch (err) {
      var data = tryParseAsDataURI(url);
      if (data) {
        return intArrayToString(data);
      }
      throw err;
    }
  };

  if (ENVIRONMENT_IS_WORKER) {
    readBinary = function(url) {
      try {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));
      } catch (err) {
        var data = tryParseAsDataURI(url);
        if (data) {
          return data;
        }
        throw err;
      }
    };
  }

  readAsync = function(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      var data = tryParseAsDataURI(url);
      if (data) {
        onload(data.buffer);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

// end include: web_or_worker_shell_read.js
  }

  setWindowTitle = function(title) { document.title = title };
} else
{
  throw new Error('environment detection error');
}

// Set up the out() and err() hooks, which are how we can print to stdout or
// stderr, respectively.
var out = Module['print'] || console.log.bind(console);
var err = Module['printErr'] || console.warn.bind(console);

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = null;

// Emit code to handle expected values on the Module object. This applies Module.x
// to the proper local x. This has two benefits: first, we only emit it if it is
// expected to arrive, and second, by using a local everywhere else that can be
// minified.

if (Module['arguments']) arguments_ = Module['arguments'];
if (!Object.getOwnPropertyDescriptor(Module, 'arguments')) {
  Object.defineProperty(Module, 'arguments', {
    configurable: true,
    get: function() {
      abort('Module.arguments has been replaced with plain arguments_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}

if (Module['thisProgram']) thisProgram = Module['thisProgram'];
if (!Object.getOwnPropertyDescriptor(Module, 'thisProgram')) {
  Object.defineProperty(Module, 'thisProgram', {
    configurable: true,
    get: function() {
      abort('Module.thisProgram has been replaced with plain thisProgram (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}

if (Module['quit']) quit_ = Module['quit'];
if (!Object.getOwnPropertyDescriptor(Module, 'quit')) {
  Object.defineProperty(Module, 'quit', {
    configurable: true,
    get: function() {
      abort('Module.quit has been replaced with plain quit_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}

// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message
// Assertions on removed incoming Module JS APIs.
assert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['read'] === 'undefined', 'Module.read option was removed (modify read_ in JS)');
assert(typeof Module['readAsync'] === 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');
assert(typeof Module['readBinary'] === 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');
assert(typeof Module['setWindowTitle'] === 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');
assert(typeof Module['TOTAL_MEMORY'] === 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');

if (!Object.getOwnPropertyDescriptor(Module, 'read')) {
  Object.defineProperty(Module, 'read', {
    configurable: true,
    get: function() {
      abort('Module.read has been replaced with plain read_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}

if (!Object.getOwnPropertyDescriptor(Module, 'readAsync')) {
  Object.defineProperty(Module, 'readAsync', {
    configurable: true,
    get: function() {
      abort('Module.readAsync has been replaced with plain readAsync (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}

if (!Object.getOwnPropertyDescriptor(Module, 'readBinary')) {
  Object.defineProperty(Module, 'readBinary', {
    configurable: true,
    get: function() {
      abort('Module.readBinary has been replaced with plain readBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}

if (!Object.getOwnPropertyDescriptor(Module, 'setWindowTitle')) {
  Object.defineProperty(Module, 'setWindowTitle', {
    configurable: true,
    get: function() {
      abort('Module.setWindowTitle has been replaced with plain setWindowTitle (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}
var IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';
var PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';
var WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';
var NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';




var STACK_ALIGN = 16;

function alignMemory(size, factor) {
  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
  return Math.ceil(size / factor) * factor;
}

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1': case 'i8': return 1;
    case 'i16': return 2;
    case 'i32': return 4;
    case 'i64': return 8;
    case 'float': return 4;
    case 'double': return 8;
    default: {
      if (type[type.length-1] === '*') {
        return 4; // A pointer
      } else if (type[0] === 'i') {
        var bits = Number(type.substr(1));
        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);
        return bits / 8;
      } else {
        return 0;
      }
    }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};
  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    err(text);
  }
}

// include: runtime_functions.js


// Wraps a JS function as a wasm function with a given signature.
function convertJsFunctionToWasm(func, sig) {
  return func;
}

var freeTableIndexes = [];

// Weak map of functions in the table to their indexes, created on first use.
var functionsInTableMap;

function getEmptyTableSlot() {
  // Reuse a free index if there is one, otherwise grow.
  if (freeTableIndexes.length) {
    return freeTableIndexes.pop();
  }
  // Grow the table
  try {
    wasmTable.grow(1);
  } catch (err) {
    if (!(err instanceof RangeError)) {
      throw err;
    }
    throw 'Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.';
  }
  return wasmTable.length - 1;
}

// Add a wasm function to the table.
function addFunctionWasm(func, sig) {
  // Check if the function is already in the table, to ensure each function
  // gets a unique index. First, create the map if this is the first use.
  if (!functionsInTableMap) {
    functionsInTableMap = new WeakMap();
    for (var i = 0; i < wasmTable.length; i++) {
      var item = wasmTable.get(i);
      // Ignore null values.
      if (item) {
        functionsInTableMap.set(item, i);
      }
    }
  }
  if (functionsInTableMap.has(func)) {
    return functionsInTableMap.get(func);
  }

  // It's not in the table, add it now.

  var ret = getEmptyTableSlot();

  // Set the new value.
  try {
    // Attempting to call this with JS function will cause of table.set() to fail
    wasmTable.set(ret, func);
  } catch (err) {
    if (!(err instanceof TypeError)) {
      throw err;
    }
    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction: ' + func);
    var wrapped = convertJsFunctionToWasm(func, sig);
    wasmTable.set(ret, wrapped);
  }

  functionsInTableMap.set(func, ret);

  return ret;
}

function removeFunction(index) {
  functionsInTableMap.delete(wasmTable.get(index));
  freeTableIndexes.push(index);
}

// 'sig' parameter is required for the llvm backend but only when func is not
// already a WebAssembly function.
function addFunction(func, sig) {
  assert(typeof func !== 'undefined');

  return addFunctionWasm(func, sig);
}

// end include: runtime_functions.js
// include: runtime_debug.js


// end include: runtime_debug.js
function makeBigInt(low, high, unsigned) {
  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));
}

var tempRet0 = 0;

var setTempRet0 = function(value) {
  tempRet0 = value;
};

var getTempRet0 = function() {
  return tempRet0;
};

function getCompilerSetting(name) {
  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

var wasmBinary;
if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];
if (!Object.getOwnPropertyDescriptor(Module, 'wasmBinary')) {
  Object.defineProperty(Module, 'wasmBinary', {
    configurable: true,
    get: function() {
      abort('Module.wasmBinary has been replaced with plain wasmBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}
var noExitRuntime = Module['noExitRuntime'] || true;
if (!Object.getOwnPropertyDescriptor(Module, 'noExitRuntime')) {
  Object.defineProperty(Module, 'noExitRuntime', {
    configurable: true,
    get: function() {
      abort('Module.noExitRuntime has been replaced with plain noExitRuntime (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}

// include: wasm2js.js


// wasm2js.js - enough of a polyfill for the WebAssembly object so that we can load
// wasm2js code that way.

// Emit "var WebAssembly" if definitely using wasm2js. Otherwise, in MAYBE_WASM2JS
// mode, we can't use a "var" since it would prevent normal wasm from working.
/** @suppress{duplicate, const} */
var
WebAssembly = {
  // Note that we do not use closure quoting (this['buffer'], etc.) on these
  // functions, as they are just meant for internal use. In other words, this is
  // not a fully general polyfill.
  Memory: function(opts) {
    this.buffer = new ArrayBuffer(opts['initial'] * 65536);
  },

  Module: function(binary) {
    // TODO: use the binary and info somehow - right now the wasm2js output is embedded in
    // the main JS
  },

  Instance: function(module, info) {
    // TODO: use the module and info somehow - right now the wasm2js output is embedded in
    // the main JS
    // This will be replaced by the actual wasm2js code.
    this.exports = (
function instantiate(asmLibraryArg) {
function Table(ret) {
  // grow method not included; table is not growable
  ret.set = function(i, func) {
    this[i] = func;
  };
  ret.get = function(i) {
    return this[i];
  };
  return ret;
}

  var bufferView;
  var base64ReverseLookup = new Uint8Array(123/*'z'+1*/);
  for (var i = 25; i >= 0; --i) {
    base64ReverseLookup[48+i] = 52+i; // '0-9'
    base64ReverseLookup[65+i] = i; // 'A-Z'
    base64ReverseLookup[97+i] = 26+i; // 'a-z'
  }
  base64ReverseLookup[43] = 62; // '+'
  base64ReverseLookup[47] = 63; // '/'
  /** @noinline Inlining this function would mean expanding the base64 string 4x times in the source code, which Closure seems to be happy to do. */
  function base64DecodeToExistingUint8Array(uint8Array, offset, b64) {
    var b1, b2, i = 0, j = offset, bLength = b64.length, end = offset + (bLength*3>>2) - (b64[bLength-2] == '=') - (b64[bLength-1] == '=');
    for (; i < bLength; i += 4) {
      b1 = base64ReverseLookup[b64.charCodeAt(i+1)];
      b2 = base64ReverseLookup[b64.charCodeAt(i+2)];
      uint8Array[j++] = base64ReverseLookup[b64.charCodeAt(i)] << 2 | b1 >> 4;
      if (j < end) uint8Array[j++] = b1 << 4 | b2 >> 2;
      if (j < end) uint8Array[j++] = b2 << 6 | base64ReverseLookup[b64.charCodeAt(i+3)];
    }
  }
function initActiveSegments(imports) {
  base64DecodeToExistingUint8Array(bufferView, 1024, "");
  base64DecodeToExistingUint8Array(bufferView, 12512, "AAAAAAAAAIBKf7l5N57/PwAAAAAAAAAAAAAAAAD0BkAAAAAAAAAAgNFCRLUfkgBAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIIAAAB8KwAAEDlQAAAAAAAFAAAAAAAAAAAAAAClAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmAAAApwAAAAg1AAAABAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAK/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMgAA");
  base64DecodeToExistingUint8Array(bufferView
}

  var scratchBuffer = new ArrayBuffer(16);
  var i32ScratchView = new Int32Array(scratchBuffer);
  var f32ScratchView = new Float32Array(scratchBuffer);
  var f64ScratchView = new Float64Array(scratchBuffer);
  
  function wasm2js_scratch_load_i32(index) {
    return i32ScratchView[index];
  }
      
  function wasm2js_scratch_store_i32(index, value) {
    i32ScratchView[index] = value;
  }
      
  function wasm2js_scratch_load_f64() {
    return f64ScratchView[0];
  }
      
  function wasm2js_scratch_store_f64(value) {
    f64ScratchView[0] = value;
  }
      
function asmFunc(env) {
 var memory = env.memory;
 var buffer = memory.buffer;
 var HEAP8 = new Int8Array(buffer);
 var HEAP16 = new Int16Array(buffer);
 var HEAP32 = new Int32Array(buffer);
 var HEAPU8 = new Uint8Array(buffer);
 var HEAPU16 = new Uint16Array(buffer);
 var HEAPU32 = new Uint32Array(buffer);
 var HEAPF32 = new Float32Array(buffer);
 var HEAPF64 = new Float64Array(buffer);
 var Math_imul = Math.imul;
 var Math_fround = Math.fround;
 var Math_abs = Math.abs;
 var Math_clz32 = Math.clz32;
 var Math_min = Math.min;
 var Math_max = Math.max;
 var Math_floor = Math.floor;
 var Math_ceil = Math.ceil;
 var Math_trunc = Math.trunc;
 var Math_sqrt = Math.sqrt;
 var abort = env.abort;
 var nan = NaN;
 var infinity = Infinity;
 var __cxa_allocate_exception = env.__cxa_allocate_exception;
 var __cxa_throw = env.__cxa_throw;
 var _embind_register_class = env._embind_register_class;
 var _embind_register_class_property = env._embind_register_class_property;
 var _embind_register_function = env._embind_register_function;
 var _embind_register_value_object = env._embind_register_value_object;
 var _embind_register_value_object_field = env._embind_register_value_object_field;
 var _embind_finalize_value_object = env._embind_finalize_value_object;
 var _embind_register_enum = env._embind_register_enum;
 var _embind_register_enum_value = env._embind_register_enum_value;
 var _embind_register_class_constructor = env._embind_register_class_constructor;
 var _embind_register_class_function = env._embind_register_class_function;
 var _embind_register_void = env._embind_register_void;
 var _embind_register_bool = env._embind_register_bool;
 var _embind_register_std_string = env._embind_register_std_string;
 var _embind_register_std_wstring = env._embind_register_std_wstring;
 var _embind_register_emval = env._embind_register_emval;
 var _embind_register_integer = env._embind_register_integer;
 var _embind_register_float = env._embind_register_float;
 var _embind_register_memory_view = env._embind_register_memory_view;
 var invoke_iii = env.invoke_iii;
 var __cxa_find_matching_catch_2 = env.__cxa_find_matching_catch_2;
 var getTempRet0 = env.getTempRet0;
 var __resumeException = env.__resumeException;
 var __cxa_free_exception = env.__cxa_free_exception;
 var __cxa_find_matching_catch_3 = env.__cxa_find_matching_catch_3;
 var __cxa_begin_catch = env.__cxa_begin_catch;
 var __cxa_end_catch = env.__cxa_end_catch;
 var invoke_iiii = env.invoke_iiii;
 var invoke_vii = env.invoke_vii;
 var invoke_viid = env.invoke_viid;
 var invoke_viii = env.invoke_viii;
 var invoke_v = env.invoke_v;
 var invoke_i = env.invoke_i;
 var emscripten_resize_heap = env.emscripten_resize_heap;
 var emscripten_memcpy_big = env.emscripten_memcpy_big;
 var __wasi_fd_write = env.fd_write;
 var setTempRet0 = env.setTempRet0;
 var __stack_pointer = 5257488;
 var __stack_end = 0;
 var __stack_base = 0;
 var __wasm_intrinsics_temp_i64 = 0;
 var __wasm_intrinsics_temp_i64$hi = 0;
 var i64toi32_i32$HIGH_BITS = 0;
 // EMSCRIPTEN_START_FUNCS
;
 function __wasm_call_ctors() {
  emscripten_stack_init();
  _GLOBAL__sub_I_icosahedron_cpp();
  _GLOBAL__sub_I_bind_cpp();
 }
 
 function Icosahedron__Icosahedron_28ico__map_orientation_2c_20ico__rotation_method_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  Icosahedron__triangles_28_29($6 | 0);
  HEAP32[($6 + 12 | 0) >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 16 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function Icosahedron__triangles_28_29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$1 = 0, $3 = 0, i64toi32_i32$0 = 0, $81$hi = 0, $15 = 0, $91 = 0, $92 = 0, $93 = 0.0, $54$hi = 0, $21$hi = 0, $22$hi = 0, $55$hi = 0, $276 = 0, $295 = 0, $314 = 0, $348 = 0, $367 = 0, $386 = 0, $420 = 0, $439 = 0, $458 = 0, $493 = 0, $512 = 0, $531 = 0, $566 = 0, $585 = 0, $604 = 0, $638 = 0, $657 = 0, $676 = 0, $711 = 0, $730 = 0, $749 = 0, $785 = 0, $804 = 0, $823 = 0, $857 = 0, $876 = 0, $895 = 0, $931 = 0, $950 = 0, $969 = 0, $1004 = 0, $1023 = 0, $1042 = 0, $1078 = 0, $1097 = 0, $1116 = 0, $1151 = 0, $1170 = 0, $1189 = 0, $1225 = 0, $1244 = 0, $1263 = 0, $1298 = 0, $1317 = 0, $1336 = 0, $1372 = 0, $1391 = 0, $1410 = 0, $1446 = 0, $1465 = 0, $1484 = 0, $1520 = 0, $1539 = 0, $1558 = 0, $1594 = 0, $1613 = 0, $1632 = 0, $1668 = 0, $1687 = 0, $1706 = 0, $11$hi = 0, $54 = 0, $55 = 0, $273 = 0, $279 = 0, $298 = 0, $317 = 0, $340 = 0, $345 = 0, $351 = 0, $370 = 0, $389 = 0, $412 = 0, $417 = 0, $423 = 0, $442 = 0, $461 = 0, $490 = 0, $496 = 0, $515 = 0, $534 = 0, $563 = 0, $569 = 0, $588 = 0, $607 = 0, $630 = 0, $635 = 0, $641 = 0, $660 = 0, $679 = 0, $708 = 0, $714 = 0, $733 = 0, $752 = 0, $782 = 0, $788 = 0, $807 = 0, $826 = 0, $849 = 0, $854 = 0, $860 = 0, $879 = 0, $898 = 0, $928 = 0, $934 = 0, $953 = 0, $972 = 0, $1001 = 0, $1007 = 0, $1026 = 0, $1045 = 0, $1075 = 0, $1081 = 0, $1100 = 0, $1119 = 0, $1148 = 0, $1154 = 0, $1173 = 0, $1192 = 0, $1222 = 0, $1228 = 0, $1247 = 0, $1266 = 0, $1295 = 0, $1301 = 0, $1320 = 0, $1339 = 0, $1369 = 0, $1375 = 0, $1394 = 0, $1413 = 0, $1443 = 0, $1449 = 0, $1468 = 0, $1487 = 0, $1517 = 0, $1523 = 0, $1542 = 0, $1561 = 0, $1591 = 0, $1597 = 0, $1616 = 0, $1635 = 0, $1671 = 0, $1690 = 0, $1709 = 0, $1753 = 0, $9$hi = 0, $10$hi = 0, $11 = 0, $12 = 0, $2018$hi = 0, $19$hi = 0, $20$hi = 0, $21 = 0, $22 = 0, $28$hi = 0, $32$hi = 0, $33$hi = 0, $43$hi = 0, $44$hi = 0, $45$hi = 0, $46$hi = 0, $61$hi = 0, $68$hi = 0, $72$hi = 0, $73$hi = 0, $75$hi = 0, $80$hi = 0, $83 = 0, $85$hi = 0, $88$hi = 0, $96$hi = 0, $100$hi = 0, $103 = 0, $105$hi = 0, $106$hi = 0, $107$hi = 0, $111$hi = 0, $115$hi = 0, $118 = 0, $120$hi = 0, $125$hi = 0, $129$hi = 0, $132 = 0, $134$hi = 0, $139$hi = 0, $143 = 0, $145$hi = 0, $146$hi = 0, $147$hi = 0, $149$hi = 0, $154$hi = 0, $158$hi = 0, $160$hi = 0, $162 = 0, $164$hi = 0, $169$hi = 0, $173 = 0, $175$hi = 0, $178$hi = 0, $180$hi = 0, $184$hi = 0, $188$hi = 0, $191 = 0, $193$hi = 0, $194$hi = 0, $195$hi = 0, $199$hi = 0, $203$hi = 0, $205$hi = 0, $207 = 0, $209$hi = 0, $214$hi = 0, $218$hi = 0, $220$hi = 0, $222 = 0, $224$hi = 0, $225$hi = 0, $226$hi = 0, $230$hi = 0, $234$hi = 0, $236$hi = 0, $238 = 0, $240$hi = 0, $241$hi = 0, $242$hi = 0, $246$hi = 0, $250 = 0, $252$hi = 0, $253$hi = 0, $254$hi = 0, $256$hi = 0, $258$hi = 0, $262$hi = 0, $281 = 0, $285 = 0, $289 = 0, $300 = 0, $304 = 0, $308 = 0, $319 = 0, $323 = 0, $327 = 0, $353 = 0, $357 = 0, $361 = 0, $372 = 0, $376 = 0, $380 = 0, $391 = 0, $395 = 0, $399 = 0, $425 = 0, $429 = 0, $433 = 0, $444 = 0, $448 = 0, $452 = 0, $463 = 0, $467 = 0, $471 = 0, $484 = 0, $498 = 0, $502 = 0, $506 = 0, $517 = 0, $521 = 0, $525 = 0, $536 = 0, $540 = 0, $544 = 0, $557 = 0, $571 = 0, $575 = 0, $579 = 0, $590 = 0, $594 = 0, $598 = 0, $609 = 0, $613 = 0, $617 = 0, $643 = 0, $647 = 0, $651 = 0, $662 = 0, $666 = 0, $670 = 0, $681 = 0, $685 = 0, $689 = 0, $702 = 0, $716 = 0, $720 = 0, $724 = 0, $735 = 0, $739 = 0, $743 = 0, $754 = 0, $758 = 0, $762 = 0, $790 = 0, $794 = 0, $798 = 0, $809 = 0, $813 = 0, $817 = 0, $828 = 0, $832 = 0, $836 = 0, $862 = 0, $866 = 0, $870 = 0, $881 = 0, $885 = 0, $889 = 0, $900 = 0, $904 = 0, $908 = 0, $936 = 0, $940 = 0, $944 = 0, $955 = 0, $959 = 0, $963 = 0, $974 = 0, $978 = 0, $982 = 0, $995 = 0, $1009 = 0, $1013 = 0, $1017 = 0, $1028 = 0, $1032 = 0, $1036 = 0, $1047 = 0, $1051 = 0, $1055 = 0, $1083 = 0, $1087 = 0, $1091 = 0, $1102 = 0, $1106 = 0, $1110 = 0, $1121 = 0, $1125 = 0, $1129 = 0, $1142 = 0, $1156 = 0, $1160 = 0, $1164 = 0, $1175 = 0, $1179 = 0, $1183 = 0, $1194 = 0, $1198 = 0, $1202 = 0, $1230 = 0, $1234 = 0, $1238 = 0, $1249 = 0, $1253 = 0, $1257 = 0, $1268 = 0, $1272 = 0, $1276 = 0, $1289 = 0, $1303 = 0, $1307 = 0, $1311 = 0, $1322 = 0, $1326 = 0, $1330 = 0, $1341 = 0, $1345 = 0, $1349 = 0, $1377 = 0, $1381 = 0, $1385 = 0, $1396 = 0, $1400 = 0, $1404 = 0, $1415 = 0, $1419 = 0, $1423 = 0, $1451 = 0, $1455 = 0, $1459 = 0, $1470 = 0, $1474 = 0, $1478 = 0, $1489 = 0, $1493 = 0, $1497 = 0, $1525 = 0, $1529 = 0, $1533 = 0, $1544 = 0, $1548 = 0, $1552 = 0, $1563 = 0, $1567 = 0, $1571 = 0, $1599 = 0, $1603 = 0, $1607 = 0, $1618 = 0, $1622 = 0, $1626 = 0, $1637 = 0, $1641 = 0, $1645 = 0, $1665 = 0, $1673 = 0, $1677 = 0, $1681 = 0, $1692 = 0, $1696 = 0, $1700 = 0, $1711 = 0, $1715 = 0, $1719 = 0, $1747 = 0, $1750 = 0, $5 = 0, $5$hi = 0, $1995 = 0, $7 = 0, $7$hi = 0, $2003 = 0, $9 = 0, $10 = 0, $19 = 0, $814 = 0, $28 = 0, $2054$hi = 0, $815 = 0, $32 = 0, $2066 = 0, $39 = 0, $39$hi = 0, $40 = 0, $40$hi = 0, $43 = 0, $44 = 0, $45 = 0, $2101 = 0, $52 = 0, $52$hi = 0, $53 = 0, $53$hi = 0, $61 = 0, $2143$hi = 0, $816 = 0, $68 = 0, $2161$hi = 0, $818 = 0, $72 = 0, $2170 = 0, $75 = 0, $2183$hi = 0, $819 = 0, $79 = 0, $79$hi = 0, $82 = 0, $82$hi = 0, $85 = 0, $2205$hi = 0, $820 = 0, $87 = 0.0, $88 = 0, $2212$hi = 0, $821 = 0, $90 = 0.0, $96 = 0, $2233$hi = 0, $822 = 0, $100 = 0, $2239$hi = 0, $824 = 0, $102 = 0.0, $105 = 0, $106 = 0, $2255 = 0, $111 = 0, $2275$hi = 0, $825 = 0, $115 = 0, $2281$hi = 0, $827 = 0, $117 = 0.0, $120 = 0, $2293$hi = 0, $829 = 0, $125 = 0, $2314$hi = 0, $830 = 0, $129 = 0, $2320$hi = 0, $831 = 0, $131 = 0.0, $134 = 0, $2332$hi = 0, $833 = 0, $139 = 0, $2353$hi = 0, $834 = 0, $145 = 0, $146 = 0, $2368 = 0, $148 = 0.0, $149 = 0, $2374$hi = 0, $835 = 0, $154 = 0, $2395$hi = 0, $837 = 0, $158 = 0, $2401$hi = 0, $2405 = 0, $161 = 0.0, $164 = 0, $2416$hi = 0, $838 = 0, $169 = 0, $2437$hi = 0, $839 = 0, $175 = 0, $2448$hi = 0, $840 = 0, $177 = 0.0, $178 = 0, $2455$hi = 0, $2459 = 0, $184 = 0, $2479$hi = 0, $841 = 0, $188 = 0, $2485$hi = 0, $842 = 0, $190 = 0.0, $193 = 0, $194 = 0, $2501 = 0, $199 = 0, $2521$hi = 0, $843 = 0, $203 = 0, $2527$hi = 0, $2531 = 0, $206 = 0.0, $209 = 0, $2542$hi = 0, $844 = 0, $214 = 0, $2563$hi = 0, $845 = 0, $218 = 0, $2569$hi = 0, $2573 = 0, $221 = 0.0, $224 = 0, $225 = 0, $2588 = 0, $230 = 0, $2608$hi = 0, $846 = 0, $234 = 0, $2614$hi = 0, $2618 = 0, $237 = 0.0, $240 = 0, $241 = 0, $2633 = 0, $246 = 0, $2653$hi = 0, $847 = 0, $252 = 0, $253 = 0, $2668 = 0, $255 = 0.0, $256 = 0, $2674$hi = 0, $2678 = 0, $262 = 0, $2702$hi = 0, $848 = 0, $2726 = 0, $2736 = 0, $2746 = 0, $2756 = 0, $2768 = 0, $2778 = 0, $2788 = 0, $2798 = 0, $2810 = 0, $2820 = 0, $2830 = 0, $2840 = 0, $2880 = 0, $2890 = 0, $2900 = 0, $2910 = 0, $2922 = 0, $2932 = 0, $2942 = 0, $2952 = 0, $2964 = 0, $2974 = 0, $2984 = 0, $2994 = 0, $3034 = 0, $3044 = 0, $3054 = 0, $3064 = 0, $3076 = 0, $3086 = 0, $3096 = 0, $3106 = 0, $3118 = 0, $3128 = 0, $3138 = 0, $3148 = 0, $3188 = 0, $3198 = 0, $3208 = 0, $3218 = 0, $3230 = 0, $3240 = 0, $3250 = 0, $3260 = 0, $3272 = 0, $3282 = 0, $3292 = 0, $3302 = 0, $3342 = 0, $3352 = 0, $3362 = 0, $3372 = 0, $3384 = 0, $3394 = 0, $3404 = 0, $3414 = 0, $3426 = 0, $3436 = 0, $3446 = 0, $3456 = 0, $3496 = 0, $3506 = 0, $3516 = 0, $3526 = 0, $3538 = 0, $3548 = 0, $3558 = 0, $3568 = 0, $3580 = 0, $3590 = 0, $3600 = 0, $3610 = 0, $3650 = 0, $3660 = 0, $3670 = 0, $3680 = 0, $3692 = 0, $3702 = 0, $3712 = 0, $3722 = 0, $3734 = 0, $3744 = 0, $3754 = 0, $3764 = 0, $3804 = 0, $3814 = 0, $3824 = 0, $3834 = 0, $3846 = 0, $3856 = 0, $3866 = 0, $3876 = 0, $3888 = 0, $3898 = 0, $3908 = 0, $3918 = 0, $3958 = 0, $3968 = 0, $3978 = 0, $3988 = 0, $4000 = 0, $4010 = 0, $4020 = 0, $4030 = 0, $4042 = 0, $4052 = 0, $4062 = 0, $4072 = 0, $4112 = 0, $4122 = 0, $4132 = 0, $4142 = 0, $4154 = 0, $4164 = 0, $4174 = 0, $4184 = 0, $4196 = 0, $4206 = 0, $4216 = 0, $4226 = 0, $4266 = 0, $4276 = 0, $4286 = 0, $4296 = 0, $4308 = 0, $4318 = 0, $4328 = 0, $4338 = 0, $4350 = 0, $4360 = 0, $4370 = 0, $4380 = 0, $4420 = 0, $4430 = 0, $4440 = 0, $4450 = 0, $4462 = 0, $4472 = 0, $4482 = 0, $4492 = 0, $4504 = 0, $4514 = 0, $4524 = 0, $4534 = 0, $4574 = 0, $4584 = 0, $4594 = 0, $4604 = 0, $4616 = 0, $4626 = 0, $4636 = 0, $4646 = 0, $4658 = 0, $4668 = 0, $4678 = 0, $4688 = 0, $4728 = 0, $4738 = 0, $4748 = 0, $4758 = 0, $4770 = 0, $4780 = 0, $4790 = 0, $4800 = 0, $4812 = 0, $4822 = 0, $4832 = 0, $4842 = 0, $4882 = 0, $4892 = 0, $4902 = 0, $4912 = 0, $4924 = 0, $4934 = 0, $4944 = 0, $4954 = 0, $4966 = 0, $4976 = 0, $4986 = 0, $4996 = 0, $5036 = 0, $5046 = 0, $5056 = 0, $5066 = 0, $5078 = 0, $5088 = 0, $5098 = 0, $5108 = 0, $5120 = 0, $5130 = 0, $5140 = 0, $5150 = 0, $5190 = 0, $5200 = 0, $5210 = 0, $5220 = 0, $5232 = 0, $5242 = 0, $5252 = 0, $5262 = 0, $5274 = 0, $5284 = 0, $5294 = 0, $5304 = 0, $5344 = 0, $5354 = 0, $5364 = 0, $5374 = 0, $5386 = 0, $5396 = 0, $5406 = 0, $5416 = 0, $5428 = 0, $5438 = 0, $5448 = 0, $5458 = 0, $5498 = 0, $5508 = 0, $5518 = 0, $5528 = 0, $5540 = 0, $5550 = 0, $5560 = 0, $5570 = 0, $5582 = 0, $5592 = 0, $5602 = 0, $5612 = 0, $5652 = 0, $5662 = 0, $5672 = 0, $5682 = 0, $5694 = 0, $5704 = 0, $5714 = 0, $5724 = 0, $5736 = 0, $5746 = 0, $5756 = 0, $5766 = 0, $5801 = 0;
  $3 = __stack_pointer - 5008 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 5004 | 0) >> 2] = $0;
  i64toi32_i32$2 = 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12512 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12516 | 0) >> 2] | 0;
  $5 = i64toi32_i32$0;
  $5$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12520 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12524 | 0) >> 2] | 0;
  $1995 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[(i64toi32_i32$1 + 4984 | 0) >> 2] = $1995;
  HEAP32[(i64toi32_i32$1 + 4988 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $5$hi;
  HEAP32[(i64toi32_i32$1 + 4976 | 0) >> 2] = $5;
  HEAP32[(i64toi32_i32$1 + 4980 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12528 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12532 | 0) >> 2] | 0;
  $7 = i64toi32_i32$0;
  $7$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12536 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12540 | 0) >> 2] | 0;
  $2003 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[(i64toi32_i32$1 + 4968 | 0) >> 2] = $2003;
  HEAP32[(i64toi32_i32$1 + 4972 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  HEAP32[(i64toi32_i32$1 + 4960 | 0) >> 2] = $7;
  HEAP32[(i64toi32_i32$1 + 4964 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 4968 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 4972 | 0) >> 2] | 0;
  $9 = i64toi32_i32$0;
  $9$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4960 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4964 | 0) >> 2] | 0;
  $10 = i64toi32_i32$1;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4984 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4988 | 0) >> 2] | 0;
  $11 = i64toi32_i32$0;
  $11$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4976 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4980 | 0) >> 2] | 0;
  $12 = i64toi32_i32$1;
  $2018$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $11$hi;
  i64toi32_i32$0 = $2018$hi;
  i64toi32_i32$0 = $11$hi;
  i64toi32_i32$0 = $2018$hi;
  i64toi32_i32$1 = $11$hi;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$3 = i64toi32_i32$1;
  __multf3($3 + 96 | 0 | 0, $12 | 0, i64toi32_i32$2 | 0, $11 | 0, i64toi32_i32$1 | 0, $12 | 0, i64toi32_i32$2 | 0, $11 | 0, i64toi32_i32$1 | 0);
  $15 = 8;
  i64toi32_i32$1 = ($3 + 96 | 0) + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $19 = i64toi32_i32$3;
  $19$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
  $20$hi = i64toi32_i32$3;
  i64toi32_i32$3 = 1073676288;
  $21 = 0;
  $21$hi = i64toi32_i32$3;
  i64toi32_i32$3 = 0;
  $22 = 0;
  $22$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $20$hi;
  i64toi32_i32$3 = $19$hi;
  i64toi32_i32$3 = $22$hi;
  i64toi32_i32$3 = $21$hi;
  i64toi32_i32$3 = $20$hi;
  $814 = i64toi32_i32$2;
  i64toi32_i32$2 = $19$hi;
  i64toi32_i32$1 = $22$hi;
  i64toi32_i32$0 = $21$hi;
  __addtf3($3 + 80 | 0 | 0, $814 | 0, i64toi32_i32$3 | 0, $19 | 0, i64toi32_i32$2 | 0, $22 | 0, i64toi32_i32$1 | 0, $21 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($3 + 80 | 0) + $15 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $28 = i64toi32_i32$0;
  $28$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
  $2054$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $28$hi;
  i64toi32_i32$0 = $2054$hi;
  $815 = i64toi32_i32$1;
  i64toi32_i32$1 = $28$hi;
  sqrt_28long_20double_29(i64toi32_i32$2 + 144 | 0 | 0, $815 | 0, i64toi32_i32$0 | 0, $28 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 152 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 156 | 0) >> 2] | 0;
  $32 = i64toi32_i32$1;
  $32$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 144 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 148 | 0) >> 2] | 0;
  $33$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$1 = $9$hi;
  i64toi32_i32$1 = $33$hi;
  $2066 = i64toi32_i32$0;
  i64toi32_i32$1 = $32$hi;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$0 = $9$hi;
  i64toi32_i32$2 = $33$hi;
  i64toi32_i32$3 = $32$hi;
  __divtf3($3 + 64 | 0 | 0, $10 | 0, i64toi32_i32$1 | 0, $9 | 0, i64toi32_i32$0 | 0, $2066 | 0, i64toi32_i32$2 | 0, $32 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$0 = ($3 + 64 | 0) + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $39 = i64toi32_i32$3;
  $39$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $3;
  i64toi32_i32$2 = HEAP32[($3 + 64 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($3 + 68 | 0) >> 2] | 0;
  $40 = i64toi32_i32$2;
  $40$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $39$hi;
  i64toi32_i32$2 = $3;
  HEAP32[(i64toi32_i32$2 + 4952 | 0) >> 2] = $39;
  HEAP32[(i64toi32_i32$2 + 4956 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $40$hi;
  HEAP32[(i64toi32_i32$2 + 4944 | 0) >> 2] = $40;
  HEAP32[(i64toi32_i32$2 + 4948 | 0) >> 2] = i64toi32_i32$3;
  HEAP32[(i64toi32_i32$2 + 4940 | 0) >> 2] = i64toi32_i32$2 + 4944 | 0;
  i64toi32_i32$0 = i64toi32_i32$2;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4984 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$2 + 4988 | 0) >> 2] | 0;
  $43 = i64toi32_i32$3;
  $43$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $3;
  i64toi32_i32$2 = HEAP32[($3 + 4976 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($3 + 4980 | 0) >> 2] | 0;
  $44 = i64toi32_i32$2;
  $44$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $3;
  i64toi32_i32$3 = HEAP32[($3 + 4952 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($3 + 4956 | 0) >> 2] | 0;
  $45 = i64toi32_i32$3;
  $45$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $3;
  i64toi32_i32$2 = HEAP32[($3 + 4944 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($3 + 4948 | 0) >> 2] | 0;
  $46$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $44$hi;
  i64toi32_i32$3 = $43$hi;
  i64toi32_i32$3 = $46$hi;
  $2101 = i64toi32_i32$2;
  i64toi32_i32$3 = $45$hi;
  i64toi32_i32$3 = $44$hi;
  i64toi32_i32$2 = $43$hi;
  i64toi32_i32$0 = $46$hi;
  i64toi32_i32$1 = $45$hi;
  __multf3($3 + 48 | 0 | 0, $44 | 0, i64toi32_i32$3 | 0, $43 | 0, i64toi32_i32$2 | 0, $2101 | 0, i64toi32_i32$0 | 0, $45 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = ($3 + 48 | 0) + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $52 = i64toi32_i32$1;
  $52$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
  $53 = i64toi32_i32$0;
  $53$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $52$hi;
  i64toi32_i32$0 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 4920 | 0) >> 2] = $52;
  HEAP32[(i64toi32_i32$2 + 4924 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $53$hi;
  i64toi32_i32$0 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 4912 | 0) >> 2] = $53;
  HEAP32[(i64toi32_i32$2 + 4916 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4984 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4988 | 0) >> 2] | 0;
  $54 = i64toi32_i32$1;
  $54$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4976 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4980 | 0) >> 2] | 0;
  $55 = i64toi32_i32$0;
  $55$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $54$hi;
  i64toi32_i32$1 = $55$hi;
  i64toi32_i32$1 = $54$hi;
  i64toi32_i32$1 = $55$hi;
  i64toi32_i32$0 = $54$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$3 = i64toi32_i32$0;
  __multf3($3 + 32 | 0 | 0, $55 | 0, i64toi32_i32$1 | 0, $54 | 0, i64toi32_i32$3 | 0, $55 | 0, i64toi32_i32$1 | 0, $54 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$0 = ($3 + 32 | 0) + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $61 = i64toi32_i32$3;
  $61$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $3;
  i64toi32_i32$2 = HEAP32[($3 + 32 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($3 + 36 | 0) >> 2] | 0;
  $2143$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $61$hi;
  i64toi32_i32$3 = $22$hi;
  i64toi32_i32$3 = $21$hi;
  i64toi32_i32$3 = $2143$hi;
  $816 = i64toi32_i32$2;
  i64toi32_i32$2 = $61$hi;
  i64toi32_i32$0 = $22$hi;
  i64toi32_i32$1 = $21$hi;
  __addtf3($3 + 16 | 0 | 0, $816 | 0, i64toi32_i32$3 | 0, $61 | 0, i64toi32_i32$2 | 0, $22 | 0, i64toi32_i32$0 | 0, $21 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = ($3 + 16 | 0) + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $68 = i64toi32_i32$1;
  $68$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
  $2161$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $68$hi;
  i64toi32_i32$1 = $2161$hi;
  $818 = i64toi32_i32$0;
  i64toi32_i32$0 = $68$hi;
  sqrt_28long_20double_29(i64toi32_i32$2 + 128 | 0 | 0, $818 | 0, i64toi32_i32$1 | 0, $68 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 136 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 140 | 0) >> 2] | 0;
  $72 = i64toi32_i32$0;
  $72$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 128 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 132 | 0) >> 2] | 0;
  $73$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $55$hi;
  i64toi32_i32$0 = $54$hi;
  i64toi32_i32$0 = $73$hi;
  $2170 = i64toi32_i32$1;
  i64toi32_i32$0 = $72$hi;
  i64toi32_i32$0 = $55$hi;
  i64toi32_i32$1 = $54$hi;
  i64toi32_i32$2 = $73$hi;
  i64toi32_i32$3 = $72$hi;
  __divtf3($3 | 0, $55 | 0, i64toi32_i32$0 | 0, $54 | 0, i64toi32_i32$1 | 0, $2170 | 0, i64toi32_i32$2 | 0, $72 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3 + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $75 = i64toi32_i32$3;
  $75$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $3;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2183$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $75$hi;
  i64toi32_i32$3 = $2183$hi;
  $819 = i64toi32_i32$2;
  i64toi32_i32$2 = $75$hi;
  acos_28long_20double_29(i64toi32_i32$1 + 112 | 0 | 0, $819 | 0, i64toi32_i32$3 | 0, $75 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
  $79 = i64toi32_i32$2;
  $79$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 120 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] | 0;
  $80$hi = i64toi32_i32$2;
  i64toi32_i32$2 = -2147483648;
  $81$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $80$hi;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = $80$hi;
  i64toi32_i32$1 = i64toi32_i32$3;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  $82 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
  $82$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $79$hi;
  i64toi32_i32$1 = $3;
  HEAP32[(i64toi32_i32$1 + 4896 | 0) >> 2] = $79;
  HEAP32[(i64toi32_i32$1 + 4900 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $82$hi;
  HEAP32[(i64toi32_i32$1 + 4904 | 0) >> 2] = $82;
  HEAP32[(i64toi32_i32$1 + 4908 | 0) >> 2] = i64toi32_i32$3;
  $83 = HEAP32[(i64toi32_i32$1 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$2 = $83 + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $85 = i64toi32_i32$3;
  $85$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $83;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $2205$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $85$hi;
  i64toi32_i32$3 = $2205$hi;
  $820 = i64toi32_i32$1;
  i64toi32_i32$1 = $85$hi;
  $87 = +__trunctfdf2($820 | 0, i64toi32_i32$3 | 0, $85 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4924 | 0) >> 2] | 0;
  $88 = i64toi32_i32$1;
  $88$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4916 | 0) >> 2] | 0;
  $2212$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $88$hi;
  i64toi32_i32$1 = $2212$hi;
  $821 = i64toi32_i32$3;
  i64toi32_i32$3 = $88$hi;
  $90 = +__trunctfdf2($821 | 0, i64toi32_i32$1 | 0, $88 | 0, i64toi32_i32$3 | 0);
  $91 = -1;
  $92 = 1;
  $93 = 0.0;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29(i64toi32_i32$2 + 4864 | 0 | 0, +$87, +$93, +$90, $92 | 0, $91 | 0) | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4908 | 0) >> 2] | 0;
  $96 = i64toi32_i32$3;
  $96$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4900 | 0) >> 2] | 0;
  $2233$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $96$hi;
  i64toi32_i32$3 = $2233$hi;
  $822 = i64toi32_i32$1;
  i64toi32_i32$1 = $96$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$2 + 4864 | 0 | 0, $822 | 0, i64toi32_i32$3 | 0, $96 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4924 | 0) >> 2] | 0;
  $100 = i64toi32_i32$1;
  $100$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4916 | 0) >> 2] | 0;
  $2239$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $100$hi;
  i64toi32_i32$1 = $2239$hi;
  $824 = i64toi32_i32$3;
  i64toi32_i32$3 = $100$hi;
  $102 = +__trunctfdf2($824 | 0, i64toi32_i32$1 | 0, $100 | 0, i64toi32_i32$3 | 0);
  $103 = HEAP32[(i64toi32_i32$2 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$2 = $103 + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $105 = i64toi32_i32$3;
  $105$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $103;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $106 = i64toi32_i32$1;
  $106$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $105$hi;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$3 = $105$hi;
  i64toi32_i32$2 = $105;
  i64toi32_i32$1 = $81$hi;
  i64toi32_i32$1 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
  $107$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $106$hi;
  i64toi32_i32$1 = $107$hi;
  $2255 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$1 = $106$hi;
  i64toi32_i32$2 = $107$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4832 | 0 | 0, +$102, +(+__trunctfdf2($106 | 0, i64toi32_i32$1 | 0, $2255 | 0, i64toi32_i32$2 | 0)), +$93, $92 | 0, $91 | 0) | 0;
  i64toi32_i32$3 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4908 | 0) >> 2] | 0;
  $111 = i64toi32_i32$2;
  $111$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4900 | 0) >> 2] | 0;
  $2275$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $111$hi;
  i64toi32_i32$2 = $2275$hi;
  $825 = i64toi32_i32$1;
  i64toi32_i32$1 = $111$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$3 + 4832 | 0 | 0, $825 | 0, i64toi32_i32$2 | 0, $111 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4924 | 0) >> 2] | 0;
  $115 = i64toi32_i32$1;
  $115$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4916 | 0) >> 2] | 0;
  $2281$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $115$hi;
  i64toi32_i32$1 = $2281$hi;
  $827 = i64toi32_i32$2;
  i64toi32_i32$2 = $115$hi;
  $117 = +__trunctfdf2($827 | 0, i64toi32_i32$1 | 0, $115 | 0, i64toi32_i32$2 | 0);
  $118 = HEAP32[(i64toi32_i32$3 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$3 = $118 + $15 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $120 = i64toi32_i32$2;
  $120$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $118;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $2293$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $120$hi;
  i64toi32_i32$2 = $2293$hi;
  $829 = i64toi32_i32$1;
  i64toi32_i32$1 = $120$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4800 | 0 | 0, +$117, +(+__trunctfdf2($829 | 0, i64toi32_i32$2 | 0, $120 | 0, i64toi32_i32$1 | 0)), +$93, $92 | 0, $91 | 0) | 0;
  i64toi32_i32$3 = $3;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4908 | 0) >> 2] | 0;
  $125 = i64toi32_i32$1;
  $125$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4900 | 0) >> 2] | 0;
  $2314$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $125$hi;
  i64toi32_i32$1 = $2314$hi;
  $830 = i64toi32_i32$2;
  i64toi32_i32$2 = $125$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$3 + 4800 | 0 | 0, $830 | 0, i64toi32_i32$1 | 0, $125 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4924 | 0) >> 2] | 0;
  $129 = i64toi32_i32$2;
  $129$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4916 | 0) >> 2] | 0;
  $2320$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $129$hi;
  i64toi32_i32$2 = $2320$hi;
  $831 = i64toi32_i32$1;
  i64toi32_i32$1 = $129$hi;
  $131 = +__trunctfdf2($831 | 0, i64toi32_i32$2 | 0, $129 | 0, i64toi32_i32$1 | 0);
  $132 = HEAP32[(i64toi32_i32$3 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$3 = $132 + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $134 = i64toi32_i32$1;
  $134$hi = i64toi32_i32$2;
  i64toi32_i32$3 = $132;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $2332$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $134$hi;
  i64toi32_i32$1 = $2332$hi;
  $833 = i64toi32_i32$2;
  i64toi32_i32$2 = $134$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4768 | 0 | 0, +$93, +$131, +(+__trunctfdf2($833 | 0, i64toi32_i32$1 | 0, $134 | 0, i64toi32_i32$2 | 0)), $92 | 0, $91 | 0) | 0;
  i64toi32_i32$3 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4908 | 0) >> 2] | 0;
  $139 = i64toi32_i32$2;
  $139$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4900 | 0) >> 2] | 0;
  $2353$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $139$hi;
  i64toi32_i32$2 = $2353$hi;
  $834 = i64toi32_i32$1;
  i64toi32_i32$1 = $139$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$3 + 4768 | 0 | 0, $834 | 0, i64toi32_i32$2 | 0, $139 | 0, i64toi32_i32$1 | 0);
  $143 = HEAP32[(i64toi32_i32$3 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$3 = $143 + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $145 = i64toi32_i32$1;
  $145$hi = i64toi32_i32$2;
  i64toi32_i32$3 = $143;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $146 = i64toi32_i32$2;
  $146$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $145$hi;
  i64toi32_i32$1 = $81$hi;
  i64toi32_i32$1 = $145$hi;
  i64toi32_i32$3 = $145;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = i64toi32_i32$1 ^ i64toi32_i32$2 | 0;
  $147$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $146$hi;
  i64toi32_i32$2 = $147$hi;
  $2368 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$2 = $146$hi;
  i64toi32_i32$3 = $147$hi;
  $148 = +__trunctfdf2($146 | 0, i64toi32_i32$2 | 0, $2368 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4924 | 0) >> 2] | 0;
  $149 = i64toi32_i32$3;
  $149$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4916 | 0) >> 2] | 0;
  $2374$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $149$hi;
  i64toi32_i32$3 = $2374$hi;
  $835 = i64toi32_i32$2;
  i64toi32_i32$2 = $149$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29(i64toi32_i32$1 + 4736 | 0 | 0, +$148, +$93, +(+__trunctfdf2($835 | 0, i64toi32_i32$3 | 0, $149 | 0, i64toi32_i32$2 | 0)), $92 | 0, $91 | 0) | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4908 | 0) >> 2] | 0;
  $154 = i64toi32_i32$2;
  $154$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4900 | 0) >> 2] | 0;
  $2395$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $154$hi;
  i64toi32_i32$2 = $2395$hi;
  $837 = i64toi32_i32$3;
  i64toi32_i32$3 = $154$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$1 + 4736 | 0 | 0, $837 | 0, i64toi32_i32$2 | 0, $154 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4916 | 0) >> 2] | 0;
  $158 = i64toi32_i32$3;
  $158$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4924 | 0) >> 2] | 0;
  $2401$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$3 = $2401$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = i64toi32_i32$3 ^ i64toi32_i32$2 | 0;
  $160$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $158$hi;
  i64toi32_i32$2 = $160$hi;
  $2405 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$2 = $158$hi;
  i64toi32_i32$1 = $160$hi;
  $161 = +__trunctfdf2($158 | 0, i64toi32_i32$2 | 0, $2405 | 0, i64toi32_i32$1 | 0);
  $162 = HEAP32[($3 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$3 = $162 + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $164 = i64toi32_i32$1;
  $164$hi = i64toi32_i32$2;
  i64toi32_i32$3 = $162;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $2416$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $164$hi;
  i64toi32_i32$1 = $2416$hi;
  $838 = i64toi32_i32$2;
  i64toi32_i32$2 = $164$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4704 | 0 | 0, +$93, +$161, +(+__trunctfdf2($838 | 0, i64toi32_i32$1 | 0, $164 | 0, i64toi32_i32$2 | 0)), $92 | 0, $91 | 0) | 0;
  i64toi32_i32$3 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4908 | 0) >> 2] | 0;
  $169 = i64toi32_i32$2;
  $169$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4900 | 0) >> 2] | 0;
  $2437$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $169$hi;
  i64toi32_i32$2 = $2437$hi;
  $839 = i64toi32_i32$1;
  i64toi32_i32$1 = $169$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$3 + 4704 | 0 | 0, $839 | 0, i64toi32_i32$2 | 0, $169 | 0, i64toi32_i32$1 | 0);
  $173 = HEAP32[(i64toi32_i32$3 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$3 = $173 + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $175 = i64toi32_i32$1;
  $175$hi = i64toi32_i32$2;
  i64toi32_i32$3 = $173;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $2448$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $175$hi;
  i64toi32_i32$1 = $2448$hi;
  $840 = i64toi32_i32$2;
  i64toi32_i32$2 = $175$hi;
  $177 = +__trunctfdf2($840 | 0, i64toi32_i32$1 | 0, $175 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$3 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4916 | 0) >> 2] | 0;
  $178 = i64toi32_i32$2;
  $178$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4924 | 0) >> 2] | 0;
  $2455$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = $2455$hi;
  i64toi32_i32$3 = i64toi32_i32$1;
  i64toi32_i32$1 = $81$hi;
  i64toi32_i32$1 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
  $180$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $178$hi;
  i64toi32_i32$1 = $180$hi;
  $2459 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$1 = $178$hi;
  i64toi32_i32$3 = $180$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4672 | 0 | 0, +$177, +$93, +(+__trunctfdf2($178 | 0, i64toi32_i32$1 | 0, $2459 | 0, i64toi32_i32$3 | 0)), $92 | 0, $91 | 0) | 0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4908 | 0) >> 2] | 0;
  $184 = i64toi32_i32$3;
  $184$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4900 | 0) >> 2] | 0;
  $2479$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $184$hi;
  i64toi32_i32$3 = $2479$hi;
  $841 = i64toi32_i32$1;
  i64toi32_i32$1 = $184$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$2 + 4672 | 0 | 0, $841 | 0, i64toi32_i32$3 | 0, $184 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4924 | 0) >> 2] | 0;
  $188 = i64toi32_i32$1;
  $188$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4916 | 0) >> 2] | 0;
  $2485$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $188$hi;
  i64toi32_i32$1 = $2485$hi;
  $842 = i64toi32_i32$3;
  i64toi32_i32$3 = $188$hi;
  $190 = +__trunctfdf2($842 | 0, i64toi32_i32$1 | 0, $188 | 0, i64toi32_i32$3 | 0);
  $191 = HEAP32[(i64toi32_i32$2 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$2 = $191 + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $193 = i64toi32_i32$3;
  $193$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $191;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $194 = i64toi32_i32$1;
  $194$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $193$hi;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$3 = $193$hi;
  i64toi32_i32$2 = $193;
  i64toi32_i32$1 = $81$hi;
  i64toi32_i32$1 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
  $195$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $194$hi;
  i64toi32_i32$1 = $195$hi;
  $2501 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$1 = $194$hi;
  i64toi32_i32$2 = $195$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4640 | 0 | 0, +$93, +$190, +(+__trunctfdf2($194 | 0, i64toi32_i32$1 | 0, $2501 | 0, i64toi32_i32$2 | 0)), $92 | 0, $91 | 0) | 0;
  i64toi32_i32$3 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4908 | 0) >> 2] | 0;
  $199 = i64toi32_i32$2;
  $199$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4900 | 0) >> 2] | 0;
  $2521$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $199$hi;
  i64toi32_i32$2 = $2521$hi;
  $843 = i64toi32_i32$1;
  i64toi32_i32$1 = $199$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$3 + 4640 | 0 | 0, $843 | 0, i64toi32_i32$2 | 0, $199 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4916 | 0) >> 2] | 0;
  $203 = i64toi32_i32$1;
  $203$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4924 | 0) >> 2] | 0;
  $2527$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $81$hi;
  i64toi32_i32$1 = $2527$hi;
  i64toi32_i32$3 = i64toi32_i32$2;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = i64toi32_i32$1 ^ i64toi32_i32$2 | 0;
  $205$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $203$hi;
  i64toi32_i32$2 = $205$hi;
  $2531 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$2 = $203$hi;
  i64toi32_i32$3 = $205$hi;
  $206 = +__trunctfdf2($203 | 0, i64toi32_i32$2 | 0, $2531 | 0, i64toi32_i32$3 | 0);
  $207 = HEAP32[($3 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$1 = $207 + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $209 = i64toi32_i32$3;
  $209$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $207;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2542$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $209$hi;
  i64toi32_i32$3 = $2542$hi;
  $844 = i64toi32_i32$2;
  i64toi32_i32$2 = $209$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4608 | 0 | 0, +$206, +(+__trunctfdf2($844 | 0, i64toi32_i32$3 | 0, $209 | 0, i64toi32_i32$2 | 0)), +$93, $92 | 0, $91 | 0) | 0;
  i64toi32_i32$1 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4908 | 0) >> 2] | 0;
  $214 = i64toi32_i32$2;
  $214$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4900 | 0) >> 2] | 0;
  $2563$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $214$hi;
  i64toi32_i32$2 = $2563$hi;
  $845 = i64toi32_i32$3;
  i64toi32_i32$3 = $214$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$1 + 4608 | 0 | 0, $845 | 0, i64toi32_i32$2 | 0, $214 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4916 | 0) >> 2] | 0;
  $218 = i64toi32_i32$3;
  $218$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4924 | 0) >> 2] | 0;
  $2569$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$3 = $2569$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = i64toi32_i32$3 ^ i64toi32_i32$2 | 0;
  $220$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $218$hi;
  i64toi32_i32$2 = $220$hi;
  $2573 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$2 = $218$hi;
  i64toi32_i32$1 = $220$hi;
  $221 = +__trunctfdf2($218 | 0, i64toi32_i32$2 | 0, $2573 | 0, i64toi32_i32$1 | 0);
  $222 = HEAP32[($3 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$3 = $222 + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $224 = i64toi32_i32$1;
  $224$hi = i64toi32_i32$2;
  i64toi32_i32$3 = $222;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $225 = i64toi32_i32$2;
  $225$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $224$hi;
  i64toi32_i32$1 = $81$hi;
  i64toi32_i32$1 = $224$hi;
  i64toi32_i32$3 = $224;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = i64toi32_i32$1 ^ i64toi32_i32$2 | 0;
  $226$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $225$hi;
  i64toi32_i32$2 = $226$hi;
  $2588 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$2 = $225$hi;
  i64toi32_i32$3 = $226$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4576 | 0 | 0, +$221, +(+__trunctfdf2($225 | 0, i64toi32_i32$2 | 0, $2588 | 0, i64toi32_i32$3 | 0)), +$93, $92 | 0, $91 | 0) | 0;
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4908 | 0) >> 2] | 0;
  $230 = i64toi32_i32$3;
  $230$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4900 | 0) >> 2] | 0;
  $2608$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $230$hi;
  i64toi32_i32$3 = $2608$hi;
  $846 = i64toi32_i32$2;
  i64toi32_i32$2 = $230$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$1 + 4576 | 0 | 0, $846 | 0, i64toi32_i32$3 | 0, $230 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4916 | 0) >> 2] | 0;
  $234 = i64toi32_i32$2;
  $234$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4924 | 0) >> 2] | 0;
  $2614$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = $2614$hi;
  i64toi32_i32$1 = i64toi32_i32$3;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$3 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  $236$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $234$hi;
  i64toi32_i32$3 = $236$hi;
  $2618 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$3 = $234$hi;
  i64toi32_i32$1 = $236$hi;
  $237 = +__trunctfdf2($234 | 0, i64toi32_i32$3 | 0, $2618 | 0, i64toi32_i32$1 | 0);
  $238 = HEAP32[($3 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$2 = $238 + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $240 = i64toi32_i32$1;
  $240$hi = i64toi32_i32$3;
  i64toi32_i32$2 = $238;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $241 = i64toi32_i32$3;
  $241$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $240$hi;
  i64toi32_i32$1 = $81$hi;
  i64toi32_i32$1 = $240$hi;
  i64toi32_i32$2 = $240;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$3 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
  $242$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $241$hi;
  i64toi32_i32$3 = $242$hi;
  $2633 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$3 = $241$hi;
  i64toi32_i32$2 = $242$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4544 | 0 | 0, +$93, +$237, +(+__trunctfdf2($241 | 0, i64toi32_i32$3 | 0, $2633 | 0, i64toi32_i32$2 | 0)), $92 | 0, $91 | 0) | 0;
  i64toi32_i32$1 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4908 | 0) >> 2] | 0;
  $246 = i64toi32_i32$2;
  $246$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4900 | 0) >> 2] | 0;
  $2653$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $246$hi;
  i64toi32_i32$2 = $2653$hi;
  $847 = i64toi32_i32$3;
  i64toi32_i32$3 = $246$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$1 + 4544 | 0 | 0, $847 | 0, i64toi32_i32$2 | 0, $246 | 0, i64toi32_i32$3 | 0);
  $250 = HEAP32[(i64toi32_i32$1 + 4940 | 0) >> 2] | 0;
  i64toi32_i32$1 = $250 + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $252 = i64toi32_i32$3;
  $252$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $250;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $253 = i64toi32_i32$2;
  $253$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $252$hi;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$3 = $252$hi;
  i64toi32_i32$1 = $252;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = i64toi32_i32$3 ^ i64toi32_i32$2 | 0;
  $254$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $253$hi;
  i64toi32_i32$2 = $254$hi;
  $2668 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$2 = $253$hi;
  i64toi32_i32$1 = $254$hi;
  $255 = +__trunctfdf2($253 | 0, i64toi32_i32$2 | 0, $2668 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$3 = $3;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4912 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4916 | 0) >> 2] | 0;
  $256 = i64toi32_i32$1;
  $256$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4920 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4924 | 0) >> 2] | 0;
  $2674$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $81$hi;
  i64toi32_i32$1 = $2674$hi;
  i64toi32_i32$3 = i64toi32_i32$2;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = i64toi32_i32$1 ^ i64toi32_i32$2 | 0;
  $258$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $256$hi;
  i64toi32_i32$2 = $258$hi;
  $2678 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$2 = $256$hi;
  i64toi32_i32$3 = $258$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($3 + 4512 | 0 | 0, +$255, +$93, +(+__trunctfdf2($256 | 0, i64toi32_i32$2 | 0, $2678 | 0, i64toi32_i32$3 | 0)), $92 | 0, $91 | 0) | 0;
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4904 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4908 | 0) >> 2] | 0;
  $262 = i64toi32_i32$3;
  $262$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4896 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4900 | 0) >> 2] | 0;
  $2702$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $262$hi;
  i64toi32_i32$3 = $2702$hi;
  $848 = i64toi32_i32$2;
  i64toi32_i32$2 = $262$hi;
  Point3__rotate_around_y_28long_20double_29(i64toi32_i32$1 + 4512 | 0 | 0, $848 | 0, i64toi32_i32$3 | 0, $262 | 0, i64toi32_i32$2 | 0);
  HEAP8[(i64toi32_i32$1 + 4511 | 0) >> 0] = 0 & 1 | 0;
  $273 = i64toi32_i32$1 + 2096 | 0;
  HEAP32[(i64toi32_i32$1 + 2092 | 0) >> 2] = $273;
  $276 = i64toi32_i32$1 + 2056 | 0;
  $279 = i64toi32_i32$1 + 4864 | 0;
  i64toi32_i32$1 = $279;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2726 = i64toi32_i32$2;
  i64toi32_i32$2 = $276;
  HEAP32[i64toi32_i32$2 >> 2] = $2726;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $281 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $281 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2736 = i64toi32_i32$3;
  i64toi32_i32$3 = $276 + $281 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2736;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $285 = 16;
  i64toi32_i32$1 = $279 + $285 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2746 = i64toi32_i32$2;
  i64toi32_i32$2 = $276 + $285 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $2746;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $289 = 8;
  i64toi32_i32$1 = $279 + $289 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2756 = i64toi32_i32$3;
  i64toi32_i32$3 = $276 + $289 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2756;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $295 = $3 + 2024 | 0;
  $298 = $3 + 4800 | 0;
  i64toi32_i32$1 = $298;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2768 = i64toi32_i32$2;
  i64toi32_i32$2 = $295;
  HEAP32[i64toi32_i32$2 >> 2] = $2768;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $300 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $300 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2778 = i64toi32_i32$3;
  i64toi32_i32$3 = $295 + $300 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2778;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $304 = 16;
  i64toi32_i32$1 = $298 + $304 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2788 = i64toi32_i32$2;
  i64toi32_i32$2 = $295 + $304 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $2788;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $308 = 8;
  i64toi32_i32$1 = $298 + $308 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2798 = i64toi32_i32$3;
  i64toi32_i32$3 = $295 + $308 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2798;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $314 = $3 + 1992 | 0;
  $317 = $3 + 4832 | 0;
  i64toi32_i32$1 = $317;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2810 = i64toi32_i32$2;
  i64toi32_i32$2 = $314;
  HEAP32[i64toi32_i32$2 >> 2] = $2810;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $319 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $319 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2820 = i64toi32_i32$3;
  i64toi32_i32$3 = $314 + $319 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2820;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $323 = 16;
  i64toi32_i32$1 = $317 + $323 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2830 = i64toi32_i32$2;
  i64toi32_i32$2 = $314 + $323 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $2830;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $327 = 8;
  i64toi32_i32$1 = $317 + $327 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2840 = i64toi32_i32$3;
  i64toi32_i32$3 = $314 + $327 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2840;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $340 = 0;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($273 | 0, $3 + 2056 | 0 | 0, $3 + 2024 | 0 | 0, $3 + 1992 | 0 | 0, $340 | 0, $340 | 0, $340 | 0, 1 | 0, 5 | 0, 4 | 0) | 0;
  $345 = $273 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $345;
  $348 = $3 + 1960 | 0;
  $351 = $3 + 4864 | 0;
  i64toi32_i32$1 = $351;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2880 = i64toi32_i32$2;
  i64toi32_i32$2 = $348;
  HEAP32[i64toi32_i32$2 >> 2] = $2880;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $353 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $353 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2890 = i64toi32_i32$3;
  i64toi32_i32$3 = $348 + $353 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2890;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $357 = 16;
  i64toi32_i32$1 = $351 + $357 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2900 = i64toi32_i32$2;
  i64toi32_i32$2 = $348 + $357 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $2900;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $361 = 8;
  i64toi32_i32$1 = $351 + $361 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2910 = i64toi32_i32$3;
  i64toi32_i32$3 = $348 + $361 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2910;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $367 = $3 + 1928 | 0;
  $370 = $3 + 4768 | 0;
  i64toi32_i32$1 = $370;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2922 = i64toi32_i32$2;
  i64toi32_i32$2 = $367;
  HEAP32[i64toi32_i32$2 >> 2] = $2922;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $372 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $372 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2932 = i64toi32_i32$3;
  i64toi32_i32$3 = $367 + $372 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2932;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $376 = 16;
  i64toi32_i32$1 = $370 + $376 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2942 = i64toi32_i32$2;
  i64toi32_i32$2 = $367 + $376 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $2942;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $380 = 8;
  i64toi32_i32$1 = $370 + $380 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2952 = i64toi32_i32$3;
  i64toi32_i32$3 = $367 + $380 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2952;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $386 = $3 + 1896 | 0;
  $389 = $3 + 4800 | 0;
  i64toi32_i32$1 = $389;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2964 = i64toi32_i32$2;
  i64toi32_i32$2 = $386;
  HEAP32[i64toi32_i32$2 >> 2] = $2964;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $391 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $391 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2974 = i64toi32_i32$3;
  i64toi32_i32$3 = $386 + $391 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2974;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $395 = 16;
  i64toi32_i32$1 = $389 + $395 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2984 = i64toi32_i32$2;
  i64toi32_i32$2 = $386 + $395 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $2984;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $399 = 8;
  i64toi32_i32$1 = $389 + $399 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $2994 = i64toi32_i32$3;
  i64toi32_i32$3 = $386 + $399 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $2994;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $412 = 0;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($345 | 0, $3 + 1960 | 0 | 0, $3 + 1928 | 0 | 0, $3 + 1896 | 0 | 0, $412 | 0, $412 | 0, 1 | 0, 2 | 0, 7 | 0, $412 | 0) | 0;
  $417 = $345 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $417;
  $420 = $3 + 1864 | 0;
  $423 = $3 + 4864 | 0;
  i64toi32_i32$1 = $423;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3034 = i64toi32_i32$2;
  i64toi32_i32$2 = $420;
  HEAP32[i64toi32_i32$2 >> 2] = $3034;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $425 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $425 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3044 = i64toi32_i32$3;
  i64toi32_i32$3 = $420 + $425 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3044;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $429 = 16;
  i64toi32_i32$1 = $423 + $429 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3054 = i64toi32_i32$2;
  i64toi32_i32$2 = $420 + $429 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3054;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $433 = 8;
  i64toi32_i32$1 = $423 + $433 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3064 = i64toi32_i32$3;
  i64toi32_i32$3 = $420 + $433 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3064;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $439 = $3 + 1832 | 0;
  $442 = $3 + 4736 | 0;
  i64toi32_i32$1 = $442;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3076 = i64toi32_i32$2;
  i64toi32_i32$2 = $439;
  HEAP32[i64toi32_i32$2 >> 2] = $3076;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $444 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $444 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3086 = i64toi32_i32$3;
  i64toi32_i32$3 = $439 + $444 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3086;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $448 = 16;
  i64toi32_i32$1 = $442 + $448 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3096 = i64toi32_i32$2;
  i64toi32_i32$2 = $439 + $448 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3096;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $452 = 8;
  i64toi32_i32$1 = $442 + $452 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3106 = i64toi32_i32$3;
  i64toi32_i32$3 = $439 + $452 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3106;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $458 = $3 + 1800 | 0;
  $461 = $3 + 4768 | 0;
  i64toi32_i32$1 = $461;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3118 = i64toi32_i32$2;
  i64toi32_i32$2 = $458;
  HEAP32[i64toi32_i32$2 >> 2] = $3118;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $463 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $463 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3128 = i64toi32_i32$3;
  i64toi32_i32$3 = $458 + $463 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3128;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $467 = 16;
  i64toi32_i32$1 = $461 + $467 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3138 = i64toi32_i32$2;
  i64toi32_i32$2 = $458 + $467 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3138;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $471 = 8;
  i64toi32_i32$1 = $461 + $471 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3148 = i64toi32_i32$3;
  i64toi32_i32$3 = $458 + $471 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3148;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $484 = 0;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($417 | 0, $3 + 1864 | 0 | 0, $3 + 1832 | 0 | 0, $3 + 1800 | 0 | 0, $484 | 0, $484 | 0, 2 | 0, 3 | 0, 9 | 0, 1 | 0) | 0;
  $490 = $417 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $490;
  $493 = $3 + 1768 | 0;
  $496 = $3 + 4864 | 0;
  i64toi32_i32$1 = $496;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3188 = i64toi32_i32$2;
  i64toi32_i32$2 = $493;
  HEAP32[i64toi32_i32$2 >> 2] = $3188;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $498 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $498 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3198 = i64toi32_i32$3;
  i64toi32_i32$3 = $493 + $498 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3198;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $502 = 16;
  i64toi32_i32$1 = $496 + $502 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3208 = i64toi32_i32$2;
  i64toi32_i32$2 = $493 + $502 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3208;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $506 = 8;
  i64toi32_i32$1 = $496 + $506 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3218 = i64toi32_i32$3;
  i64toi32_i32$3 = $493 + $506 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3218;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $512 = $3 + 1736 | 0;
  $515 = $3 + 4704 | 0;
  i64toi32_i32$1 = $515;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3230 = i64toi32_i32$2;
  i64toi32_i32$2 = $512;
  HEAP32[i64toi32_i32$2 >> 2] = $3230;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $517 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $517 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3240 = i64toi32_i32$3;
  i64toi32_i32$3 = $512 + $517 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3240;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $521 = 16;
  i64toi32_i32$1 = $515 + $521 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3250 = i64toi32_i32$2;
  i64toi32_i32$2 = $512 + $521 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3250;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $525 = 8;
  i64toi32_i32$1 = $515 + $525 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3260 = i64toi32_i32$3;
  i64toi32_i32$3 = $512 + $525 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3260;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $531 = $3 + 1704 | 0;
  $534 = $3 + 4736 | 0;
  i64toi32_i32$1 = $534;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3272 = i64toi32_i32$2;
  i64toi32_i32$2 = $531;
  HEAP32[i64toi32_i32$2 >> 2] = $3272;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $536 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $536 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3282 = i64toi32_i32$3;
  i64toi32_i32$3 = $531 + $536 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3282;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $540 = 16;
  i64toi32_i32$1 = $534 + $540 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3292 = i64toi32_i32$2;
  i64toi32_i32$2 = $531 + $540 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3292;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $544 = 8;
  i64toi32_i32$1 = $534 + $544 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3302 = i64toi32_i32$3;
  i64toi32_i32$3 = $531 + $544 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3302;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $557 = 0;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($490 | 0, $3 + 1768 | 0 | 0, $3 + 1736 | 0 | 0, $3 + 1704 | 0 | 0, $557 | 0, $557 | 0, 3 | 0, 4 | 0, 11 | 0, 2 | 0) | 0;
  $563 = $490 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $563;
  $566 = $3 + 1672 | 0;
  $569 = $3 + 4864 | 0;
  i64toi32_i32$1 = $569;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3342 = i64toi32_i32$2;
  i64toi32_i32$2 = $566;
  HEAP32[i64toi32_i32$2 >> 2] = $3342;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $571 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $571 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3352 = i64toi32_i32$3;
  i64toi32_i32$3 = $566 + $571 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3352;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $575 = 16;
  i64toi32_i32$1 = $569 + $575 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3362 = i64toi32_i32$2;
  i64toi32_i32$2 = $566 + $575 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3362;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $579 = 8;
  i64toi32_i32$1 = $569 + $579 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3372 = i64toi32_i32$3;
  i64toi32_i32$3 = $566 + $579 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3372;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $585 = $3 + 1640 | 0;
  $588 = $3 + 4832 | 0;
  i64toi32_i32$1 = $588;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3384 = i64toi32_i32$2;
  i64toi32_i32$2 = $585;
  HEAP32[i64toi32_i32$2 >> 2] = $3384;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $590 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $590 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3394 = i64toi32_i32$3;
  i64toi32_i32$3 = $585 + $590 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3394;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $594 = 16;
  i64toi32_i32$1 = $588 + $594 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3404 = i64toi32_i32$2;
  i64toi32_i32$2 = $585 + $594 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3404;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $598 = 8;
  i64toi32_i32$1 = $588 + $598 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3414 = i64toi32_i32$3;
  i64toi32_i32$3 = $585 + $598 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3414;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $604 = $3 + 1608 | 0;
  $607 = $3 + 4704 | 0;
  i64toi32_i32$1 = $607;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3426 = i64toi32_i32$2;
  i64toi32_i32$2 = $604;
  HEAP32[i64toi32_i32$2 >> 2] = $3426;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $609 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $609 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3436 = i64toi32_i32$3;
  i64toi32_i32$3 = $604 + $609 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3436;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $613 = 16;
  i64toi32_i32$1 = $607 + $613 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3446 = i64toi32_i32$2;
  i64toi32_i32$2 = $604 + $613 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3446;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $617 = 8;
  i64toi32_i32$1 = $607 + $617 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3456 = i64toi32_i32$3;
  i64toi32_i32$3 = $604 + $617 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3456;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $630 = 0;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($563 | 0, $3 + 1672 | 0 | 0, $3 + 1640 | 0 | 0, $3 + 1608 | 0 | 0, $630 | 0, $630 | 0, 4 | 0, $630 | 0, 13 | 0, 3 | 0) | 0;
  $635 = $563 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $635;
  $638 = $3 + 1576 | 0;
  $641 = $3 + 4672 | 0;
  i64toi32_i32$1 = $641;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3496 = i64toi32_i32$2;
  i64toi32_i32$2 = $638;
  HEAP32[i64toi32_i32$2 >> 2] = $3496;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $643 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $643 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3506 = i64toi32_i32$3;
  i64toi32_i32$3 = $638 + $643 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3506;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $647 = 16;
  i64toi32_i32$1 = $641 + $647 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3516 = i64toi32_i32$2;
  i64toi32_i32$2 = $638 + $647 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3516;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $651 = 8;
  i64toi32_i32$1 = $641 + $651 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3526 = i64toi32_i32$3;
  i64toi32_i32$3 = $638 + $651 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3526;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $657 = $3 + 1544 | 0;
  $660 = $3 + 4832 | 0;
  i64toi32_i32$1 = $660;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3538 = i64toi32_i32$2;
  i64toi32_i32$2 = $657;
  HEAP32[i64toi32_i32$2 >> 2] = $3538;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $662 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $662 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3548 = i64toi32_i32$3;
  i64toi32_i32$3 = $657 + $662 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3548;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $666 = 16;
  i64toi32_i32$1 = $660 + $666 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3558 = i64toi32_i32$2;
  i64toi32_i32$2 = $657 + $666 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3558;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $670 = 8;
  i64toi32_i32$1 = $660 + $670 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3568 = i64toi32_i32$3;
  i64toi32_i32$3 = $657 + $670 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3568;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $676 = $3 + 1512 | 0;
  $679 = $3 + 4800 | 0;
  i64toi32_i32$1 = $679;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3580 = i64toi32_i32$2;
  i64toi32_i32$2 = $676;
  HEAP32[i64toi32_i32$2 >> 2] = $3580;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $681 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $681 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3590 = i64toi32_i32$3;
  i64toi32_i32$3 = $676 + $681 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3590;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $685 = 16;
  i64toi32_i32$1 = $679 + $685 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3600 = i64toi32_i32$2;
  i64toi32_i32$2 = $676 + $685 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3600;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $689 = 8;
  i64toi32_i32$1 = $679 + $689 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3610 = i64toi32_i32$3;
  i64toi32_i32$3 = $676 + $689 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3610;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $702 = 1;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($635 | 0, $3 + 1576 | 0 | 0, $3 + 1544 | 0 | 0, $3 + 1512 | 0 | 0, $702 | 0, $702 | 0, 5 | 0, 14 | 0, 0 | 0, 16 | 0) | 0;
  $708 = $635 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $708;
  $711 = $3 + 1480 | 0;
  $714 = $3 + 4800 | 0;
  i64toi32_i32$1 = $714;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3650 = i64toi32_i32$2;
  i64toi32_i32$2 = $711;
  HEAP32[i64toi32_i32$2 >> 2] = $3650;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $716 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $716 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3660 = i64toi32_i32$3;
  i64toi32_i32$3 = $711 + $716 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3660;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $720 = 16;
  i64toi32_i32$1 = $714 + $720 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3670 = i64toi32_i32$2;
  i64toi32_i32$2 = $711 + $720 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3670;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $724 = 8;
  i64toi32_i32$1 = $714 + $724 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3680 = i64toi32_i32$3;
  i64toi32_i32$3 = $711 + $724 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3680;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $730 = $3 + 1448 | 0;
  $733 = $3 + 4640 | 0;
  i64toi32_i32$1 = $733;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3692 = i64toi32_i32$2;
  i64toi32_i32$2 = $730;
  HEAP32[i64toi32_i32$2 >> 2] = $3692;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $735 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $735 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3702 = i64toi32_i32$3;
  i64toi32_i32$3 = $730 + $735 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3702;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $739 = 16;
  i64toi32_i32$1 = $733 + $739 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3712 = i64toi32_i32$2;
  i64toi32_i32$2 = $730 + $739 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3712;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $743 = 8;
  i64toi32_i32$1 = $733 + $743 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3722 = i64toi32_i32$3;
  i64toi32_i32$3 = $730 + $743 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3722;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $749 = $3 + 1416 | 0;
  $752 = $3 + 4672 | 0;
  i64toi32_i32$1 = $752;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3734 = i64toi32_i32$2;
  i64toi32_i32$2 = $749;
  HEAP32[i64toi32_i32$2 >> 2] = $3734;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $754 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $754 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3744 = i64toi32_i32$3;
  i64toi32_i32$3 = $749 + $754 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3744;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $758 = 16;
  i64toi32_i32$1 = $752 + $758 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3754 = i64toi32_i32$2;
  i64toi32_i32$2 = $749 + $758 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3754;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $762 = 8;
  i64toi32_i32$1 = $752 + $762 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3764 = i64toi32_i32$3;
  i64toi32_i32$3 = $749 + $762 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3764;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($708 | 0, $3 + 1480 | 0 | 0, $3 + 1448 | 0 | 0, $3 + 1416 | 0 | 0, 0 | 0, 1 | 0, 6 | 0, 7 | 0, 15 | 0, 5 | 0) | 0;
  $782 = $708 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $782;
  $785 = $3 + 1384 | 0;
  $788 = $3 + 4640 | 0;
  i64toi32_i32$1 = $788;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3804 = i64toi32_i32$2;
  i64toi32_i32$2 = $785;
  HEAP32[i64toi32_i32$2 >> 2] = $3804;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $790 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $790 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3814 = i64toi32_i32$3;
  i64toi32_i32$3 = $785 + $790 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3814;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $794 = 16;
  i64toi32_i32$1 = $788 + $794 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3824 = i64toi32_i32$2;
  i64toi32_i32$2 = $785 + $794 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3824;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $798 = 8;
  i64toi32_i32$1 = $788 + $798 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3834 = i64toi32_i32$3;
  i64toi32_i32$3 = $785 + $798 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3834;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $804 = $3 + 1352 | 0;
  $807 = $3 + 4800 | 0;
  i64toi32_i32$1 = $807;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3846 = i64toi32_i32$2;
  i64toi32_i32$2 = $804;
  HEAP32[i64toi32_i32$2 >> 2] = $3846;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $809 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $809 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3856 = i64toi32_i32$3;
  i64toi32_i32$3 = $804 + $809 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3856;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $813 = 16;
  i64toi32_i32$1 = $807 + $813 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3866 = i64toi32_i32$2;
  i64toi32_i32$2 = $804 + $813 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3866;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $817 = 8;
  i64toi32_i32$1 = $807 + $817 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3876 = i64toi32_i32$3;
  i64toi32_i32$3 = $804 + $817 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3876;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $823 = $3 + 1320 | 0;
  $826 = $3 + 4768 | 0;
  i64toi32_i32$1 = $826;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3888 = i64toi32_i32$2;
  i64toi32_i32$2 = $823;
  HEAP32[i64toi32_i32$2 >> 2] = $3888;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $828 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $828 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3898 = i64toi32_i32$3;
  i64toi32_i32$3 = $823 + $828 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3898;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $832 = 16;
  i64toi32_i32$1 = $826 + $832 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3908 = i64toi32_i32$2;
  i64toi32_i32$2 = $823 + $832 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3908;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $836 = 8;
  i64toi32_i32$1 = $826 + $836 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3918 = i64toi32_i32$3;
  i64toi32_i32$3 = $823 + $836 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3918;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $849 = 1;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($782 | 0, $3 + 1384 | 0 | 0, $3 + 1352 | 0 | 0, $3 + 1320 | 0 | 0, $849 | 0, $849 | 0, 7 | 0, 6 | 0, $849 | 0, 8 | 0) | 0;
  $854 = $782 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $854;
  $857 = $3 + 1288 | 0;
  $860 = $3 + 4768 | 0;
  i64toi32_i32$1 = $860;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3958 = i64toi32_i32$2;
  i64toi32_i32$2 = $857;
  HEAP32[i64toi32_i32$2 >> 2] = $3958;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $862 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $862 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3968 = i64toi32_i32$3;
  i64toi32_i32$3 = $857 + $862 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3968;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $866 = 16;
  i64toi32_i32$1 = $860 + $866 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3978 = i64toi32_i32$2;
  i64toi32_i32$2 = $857 + $866 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $3978;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $870 = 8;
  i64toi32_i32$1 = $860 + $870 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $3988 = i64toi32_i32$3;
  i64toi32_i32$3 = $857 + $870 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $3988;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $876 = $3 + 1256 | 0;
  $879 = $3 + 4608 | 0;
  i64toi32_i32$1 = $879;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4000 = i64toi32_i32$2;
  i64toi32_i32$2 = $876;
  HEAP32[i64toi32_i32$2 >> 2] = $4000;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $881 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $881 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4010 = i64toi32_i32$3;
  i64toi32_i32$3 = $876 + $881 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4010;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $885 = 16;
  i64toi32_i32$1 = $879 + $885 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4020 = i64toi32_i32$2;
  i64toi32_i32$2 = $876 + $885 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4020;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $889 = 8;
  i64toi32_i32$1 = $879 + $889 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4030 = i64toi32_i32$3;
  i64toi32_i32$3 = $876 + $889 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4030;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $895 = $3 + 1224 | 0;
  $898 = $3 + 4640 | 0;
  i64toi32_i32$1 = $898;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4042 = i64toi32_i32$2;
  i64toi32_i32$2 = $895;
  HEAP32[i64toi32_i32$2 >> 2] = $4042;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $900 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $900 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4052 = i64toi32_i32$3;
  i64toi32_i32$3 = $895 + $900 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4052;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $904 = 16;
  i64toi32_i32$1 = $898 + $904 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4062 = i64toi32_i32$2;
  i64toi32_i32$2 = $895 + $904 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4062;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $908 = 8;
  i64toi32_i32$1 = $898 + $908 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4072 = i64toi32_i32$3;
  i64toi32_i32$3 = $895 + $908 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4072;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($854 | 0, $3 + 1288 | 0 | 0, $3 + 1256 | 0 | 0, $3 + 1224 | 0 | 0, 0 | 0, 1 | 0, 8 | 0, 9 | 0, 16 | 0, 7 | 0) | 0;
  $928 = $854 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $928;
  $931 = $3 + 1192 | 0;
  $934 = $3 + 4608 | 0;
  i64toi32_i32$1 = $934;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4112 = i64toi32_i32$2;
  i64toi32_i32$2 = $931;
  HEAP32[i64toi32_i32$2 >> 2] = $4112;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $936 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $936 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4122 = i64toi32_i32$3;
  i64toi32_i32$3 = $931 + $936 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4122;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $940 = 16;
  i64toi32_i32$1 = $934 + $940 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4132 = i64toi32_i32$2;
  i64toi32_i32$2 = $931 + $940 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4132;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $944 = 8;
  i64toi32_i32$1 = $934 + $944 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4142 = i64toi32_i32$3;
  i64toi32_i32$3 = $931 + $944 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4142;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $950 = $3 + 1160 | 0;
  $953 = $3 + 4768 | 0;
  i64toi32_i32$1 = $953;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4154 = i64toi32_i32$2;
  i64toi32_i32$2 = $950;
  HEAP32[i64toi32_i32$2 >> 2] = $4154;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $955 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $955 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4164 = i64toi32_i32$3;
  i64toi32_i32$3 = $950 + $955 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4164;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $959 = 16;
  i64toi32_i32$1 = $953 + $959 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4174 = i64toi32_i32$2;
  i64toi32_i32$2 = $950 + $959 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4174;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $963 = 8;
  i64toi32_i32$1 = $953 + $963 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4184 = i64toi32_i32$3;
  i64toi32_i32$3 = $950 + $963 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4184;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $969 = $3 + 1128 | 0;
  $972 = $3 + 4736 | 0;
  i64toi32_i32$1 = $972;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4196 = i64toi32_i32$2;
  i64toi32_i32$2 = $969;
  HEAP32[i64toi32_i32$2 >> 2] = $4196;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $974 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $974 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4206 = i64toi32_i32$3;
  i64toi32_i32$3 = $969 + $974 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4206;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $978 = 16;
  i64toi32_i32$1 = $972 + $978 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4216 = i64toi32_i32$2;
  i64toi32_i32$2 = $969 + $978 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4216;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $982 = 8;
  i64toi32_i32$1 = $972 + $982 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4226 = i64toi32_i32$3;
  i64toi32_i32$3 = $969 + $982 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4226;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $995 = 1;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($928 | 0, $3 + 1192 | 0 | 0, $3 + 1160 | 0 | 0, $3 + 1128 | 0 | 0, $995 | 0, $995 | 0, 9 | 0, 8 | 0, 2 | 0, 10 | 0) | 0;
  $1001 = $928 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1001;
  $1004 = $3 + 1096 | 0;
  $1007 = $3 + 4736 | 0;
  i64toi32_i32$1 = $1007;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4266 = i64toi32_i32$2;
  i64toi32_i32$2 = $1004;
  HEAP32[i64toi32_i32$2 >> 2] = $4266;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1009 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1009 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4276 = i64toi32_i32$3;
  i64toi32_i32$3 = $1004 + $1009 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4276;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1013 = 16;
  i64toi32_i32$1 = $1007 + $1013 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4286 = i64toi32_i32$2;
  i64toi32_i32$2 = $1004 + $1013 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4286;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1017 = 8;
  i64toi32_i32$1 = $1007 + $1017 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4296 = i64toi32_i32$3;
  i64toi32_i32$3 = $1004 + $1017 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4296;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1023 = $3 + 1064 | 0;
  $1026 = $3 + 4576 | 0;
  i64toi32_i32$1 = $1026;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4308 = i64toi32_i32$2;
  i64toi32_i32$2 = $1023;
  HEAP32[i64toi32_i32$2 >> 2] = $4308;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1028 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1028 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4318 = i64toi32_i32$3;
  i64toi32_i32$3 = $1023 + $1028 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4318;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1032 = 16;
  i64toi32_i32$1 = $1026 + $1032 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4328 = i64toi32_i32$2;
  i64toi32_i32$2 = $1023 + $1032 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4328;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1036 = 8;
  i64toi32_i32$1 = $1026 + $1036 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4338 = i64toi32_i32$3;
  i64toi32_i32$3 = $1023 + $1036 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4338;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1042 = $3 + 1032 | 0;
  $1045 = $3 + 4608 | 0;
  i64toi32_i32$1 = $1045;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4350 = i64toi32_i32$2;
  i64toi32_i32$2 = $1042;
  HEAP32[i64toi32_i32$2 >> 2] = $4350;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1047 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1047 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4360 = i64toi32_i32$3;
  i64toi32_i32$3 = $1042 + $1047 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4360;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1051 = 16;
  i64toi32_i32$1 = $1045 + $1051 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4370 = i64toi32_i32$2;
  i64toi32_i32$2 = $1042 + $1051 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4370;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1055 = 8;
  i64toi32_i32$1 = $1045 + $1055 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4380 = i64toi32_i32$3;
  i64toi32_i32$3 = $1042 + $1055 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4380;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1001 | 0, $3 + 1096 | 0 | 0, $3 + 1064 | 0 | 0, $3 + 1032 | 0 | 0, 0 | 0, 1 | 0, 10 | 0, 11 | 0, 17 | 0, 9 | 0) | 0;
  $1075 = $1001 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1075;
  $1078 = $3 + 1e3 | 0;
  $1081 = $3 + 4576 | 0;
  i64toi32_i32$1 = $1081;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4420 = i64toi32_i32$2;
  i64toi32_i32$2 = $1078;
  HEAP32[i64toi32_i32$2 >> 2] = $4420;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1083 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1083 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4430 = i64toi32_i32$3;
  i64toi32_i32$3 = $1078 + $1083 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4430;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1087 = 16;
  i64toi32_i32$1 = $1081 + $1087 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4440 = i64toi32_i32$2;
  i64toi32_i32$2 = $1078 + $1087 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4440;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1091 = 8;
  i64toi32_i32$1 = $1081 + $1091 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4450 = i64toi32_i32$3;
  i64toi32_i32$3 = $1078 + $1091 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4450;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1097 = $3 + 968 | 0;
  $1100 = $3 + 4736 | 0;
  i64toi32_i32$1 = $1100;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4462 = i64toi32_i32$2;
  i64toi32_i32$2 = $1097;
  HEAP32[i64toi32_i32$2 >> 2] = $4462;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1102 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1102 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4472 = i64toi32_i32$3;
  i64toi32_i32$3 = $1097 + $1102 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4472;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1106 = 16;
  i64toi32_i32$1 = $1100 + $1106 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4482 = i64toi32_i32$2;
  i64toi32_i32$2 = $1097 + $1106 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4482;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1110 = 8;
  i64toi32_i32$1 = $1100 + $1110 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4492 = i64toi32_i32$3;
  i64toi32_i32$3 = $1097 + $1110 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4492;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1116 = $3 + 936 | 0;
  $1119 = $3 + 4704 | 0;
  i64toi32_i32$1 = $1119;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4504 = i64toi32_i32$2;
  i64toi32_i32$2 = $1116;
  HEAP32[i64toi32_i32$2 >> 2] = $4504;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1121 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1121 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4514 = i64toi32_i32$3;
  i64toi32_i32$3 = $1116 + $1121 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4514;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1125 = 16;
  i64toi32_i32$1 = $1119 + $1125 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4524 = i64toi32_i32$2;
  i64toi32_i32$2 = $1116 + $1125 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4524;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1129 = 8;
  i64toi32_i32$1 = $1119 + $1129 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4534 = i64toi32_i32$3;
  i64toi32_i32$3 = $1116 + $1129 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4534;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1142 = 1;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1075 | 0, $3 + 1e3 | 0 | 0, $3 + 968 | 0 | 0, $3 + 936 | 0 | 0, $1142 | 0, $1142 | 0, 11 | 0, 10 | 0, 3 | 0, 12 | 0) | 0;
  $1148 = $1075 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1148;
  $1151 = $3 + 904 | 0;
  $1154 = $3 + 4704 | 0;
  i64toi32_i32$1 = $1154;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4574 = i64toi32_i32$2;
  i64toi32_i32$2 = $1151;
  HEAP32[i64toi32_i32$2 >> 2] = $4574;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1156 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1156 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4584 = i64toi32_i32$3;
  i64toi32_i32$3 = $1151 + $1156 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4584;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1160 = 16;
  i64toi32_i32$1 = $1154 + $1160 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4594 = i64toi32_i32$2;
  i64toi32_i32$2 = $1151 + $1160 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4594;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1164 = 8;
  i64toi32_i32$1 = $1154 + $1164 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4604 = i64toi32_i32$3;
  i64toi32_i32$3 = $1151 + $1164 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4604;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1170 = $3 + 872 | 0;
  $1173 = $3 + 4544 | 0;
  i64toi32_i32$1 = $1173;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4616 = i64toi32_i32$2;
  i64toi32_i32$2 = $1170;
  HEAP32[i64toi32_i32$2 >> 2] = $4616;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1175 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1175 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4626 = i64toi32_i32$3;
  i64toi32_i32$3 = $1170 + $1175 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4626;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1179 = 16;
  i64toi32_i32$1 = $1173 + $1179 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4636 = i64toi32_i32$2;
  i64toi32_i32$2 = $1170 + $1179 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4636;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1183 = 8;
  i64toi32_i32$1 = $1173 + $1183 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4646 = i64toi32_i32$3;
  i64toi32_i32$3 = $1170 + $1183 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4646;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1189 = $3 + 840 | 0;
  $1192 = $3 + 4576 | 0;
  i64toi32_i32$1 = $1192;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4658 = i64toi32_i32$2;
  i64toi32_i32$2 = $1189;
  HEAP32[i64toi32_i32$2 >> 2] = $4658;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1194 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1194 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4668 = i64toi32_i32$3;
  i64toi32_i32$3 = $1189 + $1194 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4668;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1198 = 16;
  i64toi32_i32$1 = $1192 + $1198 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4678 = i64toi32_i32$2;
  i64toi32_i32$2 = $1189 + $1198 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4678;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1202 = 8;
  i64toi32_i32$1 = $1192 + $1202 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4688 = i64toi32_i32$3;
  i64toi32_i32$3 = $1189 + $1202 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4688;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1148 | 0, $3 + 904 | 0 | 0, $3 + 872 | 0 | 0, $3 + 840 | 0 | 0, 0 | 0, 1 | 0, 12 | 0, 13 | 0, 18 | 0, 11 | 0) | 0;
  $1222 = $1148 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1222;
  $1225 = $3 + 808 | 0;
  $1228 = $3 + 4544 | 0;
  i64toi32_i32$1 = $1228;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4728 = i64toi32_i32$2;
  i64toi32_i32$2 = $1225;
  HEAP32[i64toi32_i32$2 >> 2] = $4728;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1230 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1230 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4738 = i64toi32_i32$3;
  i64toi32_i32$3 = $1225 + $1230 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4738;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1234 = 16;
  i64toi32_i32$1 = $1228 + $1234 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4748 = i64toi32_i32$2;
  i64toi32_i32$2 = $1225 + $1234 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4748;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1238 = 8;
  i64toi32_i32$1 = $1228 + $1238 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4758 = i64toi32_i32$3;
  i64toi32_i32$3 = $1225 + $1238 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4758;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1244 = $3 + 776 | 0;
  $1247 = $3 + 4704 | 0;
  i64toi32_i32$1 = $1247;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4770 = i64toi32_i32$2;
  i64toi32_i32$2 = $1244;
  HEAP32[i64toi32_i32$2 >> 2] = $4770;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1249 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1249 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4780 = i64toi32_i32$3;
  i64toi32_i32$3 = $1244 + $1249 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4780;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1253 = 16;
  i64toi32_i32$1 = $1247 + $1253 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4790 = i64toi32_i32$2;
  i64toi32_i32$2 = $1244 + $1253 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4790;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1257 = 8;
  i64toi32_i32$1 = $1247 + $1257 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4800 = i64toi32_i32$3;
  i64toi32_i32$3 = $1244 + $1257 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4800;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1263 = $3 + 744 | 0;
  $1266 = $3 + 4832 | 0;
  i64toi32_i32$1 = $1266;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4812 = i64toi32_i32$2;
  i64toi32_i32$2 = $1263;
  HEAP32[i64toi32_i32$2 >> 2] = $4812;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1268 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1268 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4822 = i64toi32_i32$3;
  i64toi32_i32$3 = $1263 + $1268 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4822;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1272 = 16;
  i64toi32_i32$1 = $1266 + $1272 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4832 = i64toi32_i32$2;
  i64toi32_i32$2 = $1263 + $1272 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4832;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1276 = 8;
  i64toi32_i32$1 = $1266 + $1276 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4842 = i64toi32_i32$3;
  i64toi32_i32$3 = $1263 + $1276 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4842;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1289 = 1;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1222 | 0, $3 + 808 | 0 | 0, $3 + 776 | 0 | 0, $3 + 744 | 0 | 0, $1289 | 0, $1289 | 0, 13 | 0, 12 | 0, 4 | 0, 14 | 0) | 0;
  $1295 = $1222 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1295;
  $1298 = $3 + 712 | 0;
  $1301 = $3 + 4832 | 0;
  i64toi32_i32$1 = $1301;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4882 = i64toi32_i32$2;
  i64toi32_i32$2 = $1298;
  HEAP32[i64toi32_i32$2 >> 2] = $4882;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1303 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1303 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4892 = i64toi32_i32$3;
  i64toi32_i32$3 = $1298 + $1303 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4892;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1307 = 16;
  i64toi32_i32$1 = $1301 + $1307 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4902 = i64toi32_i32$2;
  i64toi32_i32$2 = $1298 + $1307 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4902;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1311 = 8;
  i64toi32_i32$1 = $1301 + $1311 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4912 = i64toi32_i32$3;
  i64toi32_i32$3 = $1298 + $1311 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4912;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1317 = $3 + 680 | 0;
  $1320 = $3 + 4672 | 0;
  i64toi32_i32$1 = $1320;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4924 = i64toi32_i32$2;
  i64toi32_i32$2 = $1317;
  HEAP32[i64toi32_i32$2 >> 2] = $4924;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1322 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1322 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4934 = i64toi32_i32$3;
  i64toi32_i32$3 = $1317 + $1322 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4934;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1326 = 16;
  i64toi32_i32$1 = $1320 + $1326 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4944 = i64toi32_i32$2;
  i64toi32_i32$2 = $1317 + $1326 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4944;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1330 = 8;
  i64toi32_i32$1 = $1320 + $1330 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4954 = i64toi32_i32$3;
  i64toi32_i32$3 = $1317 + $1330 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4954;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1336 = $3 + 648 | 0;
  $1339 = $3 + 4544 | 0;
  i64toi32_i32$1 = $1339;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4966 = i64toi32_i32$2;
  i64toi32_i32$2 = $1336;
  HEAP32[i64toi32_i32$2 >> 2] = $4966;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1341 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1341 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4976 = i64toi32_i32$3;
  i64toi32_i32$3 = $1336 + $1341 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4976;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1345 = 16;
  i64toi32_i32$1 = $1339 + $1345 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4986 = i64toi32_i32$2;
  i64toi32_i32$2 = $1336 + $1345 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $4986;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1349 = 8;
  i64toi32_i32$1 = $1339 + $1349 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $4996 = i64toi32_i32$3;
  i64toi32_i32$3 = $1336 + $1349 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $4996;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1295 | 0, $3 + 712 | 0 | 0, $3 + 680 | 0 | 0, $3 + 648 | 0 | 0, 0 | 0, 1 | 0, 14 | 0, 5 | 0, 19 | 0, 13 | 0) | 0;
  $1369 = $1295 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1369;
  $1372 = $3 + 616 | 0;
  $1375 = $3 + 4512 | 0;
  i64toi32_i32$1 = $1375;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5036 = i64toi32_i32$2;
  i64toi32_i32$2 = $1372;
  HEAP32[i64toi32_i32$2 >> 2] = $5036;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1377 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1377 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5046 = i64toi32_i32$3;
  i64toi32_i32$3 = $1372 + $1377 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5046;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1381 = 16;
  i64toi32_i32$1 = $1375 + $1381 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5056 = i64toi32_i32$2;
  i64toi32_i32$2 = $1372 + $1381 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5056;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1385 = 8;
  i64toi32_i32$1 = $1375 + $1385 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5066 = i64toi32_i32$3;
  i64toi32_i32$3 = $1372 + $1385 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5066;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1391 = $3 + 584 | 0;
  $1394 = $3 + 4672 | 0;
  i64toi32_i32$1 = $1394;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5078 = i64toi32_i32$2;
  i64toi32_i32$2 = $1391;
  HEAP32[i64toi32_i32$2 >> 2] = $5078;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1396 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1396 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5088 = i64toi32_i32$3;
  i64toi32_i32$3 = $1391 + $1396 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5088;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1400 = 16;
  i64toi32_i32$1 = $1394 + $1400 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5098 = i64toi32_i32$2;
  i64toi32_i32$2 = $1391 + $1400 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5098;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1404 = 8;
  i64toi32_i32$1 = $1394 + $1404 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5108 = i64toi32_i32$3;
  i64toi32_i32$3 = $1391 + $1404 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5108;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1410 = $3 + 552 | 0;
  $1413 = $3 + 4640 | 0;
  i64toi32_i32$1 = $1413;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5120 = i64toi32_i32$2;
  i64toi32_i32$2 = $1410;
  HEAP32[i64toi32_i32$2 >> 2] = $5120;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1415 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1415 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5130 = i64toi32_i32$3;
  i64toi32_i32$3 = $1410 + $1415 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5130;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1419 = 16;
  i64toi32_i32$1 = $1413 + $1419 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5140 = i64toi32_i32$2;
  i64toi32_i32$2 = $1410 + $1419 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5140;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1423 = 8;
  i64toi32_i32$1 = $1413 + $1423 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5150 = i64toi32_i32$3;
  i64toi32_i32$3 = $1410 + $1423 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5150;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1369 | 0, $3 + 616 | 0 | 0, $3 + 584 | 0 | 0, $3 + 552 | 0 | 0, 1 | 0, 2 | 0, 15 | 0, 19 | 0, 6 | 0, 16 | 0) | 0;
  $1443 = $1369 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1443;
  $1446 = $3 + 520 | 0;
  $1449 = $3 + 4512 | 0;
  i64toi32_i32$1 = $1449;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5190 = i64toi32_i32$2;
  i64toi32_i32$2 = $1446;
  HEAP32[i64toi32_i32$2 >> 2] = $5190;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1451 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1451 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5200 = i64toi32_i32$3;
  i64toi32_i32$3 = $1446 + $1451 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5200;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1455 = 16;
  i64toi32_i32$1 = $1449 + $1455 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5210 = i64toi32_i32$2;
  i64toi32_i32$2 = $1446 + $1455 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5210;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1459 = 8;
  i64toi32_i32$1 = $1449 + $1459 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5220 = i64toi32_i32$3;
  i64toi32_i32$3 = $1446 + $1459 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5220;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1465 = $3 + 488 | 0;
  $1468 = $3 + 4640 | 0;
  i64toi32_i32$1 = $1468;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5232 = i64toi32_i32$2;
  i64toi32_i32$2 = $1465;
  HEAP32[i64toi32_i32$2 >> 2] = $5232;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1470 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1470 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5242 = i64toi32_i32$3;
  i64toi32_i32$3 = $1465 + $1470 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5242;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1474 = 16;
  i64toi32_i32$1 = $1468 + $1474 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5252 = i64toi32_i32$2;
  i64toi32_i32$2 = $1465 + $1474 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5252;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1478 = 8;
  i64toi32_i32$1 = $1468 + $1478 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5262 = i64toi32_i32$3;
  i64toi32_i32$3 = $1465 + $1478 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5262;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1484 = $3 + 456 | 0;
  $1487 = $3 + 4608 | 0;
  i64toi32_i32$1 = $1487;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5274 = i64toi32_i32$2;
  i64toi32_i32$2 = $1484;
  HEAP32[i64toi32_i32$2 >> 2] = $5274;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1489 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1489 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5284 = i64toi32_i32$3;
  i64toi32_i32$3 = $1484 + $1489 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5284;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1493 = 16;
  i64toi32_i32$1 = $1487 + $1493 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5294 = i64toi32_i32$2;
  i64toi32_i32$2 = $1484 + $1493 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5294;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1497 = 8;
  i64toi32_i32$1 = $1487 + $1497 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5304 = i64toi32_i32$3;
  i64toi32_i32$3 = $1484 + $1497 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5304;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1443 | 0, $3 + 520 | 0 | 0, $3 + 488 | 0 | 0, $3 + 456 | 0 | 0, 1 | 0, 2 | 0, 16 | 0, 15 | 0, 8 | 0, 17 | 0) | 0;
  $1517 = $1443 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1517;
  $1520 = $3 + 424 | 0;
  $1523 = $3 + 4512 | 0;
  i64toi32_i32$1 = $1523;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5344 = i64toi32_i32$2;
  i64toi32_i32$2 = $1520;
  HEAP32[i64toi32_i32$2 >> 2] = $5344;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1525 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1525 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5354 = i64toi32_i32$3;
  i64toi32_i32$3 = $1520 + $1525 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5354;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1529 = 16;
  i64toi32_i32$1 = $1523 + $1529 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5364 = i64toi32_i32$2;
  i64toi32_i32$2 = $1520 + $1529 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5364;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1533 = 8;
  i64toi32_i32$1 = $1523 + $1533 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5374 = i64toi32_i32$3;
  i64toi32_i32$3 = $1520 + $1533 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5374;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1539 = $3 + 392 | 0;
  $1542 = $3 + 4608 | 0;
  i64toi32_i32$1 = $1542;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5386 = i64toi32_i32$2;
  i64toi32_i32$2 = $1539;
  HEAP32[i64toi32_i32$2 >> 2] = $5386;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1544 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1544 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5396 = i64toi32_i32$3;
  i64toi32_i32$3 = $1539 + $1544 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5396;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1548 = 16;
  i64toi32_i32$1 = $1542 + $1548 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5406 = i64toi32_i32$2;
  i64toi32_i32$2 = $1539 + $1548 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5406;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1552 = 8;
  i64toi32_i32$1 = $1542 + $1552 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5416 = i64toi32_i32$3;
  i64toi32_i32$3 = $1539 + $1552 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5416;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1558 = $3 + 360 | 0;
  $1561 = $3 + 4576 | 0;
  i64toi32_i32$1 = $1561;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5428 = i64toi32_i32$2;
  i64toi32_i32$2 = $1558;
  HEAP32[i64toi32_i32$2 >> 2] = $5428;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1563 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1563 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5438 = i64toi32_i32$3;
  i64toi32_i32$3 = $1558 + $1563 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5438;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1567 = 16;
  i64toi32_i32$1 = $1561 + $1567 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5448 = i64toi32_i32$2;
  i64toi32_i32$2 = $1558 + $1567 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5448;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1571 = 8;
  i64toi32_i32$1 = $1561 + $1571 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5458 = i64toi32_i32$3;
  i64toi32_i32$3 = $1558 + $1571 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5458;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1517 | 0, $3 + 424 | 0 | 0, $3 + 392 | 0 | 0, $3 + 360 | 0 | 0, 1 | 0, 2 | 0, 17 | 0, 16 | 0, 10 | 0, 18 | 0) | 0;
  $1591 = $1517 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1591;
  $1594 = $3 + 328 | 0;
  $1597 = $3 + 4512 | 0;
  i64toi32_i32$1 = $1597;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5498 = i64toi32_i32$2;
  i64toi32_i32$2 = $1594;
  HEAP32[i64toi32_i32$2 >> 2] = $5498;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1599 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1599 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5508 = i64toi32_i32$3;
  i64toi32_i32$3 = $1594 + $1599 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5508;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1603 = 16;
  i64toi32_i32$1 = $1597 + $1603 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5518 = i64toi32_i32$2;
  i64toi32_i32$2 = $1594 + $1603 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5518;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1607 = 8;
  i64toi32_i32$1 = $1597 + $1607 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5528 = i64toi32_i32$3;
  i64toi32_i32$3 = $1594 + $1607 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5528;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1613 = $3 + 296 | 0;
  $1616 = $3 + 4576 | 0;
  i64toi32_i32$1 = $1616;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5540 = i64toi32_i32$2;
  i64toi32_i32$2 = $1613;
  HEAP32[i64toi32_i32$2 >> 2] = $5540;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1618 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1618 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5550 = i64toi32_i32$3;
  i64toi32_i32$3 = $1613 + $1618 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5550;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1622 = 16;
  i64toi32_i32$1 = $1616 + $1622 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5560 = i64toi32_i32$2;
  i64toi32_i32$2 = $1613 + $1622 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5560;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1626 = 8;
  i64toi32_i32$1 = $1616 + $1626 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5570 = i64toi32_i32$3;
  i64toi32_i32$3 = $1613 + $1626 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5570;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1632 = $3 + 264 | 0;
  $1635 = $3 + 4544 | 0;
  i64toi32_i32$1 = $1635;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5582 = i64toi32_i32$2;
  i64toi32_i32$2 = $1632;
  HEAP32[i64toi32_i32$2 >> 2] = $5582;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1637 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1637 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5592 = i64toi32_i32$3;
  i64toi32_i32$3 = $1632 + $1637 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5592;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1641 = 16;
  i64toi32_i32$1 = $1635 + $1641 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5602 = i64toi32_i32$2;
  i64toi32_i32$2 = $1632 + $1641 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5602;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1645 = 8;
  i64toi32_i32$1 = $1635 + $1645 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5612 = i64toi32_i32$3;
  i64toi32_i32$3 = $1632 + $1645 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5612;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1591 | 0, $3 + 328 | 0 | 0, $3 + 296 | 0 | 0, $3 + 264 | 0 | 0, 1 | 0, 2 | 0, 18 | 0, 17 | 0, 12 | 0, 19 | 0) | 0;
  $1665 = $1591 + 120 | 0;
  HEAP32[($3 + 2092 | 0) >> 2] = $1665;
  $1668 = $3 + 232 | 0;
  $1671 = $3 + 4512 | 0;
  i64toi32_i32$1 = $1671;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5652 = i64toi32_i32$2;
  i64toi32_i32$2 = $1668;
  HEAP32[i64toi32_i32$2 >> 2] = $5652;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1673 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1673 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5662 = i64toi32_i32$3;
  i64toi32_i32$3 = $1668 + $1673 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5662;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1677 = 16;
  i64toi32_i32$1 = $1671 + $1677 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5672 = i64toi32_i32$2;
  i64toi32_i32$2 = $1668 + $1677 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5672;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1681 = 8;
  i64toi32_i32$1 = $1671 + $1681 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5682 = i64toi32_i32$3;
  i64toi32_i32$3 = $1668 + $1681 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5682;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1687 = $3 + 200 | 0;
  $1690 = $3 + 4544 | 0;
  i64toi32_i32$1 = $1690;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5694 = i64toi32_i32$2;
  i64toi32_i32$2 = $1687;
  HEAP32[i64toi32_i32$2 >> 2] = $5694;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1692 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1692 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5704 = i64toi32_i32$3;
  i64toi32_i32$3 = $1687 + $1692 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5704;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1696 = 16;
  i64toi32_i32$1 = $1690 + $1696 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5714 = i64toi32_i32$2;
  i64toi32_i32$2 = $1687 + $1696 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5714;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1700 = 8;
  i64toi32_i32$1 = $1690 + $1700 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5724 = i64toi32_i32$3;
  i64toi32_i32$3 = $1687 + $1700 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5724;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1706 = $3 + 168 | 0;
  $1709 = $3 + 4672 | 0;
  i64toi32_i32$1 = $1709;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5736 = i64toi32_i32$2;
  i64toi32_i32$2 = $1706;
  HEAP32[i64toi32_i32$2 >> 2] = $5736;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1711 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $1711 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5746 = i64toi32_i32$3;
  i64toi32_i32$3 = $1706 + $1711 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5746;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $1715 = 16;
  i64toi32_i32$1 = $1709 + $1715 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5756 = i64toi32_i32$2;
  i64toi32_i32$2 = $1706 + $1715 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $5756;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $1719 = 8;
  i64toi32_i32$1 = $1709 + $1719 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5766 = i64toi32_i32$3;
  i64toi32_i32$3 = $1706 + $1719 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $5766;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($1665 | 0, $3 + 232 | 0 | 0, $3 + 200 | 0 | 0, $3 + 168 | 0 | 0, 1 | 0, 2 | 0, 19 | 0, 18 | 0, 14 | 0, 15 | 0) | 0;
  HEAP32[($3 + 4496 | 0) >> 2] = $3 + 2096 | 0;
  HEAP32[($3 + 4500 | 0) >> 2] = 20;
  i64toi32_i32$1 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4496 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4500 | 0) >> 2] | 0;
  $5801 = i64toi32_i32$2;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 160 | 0) >> 2] = $5801;
  HEAP32[(i64toi32_i32$1 + 164 | 0) >> 2] = i64toi32_i32$3;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___vector_28std__initializer_list_Triangle__29($0 | 0, i64toi32_i32$1 + 160 | 0 | 0) | 0;
  $1747 = i64toi32_i32$1 + 2096 | 0;
  $1750 = $1747 + 2400 | 0;
  label$1 : while (1) {
   $1753 = $1750 + -120 | 0;
   Triangle___Triangle_28_29($1753 | 0) | 0;
   $1750 = $1753;
   if (!(($1753 | 0) == ($1747 | 0) & 1 | 0)) {
    continue label$1
   }
   break label$1;
  };
  Point3___Point3_28_29($3 + 168 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 200 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 232 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 264 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 296 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 328 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 360 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 392 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 424 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 456 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 488 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 520 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 552 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 584 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 616 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 648 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 680 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 712 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 744 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 776 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 808 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 840 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 872 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 904 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 936 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 968 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1e3 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1032 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1064 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1096 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1128 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1160 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1192 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1224 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1256 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1288 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1320 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1352 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1384 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1416 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1448 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1480 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1512 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1544 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1576 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1608 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1640 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1672 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1704 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1736 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1768 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1800 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1832 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1864 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1896 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1928 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1960 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 1992 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 2024 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 2056 | 0 | 0) | 0;
  HEAP8[($3 + 4511 | 0) >> 0] = 1 & 1 | 0;
  label$2 : {
   if ((HEAPU8[($3 + 4511 | 0) >> 0] | 0) & 1 | 0) {
    break label$2
   }
   std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____vector_28_29($0 | 0) | 0;
  }
  Point3___Point3_28_29($3 + 4512 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4544 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4576 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4608 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4640 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4672 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4704 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4736 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4768 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4800 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4832 | 0 | 0) | 0;
  Point3___Point3_28_29($3 + 4864 | 0 | 0) | 0;
  __stack_pointer = $3 + 5008 | 0;
  return;
 }
 
 function sqrt_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $5 = 0, i64toi32_i32$2 = 0, $6$hi = 0, $6 = 0, $28$hi = 0, $16 = 0, $10 = 0, $10$hi = 0, $11 = 0, $11$hi = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] | 0;
  $6 = i64toi32_i32$0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  $28$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = $28$hi;
  $16 = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  sqrtl($5 | 0, $16 | 0, i64toi32_i32$0 | 0, $6 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $5 + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $10 = i64toi32_i32$1;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[$5 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 4 | 0) >> 2] | 0;
  $11 = i64toi32_i32$0;
  $11$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$0 = $0;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $10;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $11$hi;
  HEAP32[i64toi32_i32$0 >> 2] = $11;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function acos_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $5 = 0, $6$hi = 0, $6 = 0, $26$hi = 0, $14 = 0, $8 = 0, $8$hi = 0, $33 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] | 0;
  $6 = i64toi32_i32$0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  $26$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = $26$hi;
  $14 = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  acosl($5 | 0, $14 | 0, i64toi32_i32$0 | 0, $6 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[$5 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 4 | 0) >> 2] | 0;
  $8 = i64toi32_i32$1;
  $8$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  $33 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $33;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $8$hi;
  HEAP32[i64toi32_i32$0 >> 2] = $8;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___vector_28std__initializer_list_Triangle__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $17 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $5;
  std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____vector_base_28_29($5 | 0) | 0;
  label$1 : {
   if (!((std__initializer_list_Triangle___size_28_29_20const($1 | 0) | 0) >>> 0 > 0 >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____vallocate_28unsigned_20long_29($5 | 0, std__initializer_list_Triangle___size_28_29_20const($1 | 0) | 0 | 0);
   std____2__enable_if___is_cpp17_forward_iterator_Triangle_20const____value_2c_20void___type_20std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____construct_at_end_Triangle_20const___28Triangle_20const__2c_20Triangle_20const__2c_20unsigned_20long_29($5 | 0, std__initializer_list_Triangle___begin_28_29_20const($1 | 0) | 0 | 0, std__initializer_list_Triangle___end_28_29_20const($1 | 0) | 0 | 0, std__initializer_list_Triangle___size_28_29_20const($1 | 0) | 0 | 0);
  }
  $17 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $17 | 0;
 }
 
 function Triangle___Triangle_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Point3___Point3_28_29($4 + 64 | 0 | 0) | 0;
  Point3___Point3_28_29($4 + 32 | 0 | 0) | 0;
  Point3___Point3_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____annotate_delete_28_29_20const($4 | 0);
  std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20______vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_std__nullptr_t__28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20_____compressed_pair_std____2____default_init_tag_2c_20std____2____default_init_tag__28std____2____default_init_tag___2c_20std____2____default_init_tag___29($5 | 0, $4 + 16 | 0 | 0, $4 + 8 | 0 | 0) | 0;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____init_28char_20const__2c_20unsigned_20long_29($5 | 0, HEAP32[($4 + 24 | 0) >> 2] | 0 | 0, std____2__char_traits_char___length_28char_20const__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20_____compressed_pair_std____2____default_init_tag_2c_20std____2____default_init_tag__28std____2____default_init_tag___2c_20std____2____default_init_tag___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  std____2____default_init_tag___20std____2__forward_std____2____default_init_tag__28std____2__remove_reference_std____2____default_init_tag___type__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_200_2c_20false_____compressed_pair_elem_28std____2____default_init_tag_29($6 | 0) | 0;
  std____2____default_init_tag___20std____2__forward_std____2____default_init_tag__28std____2__remove_reference_std____2____default_init_tag___type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_char__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($6 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__char_traits_char___length_28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = strlen(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($4 | 0) | 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  HEAP32[($3 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($4 + 8 | 0 | 0, $3 + 8 | 0 | 0, $3 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std__initializer_list_Triangle___size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____vallocate_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $15 = 0, $20 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  label$1 : {
   if (!((HEAP32[($4 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___max_size_28_29_20const($5 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_common_true_____throw_length_error_28_29_20const($5 | 0);
   abort();
  }
  $15 = std____2__allocator_traits_std____2__allocator_Triangle__20___allocate_28std____2__allocator_Triangle___2c_20unsigned_20long_29(std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 4 | 0) >> 2] = $15;
  HEAP32[$5 >> 2] = $15;
  $20 = (HEAP32[$5 >> 2] | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 120) | 0;
  HEAP32[(std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____end_cap_28_29($5 | 0) | 0) >> 2] = $20;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____annotate_new_28unsigned_20long_29_20const($5 | 0, 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std__initializer_list_Triangle___begin_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std__initializer_list_Triangle___end_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  return (HEAP32[$4 >> 2] | 0) + Math_imul(HEAP32[($4 + 4 | 0) >> 2] | 0, 120) | 0 | 0;
 }
 
 function std____2__enable_if___is_cpp17_forward_iterator_Triangle_20const____value_2c_20void___type_20std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____construct_at_end_Triangle_20const___28Triangle_20const__2c_20Triangle_20const__2c_20unsigned_20long_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 28 | 0) >> 2] = $0;
  HEAP32[($6 + 24 | 0) >> 2] = $1;
  HEAP32[($6 + 20 | 0) >> 2] = $2;
  HEAP32[($6 + 16 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____ConstructTransaction___ConstructTransaction_28std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___2c_20unsigned_20long_29($6 | 0, $7 | 0, HEAP32[($6 + 16 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____construct_range_forward_Triangle_20const__2c_20Triangle___28std____2__allocator_Triangle___2c_20Triangle_20const__2c_20Triangle_20const__2c_20Triangle___29(std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 24 | 0) >> 2] | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0, $6 + 4 | 0 | 0);
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____ConstructTransaction____ConstructTransaction_28_29($6 | 0) | 0;
  __stack_pointer = $6 + 32 | 0;
  return;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____annotate_delete_28_29_20const($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($4 | 0, std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($4 | 0) | 0 | 0, (std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___capacity_28_29_20const($4 | 0) | 0, 120) | 0 | 0, (std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___size_28_29_20const($4 | 0) | 0, 120) | 0 | 0, (std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___capacity_28_29_20const($4 | 0) | 0, 120) | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20______vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20___clear_28_29($4 | 0);
   std____2__allocator_traits_std____2__allocator_Triangle__20___deallocate_28std____2__allocator_Triangle___2c_20Triangle__2c_20unsigned_20long_29(std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20___capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function Icosahedron__triangle_28int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $20 = 0;
  $4 = __stack_pointer - 64 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 60 | 0) >> 2] = $0;
  HEAP32[($4 + 56 | 0) >> 2] = $1;
  label$1 : {
   label$2 : {
    if ((HEAP32[($4 + 56 | 0) >> 2] | 0 | 0) < (0 | 0) & 1 | 0) {
     break label$2
    }
    if (!((HEAP32[($4 + 56 | 0) >> 2] | 0 | 0) > (19 | 0) & 1 | 0)) {
     break label$1
    }
   }
   $20 = __cxa_allocate_exception(8 | 0) | 0;
   std____2__to_string_28int_29($4 + 24 | 0 | 0, HEAP32[($4 + 56 | 0) >> 2] | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28char_20const__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($4 + 40 | 0 | 0, 1024 | 0, $4 + 24 | 0 | 0);
   std__invalid_argument__invalid_argument_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($20 | 0, $4 + 40 | 0 | 0) | 0;
   __cxa_throw($20 | 0, 11476 | 0, 1 | 0);
   abort();
  }
  Icosahedron__triangles_28_29($4 + 8 | 0 | 0);
  memcpy($0 | 0, std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___operator_5b_5d_28unsigned_20long_29($4 + 8 | 0 | 0, HEAP32[($4 + 56 | 0) >> 2] | 0 | 0) | 0 | 0, 120 | 0) | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____vector_28_29($4 + 8 | 0 | 0) | 0;
  __stack_pointer = $4 + 64 | 0;
  return;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28char_20const__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($0 | 0, std____2__remove_reference_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____type___20std____2__move_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___insert_28unsigned_20long_2c_20char_20const__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0, 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std__invalid_argument__invalid_argument_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std__logic_error__logic_error_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = 11432 + 8 | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___operator_5b_5d_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 120) | 0 | 0;
 }
 
 function std____2__remove_reference_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____type___20std____2__move_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $7 = 0, $9 = 0, i64toi32_i32$1 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = std____2__remove_reference_std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20_____type___20std____2__move_std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20____28std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$1 = HEAP32[($7 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$7 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = i64toi32_i32$1;
  $9 = 8;
  HEAP32[($5 + $9 | 0) >> 2] = HEAP32[($7 + $9 | 0) >> 2] | 0;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____zero_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__point_from_coords_28double_2c_20double_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = +$2;
  $3 = +$3;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, $6 = 0, $44 = 0, $18 = 0, $35 = 0, $48$hi = 0, $52$hi = 0, $61$hi = 0, $65$hi = 0, $71$hi = 0, $72$hi = 0, $80$hi = 0, $81$hi = 0, $87$hi = 0, $88$hi = 0, $96$hi = 0, $97$hi = 0, $105$hi = 0, $106$hi = 0, $114$hi = 0, $115$hi = 0, $121$hi = 0, $122$hi = 0, $130$hi = 0, $131$hi = 0, $139$hi = 0, $140$hi = 0, $148$hi = 0, $149$hi = 0, $153$hi = 0, $156$hi = 0, $159$hi = 0, $48 = 0, $260$hi = 0, $90 = 0, $52 = 0, $266$hi = 0, $91 = 0, $61 = 0, $292$hi = 0, $92 = 0, $65 = 0, $298$hi = 0, $93 = 0, $69 = 0, $69$hi = 0, $308 = 0, $71 = 0, $72 = 0, $80 = 0, $340 = 0, $87 = 0, $88 = 0, $96 = 0, $377 = 0, $103 = 0, $103$hi = 0, $104 = 0, $104$hi = 0, $105 = 0, $106 = 0, $114 = 0, $422 = 0, $121 = 0, $122 = 0, $130 = 0, $459 = 0, $137 = 0, $137$hi = 0, $138 = 0, $138$hi = 0, $139 = 0, $140 = 0, $148 = 0, $501 = 0, $151 = 0, $151$hi = 0, $152 = 0, $152$hi = 0, $153 = 0, $518$hi = 0, $94 = 0, $155 = 0.0, $156 = 0, $525$hi = 0, $95 = 0, $158 = 0.0, $159 = 0, $532$hi = 0, $97 = 0;
  $6 = __stack_pointer - 320 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 316 | 0) >> 2] = $0;
  HEAP32[($6 + 312 | 0) >> 2] = $1;
  HEAPF64[($6 + 304 | 0) >> 3] = $2;
  HEAPF64[($6 + 296 | 0) >> 3] = $3;
  label$1 : {
   label$2 : {
    if (!(+HEAPF64[($6 + 304 | 0) >> 3] <= 90.0 & 1 | 0)) {
     break label$2
    }
    if (+HEAPF64[($6 + 304 | 0) >> 3] >= -90.0 & 1 | 0) {
     break label$1
    }
   }
   $18 = __cxa_allocate_exception(8 | 0) | 0;
   std__invalid_argument__invalid_argument_28char_20const__29($18 | 0, 1096 | 0) | 0;
   __cxa_throw($18 | 0, 11476 | 0, 1 | 0);
   abort();
  }
  label$3 : {
   label$4 : {
    if (!(+HEAPF64[($6 + 296 | 0) >> 3] <= 180.0 & 1 | 0)) {
     break label$4
    }
    if (+HEAPF64[($6 + 296 | 0) >> 3] >= -180.0 & 1 | 0) {
     break label$3
    }
   }
   $35 = __cxa_allocate_exception(8 | 0) | 0;
   std__invalid_argument__invalid_argument_28char_20const__29($35 | 0, 1127 | 0) | 0;
   __cxa_throw($35 | 0, 11476 | 0, 1 | 0);
   abort();
  }
  __extenddftf2($6 + 176 | 0 | 0, +(+HEAPF64[($6 + 304 | 0) >> 3]));
  $44 = 8;
  i64toi32_i32$2 = ($6 + 176 | 0) + $44 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $48 = i64toi32_i32$0;
  $48$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 176 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 180 | 0) >> 2] | 0;
  $260$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $48$hi;
  i64toi32_i32$0 = $260$hi;
  $90 = i64toi32_i32$1;
  i64toi32_i32$1 = $48$hi;
  hexmapf__deg_2_rad_28long_20double_29(i64toi32_i32$2 + 208 | 0 | 0, $90 | 0, i64toi32_i32$0 | 0, $48 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 216 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 220 | 0) >> 2] | 0;
  $52 = i64toi32_i32$1;
  $52$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 208 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 212 | 0) >> 2] | 0;
  $266$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $52$hi;
  i64toi32_i32$1 = $266$hi;
  $91 = i64toi32_i32$0;
  i64toi32_i32$0 = $52$hi;
  HEAPF64[(i64toi32_i32$2 + 304 | 0) >> 3] = +__trunctfdf2($91 | 0, i64toi32_i32$1 | 0, $52 | 0, i64toi32_i32$0 | 0);
  __extenddftf2(i64toi32_i32$2 + 160 | 0 | 0, +(+HEAPF64[(i64toi32_i32$2 + 296 | 0) >> 3]));
  i64toi32_i32$2 = (i64toi32_i32$2 + 160 | 0) + $44 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $61 = i64toi32_i32$0;
  $61$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 160 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 164 | 0) >> 2] | 0;
  $292$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $61$hi;
  i64toi32_i32$0 = $292$hi;
  $92 = i64toi32_i32$1;
  i64toi32_i32$1 = $61$hi;
  hexmapf__deg_2_rad_28long_20double_29(i64toi32_i32$2 + 192 | 0 | 0, $92 | 0, i64toi32_i32$0 | 0, $61 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 200 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 204 | 0) >> 2] | 0;
  $65 = i64toi32_i32$1;
  $65$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 192 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 196 | 0) >> 2] | 0;
  $298$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $65$hi;
  i64toi32_i32$1 = $298$hi;
  $93 = i64toi32_i32$0;
  i64toi32_i32$0 = $65$hi;
  HEAPF64[(i64toi32_i32$2 + 296 | 0) >> 3] = +__trunctfdf2($93 | 0, i64toi32_i32$1 | 0, $65 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12528 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12532 | 0) >> 2] | 0;
  $69 = i64toi32_i32$0;
  $69$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12536 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12540 | 0) >> 2] | 0;
  $308 = i64toi32_i32$1;
  i64toi32_i32$1 = $6;
  HEAP32[(i64toi32_i32$1 + 280 | 0) >> 2] = $308;
  HEAP32[(i64toi32_i32$1 + 284 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $69$hi;
  HEAP32[(i64toi32_i32$1 + 272 | 0) >> 2] = $69;
  HEAP32[(i64toi32_i32$1 + 276 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 280 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 284 | 0) >> 2] | 0;
  $71 = i64toi32_i32$0;
  $71$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 272 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 276 | 0) >> 2] | 0;
  $72 = i64toi32_i32$1;
  $72$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$2 + 144 | 0 | 0, +(+cos(+(+HEAPF64[(i64toi32_i32$2 + 304 | 0) >> 3]))));
  i64toi32_i32$2 = (i64toi32_i32$2 + 144 | 0) + $44 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $80 = i64toi32_i32$0;
  $80$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 144 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 148 | 0) >> 2] | 0;
  $81$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $72$hi;
  i64toi32_i32$0 = $71$hi;
  i64toi32_i32$0 = $81$hi;
  $340 = i64toi32_i32$1;
  i64toi32_i32$0 = $80$hi;
  i64toi32_i32$0 = $72$hi;
  i64toi32_i32$1 = $71$hi;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$3 = $80$hi;
  __multf3($6 + 128 | 0 | 0, $72 | 0, i64toi32_i32$0 | 0, $71 | 0, i64toi32_i32$1 | 0, $340 | 0, i64toi32_i32$2 | 0, $80 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($6 + 128 | 0) + $44 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $87 = i64toi32_i32$3;
  $87$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 128 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 132 | 0) >> 2] | 0;
  $88 = i64toi32_i32$2;
  $88$hi = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$1 + 112 | 0 | 0, +(+cos(+(+HEAPF64[(i64toi32_i32$1 + 296 | 0) >> 3]))));
  i64toi32_i32$1 = (i64toi32_i32$1 + 112 | 0) + $44 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $96 = i64toi32_i32$3;
  $96$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
  $97$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $88$hi;
  i64toi32_i32$3 = $87$hi;
  i64toi32_i32$3 = $97$hi;
  $377 = i64toi32_i32$2;
  i64toi32_i32$3 = $96$hi;
  i64toi32_i32$3 = $88$hi;
  i64toi32_i32$2 = $87$hi;
  i64toi32_i32$1 = $97$hi;
  i64toi32_i32$0 = $96$hi;
  __multf3($6 + 96 | 0 | 0, $88 | 0, i64toi32_i32$3 | 0, $87 | 0, i64toi32_i32$2 | 0, $377 | 0, i64toi32_i32$1 | 0, $96 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($6 + 96 | 0) + $44 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $103 = i64toi32_i32$0;
  $103$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $104 = i64toi32_i32$1;
  $104$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $103$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 264 | 0) >> 2] = $103;
  HEAP32[(i64toi32_i32$2 + 268 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $104$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 256 | 0) >> 2] = $104;
  HEAP32[(i64toi32_i32$2 + 260 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 280 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 284 | 0) >> 2] | 0;
  $105 = i64toi32_i32$0;
  $105$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 272 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 276 | 0) >> 2] | 0;
  $106 = i64toi32_i32$1;
  $106$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$2 + 80 | 0 | 0, +(+cos(+(+HEAPF64[(i64toi32_i32$2 + 304 | 0) >> 3]))));
  i64toi32_i32$2 = (i64toi32_i32$2 + 80 | 0) + $44 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $114 = i64toi32_i32$0;
  $114$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
  $115$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $106$hi;
  i64toi32_i32$0 = $105$hi;
  i64toi32_i32$0 = $115$hi;
  $422 = i64toi32_i32$1;
  i64toi32_i32$0 = $114$hi;
  i64toi32_i32$0 = $106$hi;
  i64toi32_i32$1 = $105$hi;
  i64toi32_i32$2 = $115$hi;
  i64toi32_i32$3 = $114$hi;
  __multf3($6 + 64 | 0 | 0, $106 | 0, i64toi32_i32$0 | 0, $105 | 0, i64toi32_i32$1 | 0, $422 | 0, i64toi32_i32$2 | 0, $114 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($6 + 64 | 0) + $44 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $121 = i64toi32_i32$3;
  $121$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
  $122 = i64toi32_i32$2;
  $122$hi = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$1 + 48 | 0 | 0, +(+sin(+(+HEAPF64[(i64toi32_i32$1 + 296 | 0) >> 3]))));
  i64toi32_i32$1 = (i64toi32_i32$1 + 48 | 0) + $44 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $130 = i64toi32_i32$3;
  $130$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 48 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 52 | 0) >> 2] | 0;
  $131$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $122$hi;
  i64toi32_i32$3 = $121$hi;
  i64toi32_i32$3 = $131$hi;
  $459 = i64toi32_i32$2;
  i64toi32_i32$3 = $130$hi;
  i64toi32_i32$3 = $122$hi;
  i64toi32_i32$2 = $121$hi;
  i64toi32_i32$1 = $131$hi;
  i64toi32_i32$0 = $130$hi;
  __multf3($6 + 32 | 0 | 0, $122 | 0, i64toi32_i32$3 | 0, $121 | 0, i64toi32_i32$2 | 0, $459 | 0, i64toi32_i32$1 | 0, $130 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($6 + 32 | 0) + $44 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $137 = i64toi32_i32$0;
  $137$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $138 = i64toi32_i32$1;
  $138$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $137$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 248 | 0) >> 2] = $137;
  HEAP32[(i64toi32_i32$2 + 252 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $138$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 240 | 0) >> 2] = $138;
  HEAP32[(i64toi32_i32$2 + 244 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 280 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 284 | 0) >> 2] | 0;
  $139 = i64toi32_i32$0;
  $139$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 272 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 276 | 0) >> 2] | 0;
  $140 = i64toi32_i32$1;
  $140$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$2 + 16 | 0 | 0, +(+sin(+(+HEAPF64[(i64toi32_i32$2 + 304 | 0) >> 3]))));
  i64toi32_i32$2 = (i64toi32_i32$2 + 16 | 0) + $44 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $148 = i64toi32_i32$0;
  $148$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
  $149$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $140$hi;
  i64toi32_i32$0 = $139$hi;
  i64toi32_i32$0 = $149$hi;
  $501 = i64toi32_i32$1;
  i64toi32_i32$0 = $148$hi;
  i64toi32_i32$0 = $140$hi;
  i64toi32_i32$1 = $139$hi;
  i64toi32_i32$2 = $149$hi;
  i64toi32_i32$3 = $148$hi;
  __multf3($6 | 0, $140 | 0, i64toi32_i32$0 | 0, $139 | 0, i64toi32_i32$1 | 0, $501 | 0, i64toi32_i32$2 | 0, $148 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6 + $44 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $151 = i64toi32_i32$3;
  $151$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $152 = i64toi32_i32$2;
  $152$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $151$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$2 + 232 | 0) >> 2] = $151;
  HEAP32[(i64toi32_i32$2 + 236 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $152$hi;
  HEAP32[(i64toi32_i32$2 + 224 | 0) >> 2] = $152;
  HEAP32[(i64toi32_i32$2 + 228 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 264 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$2 + 268 | 0) >> 2] | 0;
  $153 = i64toi32_i32$3;
  $153$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 256 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 260 | 0) >> 2] | 0;
  $518$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $153$hi;
  i64toi32_i32$3 = $518$hi;
  $94 = i64toi32_i32$2;
  i64toi32_i32$2 = $153$hi;
  $155 = +__trunctfdf2($94 | 0, i64toi32_i32$3 | 0, $153 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 248 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 252 | 0) >> 2] | 0;
  $156 = i64toi32_i32$2;
  $156$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 240 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 244 | 0) >> 2] | 0;
  $525$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $156$hi;
  i64toi32_i32$2 = $525$hi;
  $95 = i64toi32_i32$3;
  i64toi32_i32$3 = $156$hi;
  $158 = +__trunctfdf2($95 | 0, i64toi32_i32$2 | 0, $156 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 232 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 236 | 0) >> 2] | 0;
  $159 = i64toi32_i32$3;
  $159$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 224 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 228 | 0) >> 2] | 0;
  $532$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $159$hi;
  i64toi32_i32$3 = $532$hi;
  $97 = i64toi32_i32$2;
  i64toi32_i32$2 = $159$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($0 | 0, +$155, +$158, +(+__trunctfdf2($97 | 0, i64toi32_i32$3 | 0, $159 | 0, i64toi32_i32$2 | 0)), 0 & 1 | 0 | 0, -1 | 0) | 0;
  __stack_pointer = i64toi32_i32$1 + 320 | 0;
  return;
 }
 
 function std__invalid_argument__invalid_argument_28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std__logic_error__logic_error_28char_20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = 11432 + 8 | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function hexmapf__deg_2_rad_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, $5 = 0, $6$hi = 0, $7$hi = 0, $9$hi = 0, $10$hi = 0, $11$hi = 0, $12$hi = 0, $15 = 0, $19$hi = 0, $20$hi = 0, $6 = 0, $7 = 0, $9 = 0, $28 = 0, $19 = 0, $64 = 0, $22 = 0, $22$hi = 0, $23 = 0, $23$hi = 0;
  $5 = __stack_pointer - 48 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  HEAP32[(i64toi32_i32$1 + 40 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 44 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 40 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 44 | 0) >> 2] | 0;
  $6 = i64toi32_i32$0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $7 = i64toi32_i32$1;
  $7$hi = i64toi32_i32$0;
  i64toi32_i32$2 = 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12552 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12556 | 0) >> 2] | 0;
  $9 = i64toi32_i32$0;
  $9$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12544 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12548 | 0) >> 2] | 0;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 1074161664;
  $11$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $12$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $10$hi;
  i64toi32_i32$0 = $9$hi;
  i64toi32_i32$0 = $12$hi;
  i64toi32_i32$0 = $11$hi;
  i64toi32_i32$0 = $10$hi;
  $28 = i64toi32_i32$1;
  i64toi32_i32$1 = $9$hi;
  i64toi32_i32$2 = $12$hi;
  i64toi32_i32$3 = $11$hi;
  __divtf3($5 + 16 | 0 | 0, $28 | 0, i64toi32_i32$0 | 0, $9 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0);
  $15 = 8;
  i64toi32_i32$1 = ($5 + 16 | 0) + $15 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $19 = i64toi32_i32$3;
  $19$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
  $20$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $20$hi;
  $64 = i64toi32_i32$2;
  i64toi32_i32$3 = $19$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$2 = $6$hi;
  i64toi32_i32$1 = $20$hi;
  i64toi32_i32$0 = $19$hi;
  __multf3($5 | 0, $7 | 0, i64toi32_i32$3 | 0, $6 | 0, i64toi32_i32$2 | 0, $64 | 0, i64toi32_i32$1 | 0, $19 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5 + $15 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $22 = i64toi32_i32$0;
  $22$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $23 = i64toi32_i32$1;
  $23$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $22$hi;
  i64toi32_i32$1 = $0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $22;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $23$hi;
  HEAP32[i64toi32_i32$1 >> 2] = $23;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = i64toi32_i32$2 + 48 | 0;
  return;
 }
 
 function Icosahedron__hash_28Point3_2c_20int_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $10 = 0, $7 = 0, $12 = 0, $16 = 0, $20 = 0, $67 = 0, $77 = 0, $87 = 0, $97 = 0;
  $6 = __stack_pointer - 112 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 108 | 0) >> 2] = $1;
  HEAP32[($6 + 104 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 108 | 0) >> 2] | 0;
  $10 = $6 + 56 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $67 = i64toi32_i32$0;
  i64toi32_i32$0 = $10;
  HEAP32[i64toi32_i32$0 >> 2] = $67;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $12 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $12 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $77 = i64toi32_i32$1;
  i64toi32_i32$1 = $10 + $12 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $77;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $16 = 16;
  i64toi32_i32$2 = $2 + $16 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $87 = i64toi32_i32$0;
  i64toi32_i32$0 = $10 + $16 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $87;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $20 = 8;
  i64toi32_i32$2 = $2 + $20 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $97 = i64toi32_i32$1;
  i64toi32_i32$1 = $10 + $20 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $97;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const($6 + 88 | 0 | 0, $7 | 0, $6 + 56 | 0 | 0, HEAP32[($6 + 104 | 0) >> 2] | 0 | 0);
  Point3___Point3_28_29($6 + 56 | 0 | 0) | 0;
  Point3__closest_point_2d_28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___29_20const($6 | 0, $2 | 0, $6 + 88 | 0 | 0);
  HEAP32[$0 >> 2] = HEAP32[($6 + 104 | 0) >> 2] | 0;
  HEAP32[($0 + 4 | 0) >> 2] = HEAP32[($6 + 36 | 0) >> 2] | 0;
  HEAP32[($0 + 8 | 0) >> 2] = HEAP32[($6 + 40 | 0) >> 2] | 0;
  HEAP32[($0 + 12 | 0) >> 2] = HEAP32[($7 + 16 | 0) >> 2] | 0;
  HEAP32[($0 + 16 | 0) >> 2] = HEAP32[($7 + 12 | 0) >> 2] | 0;
  GPoint3___GPoint3_28_29($6 | 0) | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($6 + 88 | 0 | 0) | 0;
  __stack_pointer = $6 + 112 | 0;
  return;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $7 = 0, $14 = 0, $20 = 0, $8 = 0, $129 = 0, $169 = 0, $229 = 0, $242 = 0, $255 = 0, $259 = 0;
  $6 = __stack_pointer - 544 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 540 | 0) >> 2] = $0;
  HEAP32[($6 + 536 | 0) >> 2] = $1;
  HEAP32[($6 + 532 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 536 | 0) >> 2] | 0;
  $8 = 24;
  i64toi32_i32$2 = $2 + $8 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $229 = i64toi32_i32$0;
  i64toi32_i32$0 = ($6 + 376 | 0) + $8 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $229;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $14 = 16;
  i64toi32_i32$2 = $2 + $14 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $242 = i64toi32_i32$1;
  i64toi32_i32$1 = ($6 + 376 | 0) + $14 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $242;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $20 = 8;
  i64toi32_i32$2 = $2 + $20 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $255 = i64toi32_i32$0;
  i64toi32_i32$0 = ($6 + 376 | 0) + $20 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $255;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $2;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $259 = i64toi32_i32$1;
  i64toi32_i32$1 = $6;
  HEAP32[($6 + 376 | 0) >> 2] = $259;
  HEAP32[($6 + 380 | 0) >> 2] = i64toi32_i32$0;
  Icosahedron__containing_triangle_28Point3_29_20const($6 + 408 | 0 | 0, $7 | 0, $6 + 376 | 0 | 0);
  Point3___Point3_28_29($6 + 376 | 0 | 0) | 0;
  HEAP32[($6 + 372 | 0) >> 2] = hexmapf__num_divisions_28int_29(HEAP32[($6 + 532 | 0) >> 2] | 0 | 0) | 0;
  Triangle__lazy_points_around_28Point3__2c_20int_2c_20ico__rotation_method_29_20const($6 + 352 | 0 | 0, $6 + 408 | 0 | 0, i64toi32_i32$2 | 0, HEAP32[($6 + 532 | 0) >> 2] | 0 | 0, HEAP32[($7 + 16 | 0) >> 2] | 0 | 0);
  HEAP32[($6 + 348 | 0) >> 2] = HEAP32[($6 + 364 | 0) >> 2] | 0;
  HEAP32[($6 + 344 | 0) >> 2] = HEAP32[($6 + 368 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___vector_28std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20__20const__29($6 + 328 | 0 | 0, $6 + 352 | 0 | 0) | 0;
  HEAP32[($6 + 264 | 0) >> 2] = $6 + 348 | 0;
  HEAP32[($6 + 268 | 0) >> 2] = $6 + 344 | 0;
  Icosahedron__Icosahedron_28Icosahedron_20const__29(($6 + 264 | 0) + $20 | 0 | 0, $7 | 0) | 0;
  HEAP32[($6 + 292 | 0) >> 2] = $6 + 408 | 0;
  HEAP32[($6 + 296 | 0) >> 2] = $6 + 328 | 0;
  HEAP32[($6 + 300 | 0) >> 2] = $6 + 532 | 0;
  std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___function_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_29($6 + 304 | 0 | 0, $6 + 264 | 0 | 0) | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___$_0_28_29($6 + 264 | 0 | 0) | 0;
  HEAP32[($6 + 192 | 0) >> 2] = $6 + 372 | 0;
  HEAP32[($6 + 196 | 0) >> 2] = $6 + 348 | 0;
  HEAP32[($6 + 200 | 0) >> 2] = $6 + 344 | 0;
  Icosahedron__Icosahedron_28Icosahedron_20const__29($6 + 204 | 0 | 0, $7 | 0) | 0;
  HEAP32[($6 + 224 | 0) >> 2] = $6 + 328 | 0;
  HEAP32[($6 + 228 | 0) >> 2] = $6 + 532 | 0;
  HEAP32[($6 + 232 | 0) >> 2] = $6 + 408 | 0;
  std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___function_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_29($6 + 240 | 0 | 0, $6 + 192 | 0 | 0) | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___$_1_28_29($6 + 192 | 0 | 0) | 0;
  HEAP32[($6 + 120 | 0) >> 2] = $6 + 372 | 0;
  HEAP32[($6 + 124 | 0) >> 2] = $6 + 348 | 0;
  HEAP32[($6 + 128 | 0) >> 2] = $6 + 344 | 0;
  HEAP32[($6 + 132 | 0) >> 2] = $6 + 532 | 0;
  Icosahedron__Icosahedron_28Icosahedron_20const__29(($6 + 120 | 0) + $14 | 0 | 0, $7 | 0) | 0;
  HEAP32[($6 + 156 | 0) >> 2] = $6 + 328 | 0;
  HEAP32[($6 + 160 | 0) >> 2] = $6 + 408 | 0;
  std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___function_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_29($6 + 168 | 0 | 0, $6 + 120 | 0 | 0) | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___$_2_28_29($6 + 120 | 0 | 0) | 0;
  HEAP32[($6 + 48 | 0) >> 2] = $6 + 372 | 0;
  HEAP32[($6 + 52 | 0) >> 2] = $6 + 344 | 0;
  HEAP32[($6 + 56 | 0) >> 2] = $6 + 348 | 0;
  HEAP32[($6 + 60 | 0) >> 2] = $6 + 532 | 0;
  Icosahedron__Icosahedron_28Icosahedron_20const__29(($6 + 48 | 0) + $14 | 0 | 0, $7 | 0) | 0;
  HEAP32[($6 + 84 | 0) >> 2] = $6 + 328 | 0;
  HEAP32[($6 + 88 | 0) >> 2] = $6 + 408 | 0;
  std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___function_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_29($6 + 96 | 0 | 0, $6 + 48 | 0 | 0) | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___$_3_28_29($6 + 48 | 0 | 0) | 0;
  HEAP8[($6 + 47 | 0) >> 0] = 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___vector_28_29($0 | 0) | 0;
  $129 = HEAP32[($6 + 508 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    switch ($129 | 0) {
    case 0:
     std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29_20const($6 + 32 | 0 | 0, $6 + 304 | 0 | 0);
     std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator__28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____29($0 | 0, $6 + 32 | 0 | 0) | 0;
     std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($6 + 32 | 0 | 0) | 0;
     break label$1;
    case 1:
     label$6 : {
      label$7 : {
       if (HEAP32[($6 + 504 | 0) >> 2] | 0) {
        break label$7
       }
       std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29_20const($6 + 16 | 0 | 0, $6 + 240 | 0 | 0);
       break label$6;
      }
      std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29_20const($6 + 16 | 0 | 0, $6 + 168 | 0 | 0);
     }
     std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator__28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____29($0 | 0, $6 + 16 | 0 | 0) | 0;
     std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($6 + 16 | 0 | 0) | 0;
     break label$1;
    case 2:
     std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29_20const($6 | 0, $6 + 96 | 0 | 0);
     std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator__28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____29($0 | 0, $6 | 0) | 0;
     std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($6 | 0) | 0;
     break label$1;
    case 3:
     break label$2;
    default:
     break label$1;
    };
   }
   $169 = __cxa_allocate_exception(8 | 0) | 0;
   std__logic_error__logic_error_28char_20const__29($169 | 0, 1159 | 0) | 0;
   __cxa_throw($169 | 0, 11420 | 0, 1 | 0);
   abort();
  }
  HEAP8[($6 + 47 | 0) >> 0] = 1 & 1 | 0;
  label$8 : {
   if ((HEAPU8[($6 + 47 | 0) >> 0] | 0) & 1 | 0) {
    break label$8
   }
   std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($0 | 0) | 0;
  }
  std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____function_28_29($6 + 96 | 0 | 0) | 0;
  std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____function_28_29($6 + 168 | 0 | 0) | 0;
  std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____function_28_29($6 + 240 | 0 | 0) | 0;
  std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____function_28_29($6 + 304 | 0 | 0) | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____vector_28_29($6 + 328 | 0 | 0) | 0;
  Triangle__lazy_points_around_result___lazy_points_around_result_28_29($6 + 352 | 0 | 0) | 0;
  Triangle___Triangle_28_29($6 + 408 | 0 | 0) | 0;
  __stack_pointer = $6 + 544 | 0;
  return;
 }
 
 function GPoint3___GPoint3_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Point3___Point3_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_delete_28_29_20const($4 | 0);
  std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20______vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function Icosahedron__containing_triangle_28Point3_29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $36 = 0;
  $5 = __stack_pointer - 160 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 156 | 0) >> 2] = $0;
  HEAP32[($5 + 152 | 0) >> 2] = $1;
  HEAP32[($5 + 148 | 0) >> 2] = HEAP32[($5 + 152 | 0) >> 2] | 0;
  HEAP32[($5 + 144 | 0) >> 2] = std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___begin_28_29_20const(HEAP32[($5 + 148 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 136 | 0) >> 2] = std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___end_28_29_20const(HEAP32[($5 + 148 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((bool_20std____2__operator___Triangle_20const___28std____2____wrap_iter_Triangle_20const___20const__2c_20std____2____wrap_iter_Triangle_20const___20const__29($5 + 144 | 0 | 0, $5 + 136 | 0 | 0) | 0) & 1 | 0)) {
     break label$1
    }
    HEAP32[($5 + 132 | 0) >> 2] = std____2____wrap_iter_Triangle_20const____operator__28_29_20const($5 + 144 | 0 | 0) | 0;
    label$3 : {
     if (!((Triangle__contains_point_28Point3__29_20const(HEAP32[($5 + 132 | 0) >> 2] | 0 | 0, $2 | 0) | 0) & 1 | 0)) {
      break label$3
     }
     memcpy($0 | 0, HEAP32[($5 + 132 | 0) >> 2] | 0 | 0, 120 | 0) | 0;
     __stack_pointer = $5 + 160 | 0;
     return;
    }
    std____2____wrap_iter_Triangle_20const____operator___28_29($5 + 144 | 0 | 0) | 0;
    continue label$2;
   };
  }
  $36 = __cxa_allocate_exception(8 | 0) | 0;
  std____2__to_string_28double_29($5 + 40 | 0 | 0, +(+HEAPF64[$2 >> 3]));
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28char_20const__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 56 | 0 | 0, 1286 | 0, $5 + 40 | 0 | 0);
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20char_20const__29($5 + 72 | 0 | 0, $5 + 56 | 0 | 0, 1415 | 0);
  std____2__to_string_28double_29($5 + 24 | 0 | 0, +(+HEAPF64[($2 + 8 | 0) >> 3]));
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 88 | 0 | 0, $5 + 72 | 0 | 0, $5 + 24 | 0 | 0);
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20char_20const__29($5 + 104 | 0 | 0, $5 + 88 | 0 | 0, 1421 | 0);
  std____2__to_string_28double_29($5 + 8 | 0 | 0, +(+HEAPF64[($2 + 16 | 0) >> 3]));
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 120 | 0 | 0, $5 + 104 | 0 | 0, $5 + 8 | 0 | 0);
  std__logic_error__logic_error_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($36 | 0, $5 + 120 | 0 | 0) | 0;
  __cxa_throw($36 | 0, 11420 | 0, 1 | 0);
  abort();
 }
 
 function hexmapf__num_divisions_28int_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return Math_imul(HEAP32[($3 + 12 | 0) >> 2] | 0, 3) | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___vector_28std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $26 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = $5;
  std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___select_on_container_copy_construction_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20const__29(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29_20const(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____vector_base_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____29($5 | 0, $4 + 16 | 0 | 0) | 0;
  HEAP32[($4 + 4 | 0) >> 2] = std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0) >>> 0 > 0 >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____vallocate_28unsigned_20long_29($5 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
   std____2__enable_if___is_cpp17_forward_iterator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_2c_20void___type_20std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_at_end_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29($5 | 0, HEAP32[(HEAP32[($4 + 20 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  $26 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $26 | 0;
 }
 
 function Icosahedron__Icosahedron_28Icosahedron_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, $5 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $42 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___vector_28std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20__20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 12 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $42 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + 12 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $42;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___function_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($5 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29($1 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___$_0_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Icosahedron___Icosahedron_28_29($4 + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___function_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($5 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29($1 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___$_1_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Icosahedron___Icosahedron_28_29($4 + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___function_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($5 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29($1 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___$_2_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Icosahedron___Icosahedron_28_29($4 + 16 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___function_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($5 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29($1 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___$_3_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Icosahedron___Icosahedron_28_29($4 + 16 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29_20const($0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator__28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____move_assign_28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___2c_20std____2__integral_constant_bool_2c_20true__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__function_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____function_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______value_func_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_delete_28_29_20const($4 | 0);
  std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20______vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function Triangle__lazy_points_around_result___lazy_points_around_result_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____vector_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_delete_28_29_20const($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($4 | 0, std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($4 | 0) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($4 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___size_28_29_20const($4 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($4 | 0) | 0, 12) | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20______vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___clear_28_29($4 | 0);
   std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___deallocate_28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20unsigned_20long_29(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___begin_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____make_iter_28Triangle_20const__29_20const($4 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
  $7 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___end_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____make_iter_28Triangle_20const__29_20const($4 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) | 0;
  $7 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function bool_20std____2__operator___Triangle_20const___28std____2____wrap_iter_Triangle_20const___20const__2c_20std____2____wrap_iter_Triangle_20const___20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $7 = bool_20std____2__operator___Triangle_20const__2c_20Triangle_20const___28std____2____wrap_iter_Triangle_20const___20const__2c_20std____2____wrap_iter_Triangle_20const___20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return ($7 ^ -1 | 0) & 1 | 0 | 0;
 }
 
 function std____2____wrap_iter_Triangle_20const____operator__28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_Triangle_20const____operator___28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 120 | 0;
  return $4 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20char_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($0 | 0, std____2__remove_reference_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____type___20std____2__move_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28char_20const__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($0 | 0, std____2__remove_reference_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____type___20std____2__move_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___second_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___select_on_container_copy_construction_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 32 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 28 | 0) >> 2] = $0;
  std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____select_on_container_copy_construction_28std____2__integral_constant_bool_2c_20false__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20const__29(HEAP32[($3 + 28 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 32 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____vector_base_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($5 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  HEAP32[($5 + 4 | 0) >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____compressed_pair_std__nullptr_t_2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20__28std__nullptr_t___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____29($5 + 8 | 0 | 0, $4 + 4 | 0 | 0, std____2__remove_reference_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____type___20std____2__move_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  return ((HEAP32[($4 + 4 | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (12 | 0) | 0 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____vallocate_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $15 = 0, $20 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  label$1 : {
   if (!((HEAP32[($4 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___max_size_28_29_20const($5 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_common_true_____throw_length_error_28_29_20const($5 | 0);
   abort();
  }
  $15 = std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___allocate_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20unsigned_20long_29(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 4 | 0) >> 2] = $15;
  HEAP32[$5 >> 2] = $15;
  $20 = (HEAP32[$5 >> 2] | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 12) | 0;
  HEAP32[(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____end_cap_28_29($5 | 0) | 0) >> 2] = $20;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_new_28unsigned_20long_29_20const($5 | 0, 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__enable_if___is_cpp17_forward_iterator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_2c_20void___type_20std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_at_end_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 28 | 0) >> 2] = $0;
  HEAP32[($6 + 24 | 0) >> 2] = $1;
  HEAP32[($6 + 20 | 0) >> 2] = $2;
  HEAP32[($6 + 16 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____ConstructTransaction___ConstructTransaction_28std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___2c_20unsigned_20long_29($6 | 0, $7 | 0, HEAP32[($6 + 16 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_range_forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 24 | 0) >> 2] | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0, $6 + 4 | 0 | 0);
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____ConstructTransaction____ConstructTransaction_28_29($6 | 0) | 0;
  __stack_pointer = $6 + 32 | 0;
  return;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___vector_28std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $26 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = $5;
  std____2__allocator_traits_std____2__allocator_Triangle__20___select_on_container_copy_construction_28std____2__allocator_Triangle__20const__29(std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29_20const(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____vector_base_28std____2__allocator_Triangle____29($5 | 0, $4 + 16 | 0 | 0) | 0;
  HEAP32[($4 + 4 | 0) >> 2] = std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___size_28_29_20const(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0) >>> 0 > 0 >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____vallocate_28unsigned_20long_29($5 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
   std____2__enable_if___is_cpp17_forward_iterator_Triangle____value_2c_20void___type_20std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____construct_at_end_Triangle___28Triangle__2c_20Triangle__2c_20unsigned_20long_29($5 | 0, HEAP32[(HEAP32[($4 + 20 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  $26 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $26 | 0;
 }
 
 function std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___allocator_28_29($4 | 0) | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($5 | 0, $7 | 0, $4 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron___Icosahedron_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____vector_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___allocator_28_29($4 | 0) | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($5 | 0, $7 | 0, $4 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___allocator_28_29($4 | 0) | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($5 | 0, $7 | 0, $4 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___allocator_28_29($4 | 0) | 0;
  std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($5 | 0, $7 | 0, $4 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($4 | 0) | 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  HEAP32[($3 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($4 + 8 | 0 | 0, $3 + 8 | 0 | 0, $3 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $13 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  label$1 : {
   if (!((HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) == (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____throw_bad_function_call_28_29();
   abort();
  }
  $13 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  FUNCTION_TABLE[HEAP32[((HEAP32[$13 >> 2] | 0) + 24 | 0) >> 2] | 0 | 0]($0, $13);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____move_assign_28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___2c_20std____2__integral_constant_bool_2c_20true__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $13 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____vdeallocate_28_29($5 | 0);
  std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____move_assign_alloc_28std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___29($5 | 0, HEAP32[$4 >> 2] | 0 | 0);
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[$4 >> 2] | 0) >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[((HEAP32[$4 >> 2] | 0) + 4 | 0) >> 2] | 0;
  $13 = HEAP32[(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29(HEAP32[$4 >> 2] | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29($5 | 0) | 0) >> 2] = $13;
  HEAP32[(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29(HEAP32[$4 >> 2] | 0 | 0) | 0) >> 2] = 0;
  HEAP32[((HEAP32[$4 >> 2] | 0) + 4 | 0) >> 2] = 0;
  HEAP32[(HEAP32[$4 >> 2] | 0) >> 2] = 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______value_func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $11 = 0, $21 = 0, $24 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 16 | 0) >> 2] | 0 | 0) == ($4 | 0) & 1 | 0)) {
     break label$2
    }
    $11 = HEAP32[($4 + 16 | 0) >> 2] | 0;
    FUNCTION_TABLE[HEAP32[((HEAP32[$11 >> 2] | 0) + 16 | 0) >> 2] | 0 | 0]($11);
    break label$1;
   }
   label$3 : {
    if (!((HEAP32[($4 + 16 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
     break label$3
    }
    $21 = HEAP32[($4 + 16 | 0) >> 2] | 0;
    FUNCTION_TABLE[HEAP32[((HEAP32[$21 >> 2] | 0) + 20 | 0) >> 2] | 0 | 0]($21);
   }
  }
  $24 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $24 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_delete_28_29_20const($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($4 | 0, std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($4 | 0) | 0 | 0, (std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const($4 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const($4 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const($4 | 0) | 0, 12) | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20______vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___clear_28_29($4 | 0);
   std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___deallocate_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____make_iter_28Triangle_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2____wrap_iter_Triangle_20const______wrap_iter_28Triangle_20const__29($4 + 8 | 0 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
  $9 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $9 | 0;
 }
 
 function bool_20std____2__operator___Triangle_20const__2c_20Triangle_20const___28std____2____wrap_iter_Triangle_20const___20const__2c_20std____2____wrap_iter_Triangle_20const___20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $6 = std____2____wrap_iter_Triangle_20const____base_28_29_20const(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0;
  $8 = std____2____wrap_iter_Triangle_20const____base_28_29_20const(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return ($6 | 0) == ($8 | 0) & 1 | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $10 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28char_20const__2c_20unsigned_20long_29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___data_28_29_20const(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___size_28_29_20const(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $10 | 0;
 }
 
 function Icosahedron__parse_hash_28Icosahedron__hash_properties_29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $14 = 0, $53 = 0, $132 = 0, $214 = 0.0, $217 = 0.0, $223 = 0, $253 = 0.0, $259 = 0, $315 = 0.0, $318 = 0.0, $324 = 0;
  $5 = __stack_pointer - 496 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 492 | 0) >> 2] = $0;
  HEAP32[($5 + 488 | 0) >> 2] = $1;
  label$1 : {
   if (!((HEAP32[$2 >> 2] | 0 | 0) <= (0 | 0) & 1 | 0)) {
    break label$1
   }
   $14 = __cxa_allocate_exception(8 | 0) | 0;
   std____2__to_string_28int_29($5 + 456 | 0 | 0, HEAP32[$2 >> 2] | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28char_20const__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 472 | 0 | 0, 1427 | 0, $5 + 456 | 0 | 0);
   std__invalid_argument__invalid_argument_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($14 | 0, $5 + 472 | 0 | 0) | 0;
   __cxa_throw($14 | 0, 11476 | 0, 1 | 0);
   abort();
  }
  HEAP32[($5 + 452 | 0) >> 2] = hexmapf__num_divisions_28int_29(HEAP32[$2 >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 448 | 0) >> 2] = Math_imul(HEAP32[($5 + 452 | 0) >> 2] | 0, 3);
  label$2 : {
   label$3 : {
    if ((HEAP32[($2 + 4 | 0) >> 2] | 0 | 0) > (HEAP32[($5 + 448 | 0) >> 2] | 0 | 0) & 1 | 0) {
     break label$3
    }
    if (!((HEAP32[($2 + 4 | 0) >> 2] | 0 | 0) < (0 | 0) & 1 | 0)) {
     break label$2
    }
   }
   $53 = __cxa_allocate_exception(8 | 0) | 0;
   std____2__to_string_28int_29($5 + 352 | 0 | 0, HEAP32[$2 >> 2] | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28char_20const__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 368 | 0 | 0, 1493 | 0, $5 + 352 | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20char_20const__29($5 + 384 | 0 | 0, $5 + 368 | 0 | 0, 1522 | 0);
   std____2__to_string_28int_29($5 + 336 | 0 | 0, HEAP32[($5 + 448 | 0) >> 2] | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 400 | 0 | 0, $5 + 384 | 0 | 0, $5 + 336 | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20char_20const__29($5 + 416 | 0 | 0, $5 + 400 | 0 | 0, 1549 | 0);
   std____2__to_string_28int_29($5 + 320 | 0 | 0, HEAP32[($2 + 4 | 0) >> 2] | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 432 | 0 | 0, $5 + 416 | 0 | 0, $5 + 320 | 0 | 0);
   std__invalid_argument__invalid_argument_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($53 | 0, $5 + 432 | 0 | 0) | 0;
   __cxa_throw($53 | 0, 11476 | 0, 1 | 0);
   abort();
  }
  HEAP32[($5 + 316 | 0) >> 2] = Math_imul(HEAP32[($5 + 452 | 0) >> 2] | 0, 5) - 1 | 0;
  label$4 : {
   label$5 : {
    if ((HEAP32[($2 + 8 | 0) >> 2] | 0 | 0) > (HEAP32[($5 + 316 | 0) >> 2] | 0 | 0) & 1 | 0) {
     break label$5
    }
    if (!((HEAP32[($2 + 8 | 0) >> 2] | 0 | 0) < (0 | 0) & 1 | 0)) {
     break label$4
    }
   }
   $132 = __cxa_allocate_exception(8 | 0) | 0;
   std____2__to_string_28int_29($5 + 224 | 0 | 0, HEAP32[$2 >> 2] | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28char_20const__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 240 | 0 | 0, 1567 | 0, $5 + 224 | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20char_20const__29($5 + 256 | 0 | 0, $5 + 240 | 0 | 0, 1522 | 0);
   std____2__to_string_28int_29($5 + 208 | 0 | 0, HEAP32[($5 + 316 | 0) >> 2] | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 272 | 0 | 0, $5 + 256 | 0 | 0, $5 + 208 | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20char_20const__29($5 + 288 | 0 | 0, $5 + 272 | 0 | 0, 1596 | 0);
   std____2__to_string_28int_29($5 + 192 | 0 | 0, HEAP32[($2 + 8 | 0) >> 2] | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2__operator__char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($5 + 304 | 0 | 0, $5 + 288 | 0 | 0, $5 + 192 | 0 | 0);
   std__invalid_argument__invalid_argument_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($132 | 0, $5 + 304 | 0 | 0) | 0;
   __cxa_throw($132 | 0, 11476 | 0, 1 | 0);
   abort();
  }
  HEAP32[($5 + 188 | 0) >> 2] = -1;
  HEAP32[($5 + 184 | 0) >> 2] = -1;
  HEAP32[($5 + 180 | 0) >> 2] = -1;
  HEAP32[($5 + 176 | 0) >> 2] = $2 + 4 | 0;
  HEAP32[($5 + 172 | 0) >> 2] = $2 + 8 | 0;
  label$6 : {
   label$7 : {
    if (!((HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0 | 0) < (HEAP32[($5 + 452 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$7
    }
    label$8 : {
     label$9 : {
      if (!(HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0)) {
       break label$9
      }
      $214 = +std____2__enable_if_std__is_integral_int___value_2c_20double___type_20trunc_int__28int_29((HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0 | 0) / (HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0 | 0) | 0 | 0);
      break label$8;
     }
     $214 = +(0 | 0);
    }
    $217 = $214;
    label$10 : {
     label$11 : {
      if (!(Math_abs($217) < 2147483648.0)) {
       break label$11
      }
      $223 = ~~$217;
      break label$10;
     }
     $223 = -2147483648;
    }
    HEAP32[($5 + 188 | 0) >> 2] = $223;
    HEAP32[($5 + 180 | 0) >> 2] = HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0;
    HEAP32[($5 + 184 | 0) >> 2] = (HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0) - Math_imul(HEAP32[($5 + 188 | 0) >> 2] | 0, HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0) | 0;
    break label$6;
   }
   label$12 : {
    label$13 : {
     if (!((HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0 | 0) <= ((HEAP32[($5 + 452 | 0) >> 2] | 0) << 1 | 0 | 0) & 1 | 0)) {
      break label$13
     }
     HEAP32[($5 + 180 | 0) >> 2] = (HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0) - (HEAP32[($5 + 452 | 0) >> 2] | 0) | 0;
     $253 = +std____2__enable_if_std__is_integral_int___value_2c_20double___type_20trunc_int__28int_29((HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0 | 0) / (HEAP32[($5 + 452 | 0) >> 2] | 0 | 0) | 0 | 0);
     label$14 : {
      label$15 : {
       if (!(Math_abs($253) < 2147483648.0)) {
        break label$15
       }
       $259 = ~~$253;
       break label$14;
      }
      $259 = -2147483648;
     }
     HEAP32[($5 + 168 | 0) >> 2] = $259;
     HEAP32[($5 + 164 | 0) >> 2] = Math_imul(HEAP32[($5 + 168 | 0) >> 2] | 0, HEAP32[($5 + 452 | 0) >> 2] | 0) + ((HEAP32[($5 + 452 | 0) >> 2] | 0) - (HEAP32[($5 + 180 | 0) >> 2] | 0) | 0) | 0;
     HEAP8[($5 + 163 | 0) >> 0] = (HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0 | 0) > (HEAP32[($5 + 164 | 0) >> 2] | 0 | 0) & 1 | 0;
     label$16 : {
      label$17 : {
       if (!((HEAPU8[($5 + 163 | 0) >> 0] | 0) & 1 | 0)) {
        break label$17
       }
       HEAP32[($5 + 188 | 0) >> 2] = (((HEAP32[($5 + 168 | 0) >> 2] | 0) << 1 | 0) + 5 | 0) + 1 | 0;
       HEAP32[($5 + 184 | 0) >> 2] = (HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0) - (HEAP32[($5 + 164 | 0) >> 2] | 0) | 0;
       break label$16;
      }
      HEAP32[($5 + 188 | 0) >> 2] = ((HEAP32[($5 + 168 | 0) >> 2] | 0) << 1 | 0) + 5 | 0;
      HEAP32[($5 + 184 | 0) >> 2] = (HEAP32[($5 + 164 | 0) >> 2] | 0) - (HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0) | 0;
     }
     break label$12;
    }
    HEAP32[($5 + 180 | 0) >> 2] = (HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0) - ((HEAP32[($5 + 452 | 0) >> 2] | 0) << 1 | 0) | 0;
    HEAP32[($5 + 156 | 0) >> 2] = (HEAP32[($5 + 452 | 0) >> 2] | 0) - (HEAP32[($5 + 180 | 0) >> 2] | 0) | 0;
    label$18 : {
     label$19 : {
      if (!(HEAP32[($5 + 156 | 0) >> 2] | 0)) {
       break label$19
      }
      $315 = +std____2__enable_if_std__is_integral_int___value_2c_20double___type_20trunc_int__28int_29((HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0 | 0) / (HEAP32[($5 + 156 | 0) >> 2] | 0 | 0) | 0 | 0);
      break label$18;
     }
     $315 = +(0 | 0);
    }
    $318 = $315;
    label$20 : {
     label$21 : {
      if (!(Math_abs($318) < 2147483648.0)) {
       break label$21
      }
      $324 = ~~$318;
      break label$20;
     }
     $324 = -2147483648;
    }
    HEAP32[($5 + 152 | 0) >> 2] = $324;
    HEAP32[($5 + 184 | 0) >> 2] = (HEAP32[($5 + 156 | 0) >> 2] | 0) - ((HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0) - Math_imul(HEAP32[($5 + 152 | 0) >> 2] | 0, HEAP32[($5 + 156 | 0) >> 2] | 0) | 0) | 0;
    HEAP32[($5 + 188 | 0) >> 2] = (HEAP32[($5 + 152 | 0) >> 2] | 0) + 15 | 0;
   }
  }
  Icosahedron__triangle_28int_29($5 + 32 | 0 | 0, HEAP32[($5 + 188 | 0) >> 2] | 0 | 0);
  Triangle__generate_point_28int_2c_20int_2c_20int_2c_20ico__rotation_method_29_20const($5 | 0, $5 + 32 | 0 | 0, HEAP32[$2 >> 2] | 0 | 0, HEAP32[($5 + 180 | 0) >> 2] | 0 | 0, HEAP32[($5 + 184 | 0) >> 2] | 0 | 0, HEAP32[($2 + 12 | 0) >> 2] | 0 | 0);
  GPoint3__GPoint3_28double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29($0 | 0, +(+HEAPF64[$5 >> 3]), +(+HEAPF64[($5 + 8 | 0) >> 3]), +(+HEAPF64[($5 + 16 | 0) >> 3]), HEAP32[$2 >> 2] | 0 | 0, HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($2 + 16 | 0) >> 2] | 0 | 0, HEAP32[($2 + 12 | 0) >> 2] | 0 | 0, (GPoint3__is_phex_center_28int_2c_20int_2c_20int_29(HEAP32[$2 >> 2] | 0 | 0, HEAP32[(HEAP32[($5 + 176 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[(HEAP32[($5 + 172 | 0) >> 2] | 0) >> 2] | 0 | 0) | 0) & 1 | 0 | 0, HEAP32[($5 + 136 | 0) >> 2] | 0 | 0) | 0;
  Point3___Point3_28_29($5 | 0) | 0;
  Triangle___Triangle_28_29($5 + 32 | 0 | 0) | 0;
  __stack_pointer = $5 + 496 | 0;
  return;
 }
 
 function std____2__enable_if_std__is_integral_int___value_2c_20double___type_20trunc_int__28int_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return +Math_trunc(+(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0));
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  return ((HEAP32[($4 + 4 | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (12 | 0) | 0 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___push_back_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($5 + 4 | 0) >> 2] | 0) >>> 0 < (HEAP32[(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29($5 | 0) | 0) >> 2] | 0) >>> 0 & 1 | 0)) {
     break label$2
    }
    void_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____construct_one_at_end_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($5 | 0, std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____type___20std____2__move_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
    break label$1;
   }
   void_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____push_back_slow_path_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($5 | 0, std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____type___20std____2__move_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____annotate_delete_28_29_20const($4 | 0);
  std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20______vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 12) | 0 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  return ((HEAP32[($4 + 4 | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) >> 5 | 0 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator_5b_5d_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 12) | 0 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) + ((HEAP32[($4 + 8 | 0) >> 2] | 0) << 5 | 0) | 0 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  return ((HEAP32[($4 + 4 | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (56 | 0) | 0 | 0;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____type___20std____2__move_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____construct_one_at_end_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____ConstructTransaction___ConstructTransaction_28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___2c_20unsigned_20long_29($4 + 8 | 0 | 0, $5 | 0, 1 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___construct_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29($5 | 0) | 0 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___20std____2____to_address_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20std____2__forward_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___type__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[($4 + 12 | 0) >> 2] = (HEAP32[($4 + 12 | 0) >> 2] | 0) + 12 | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____ConstructTransaction____ConstructTransaction_28_29($4 + 8 | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____push_back_slow_path_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29($5 | 0) | 0;
  std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______split_buffer_28unsigned_20long_2c_20unsigned_20long_2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___29($4 | 0, std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____recommend_28unsigned_20long_29_20const($5 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___size_28_29_20const($5 | 0) | 0) + 1 | 0 | 0) | 0 | 0, std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___size_28_29_20const($5 | 0) | 0 | 0, HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___construct_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___20std____2____to_address_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20std____2__forward_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___type__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[($4 + 8 | 0) >> 2] = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 12 | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____swap_out_circular_buffer_28std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____29($5 | 0, $4 | 0);
  std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20________split_buffer_28_29($4 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($4 | 0) | 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  HEAP32[($3 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($4 + 8 | 0 | 0, $3 + 8 | 0 | 0, $3 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____annotate_delete_28_29_20const($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($4 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($4 | 0) | 0 | 0, (std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const($4 | 0) | 0, 56) | 0 | 0, (std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___size_28_29_20const($4 | 0) | 0, 56) | 0 | 0, (std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($4 | 0) | 0) + Math_imul(std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const($4 | 0) | 0, 56) | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20______vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20___clear_28_29($4 | 0);
   std____2__allocator_traits_std____2__allocator_GPoint3__20___deallocate_28std____2__allocator_GPoint3___2c_20GPoint3__2c_20unsigned_20long_29(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20___first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__remove_reference_GPoint3____type___20std____2__move_GPoint3___28GPoint3__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___begin_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____make_iter_28GPoint3__29($4 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
  $7 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___end_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____make_iter_28GPoint3__29($4 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) | 0;
  $7 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function bool_20std____2__operator___GPoint3___28std____2____wrap_iter_GPoint3___20const__2c_20std____2____wrap_iter_GPoint3___20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $7 = bool_20std____2__operator___GPoint3__2c_20GPoint3___28std____2____wrap_iter_GPoint3___20const__2c_20std____2____wrap_iter_GPoint3___20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return ($7 ^ -1 | 0) & 1 | 0 | 0;
 }
 
 function std____2____wrap_iter_GPoint3____operator__28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_GPoint3____operator___28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 56 | 0;
  return $4 | 0;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___second_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____make_iter_28GPoint3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2____wrap_iter_GPoint3______wrap_iter_28GPoint3__29($4 + 8 | 0 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
  $9 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $9 | 0;
 }
 
 function bool_20std____2__operator___GPoint3__2c_20GPoint3___28std____2____wrap_iter_GPoint3___20const__2c_20std____2____wrap_iter_GPoint3___20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $6 = std____2____wrap_iter_GPoint3____base_28_29_20const(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0;
  $8 = std____2____wrap_iter_GPoint3____base_28_29_20const(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return ($6 | 0) == ($8 | 0) & 1 | 0 | 0;
 }
 
 function getExceptionMessage_28long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_std__nullptr_t__28char_20const__29($0 | 0, FUNCTION_TABLE[HEAP32[((HEAP32[$5 >> 2] | 0) + 8 | 0) >> 2] | 0 | 0]($5) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function __cxx_global_var_init() {
  FUNCTION_TABLE[2 | 0](12960) | 0;
  return;
 }
 
 function EmscriptenBindingInitializer_icosahedron__EmscriptenBindingInitializer_icosahedron_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $41 = 0, $357 = 0, $146 = 0, $147 = 0, $276 = 0, $81 = 0, $94 = 0, $105 = 0, $144 = 0, $164 = 0, $182 = 0, $200 = 0, $221 = 0, $4 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $35 = 0, $39 = 0, $585 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $613 = 0, $626 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $61 = 0, $654 = 0, $667 = 0, $68 = 0, $69 = 0, $71 = 0, $72 = 0, $693 = 0, $92 = 0, $103 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $126 = 0, $127 = 0, $129 = 0, $130 = 0, $132 = 0, $133 = 0, $134 = 0, $142 = 0, $145 = 0, $148 = 0, $149 = 0, $150 = 0, $152 = 0, $153 = 0, $156 = 0, $157 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $170 = 0, $171 = 0, $174 = 0, $175 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $188 = 0, $189 = 0, $192 = 0, $193 = 0, $202 = 0, $205 = 0, $206 = 0, $207 = 0, $209 = 0, $210 = 0, $213 = 0, $214 = 0, $225 = 0, $226 = 0, $227 = 0, $229 = 0, $230 = 0, $233 = 0, $234 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $253 = 0, $254 = 0, $256 = 0, $257 = 0, $259 = 0, $260 = 0, $261 = 0, $269 = 0, $1187 = 0, $273 = 0, $274 = 0, $275 = 0, $277 = 0, $278 = 0, $279 = 0, $281 = 0, $282 = 0, $283 = 0, $1226 = 0, $1249 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $298 = 0, $299 = 0, $300 = 0, $1288 = 0, $1311 = 0, $308 = 0, $309 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $315 = 0, $316 = 0, $317 = 0, $1350 = 0, $1373 = 0, $325 = 0, $326 = 0, $327 = 0, $329 = 0, $330 = 0, $331 = 0, $333 = 0, $334 = 0, $335 = 0, $1412 = 0, $1432 = 0, $341 = 0, $342 = 0, $343 = 0, $345 = 0, $346 = 0, $347 = 0, $349 = 0, $350 = 0, $351 = 0, $1471 = 0, $356 = 0, $360 = 0, $363 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $372 = 0, $373 = 0, $383 = 0, $386 = 0, $387 = 0, $388 = 0, $390 = 0, $391 = 0, $395 = 0, $396 = 0, $406 = 0, $409 = 0, $410 = 0, $411 = 0, $413 = 0, $414 = 0, $418 = 0, $419 = 0, $429 = 0, $432 = 0, $433 = 0, $434 = 0, $436 = 0, $437 = 0, $441 = 0, $442 = 0, $454 = 0, $455 = 0, $456 = 0, $458 = 0, $459 = 0, $463 = 0, $464 = 0;
  $3 = __stack_pointer - 960 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 172 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 172 | 0) >> 2] | 0;
  void_20emscripten__function_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long__28char_20const__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20_28__29_28long_29_29(1614 | 0, 3 | 0);
  HEAP32[($3 + 196 | 0) >> 2] = $3 + 168 | 0;
  HEAP32[($3 + 192 | 0) >> 2] = 1634;
  void_20emscripten__internal__NoBaseClass__verify_Icosahedron__28_29();
  HEAP32[($3 + 188 | 0) >> 2] = 4;
  HEAP32[($3 + 184 | 0) >> 2] = void_20_28_emscripten__internal__NoBaseClass__getUpcaster_Icosahedron__28_29_29_28_29() | 0;
  HEAP32[($3 + 180 | 0) >> 2] = void_20_28_emscripten__internal__NoBaseClass__getDowncaster_Icosahedron__28_29_29_28_29() | 0;
  HEAP32[($3 + 176 | 0) >> 2] = 5;
  $14 = emscripten__internal__TypeID_Icosahedron_2c_20void___get_28_29() | 0;
  $15 = emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_Icosahedron__2c_20void___get_28_29() | 0;
  $16 = emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20void___get_28_29() | 0;
  $17 = emscripten__internal__NoBaseClass__get_28_29() | 0;
  HEAP32[($3 + 200 | 0) >> 2] = HEAP32[($3 + 188 | 0) >> 2] | 0;
  $19 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int__28_29() | 0;
  $20 = HEAP32[($3 + 188 | 0) >> 2] | 0;
  HEAP32[($3 + 204 | 0) >> 2] = HEAP32[($3 + 184 | 0) >> 2] | 0;
  $22 = char_20const__20emscripten__internal__getGenericSignature_void__28_29() | 0;
  $23 = HEAP32[($3 + 184 | 0) >> 2] | 0;
  HEAP32[($3 + 208 | 0) >> 2] = HEAP32[($3 + 180 | 0) >> 2] | 0;
  $25 = char_20const__20emscripten__internal__getGenericSignature_void__28_29() | 0;
  $26 = HEAP32[($3 + 180 | 0) >> 2] | 0;
  $27 = HEAP32[($3 + 192 | 0) >> 2] | 0;
  HEAP32[($3 + 212 | 0) >> 2] = HEAP32[($3 + 176 | 0) >> 2] | 0;
  _embind_register_class($14 | 0, $15 | 0, $16 | 0, $17 | 0, $19 | 0, $20 | 0, $22 | 0, $23 | 0, $25 | 0, $26 | 0, $27 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 176 | 0) >> 2] | 0 | 0);
  HEAP32[($3 + 216 | 0) >> 2] = $3 + 168 | 0;
  HEAP32[($3 + 224 | 0) >> 2] = HEAP32[($3 + 216 | 0) >> 2] | 0;
  HEAP32[($3 + 220 | 0) >> 2] = 6;
  $35 = HEAP32[($3 + 224 | 0) >> 2] | 0;
  void_20emscripten__internal__RegisterClassConstructor_Icosahedron__20_28__29_28ico__map_orientation___2c_20ico__rotation_method___29___invoke_Icosahedron__28Icosahedron__20_28__29_28ico__map_orientation___2c_20ico__rotation_method___29_29(HEAP32[($3 + 220 | 0) >> 2] | 0 | 0);
  HEAP32[($3 + 228 | 0) >> 2] = $35;
  HEAP32[($3 + 236 | 0) >> 2] = HEAP32[($3 + 228 | 0) >> 2] | 0;
  HEAP32[($3 + 232 | 0) >> 2] = 7;
  $39 = HEAP32[($3 + 236 | 0) >> 2] | 0;
  void_20emscripten__internal__RegisterClassConstructor_Icosahedron__20_28__29_28_29___invoke_Icosahedron__28Icosahedron__20_28__29_28_29_29(HEAP32[($3 + 232 | 0) >> 2] | 0 | 0);
  $41 = 0;
  HEAP32[($3 + 164 | 0) >> 2] = $41;
  HEAP32[($3 + 160 | 0) >> 2] = 8;
  i64toi32_i32$0 = HEAP32[($3 + 160 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 164 | 0) >> 2] | 0;
  $585 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  HEAP32[($3 + 240 | 0) >> 2] = $585;
  HEAP32[($3 + 244 | 0) >> 2] = i64toi32_i32$1;
  $44 = HEAP32[($3 + 240 | 0) >> 2] | 0;
  $45 = HEAP32[($3 + 244 | 0) >> 2] | 0;
  HEAP32[($3 + 268 | 0) >> 2] = $39;
  HEAP32[($3 + 264 | 0) >> 2] = 1646;
  HEAP32[($3 + 260 | 0) >> 2] = $45;
  HEAP32[($3 + 256 | 0) >> 2] = $44;
  $47 = HEAP32[($3 + 268 | 0) >> 2] | 0;
  $48 = HEAP32[($3 + 264 | 0) >> 2] | 0;
  $49 = HEAP32[($3 + 256 | 0) >> 2] | 0;
  HEAP32[($3 + 252 | 0) >> 2] = HEAP32[($3 + 260 | 0) >> 2] | 0;
  HEAP32[($3 + 248 | 0) >> 2] = $49;
  i64toi32_i32$1 = HEAP32[($3 + 248 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 252 | 0) >> 2] | 0;
  $613 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[($3 + 48 | 0) >> 2] = $613;
  HEAP32[($3 + 52 | 0) >> 2] = i64toi32_i32$0;
  void_20emscripten__internal__RegisterClassMethod_Point3_20_28Icosahedron____29_28double_2c_20double_29_20const___invoke_Icosahedron__28char_20const__2c_20Point3_20_28Icosahedron____29_28double_2c_20double_29_20const_29($48 | 0, $3 + 48 | 0 | 0);
  HEAP32[($3 + 156 | 0) >> 2] = $41;
  HEAP32[($3 + 152 | 0) >> 2] = 9;
  i64toi32_i32$0 = HEAP32[($3 + 152 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 156 | 0) >> 2] | 0;
  $626 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  HEAP32[($3 + 272 | 0) >> 2] = $626;
  HEAP32[($3 + 276 | 0) >> 2] = i64toi32_i32$1;
  $56 = HEAP32[($3 + 272 | 0) >> 2] | 0;
  $57 = HEAP32[($3 + 276 | 0) >> 2] | 0;
  HEAP32[($3 + 300 | 0) >> 2] = $47;
  HEAP32[($3 + 296 | 0) >> 2] = 1662;
  HEAP32[($3 + 292 | 0) >> 2] = $57;
  HEAP32[($3 + 288 | 0) >> 2] = $56;
  $59 = HEAP32[($3 + 300 | 0) >> 2] | 0;
  $60 = HEAP32[($3 + 296 | 0) >> 2] | 0;
  $61 = HEAP32[($3 + 288 | 0) >> 2] | 0;
  HEAP32[($3 + 284 | 0) >> 2] = HEAP32[($3 + 292 | 0) >> 2] | 0;
  HEAP32[($3 + 280 | 0) >> 2] = $61;
  i64toi32_i32$1 = HEAP32[($3 + 280 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 284 | 0) >> 2] | 0;
  $654 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[($3 + 40 | 0) >> 2] = $654;
  HEAP32[($3 + 44 | 0) >> 2] = i64toi32_i32$0;
  void_20emscripten__internal__RegisterClassMethod_Icosahedron__hash_properties_20_28Icosahedron____29_28Point3_2c_20int_29___invoke_Icosahedron__28char_20const__2c_20Icosahedron__hash_properties_20_28Icosahedron____29_28Point3_2c_20int_29_29($60 | 0, $3 + 40 | 0 | 0);
  HEAP32[($3 + 148 | 0) >> 2] = $41;
  HEAP32[($3 + 144 | 0) >> 2] = 10;
  i64toi32_i32$0 = HEAP32[($3 + 144 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 148 | 0) >> 2] | 0;
  $667 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  HEAP32[($3 + 304 | 0) >> 2] = $667;
  HEAP32[($3 + 308 | 0) >> 2] = i64toi32_i32$1;
  $68 = HEAP32[($3 + 304 | 0) >> 2] | 0;
  $69 = HEAP32[($3 + 308 | 0) >> 2] | 0;
  HEAP32[($3 + 336 | 0) >> 2] = $59;
  HEAP32[($3 + 332 | 0) >> 2] = 1667;
  HEAP32[($3 + 324 | 0) >> 2] = $69;
  HEAP32[($3 + 320 | 0) >> 2] = $68;
  $71 = HEAP32[($3 + 332 | 0) >> 2] | 0;
  $72 = HEAP32[($3 + 320 | 0) >> 2] | 0;
  HEAP32[($3 + 316 | 0) >> 2] = HEAP32[($3 + 324 | 0) >> 2] | 0;
  HEAP32[($3 + 312 | 0) >> 2] = $72;
  i64toi32_i32$1 = HEAP32[($3 + 312 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 316 | 0) >> 2] | 0;
  $693 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[($3 + 32 | 0) >> 2] = $693;
  HEAP32[($3 + 36 | 0) >> 2] = i64toi32_i32$0;
  void_20emscripten__internal__RegisterClassMethod_GPoint3_20_28Icosahedron____29_28Icosahedron__hash_properties_29_20const___invoke_Icosahedron__28char_20const__2c_20GPoint3_20_28Icosahedron____29_28Icosahedron__hash_properties_29_20const_29($71 | 0, $3 + 32 | 0 | 0);
  emscripten__value_object_Icosahedron__hash_properties___value_object_28char_20const__29($3 + 136 | 0 | 0, 1677 | 0) | 0;
  $81 = 16;
  $92 = emscripten__value_object_Icosahedron__hash_properties___20emscripten__value_object_Icosahedron__hash_properties___field_Icosahedron__hash_properties_2c_20int__28char_20const__2c_20int_20Icosahedron__hash_properties____29(emscripten__value_object_Icosahedron__hash_properties___20emscripten__value_object_Icosahedron__hash_properties___field_Icosahedron__hash_properties_2c_20int__28char_20const__2c_20int_20Icosahedron__hash_properties____29(emscripten__value_object_Icosahedron__hash_properties___20emscripten__value_object_Icosahedron__hash_properties___field_Icosahedron__hash_properties_2c_20ico__rotation_method__28char_20const__2c_20ico__rotation_method_20Icosahedron__hash_properties____29(emscripten__value_object_Icosahedron__hash_properties___20emscripten__value_object_Icosahedron__hash_properties___field_Icosahedron__hash_properties_2c_20ico__map_orientation__28char_20const__2c_20ico__map_orientation_20Icosahedron__hash_properties____29($3 + 136 | 0 | 0, 1692 | 0, $81 | 0) | 0 | 0, 1695 | 0, 12 | 0) | 0 | 0, 1698 | 0, $41 | 0) | 0 | 0, 1702 | 0, 4 | 0) | 0;
  $94 = 8;
  emscripten__value_object_Icosahedron__hash_properties___20emscripten__value_object_Icosahedron__hash_properties___field_Icosahedron__hash_properties_2c_20int__28char_20const__2c_20int_20Icosahedron__hash_properties____29($92 | 0, 1706 | 0, $94 | 0) | 0;
  emscripten__value_object_Icosahedron__hash_properties____value_object_28_29($3 + 136 | 0 | 0) | 0;
  emscripten__enum__ico__map_orientation___enum__28char_20const__29($3 + 128 | 0 | 0, 1710 | 0) | 0;
  $103 = emscripten__enum__ico__map_orientation___value_28char_20const__2c_20ico__map_orientation_29($3 + 128 | 0 | 0, 1725 | 0, $41 | 0) | 0;
  $105 = 1;
  emscripten__enum__ico__map_orientation___value_28char_20const__2c_20ico__map_orientation_29($103 | 0, 1730 | 0, $105 | 0) | 0;
  emscripten__enum__ico__rotation_method___enum__28char_20const__29($3 + 120 | 0 | 0, 1739 | 0) | 0;
  emscripten__enum__ico__rotation_method___value_28char_20const__2c_20ico__rotation_method_29(emscripten__enum__ico__rotation_method___value_28char_20const__2c_20ico__rotation_method_29($3 + 120 | 0 | 0, 1754 | 0, $41 | 0) | 0 | 0, 1763 | 0, $105 | 0) | 0;
  HEAP32[($3 + 360 | 0) >> 2] = $3 + 112 | 0;
  HEAP32[($3 + 356 | 0) >> 2] = 1774;
  void_20emscripten__internal__NoBaseClass__verify_Point3__28_29();
  HEAP32[($3 + 352 | 0) >> 2] = 11;
  HEAP32[($3 + 348 | 0) >> 2] = void_20_28_emscripten__internal__NoBaseClass__getUpcaster_Point3__28_29_29_28_29() | 0;
  HEAP32[($3 + 344 | 0) >> 2] = void_20_28_emscripten__internal__NoBaseClass__getDowncaster_Point3__28_29_29_28_29() | 0;
  HEAP32[($3 + 340 | 0) >> 2] = 12;
  $121 = emscripten__internal__TypeID_Point3_2c_20void___get_28_29() | 0;
  $122 = emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_Point3__2c_20void___get_28_29() | 0;
  $123 = emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_Point3_20const__2c_20void___get_28_29() | 0;
  $124 = emscripten__internal__NoBaseClass__get_28_29() | 0;
  HEAP32[($3 + 364 | 0) >> 2] = HEAP32[($3 + 352 | 0) >> 2] | 0;
  $126 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int__28_29() | 0;
  $127 = HEAP32[($3 + 352 | 0) >> 2] | 0;
  HEAP32[($3 + 368 | 0) >> 2] = HEAP32[($3 + 348 | 0) >> 2] | 0;
  $129 = char_20const__20emscripten__internal__getGenericSignature_void__28_29() | 0;
  $130 = HEAP32[($3 + 348 | 0) >> 2] | 0;
  HEAP32[($3 + 372 | 0) >> 2] = HEAP32[($3 + 344 | 0) >> 2] | 0;
  $132 = char_20const__20emscripten__internal__getGenericSignature_void__28_29() | 0;
  $133 = HEAP32[($3 + 344 | 0) >> 2] | 0;
  $134 = HEAP32[($3 + 356 | 0) >> 2] | 0;
  HEAP32[($3 + 376 | 0) >> 2] = HEAP32[($3 + 340 | 0) >> 2] | 0;
  _embind_register_class($121 | 0, $122 | 0, $123 | 0, $124 | 0, $126 | 0, $127 | 0, $129 | 0, $130 | 0, $132 | 0, $133 | 0, $134 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 340 | 0) >> 2] | 0 | 0);
  HEAP32[($3 + 380 | 0) >> 2] = $3 + 112 | 0;
  HEAP32[($3 + 388 | 0) >> 2] = HEAP32[($3 + 380 | 0) >> 2] | 0;
  HEAP32[($3 + 384 | 0) >> 2] = 13;
  $142 = HEAP32[($3 + 388 | 0) >> 2] | 0;
  void_20emscripten__internal__RegisterClassConstructor_Point3__20_28__29_28double___2c_20double___2c_20double___2c_20bool___2c_20int___29___invoke_Point3__28Point3__20_28__29_28double___2c_20double___2c_20double___2c_20bool___2c_20int___29_29(HEAP32[($3 + 384 | 0) >> 2] | 0 | 0);
  HEAP32[($3 + 408 | 0) >> 2] = $142;
  $144 = 1781;
  HEAP32[($3 + 404 | 0) >> 2] = $144;
  HEAP32[($3 + 400 | 0) >> 2] = $41;
  $145 = HEAP32[($3 + 408 | 0) >> 2] | 0;
  $146 = 14;
  HEAP32[($3 + 396 | 0) >> 2] = $146;
  $147 = 15;
  HEAP32[($3 + 392 | 0) >> 2] = $147;
  $148 = emscripten__internal__TypeID_Point3_2c_20void___get_28_29() | 0;
  $149 = HEAP32[($3 + 404 | 0) >> 2] | 0;
  $150 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 412 | 0) >> 2] = HEAP32[($3 + 396 | 0) >> 2] | 0;
  $152 = char_20const__20emscripten__internal__getGenericSignature_double_2c_20int_2c_20int__28_29() | 0;
  $153 = HEAP32[($3 + 396 | 0) >> 2] | 0;
  $156 = double_20Point3_____20emscripten__internal__getContext_double_20Point3_____28double_20Point3____20const__29($3 + 400 | 0 | 0) | 0;
  $157 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 416 | 0) >> 2] = HEAP32[($3 + 392 | 0) >> 2] | 0;
  _embind_register_class_property($148 | 0, $149 | 0, $150 | 0, $152 | 0, $153 | 0, $156 | 0, $157 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20double__28_29() | 0 | 0, HEAP32[($3 + 392 | 0) >> 2] | 0 | 0, double_20Point3_____20emscripten__internal__getContext_double_20Point3_____28double_20Point3____20const__29($3 + 400 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 436 | 0) >> 2] = $145;
  $164 = 1783;
  HEAP32[($3 + 432 | 0) >> 2] = $164;
  HEAP32[($3 + 428 | 0) >> 2] = $94;
  $165 = HEAP32[($3 + 436 | 0) >> 2] | 0;
  HEAP32[($3 + 424 | 0) >> 2] = $146;
  HEAP32[($3 + 420 | 0) >> 2] = $147;
  $166 = emscripten__internal__TypeID_Point3_2c_20void___get_28_29() | 0;
  $167 = HEAP32[($3 + 432 | 0) >> 2] | 0;
  $168 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 440 | 0) >> 2] = HEAP32[($3 + 424 | 0) >> 2] | 0;
  $170 = char_20const__20emscripten__internal__getGenericSignature_double_2c_20int_2c_20int__28_29() | 0;
  $171 = HEAP32[($3 + 424 | 0) >> 2] | 0;
  $174 = double_20Point3_____20emscripten__internal__getContext_double_20Point3_____28double_20Point3____20const__29($3 + 428 | 0 | 0) | 0;
  $175 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 444 | 0) >> 2] = HEAP32[($3 + 420 | 0) >> 2] | 0;
  _embind_register_class_property($166 | 0, $167 | 0, $168 | 0, $170 | 0, $171 | 0, $174 | 0, $175 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20double__28_29() | 0 | 0, HEAP32[($3 + 420 | 0) >> 2] | 0 | 0, double_20Point3_____20emscripten__internal__getContext_double_20Point3_____28double_20Point3____20const__29($3 + 428 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 464 | 0) >> 2] = $165;
  $182 = 1785;
  HEAP32[($3 + 460 | 0) >> 2] = $182;
  HEAP32[($3 + 456 | 0) >> 2] = $81;
  $183 = HEAP32[($3 + 464 | 0) >> 2] | 0;
  HEAP32[($3 + 452 | 0) >> 2] = $146;
  HEAP32[($3 + 448 | 0) >> 2] = $147;
  $184 = emscripten__internal__TypeID_Point3_2c_20void___get_28_29() | 0;
  $185 = HEAP32[($3 + 460 | 0) >> 2] | 0;
  $186 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 468 | 0) >> 2] = HEAP32[($3 + 452 | 0) >> 2] | 0;
  $188 = char_20const__20emscripten__internal__getGenericSignature_double_2c_20int_2c_20int__28_29() | 0;
  $189 = HEAP32[($3 + 452 | 0) >> 2] | 0;
  $192 = double_20Point3_____20emscripten__internal__getContext_double_20Point3_____28double_20Point3____20const__29($3 + 456 | 0 | 0) | 0;
  $193 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 472 | 0) >> 2] = HEAP32[($3 + 448 | 0) >> 2] | 0;
  _embind_register_class_property($184 | 0, $185 | 0, $186 | 0, $188 | 0, $189 | 0, $192 | 0, $193 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20double__28_29() | 0 | 0, HEAP32[($3 + 448 | 0) >> 2] | 0 | 0, double_20Point3_____20emscripten__internal__getContext_double_20Point3_____28double_20Point3____20const__29($3 + 456 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 492 | 0) >> 2] = $183;
  $200 = 1787;
  HEAP32[($3 + 488 | 0) >> 2] = $200;
  HEAP32[($3 + 484 | 0) >> 2] = 24;
  $202 = HEAP32[($3 + 492 | 0) >> 2] | 0;
  HEAP32[($3 + 480 | 0) >> 2] = 16;
  HEAP32[($3 + 476 | 0) >> 2] = 17;
  $205 = emscripten__internal__TypeID_Point3_2c_20void___get_28_29() | 0;
  $206 = HEAP32[($3 + 488 | 0) >> 2] | 0;
  $207 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 496 | 0) >> 2] = HEAP32[($3 + 480 | 0) >> 2] | 0;
  $209 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $210 = HEAP32[($3 + 480 | 0) >> 2] | 0;
  $213 = int_20Point3_____20emscripten__internal__getContext_int_20Point3_____28int_20Point3____20const__29($3 + 484 | 0 | 0) | 0;
  $214 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 500 | 0) >> 2] = HEAP32[($3 + 476 | 0) >> 2] | 0;
  _embind_register_class_property($205 | 0, $206 | 0, $207 | 0, $209 | 0, $210 | 0, $213 | 0, $214 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 476 | 0) >> 2] | 0 | 0, int_20Point3_____20emscripten__internal__getContext_int_20Point3_____28int_20Point3____20const__29($3 + 484 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 520 | 0) >> 2] = $202;
  $221 = 1795;
  HEAP32[($3 + 516 | 0) >> 2] = $221;
  HEAP32[($3 + 512 | 0) >> 2] = 28;
  HEAP32[($3 + 508 | 0) >> 2] = 18;
  HEAP32[($3 + 504 | 0) >> 2] = 19;
  $225 = emscripten__internal__TypeID_Point3_2c_20void___get_28_29() | 0;
  $226 = HEAP32[($3 + 516 | 0) >> 2] | 0;
  $227 = emscripten__internal__TypeID_bool_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 524 | 0) >> 2] = HEAP32[($3 + 508 | 0) >> 2] | 0;
  $229 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $230 = HEAP32[($3 + 508 | 0) >> 2] | 0;
  $233 = bool_20Point3_____20emscripten__internal__getContext_bool_20Point3_____28bool_20Point3____20const__29($3 + 512 | 0 | 0) | 0;
  $234 = emscripten__internal__TypeID_bool_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 528 | 0) >> 2] = HEAP32[($3 + 504 | 0) >> 2] | 0;
  _embind_register_class_property($225 | 0, $226 | 0, $227 | 0, $229 | 0, $230 | 0, $233 | 0, $234 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 504 | 0) >> 2] | 0 | 0, bool_20Point3_____20emscripten__internal__getContext_bool_20Point3_____28bool_20Point3____20const__29($3 + 512 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 552 | 0) >> 2] = $3 + 104 | 0;
  HEAP32[($3 + 548 | 0) >> 2] = 1801;
  void_20emscripten__internal__NoBaseClass__verify_GPoint3__28_29();
  HEAP32[($3 + 544 | 0) >> 2] = 20;
  HEAP32[($3 + 540 | 0) >> 2] = void_20_28_emscripten__internal__NoBaseClass__getUpcaster_GPoint3__28_29_29_28_29() | 0;
  HEAP32[($3 + 536 | 0) >> 2] = void_20_28_emscripten__internal__NoBaseClass__getDowncaster_GPoint3__28_29_29_28_29() | 0;
  HEAP32[($3 + 532 | 0) >> 2] = 21;
  $248 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $249 = emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_GPoint3__2c_20void___get_28_29() | 0;
  $250 = emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_GPoint3_20const__2c_20void___get_28_29() | 0;
  $251 = emscripten__internal__NoBaseClass__get_28_29() | 0;
  HEAP32[($3 + 556 | 0) >> 2] = HEAP32[($3 + 544 | 0) >> 2] | 0;
  $253 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int__28_29() | 0;
  $254 = HEAP32[($3 + 544 | 0) >> 2] | 0;
  HEAP32[($3 + 560 | 0) >> 2] = HEAP32[($3 + 540 | 0) >> 2] | 0;
  $256 = char_20const__20emscripten__internal__getGenericSignature_void__28_29() | 0;
  $257 = HEAP32[($3 + 540 | 0) >> 2] | 0;
  HEAP32[($3 + 564 | 0) >> 2] = HEAP32[($3 + 536 | 0) >> 2] | 0;
  $259 = char_20const__20emscripten__internal__getGenericSignature_void__28_29() | 0;
  $260 = HEAP32[($3 + 536 | 0) >> 2] | 0;
  $261 = HEAP32[($3 + 548 | 0) >> 2] | 0;
  HEAP32[($3 + 568 | 0) >> 2] = HEAP32[($3 + 532 | 0) >> 2] | 0;
  _embind_register_class($248 | 0, $249 | 0, $250 | 0, $251 | 0, $253 | 0, $254 | 0, $256 | 0, $257 | 0, $259 | 0, $260 | 0, $261 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 532 | 0) >> 2] | 0 | 0);
  HEAP32[($3 + 572 | 0) >> 2] = $3 + 104 | 0;
  HEAP32[($3 + 580 | 0) >> 2] = HEAP32[($3 + 572 | 0) >> 2] | 0;
  HEAP32[($3 + 576 | 0) >> 2] = 22;
  $269 = HEAP32[($3 + 580 | 0) >> 2] | 0;
  void_20emscripten__internal__RegisterClassConstructor_GPoint3__20_28__29_28double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int___29___invoke_GPoint3__28GPoint3__20_28__29_28double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int___29_29(HEAP32[($3 + 576 | 0) >> 2] | 0 | 0);
  HEAP32[($3 + 100 | 0) >> 2] = $41;
  HEAP32[($3 + 96 | 0) >> 2] = 23;
  i64toi32_i32$0 = HEAP32[($3 + 96 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 100 | 0) >> 2] | 0;
  $1187 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  HEAP32[($3 + 584 | 0) >> 2] = $1187;
  HEAP32[($3 + 588 | 0) >> 2] = i64toi32_i32$1;
  $273 = HEAP32[($3 + 584 | 0) >> 2] | 0;
  $274 = HEAP32[($3 + 588 | 0) >> 2] | 0;
  HEAP32[($3 + 624 | 0) >> 2] = $269;
  HEAP32[($3 + 620 | 0) >> 2] = $144;
  HEAP32[($3 + 612 | 0) >> 2] = $274;
  HEAP32[($3 + 608 | 0) >> 2] = $273;
  $275 = HEAP32[($3 + 624 | 0) >> 2] | 0;
  $276 = 24;
  HEAP32[($3 + 604 | 0) >> 2] = $276;
  $277 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $278 = HEAP32[($3 + 620 | 0) >> 2] | 0;
  $279 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 628 | 0) >> 2] = HEAP32[($3 + 604 | 0) >> 2] | 0;
  $281 = char_20const__20emscripten__internal__getGenericSignature_double_2c_20int_2c_20int__28_29() | 0;
  $282 = HEAP32[($3 + 604 | 0) >> 2] | 0;
  $283 = HEAP32[($3 + 608 | 0) >> 2] | 0;
  HEAP32[($3 + 596 | 0) >> 2] = HEAP32[($3 + 612 | 0) >> 2] | 0;
  HEAP32[($3 + 592 | 0) >> 2] = $283;
  i64toi32_i32$1 = HEAP32[($3 + 592 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 596 | 0) >> 2] | 0;
  $1226 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[($3 + 24 | 0) >> 2] = $1226;
  HEAP32[($3 + 28 | 0) >> 2] = i64toi32_i32$0;
  _embind_register_class_property($277 | 0, $278 | 0, $279 | 0, $281 | 0, $282 | 0, emscripten__internal__GetterPolicy_double_20_28GPoint3____29_28_29_20const___getContext_28double_20_28GPoint3____29_28_29_20const_29($3 + 24 | 0 | 0) | 0 | 0, $41 | 0, $41 | 0, $41 | 0, $41 | 0);
  HEAP32[($3 + 92 | 0) >> 2] = $41;
  HEAP32[($3 + 88 | 0) >> 2] = 25;
  i64toi32_i32$0 = HEAP32[($3 + 88 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 92 | 0) >> 2] | 0;
  $1249 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  HEAP32[($3 + 632 | 0) >> 2] = $1249;
  HEAP32[($3 + 636 | 0) >> 2] = i64toi32_i32$1;
  $291 = HEAP32[($3 + 632 | 0) >> 2] | 0;
  $292 = HEAP32[($3 + 636 | 0) >> 2] | 0;
  HEAP32[($3 + 672 | 0) >> 2] = $275;
  HEAP32[($3 + 668 | 0) >> 2] = $164;
  HEAP32[($3 + 660 | 0) >> 2] = $292;
  HEAP32[($3 + 656 | 0) >> 2] = $291;
  $293 = HEAP32[($3 + 672 | 0) >> 2] | 0;
  HEAP32[($3 + 652 | 0) >> 2] = $276;
  $294 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $295 = HEAP32[($3 + 668 | 0) >> 2] | 0;
  $296 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 676 | 0) >> 2] = HEAP32[($3 + 652 | 0) >> 2] | 0;
  $298 = char_20const__20emscripten__internal__getGenericSignature_double_2c_20int_2c_20int__28_29() | 0;
  $299 = HEAP32[($3 + 652 | 0) >> 2] | 0;
  $300 = HEAP32[($3 + 656 | 0) >> 2] | 0;
  HEAP32[($3 + 644 | 0) >> 2] = HEAP32[($3 + 660 | 0) >> 2] | 0;
  HEAP32[($3 + 640 | 0) >> 2] = $300;
  i64toi32_i32$1 = HEAP32[($3 + 640 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 644 | 0) >> 2] | 0;
  $1288 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[($3 + 16 | 0) >> 2] = $1288;
  HEAP32[($3 + 20 | 0) >> 2] = i64toi32_i32$0;
  _embind_register_class_property($294 | 0, $295 | 0, $296 | 0, $298 | 0, $299 | 0, emscripten__internal__GetterPolicy_double_20_28GPoint3____29_28_29_20const___getContext_28double_20_28GPoint3____29_28_29_20const_29($3 + 16 | 0 | 0) | 0 | 0, $41 | 0, $41 | 0, $41 | 0, $41 | 0);
  HEAP32[($3 + 84 | 0) >> 2] = $41;
  HEAP32[($3 + 80 | 0) >> 2] = 26;
  i64toi32_i32$0 = HEAP32[($3 + 80 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 84 | 0) >> 2] | 0;
  $1311 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  HEAP32[($3 + 680 | 0) >> 2] = $1311;
  HEAP32[($3 + 684 | 0) >> 2] = i64toi32_i32$1;
  $308 = HEAP32[($3 + 680 | 0) >> 2] | 0;
  $309 = HEAP32[($3 + 684 | 0) >> 2] | 0;
  HEAP32[($3 + 720 | 0) >> 2] = $293;
  HEAP32[($3 + 716 | 0) >> 2] = $182;
  HEAP32[($3 + 708 | 0) >> 2] = $309;
  HEAP32[($3 + 704 | 0) >> 2] = $308;
  $310 = HEAP32[($3 + 720 | 0) >> 2] | 0;
  HEAP32[($3 + 700 | 0) >> 2] = $276;
  $311 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $312 = HEAP32[($3 + 716 | 0) >> 2] | 0;
  $313 = emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 724 | 0) >> 2] = HEAP32[($3 + 700 | 0) >> 2] | 0;
  $315 = char_20const__20emscripten__internal__getGenericSignature_double_2c_20int_2c_20int__28_29() | 0;
  $316 = HEAP32[($3 + 700 | 0) >> 2] | 0;
  $317 = HEAP32[($3 + 704 | 0) >> 2] | 0;
  HEAP32[($3 + 692 | 0) >> 2] = HEAP32[($3 + 708 | 0) >> 2] | 0;
  HEAP32[($3 + 688 | 0) >> 2] = $317;
  i64toi32_i32$1 = HEAP32[($3 + 688 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 692 | 0) >> 2] | 0;
  $1350 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $1350;
  HEAP32[($3 + 12 | 0) >> 2] = i64toi32_i32$0;
  _embind_register_class_property($311 | 0, $312 | 0, $313 | 0, $315 | 0, $316 | 0, emscripten__internal__GetterPolicy_double_20_28GPoint3____29_28_29_20const___getContext_28double_20_28GPoint3____29_28_29_20const_29($3 + 8 | 0 | 0) | 0 | 0, $41 | 0, $41 | 0, $41 | 0, $41 | 0);
  HEAP32[($3 + 76 | 0) >> 2] = $41;
  HEAP32[($3 + 72 | 0) >> 2] = 27;
  i64toi32_i32$0 = HEAP32[($3 + 72 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 76 | 0) >> 2] | 0;
  $1373 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  HEAP32[($3 + 728 | 0) >> 2] = $1373;
  HEAP32[($3 + 732 | 0) >> 2] = i64toi32_i32$1;
  $325 = HEAP32[($3 + 728 | 0) >> 2] | 0;
  $326 = HEAP32[($3 + 732 | 0) >> 2] | 0;
  HEAP32[($3 + 768 | 0) >> 2] = $310;
  HEAP32[($3 + 764 | 0) >> 2] = $200;
  HEAP32[($3 + 756 | 0) >> 2] = $326;
  HEAP32[($3 + 752 | 0) >> 2] = $325;
  $327 = HEAP32[($3 + 768 | 0) >> 2] | 0;
  HEAP32[($3 + 748 | 0) >> 2] = 28;
  $329 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $330 = HEAP32[($3 + 764 | 0) >> 2] | 0;
  $331 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 772 | 0) >> 2] = HEAP32[($3 + 748 | 0) >> 2] | 0;
  $333 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $334 = HEAP32[($3 + 748 | 0) >> 2] | 0;
  $335 = HEAP32[($3 + 752 | 0) >> 2] | 0;
  HEAP32[($3 + 740 | 0) >> 2] = HEAP32[($3 + 756 | 0) >> 2] | 0;
  HEAP32[($3 + 736 | 0) >> 2] = $335;
  i64toi32_i32$1 = HEAP32[($3 + 736 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 740 | 0) >> 2] | 0;
  $1412 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[$3 >> 2] = $1412;
  HEAP32[($3 + 4 | 0) >> 2] = i64toi32_i32$0;
  _embind_register_class_property($329 | 0, $330 | 0, $331 | 0, $333 | 0, $334 | 0, emscripten__internal__GetterPolicy_int_20_28GPoint3____29_28_29_20const___getContext_28int_20_28GPoint3____29_28_29_20const_29($3 | 0) | 0 | 0, $41 | 0, $41 | 0, $41 | 0, $41 | 0);
  HEAP32[($3 + 68 | 0) >> 2] = $41;
  HEAP32[($3 + 64 | 0) >> 2] = 29;
  i64toi32_i32$0 = HEAP32[($3 + 64 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 68 | 0) >> 2] | 0;
  $1432 = i64toi32_i32$0;
  i64toi32_i32$0 = $3;
  HEAP32[($3 + 776 | 0) >> 2] = $1432;
  HEAP32[($3 + 780 | 0) >> 2] = i64toi32_i32$1;
  $341 = HEAP32[($3 + 776 | 0) >> 2] | 0;
  $342 = HEAP32[($3 + 780 | 0) >> 2] | 0;
  HEAP32[($3 + 812 | 0) >> 2] = $327;
  HEAP32[($3 + 808 | 0) >> 2] = $221;
  HEAP32[($3 + 804 | 0) >> 2] = $342;
  HEAP32[($3 + 800 | 0) >> 2] = $341;
  $343 = HEAP32[($3 + 812 | 0) >> 2] | 0;
  HEAP32[($3 + 796 | 0) >> 2] = 30;
  $345 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $346 = HEAP32[($3 + 808 | 0) >> 2] | 0;
  $347 = emscripten__internal__TypeID_bool_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 816 | 0) >> 2] = HEAP32[($3 + 796 | 0) >> 2] | 0;
  $349 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $350 = HEAP32[($3 + 796 | 0) >> 2] | 0;
  $351 = HEAP32[($3 + 800 | 0) >> 2] | 0;
  HEAP32[($3 + 788 | 0) >> 2] = HEAP32[($3 + 804 | 0) >> 2] | 0;
  HEAP32[($3 + 784 | 0) >> 2] = $351;
  i64toi32_i32$1 = HEAP32[($3 + 784 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 788 | 0) >> 2] | 0;
  $1471 = i64toi32_i32$1;
  i64toi32_i32$1 = $3;
  HEAP32[($3 + 56 | 0) >> 2] = $1471;
  HEAP32[($3 + 60 | 0) >> 2] = i64toi32_i32$0;
  $356 = emscripten__internal__GetterPolicy_bool_20_28GPoint3____29_28_29_20const___getContext_28bool_20_28GPoint3____29_28_29_20const_29($3 + 56 | 0 | 0) | 0;
  $357 = 0;
  _embind_register_class_property($345 | 0, $346 | 0, $347 | 0, $349 | 0, $350 | 0, $356 | 0, $357 | 0, $357 | 0, $357 | 0, $357 | 0);
  HEAP32[($3 + 836 | 0) >> 2] = $343;
  HEAP32[($3 + 832 | 0) >> 2] = 1698;
  HEAP32[($3 + 828 | 0) >> 2] = 32;
  $360 = HEAP32[($3 + 836 | 0) >> 2] | 0;
  HEAP32[($3 + 824 | 0) >> 2] = 31;
  HEAP32[($3 + 820 | 0) >> 2] = 32;
  $363 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $364 = HEAP32[($3 + 832 | 0) >> 2] | 0;
  $365 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 840 | 0) >> 2] = HEAP32[($3 + 824 | 0) >> 2] | 0;
  $367 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $368 = HEAP32[($3 + 824 | 0) >> 2] | 0;
  $372 = int_20GPoint3_____20emscripten__internal__getContext_int_20GPoint3_____28int_20GPoint3____20const__29($3 + 828 | 0 | 0) | 0;
  $373 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 844 | 0) >> 2] = HEAP32[($3 + 820 | 0) >> 2] | 0;
  _embind_register_class_property($363 | 0, $364 | 0, $365 | 0, $367 | 0, $368 | 0, $372 | 0, $373 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 820 | 0) >> 2] | 0 | 0, int_20GPoint3_____20emscripten__internal__getContext_int_20GPoint3_____28int_20GPoint3____20const__29($3 + 828 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 864 | 0) >> 2] = $360;
  HEAP32[($3 + 860 | 0) >> 2] = 1702;
  HEAP32[($3 + 856 | 0) >> 2] = 36;
  $383 = HEAP32[($3 + 864 | 0) >> 2] | 0;
  HEAP32[($3 + 852 | 0) >> 2] = 31;
  HEAP32[($3 + 848 | 0) >> 2] = 32;
  $386 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $387 = HEAP32[($3 + 860 | 0) >> 2] | 0;
  $388 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 868 | 0) >> 2] = HEAP32[($3 + 852 | 0) >> 2] | 0;
  $390 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $391 = HEAP32[($3 + 852 | 0) >> 2] | 0;
  $395 = int_20GPoint3_____20emscripten__internal__getContext_int_20GPoint3_____28int_20GPoint3____20const__29($3 + 856 | 0 | 0) | 0;
  $396 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 872 | 0) >> 2] = HEAP32[($3 + 848 | 0) >> 2] | 0;
  _embind_register_class_property($386 | 0, $387 | 0, $388 | 0, $390 | 0, $391 | 0, $395 | 0, $396 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 848 | 0) >> 2] | 0 | 0, int_20GPoint3_____20emscripten__internal__getContext_int_20GPoint3_____28int_20GPoint3____20const__29($3 + 856 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 892 | 0) >> 2] = $383;
  HEAP32[($3 + 888 | 0) >> 2] = 1706;
  HEAP32[($3 + 884 | 0) >> 2] = 40;
  $406 = HEAP32[($3 + 892 | 0) >> 2] | 0;
  HEAP32[($3 + 880 | 0) >> 2] = 31;
  HEAP32[($3 + 876 | 0) >> 2] = 32;
  $409 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $410 = HEAP32[($3 + 888 | 0) >> 2] | 0;
  $411 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 896 | 0) >> 2] = HEAP32[($3 + 880 | 0) >> 2] | 0;
  $413 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $414 = HEAP32[($3 + 880 | 0) >> 2] | 0;
  $418 = int_20GPoint3_____20emscripten__internal__getContext_int_20GPoint3_____28int_20GPoint3____20const__29($3 + 884 | 0 | 0) | 0;
  $419 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 900 | 0) >> 2] = HEAP32[($3 + 876 | 0) >> 2] | 0;
  _embind_register_class_property($409 | 0, $410 | 0, $411 | 0, $413 | 0, $414 | 0, $418 | 0, $419 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 876 | 0) >> 2] | 0 | 0, int_20GPoint3_____20emscripten__internal__getContext_int_20GPoint3_____28int_20GPoint3____20const__29($3 + 884 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 920 | 0) >> 2] = $406;
  HEAP32[($3 + 916 | 0) >> 2] = 1692;
  HEAP32[($3 + 912 | 0) >> 2] = 44;
  $429 = HEAP32[($3 + 920 | 0) >> 2] | 0;
  HEAP32[($3 + 908 | 0) >> 2] = 33;
  HEAP32[($3 + 904 | 0) >> 2] = 34;
  $432 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $433 = HEAP32[($3 + 916 | 0) >> 2] | 0;
  $434 = emscripten__internal__TypeID_ico__map_orientation_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 924 | 0) >> 2] = HEAP32[($3 + 908 | 0) >> 2] | 0;
  $436 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $437 = HEAP32[($3 + 908 | 0) >> 2] | 0;
  $441 = ico__map_orientation_20GPoint3_____20emscripten__internal__getContext_ico__map_orientation_20GPoint3_____28ico__map_orientation_20GPoint3____20const__29($3 + 912 | 0 | 0) | 0;
  $442 = emscripten__internal__TypeID_ico__map_orientation_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 928 | 0) >> 2] = HEAP32[($3 + 904 | 0) >> 2] | 0;
  _embind_register_class_property($432 | 0, $433 | 0, $434 | 0, $436 | 0, $437 | 0, $441 | 0, $442 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 904 | 0) >> 2] | 0 | 0, ico__map_orientation_20GPoint3_____20emscripten__internal__getContext_ico__map_orientation_20GPoint3_____28ico__map_orientation_20GPoint3____20const__29($3 + 912 | 0 | 0) | 0 | 0);
  HEAP32[($3 + 948 | 0) >> 2] = $429;
  HEAP32[($3 + 944 | 0) >> 2] = 1695;
  HEAP32[($3 + 940 | 0) >> 2] = 48;
  HEAP32[($3 + 936 | 0) >> 2] = 35;
  HEAP32[($3 + 932 | 0) >> 2] = 36;
  $454 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $455 = HEAP32[($3 + 944 | 0) >> 2] | 0;
  $456 = emscripten__internal__TypeID_ico__rotation_method_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 952 | 0) >> 2] = HEAP32[($3 + 936 | 0) >> 2] | 0;
  $458 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $459 = HEAP32[($3 + 936 | 0) >> 2] | 0;
  $463 = ico__rotation_method_20GPoint3_____20emscripten__internal__getContext_ico__rotation_method_20GPoint3_____28ico__rotation_method_20GPoint3____20const__29($3 + 940 | 0 | 0) | 0;
  $464 = emscripten__internal__TypeID_ico__rotation_method_2c_20void___get_28_29() | 0;
  HEAP32[($3 + 956 | 0) >> 2] = HEAP32[($3 + 932 | 0) >> 2] | 0;
  _embind_register_class_property($454 | 0, $455 | 0, $456 | 0, $458 | 0, $459 | 0, $463 | 0, $464 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 932 | 0) >> 2] | 0 | 0, ico__rotation_method_20GPoint3_____20emscripten__internal__getContext_ico__rotation_method_20GPoint3_____28ico__rotation_method_20GPoint3____20const__29($3 + 940 | 0 | 0) | 0 | 0);
  __stack_pointer = $3 + 960 | 0;
  return $4 | 0;
 }
 
 function void_20emscripten__function_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long__28char_20const__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20_28__29_28long_29_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0, $10 = 0, $14 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $1;
  HEAP32[($4 + 12 | 0) >> 2] = 37;
  $6 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  $10 = emscripten__internal__WithPolicies____ArgTypeList_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long___getCount_28_29_20const($4 + 16 | 0 | 0) | 0;
  $14 = emscripten__internal__WithPolicies____ArgTypeList_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long___getTypes_28_29_20const($4 + 16 | 0 | 0) | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 12 | 0) >> 2] | 0;
  _embind_register_function($6 | 0, $10 | 0, $14 | 0, char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 20 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20emscripten__internal__NoBaseClass__verify_Icosahedron__28_29() {
  return;
 }
 
 function void_20const__20emscripten__internal__getActualType_Icosahedron__28Icosahedron__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = void_20const__20emscripten__internal__getLightTypeID_Icosahedron__28Icosahedron_20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20_28_emscripten__internal__NoBaseClass__getUpcaster_Icosahedron__28_29_29_28_29() {
  return 0 | 0;
 }
 
 function void_20_28_emscripten__internal__NoBaseClass__getDowncaster_Icosahedron__28_29_29_28_29() {
  return 0 | 0;
 }
 
 function void_20emscripten__internal__raw_destructor_Icosahedron__28Icosahedron__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  label$1 : {
   if (($4 | 0) == (0 | 0) & 1 | 0) {
    break label$1
   }
   Icosahedron___Icosahedron_28_29($4 | 0) | 0;
   operator_20delete_28void__29($4 | 0);
  }
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_Icosahedron_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_Icosahedron___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_Icosahedron__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_Icosahedron____get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_Icosahedron_20const____get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__NoBaseClass__get_28_29() {
  return 0 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_int_2c_20int__28_29() {
  return 3328 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_void__28_29() {
  return 3331 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_void_2c_20int__28_29() {
  return 3333 | 0;
 }
 
 function Icosahedron__20emscripten__internal__operator_new_Icosahedron_2c_20ico__map_orientation_2c_20ico__rotation_method__28ico__map_orientation___2c_20ico__rotation_method___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $6 = operator_20new_28unsigned_20long_29(20 | 0) | 0;
  FUNCTION_TABLE[38 | 0]($6, HEAP32[(ico__map_orientation___20std____2__forward_ico__map_orientation__28std____2__remove_reference_ico__map_orientation___type__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0, HEAP32[(ico__rotation_method___20std____2__forward_ico__rotation_method__28std____2__remove_reference_ico__rotation_method___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $6 | 0;
 }
 
 function void_20emscripten__internal__RegisterClassConstructor_Icosahedron__20_28__29_28ico__map_orientation___2c_20ico__rotation_method___29___invoke_Icosahedron__28Icosahedron__20_28__29_28ico__map_orientation___2c_20ico__rotation_method___29_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $9 = 0, $13 = 0;
  $3 = __stack_pointer - 32 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 24 | 0) >> 2] = $0;
  HEAP32[($3 + 12 | 0) >> 2] = 39;
  $5 = emscripten__internal__TypeID_Icosahedron_2c_20void___get_28_29() | 0;
  $9 = emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Icosahedron__2c_20ico__map_orientation___2c_20ico__rotation_method_____getCount_28_29_20const($3 + 16 | 0 | 0) | 0;
  $13 = emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Icosahedron__2c_20ico__map_orientation___2c_20ico__rotation_method_____getTypes_28_29_20const($3 + 16 | 0 | 0) | 0;
  HEAP32[($3 + 28 | 0) >> 2] = HEAP32[($3 + 12 | 0) >> 2] | 0;
  _embind_register_class_constructor($5 | 0, $9 | 0, $13 | 0, char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, HEAP32[($3 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 32 | 0;
  return;
 }
 
 function Icosahedron__20emscripten__internal__operator_new_Icosahedron__28_29() {
  var $1 = 0, $2 = 0;
  $1 = operator_20new_28unsigned_20long_29(20 | 0) | 0;
  $2 = 0;
  FUNCTION_TABLE[38 | 0]($1, $2, $2) | 0;
  return $1 | 0;
 }
 
 function void_20emscripten__internal__RegisterClassConstructor_Icosahedron__20_28__29_28_29___invoke_Icosahedron__28Icosahedron__20_28__29_28_29_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $9 = 0, $13 = 0;
  $3 = __stack_pointer - 32 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 24 | 0) >> 2] = $0;
  HEAP32[($3 + 12 | 0) >> 2] = 40;
  $5 = emscripten__internal__TypeID_Icosahedron_2c_20void___get_28_29() | 0;
  $9 = emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Icosahedron____getCount_28_29_20const($3 + 16 | 0 | 0) | 0;
  $13 = emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Icosahedron____getTypes_28_29_20const($3 + 16 | 0 | 0) | 0;
  HEAP32[($3 + 28 | 0) >> 2] = HEAP32[($3 + 12 | 0) >> 2] | 0;
  _embind_register_class_constructor($5 | 0, $9 | 0, $13 | 0, char_20const__20emscripten__internal__getGenericSignature_int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, HEAP32[($3 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 32 | 0;
  return;
 }
 
 function void_20emscripten__internal__RegisterClassMethod_Point3_20_28Icosahedron____29_28double_2c_20double_29_20const___invoke_Icosahedron__28char_20const__2c_20Point3_20_28Icosahedron____29_28double_2c_20double_29_20const_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $13 = 0, $17 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  $5 = HEAP32[$1 >> 2] | 0;
  $6 = HEAP32[($1 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $6;
  HEAP32[($4 + 16 | 0) >> 2] = $5;
  HEAP32[($4 + 12 | 0) >> 2] = 41;
  $8 = emscripten__internal__TypeID_Icosahedron_2c_20void___get_28_29() | 0;
  $9 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  $13 = emscripten__internal__WithPolicies____ArgTypeList_Point3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20double_2c_20double___getCount_28_29_20const($4 + 8 | 0 | 0) | 0;
  $17 = emscripten__internal__WithPolicies____ArgTypeList_Point3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20double_2c_20double___getTypes_28_29_20const($4 + 8 | 0 | 0) | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 12 | 0) >> 2] | 0;
  _embind_register_class_function($8 | 0, $9 | 0, $13 | 0, $17 | 0, char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int_2c_20double_2c_20double__28_29() | 0 | 0, HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, Point3_20_28Icosahedron____emscripten__internal__getContext_Point3_20_28Icosahedron____29_28double_2c_20double_29_20const__28Point3_20_28Icosahedron____20const__29_28double_2c_20double_29_20const_29_29_28double_2c_20double_29_20const($4 + 16 | 0 | 0) | 0 | 0, 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20emscripten__internal__RegisterClassMethod_Icosahedron__hash_properties_20_28Icosahedron____29_28Point3_2c_20int_29___invoke_Icosahedron__28char_20const__2c_20Icosahedron__hash_properties_20_28Icosahedron____29_28Point3_2c_20int_29_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $13 = 0, $17 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  $5 = HEAP32[$1 >> 2] | 0;
  $6 = HEAP32[($1 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $6;
  HEAP32[($4 + 16 | 0) >> 2] = $5;
  HEAP32[($4 + 12 | 0) >> 2] = 42;
  $8 = emscripten__internal__TypeID_Icosahedron_2c_20void___get_28_29() | 0;
  $9 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  $13 = emscripten__internal__WithPolicies____ArgTypeList_Icosahedron__hash_properties_2c_20emscripten__internal__AllowedRawPointer_Icosahedron__2c_20Point3_2c_20int___getCount_28_29_20const($4 + 8 | 0 | 0) | 0;
  $17 = emscripten__internal__WithPolicies____ArgTypeList_Icosahedron__hash_properties_2c_20emscripten__internal__AllowedRawPointer_Icosahedron__2c_20Point3_2c_20int___getTypes_28_29_20const($4 + 8 | 0 | 0) | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 12 | 0) >> 2] | 0;
  _embind_register_class_function($8 | 0, $9 | 0, $13 | 0, $17 | 0, char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, Icosahedron__hash_properties_20_28Icosahedron____emscripten__internal__getContext_Icosahedron__hash_properties_20_28Icosahedron____29_28Point3_2c_20int_29__28Icosahedron__hash_properties_20_28Icosahedron____20const__29_28Point3_2c_20int_29_29_29_28Point3_2c_20int_29($4 + 16 | 0 | 0) | 0 | 0, 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20emscripten__internal__RegisterClassMethod_GPoint3_20_28Icosahedron____29_28Icosahedron__hash_properties_29_20const___invoke_Icosahedron__28char_20const__2c_20GPoint3_20_28Icosahedron____29_28Icosahedron__hash_properties_29_20const_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $13 = 0, $17 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  $5 = HEAP32[$1 >> 2] | 0;
  $6 = HEAP32[($1 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $6;
  HEAP32[($4 + 16 | 0) >> 2] = $5;
  HEAP32[($4 + 12 | 0) >> 2] = 43;
  $8 = emscripten__internal__TypeID_Icosahedron_2c_20void___get_28_29() | 0;
  $9 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  $13 = emscripten__internal__WithPolicies____ArgTypeList_GPoint3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20Icosahedron__hash_properties___getCount_28_29_20const($4 + 8 | 0 | 0) | 0;
  $17 = emscripten__internal__WithPolicies____ArgTypeList_GPoint3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20Icosahedron__hash_properties___getTypes_28_29_20const($4 + 8 | 0 | 0) | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 12 | 0) >> 2] | 0;
  _embind_register_class_function($8 | 0, $9 | 0, $13 | 0, $17 | 0, char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, GPoint3_20_28Icosahedron____emscripten__internal__getContext_GPoint3_20_28Icosahedron____29_28Icosahedron__hash_properties_29_20const__28GPoint3_20_28Icosahedron____20const__29_28Icosahedron__hash_properties_29_20const_29_29_28Icosahedron__hash_properties_29_20const($4 + 16 | 0 | 0) | 0 | 0, 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function emscripten__value_object_Icosahedron__hash_properties___value_object_28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0, $9 = 0, $11 = 0, $12 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 20 | 0) >> 2] = $0;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 20 | 0) >> 2] | 0;
  emscripten__internal__noncopyable__noncopyable_28_29($5 | 0) | 0;
  HEAP32[($4 + 12 | 0) >> 2] = 44;
  HEAP32[($4 + 8 | 0) >> 2] = 45;
  $8 = emscripten__internal__TypeID_Icosahedron__hash_properties_2c_20void___get_28_29() | 0;
  $9 = HEAP32[($4 + 16 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $11 = char_20const__20emscripten__internal__getGenericSignature_int__28_29() | 0;
  $12 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  _embind_register_value_object($8 | 0, $9 | 0, $11 | 0, $12 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int__28_29() | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function emscripten__value_object_Icosahedron__hash_properties___20emscripten__value_object_Icosahedron__hash_properties___field_Icosahedron__hash_properties_2c_20ico__map_orientation__28char_20const__2c_20ico__map_orientation_20Icosahedron__hash_properties____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = 46;
  HEAP32[($5 + 4 | 0) >> 2] = 47;
  $9 = emscripten__internal__TypeID_Icosahedron__hash_properties_2c_20void___get_28_29() | 0;
  $10 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  $11 = emscripten__internal__TypeID_ico__map_orientation_2c_20void___get_28_29() | 0;
  HEAP32[($5 + 24 | 0) >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $13 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $14 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $18 = ico__map_orientation_20Icosahedron__hash_properties_____20emscripten__internal__getContext_ico__map_orientation_20Icosahedron__hash_properties_____28ico__map_orientation_20Icosahedron__hash_properties____20const__29($5 + 12 | 0 | 0) | 0;
  $19 = emscripten__internal__TypeID_ico__map_orientation_2c_20void___get_28_29() | 0;
  HEAP32[($5 + 28 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  _embind_register_value_object_field($9 | 0, $10 | 0, $11 | 0, $13 | 0, $14 | 0, $18 | 0, $19 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0, ico__map_orientation_20Icosahedron__hash_properties_____20emscripten__internal__getContext_ico__map_orientation_20Icosahedron__hash_properties_____28ico__map_orientation_20Icosahedron__hash_properties____20const__29($5 + 12 | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function emscripten__value_object_Icosahedron__hash_properties___20emscripten__value_object_Icosahedron__hash_properties___field_Icosahedron__hash_properties_2c_20ico__rotation_method__28char_20const__2c_20ico__rotation_method_20Icosahedron__hash_properties____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = 48;
  HEAP32[($5 + 4 | 0) >> 2] = 49;
  $9 = emscripten__internal__TypeID_Icosahedron__hash_properties_2c_20void___get_28_29() | 0;
  $10 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  $11 = emscripten__internal__TypeID_ico__rotation_method_2c_20void___get_28_29() | 0;
  HEAP32[($5 + 24 | 0) >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $13 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $14 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $18 = ico__rotation_method_20Icosahedron__hash_properties_____20emscripten__internal__getContext_ico__rotation_method_20Icosahedron__hash_properties_____28ico__rotation_method_20Icosahedron__hash_properties____20const__29($5 + 12 | 0 | 0) | 0;
  $19 = emscripten__internal__TypeID_ico__rotation_method_2c_20void___get_28_29() | 0;
  HEAP32[($5 + 28 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  _embind_register_value_object_field($9 | 0, $10 | 0, $11 | 0, $13 | 0, $14 | 0, $18 | 0, $19 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0, ico__rotation_method_20Icosahedron__hash_properties_____20emscripten__internal__getContext_ico__rotation_method_20Icosahedron__hash_properties_____28ico__rotation_method_20Icosahedron__hash_properties____20const__29($5 + 12 | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function emscripten__value_object_Icosahedron__hash_properties___20emscripten__value_object_Icosahedron__hash_properties___field_Icosahedron__hash_properties_2c_20int__28char_20const__2c_20int_20Icosahedron__hash_properties____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = 50;
  HEAP32[($5 + 4 | 0) >> 2] = 51;
  $9 = emscripten__internal__TypeID_Icosahedron__hash_properties_2c_20void___get_28_29() | 0;
  $10 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  $11 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($5 + 24 | 0) >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $13 = char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() | 0;
  $14 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $18 = int_20Icosahedron__hash_properties_____20emscripten__internal__getContext_int_20Icosahedron__hash_properties_____28int_20Icosahedron__hash_properties____20const__29($5 + 12 | 0 | 0) | 0;
  $19 = emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0;
  HEAP32[($5 + 28 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  _embind_register_value_object_field($9 | 0, $10 | 0, $11 | 0, $13 | 0, $14 | 0, $18 | 0, $19 | 0, char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0, int_20Icosahedron__hash_properties_____20emscripten__internal__getContext_int_20Icosahedron__hash_properties_____28int_20Icosahedron__hash_properties____20const__29($5 + 12 | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function emscripten__value_object_Icosahedron__hash_properties____value_object_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  _embind_finalize_value_object(emscripten__internal__TypeID_Icosahedron__hash_properties_2c_20void___get_28_29() | 0 | 0);
  emscripten__internal__noncopyable___noncopyable_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function emscripten__enum__ico__map_orientation___enum__28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  _embind_register_enum(emscripten__internal__TypeID_ico__map_orientation_2c_20void___get_28_29() | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, 4 | 0, 0 & 1 | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function emscripten__enum__ico__map_orientation___value_28char_20const__2c_20ico__map_orientation_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  _embind_register_enum_value(emscripten__internal__TypeID_ico__map_orientation_2c_20void___get_28_29() | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function emscripten__enum__ico__rotation_method___enum__28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  _embind_register_enum(emscripten__internal__TypeID_ico__rotation_method_2c_20void___get_28_29() | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, 4 | 0, 0 & 1 | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function emscripten__enum__ico__rotation_method___value_28char_20const__2c_20ico__rotation_method_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  _embind_register_enum_value(emscripten__internal__TypeID_ico__rotation_method_2c_20void___get_28_29() | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function void_20emscripten__internal__NoBaseClass__verify_Point3__28_29() {
  return;
 }
 
 function void_20const__20emscripten__internal__getActualType_Point3__28Point3__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = void_20const__20emscripten__internal__getLightTypeID_Point3__28Point3_20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20_28_emscripten__internal__NoBaseClass__getUpcaster_Point3__28_29_29_28_29() {
  return 0 | 0;
 }
 
 function void_20_28_emscripten__internal__NoBaseClass__getDowncaster_Point3__28_29_29_28_29() {
  return 0 | 0;
 }
 
 function void_20emscripten__internal__raw_destructor_Point3__28Point3__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  label$1 : {
   if (($4 | 0) == (0 | 0) & 1 | 0) {
    break label$1
   }
   Point3___Point3_28_29($4 | 0) | 0;
   operator_20delete_28void__29($4 | 0);
  }
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_Point3_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_Point3___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_Point3__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_Point3____get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_Point3_20const__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_Point3_20const____get_28_29() | 0 | 0;
 }
 
 function Point3__20emscripten__internal__operator_new_Point3_2c_20double_2c_20double_2c_20double_2c_20bool_2c_20int__28double___2c_20double___2c_20double___2c_20bool___2c_20int___29($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $7 = 0, $9 = 0;
  $7 = __stack_pointer - 32 | 0;
  __stack_pointer = $7;
  HEAP32[($7 + 28 | 0) >> 2] = $0;
  HEAP32[($7 + 24 | 0) >> 2] = $1;
  HEAP32[($7 + 20 | 0) >> 2] = $2;
  HEAP32[($7 + 16 | 0) >> 2] = $3;
  HEAP32[($7 + 12 | 0) >> 2] = $4;
  $9 = operator_20new_28unsigned_20long_29(32 | 0) | 0;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($9 | 0, +(+HEAPF64[(double___20std____2__forward_double__28std____2__remove_reference_double___type__29(HEAP32[($7 + 28 | 0) >> 2] | 0 | 0) | 0) >> 3]), +(+HEAPF64[(double___20std____2__forward_double__28std____2__remove_reference_double___type__29(HEAP32[($7 + 24 | 0) >> 2] | 0 | 0) | 0) >> 3]), +(+HEAPF64[(double___20std____2__forward_double__28std____2__remove_reference_double___type__29(HEAP32[($7 + 20 | 0) >> 2] | 0 | 0) | 0) >> 3]), (HEAPU8[(bool___20std____2__forward_bool__28std____2__remove_reference_bool___type__29(HEAP32[($7 + 16 | 0) >> 2] | 0 | 0) | 0) >> 0] | 0) & 1 | 0 | 0, HEAP32[(int___20std____2__forward_int__28std____2__remove_reference_int___type__29(HEAP32[($7 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $7 + 32 | 0;
  return $9 | 0;
 }
 
 function void_20emscripten__internal__RegisterClassConstructor_Point3__20_28__29_28double___2c_20double___2c_20double___2c_20bool___2c_20int___29___invoke_Point3__28Point3__20_28__29_28double___2c_20double___2c_20double___2c_20bool___2c_20int___29_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $9 = 0, $13 = 0;
  $3 = __stack_pointer - 32 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 24 | 0) >> 2] = $0;
  HEAP32[($3 + 12 | 0) >> 2] = 52;
  $5 = emscripten__internal__TypeID_Point3_2c_20void___get_28_29() | 0;
  $9 = emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Point3__2c_20double___2c_20double___2c_20double___2c_20bool___2c_20int_____getCount_28_29_20const($3 + 16 | 0 | 0) | 0;
  $13 = emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Point3__2c_20double___2c_20double___2c_20double___2c_20bool___2c_20int_____getTypes_28_29_20const($3 + 16 | 0 | 0) | 0;
  HEAP32[($3 + 28 | 0) >> 2] = HEAP32[($3 + 12 | 0) >> 2] | 0;
  _embind_register_class_constructor($5 | 0, $9 | 0, $13 | 0, char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20double_2c_20double_2c_20double_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, HEAP32[($3 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 32 | 0;
  return;
 }
 
 function double_20emscripten__internal__MemberAccess_Point3_2c_20double___getWire_Point3__28double_20Point3____20const__2c_20Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0.0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $9 = +emscripten__internal__BindingType_double_2c_20void___toWireType_28double_20const__29((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return +$9;
 }
 
 function void_20emscripten__internal__MemberAccess_Point3_2c_20double___setWire_Point3__28double_20Point3____20const__2c_20Point3__2c_20double_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = +$2;
  var $5 = 0, $7 = 0.0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAPF64[$5 >> 3] = $2;
  $7 = +emscripten__internal__BindingType_double_2c_20void___fromWireType_28double_29(+(+HEAPF64[$5 >> 3]));
  HEAPF64[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 3] = $7;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_double_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_double___get_28_29() | 0 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_double_2c_20int_2c_20int__28_29() {
  return 3680 | 0;
 }
 
 function double_20Point3_____20emscripten__internal__getContext_double_20Point3_____28double_20Point3____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20double__28_29() {
  return 3684 | 0;
 }
 
 function int_20emscripten__internal__MemberAccess_Point3_2c_20int___getWire_Point3__28int_20Point3____20const__2c_20Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $9 = emscripten__internal__BindingType_int_2c_20void___toWireType_28int_20const__29((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $9 | 0;
 }
 
 function void_20emscripten__internal__MemberAccess_Point3_2c_20int___setWire_Point3__28int_20Point3____20const__2c_20Point3__2c_20int_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $7 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $7 = emscripten__internal__BindingType_int_2c_20void___fromWireType_28int_29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] = $7;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_int_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_int___get_28_29() | 0 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int__28_29() {
  return 3236 | 0;
 }
 
 function int_20Point3_____20emscripten__internal__getContext_int_20Point3_____28int_20Point3____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_void_2c_20int_2c_20int_2c_20int__28_29() {
  return 3578 | 0;
 }
 
 function bool_20emscripten__internal__MemberAccess_Point3_2c_20bool___getWire_Point3__28bool_20Point3____20const__2c_20Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $12 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $12 = emscripten__internal__BindingType_bool_2c_20void___toWireType_28bool_29((HEAPU8[((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 0] | 0) & 1 | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $12 & 1 | 0 | 0;
 }
 
 function void_20emscripten__internal__MemberAccess_Point3_2c_20bool___setWire_Point3__28bool_20Point3____20const__2c_20Point3__2c_20bool_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $10 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP8[($5 + 7 | 0) >> 0] = $2;
  $10 = emscripten__internal__BindingType_bool_2c_20void___fromWireType_28bool_29((HEAPU8[($5 + 7 | 0) >> 0] | 0) & 1 | 0 | 0) | 0;
  HEAP8[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 0] = $10 & 1 | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_bool_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_bool___get_28_29() | 0 | 0;
 }
 
 function bool_20Point3_____20emscripten__internal__getContext_bool_20Point3_____28bool_20Point3____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function void_20emscripten__internal__NoBaseClass__verify_GPoint3__28_29() {
  return;
 }
 
 function void_20const__20emscripten__internal__getActualType_GPoint3__28GPoint3__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = void_20const__20emscripten__internal__getLightTypeID_GPoint3__28GPoint3_20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20_28_emscripten__internal__NoBaseClass__getUpcaster_GPoint3__28_29_29_28_29() {
  return 0 | 0;
 }
 
 function void_20_28_emscripten__internal__NoBaseClass__getDowncaster_GPoint3__28_29_29_28_29() {
  return 0 | 0;
 }
 
 function void_20emscripten__internal__raw_destructor_GPoint3__28GPoint3__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  label$1 : {
   if (($4 | 0) == (0 | 0) & 1 | 0) {
    break label$1
   }
   GPoint3___GPoint3_28_29($4 | 0) | 0;
   operator_20delete_28void__29($4 | 0);
  }
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_GPoint3___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_GPoint3__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_GPoint3____get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__internal__AllowedRawPointer_GPoint3_20const__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_GPoint3_20const____get_28_29() | 0 | 0;
 }
 
 function GPoint3__20emscripten__internal__operator_new_GPoint3_2c_20double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int__28double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int___29($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  $7 = $7 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  var $12 = 0, $14 = 0;
  $12 = __stack_pointer - 48 | 0;
  __stack_pointer = $12;
  HEAP32[($12 + 44 | 0) >> 2] = $0;
  HEAP32[($12 + 40 | 0) >> 2] = $1;
  HEAP32[($12 + 36 | 0) >> 2] = $2;
  HEAP32[($12 + 32 | 0) >> 2] = $3;
  HEAP32[($12 + 28 | 0) >> 2] = $4;
  HEAP32[($12 + 24 | 0) >> 2] = $5;
  HEAP32[($12 + 20 | 0) >> 2] = $6;
  HEAP32[($12 + 16 | 0) >> 2] = $7;
  HEAP32[($12 + 12 | 0) >> 2] = $8;
  HEAP32[($12 + 8 | 0) >> 2] = $9;
  $14 = operator_20new_28unsigned_20long_29(56 | 0) | 0;
  GPoint3__GPoint3_28double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29($14 | 0, +(+HEAPF64[(double___20std____2__forward_double__28std____2__remove_reference_double___type__29(HEAP32[($12 + 44 | 0) >> 2] | 0 | 0) | 0) >> 3]), +(+HEAPF64[(double___20std____2__forward_double__28std____2__remove_reference_double___type__29(HEAP32[($12 + 40 | 0) >> 2] | 0 | 0) | 0) >> 3]), +(+HEAPF64[(double___20std____2__forward_double__28std____2__remove_reference_double___type__29(HEAP32[($12 + 36 | 0) >> 2] | 0 | 0) | 0) >> 3]), HEAP32[(int___20std____2__forward_int__28std____2__remove_reference_int___type__29(HEAP32[($12 + 32 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0 | 0, HEAP32[(int___20std____2__forward_int__28std____2__remove_reference_int___type__29(HEAP32[($12 + 28 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0 | 0, HEAP32[(int___20std____2__forward_int__28std____2__remove_reference_int___type__29(HEAP32[($12 + 24 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0 | 0, HEAP32[(ico__map_orientation___20std____2__forward_ico__map_orientation__28std____2__remove_reference_ico__map_orientation___type__29(HEAP32[($12 + 20 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0 | 0, HEAP32[(ico__rotation_method___20std____2__forward_ico__rotation_method__28std____2__remove_reference_ico__rotation_method___type__29(HEAP32[($12 + 16 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0 | 0, (HEAPU8[(bool___20std____2__forward_bool__28std____2__remove_reference_bool___type__29(HEAP32[($12 + 12 | 0) >> 2] | 0 | 0) | 0) >> 0] | 0) & 1 | 0 | 0, HEAP32[(int___20std____2__forward_int__28std____2__remove_reference_int___type__29(HEAP32[($12 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $12 + 48 | 0;
  return $14 | 0;
 }
 
 function void_20emscripten__internal__RegisterClassConstructor_GPoint3__20_28__29_28double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int___29___invoke_GPoint3__28GPoint3__20_28__29_28double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int___29_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $9 = 0, $13 = 0;
  $3 = __stack_pointer - 32 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 24 | 0) >> 2] = $0;
  HEAP32[($3 + 12 | 0) >> 2] = 53;
  $5 = emscripten__internal__TypeID_GPoint3_2c_20void___get_28_29() | 0;
  $9 = emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_GPoint3__2c_20double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int_____getCount_28_29_20const($3 + 16 | 0 | 0) | 0;
  $13 = emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_GPoint3__2c_20double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int_____getTypes_28_29_20const($3 + 16 | 0 | 0) | 0;
  HEAP32[($3 + 28 | 0) >> 2] = HEAP32[($3 + 12 | 0) >> 2] | 0;
  _embind_register_class_constructor($5 | 0, $9 | 0, $13 | 0, char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_2c_20int__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, HEAP32[($3 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 32 | 0;
  return;
 }
 
 function GPoint3__get_x_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return +(+HEAPF64[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 3]);
 }
 
 function double_20emscripten__internal__GetterPolicy_double_20_28GPoint3____29_28_29_20const___get_GPoint3__28double_20_28GPoint3____20const__29_28_29_20const_2c_20GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0, $7 = 0, $8 = 0, $11 = 0, $17 = 0, $21 = 0.0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $6 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = HEAP32[($6 + 4 | 0) >> 2] | 0;
  $8 = HEAP32[$6 >> 2] | 0;
  $11 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + ($7 >> 1 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!($7 & 1 | 0)) {
     break label$2
    }
    $17 = HEAP32[((HEAP32[$11 >> 2] | 0) + $8 | 0) >> 2] | 0;
    break label$1;
   }
   $17 = $8;
  }
  HEAPF64[$4 >> 3] = +FUNCTION_TABLE[$17 | 0]($11);
  $21 = +emscripten__internal__BindingType_double_2c_20void___toWireType_28double_20const__29($4 | 0);
  __stack_pointer = $4 + 16 | 0;
  return +$21;
 }
 
 function emscripten__internal__GetterPolicy_double_20_28GPoint3____29_28_29_20const___getContext_28double_20_28GPoint3____29_28_29_20const_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  $4 = HEAP32[$0 >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = HEAP32[($0 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $4;
  $9 = double_20_28GPoint3____emscripten__internal__getContext_double_20_28GPoint3____29_28_29_20const__28double_20_28GPoint3____20const__29_28_29_20const_29_29_28_29_20const($3 + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function GPoint3__get_y_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return +(+HEAPF64[((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0) >> 3]);
 }
 
 function GPoint3__get_z_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return +(+HEAPF64[((HEAP32[($3 + 12 | 0) >> 2] | 0) + 16 | 0) >> 3]);
 }
 
 function GPoint3__get_tri_num_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[((HEAP32[($3 + 12 | 0) >> 2] | 0) + 24 | 0) >> 2] | 0 | 0;
 }
 
 function int_20emscripten__internal__GetterPolicy_int_20_28GPoint3____29_28_29_20const___get_GPoint3__28int_20_28GPoint3____20const__29_28_29_20const_2c_20GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0, $7 = 0, $8 = 0, $11 = 0, $17 = 0, $23 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $6 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = HEAP32[($6 + 4 | 0) >> 2] | 0;
  $8 = HEAP32[$6 >> 2] | 0;
  $11 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + ($7 >> 1 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!($7 & 1 | 0)) {
     break label$2
    }
    $17 = HEAP32[((HEAP32[$11 >> 2] | 0) + $8 | 0) >> 2] | 0;
    break label$1;
   }
   $17 = $8;
  }
  HEAP32[($4 + 4 | 0) >> 2] = FUNCTION_TABLE[$17 | 0]($11) | 0;
  $23 = emscripten__internal__BindingType_int_2c_20void___toWireType_28int_20const__29($4 + 4 | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $23 | 0;
 }
 
 function emscripten__internal__GetterPolicy_int_20_28GPoint3____29_28_29_20const___getContext_28int_20_28GPoint3____29_28_29_20const_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  $4 = HEAP32[$0 >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = HEAP32[($0 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $4;
  $9 = int_20_28GPoint3____emscripten__internal__getContext_int_20_28GPoint3____29_28_29_20const__28int_20_28GPoint3____20const__29_28_29_20const_29_29_28_29_20const($3 + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function GPoint3__get_is_pc_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return (HEAPU8[((HEAP32[($3 + 12 | 0) >> 2] | 0) + 28 | 0) >> 0] | 0) & 1 | 0 | 0;
 }
 
 function bool_20emscripten__internal__GetterPolicy_bool_20_28GPoint3____29_28_29_20const___get_GPoint3__28bool_20_28GPoint3____20const__29_28_29_20const_2c_20GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0, $7 = 0, $8 = 0, $11 = 0, $17 = 0, $22 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $6 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = HEAP32[($6 + 4 | 0) >> 2] | 0;
  $8 = HEAP32[$6 >> 2] | 0;
  $11 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + ($7 >> 1 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!($7 & 1 | 0)) {
     break label$2
    }
    $17 = HEAP32[((HEAP32[$11 >> 2] | 0) + $8 | 0) >> 2] | 0;
    break label$1;
   }
   $17 = $8;
  }
  $22 = emscripten__internal__BindingType_bool_2c_20void___toWireType_28bool_29((FUNCTION_TABLE[$17 | 0]($11) | 0) & 1 | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $22 & 1 | 0 | 0;
 }
 
 function emscripten__internal__GetterPolicy_bool_20_28GPoint3____29_28_29_20const___getContext_28bool_20_28GPoint3____29_28_29_20const_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  $4 = HEAP32[$0 >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = HEAP32[($0 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $4;
  $9 = bool_20_28GPoint3____emscripten__internal__getContext_bool_20_28GPoint3____29_28_29_20const__28bool_20_28GPoint3____20const__29_28_29_20const_29_29_28_29_20const($3 + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function int_20emscripten__internal__MemberAccess_GPoint3_2c_20int___getWire_GPoint3__28int_20GPoint3____20const__2c_20GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $9 = emscripten__internal__BindingType_int_2c_20void___toWireType_28int_20const__29((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $9 | 0;
 }
 
 function void_20emscripten__internal__MemberAccess_GPoint3_2c_20int___setWire_GPoint3__28int_20GPoint3____20const__2c_20GPoint3__2c_20int_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $7 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $7 = emscripten__internal__BindingType_int_2c_20void___fromWireType_28int_29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] = $7;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function int_20GPoint3_____20emscripten__internal__getContext_int_20GPoint3_____28int_20GPoint3____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function ico__map_orientation_20emscripten__internal__MemberAccess_GPoint3_2c_20ico__map_orientation___getWire_GPoint3__28ico__map_orientation_20GPoint3____20const__2c_20GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $10 = emscripten__internal__EnumBindingType_ico__map_orientation___toWireType_28ico__map_orientation_29(HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $10 | 0;
 }
 
 function void_20emscripten__internal__MemberAccess_GPoint3_2c_20ico__map_orientation___setWire_GPoint3__28ico__map_orientation_20GPoint3____20const__2c_20GPoint3__2c_20ico__map_orientation_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $7 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $7 = emscripten__internal__EnumBindingType_ico__map_orientation___fromWireType_28ico__map_orientation_29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] = $7;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_ico__map_orientation_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_ico__map_orientation___get_28_29() | 0 | 0;
 }
 
 function ico__map_orientation_20GPoint3_____20emscripten__internal__getContext_ico__map_orientation_20GPoint3_____28ico__map_orientation_20GPoint3____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function ico__rotation_method_20emscripten__internal__MemberAccess_GPoint3_2c_20ico__rotation_method___getWire_GPoint3__28ico__rotation_method_20GPoint3____20const__2c_20GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $10 = emscripten__internal__EnumBindingType_ico__rotation_method___toWireType_28ico__rotation_method_29(HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $10 | 0;
 }
 
 function void_20emscripten__internal__MemberAccess_GPoint3_2c_20ico__rotation_method___setWire_GPoint3__28ico__rotation_method_20GPoint3____20const__2c_20GPoint3__2c_20ico__rotation_method_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $7 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $7 = emscripten__internal__EnumBindingType_ico__rotation_method___fromWireType_28ico__rotation_method_29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] = $7;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_ico__rotation_method_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_ico__rotation_method___get_28_29() | 0 | 0;
 }
 
 function ico__rotation_method_20GPoint3_____20emscripten__internal__getContext_ico__rotation_method_20GPoint3_____28ico__rotation_method_20GPoint3____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function emscripten__internal__Invoker_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long___invoke_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20_28__29_28long_29_2c_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $14 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  FUNCTION_TABLE[$5 | 0]($4 + 8 | 0, emscripten__internal__BindingType_long_2c_20void___fromWireType_28long_29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0);
  $14 = emscripten__internal__BindingType_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20void___toWireType_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($4 + 8 | 0 | 0) | 0;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____basic_string_28_29($4 + 8 | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $14 | 0;
 }
 
 function emscripten__internal__WithPolicies____ArgTypeList_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long___getCount_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 2 | 0;
 }
 
 function emscripten__internal__WithPolicies____ArgTypeList_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long___getTypes_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long__20___get_28_29() | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function emscripten__internal__noncopyable__noncopyable_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__hash_properties__20emscripten__internal__raw_constructor_Icosahedron__hash_properties__28_29() {
  var $1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $2 = 0;
  $1 = operator_20new_28unsigned_20long_29(20 | 0) | 0;
  i64toi32_i32$0 = 0;
  $2 = 0;
  i64toi32_i32$1 = $1;
  HEAP32[$1 >> 2] = $2;
  HEAP32[($1 + 4 | 0) >> 2] = i64toi32_i32$0;
  HEAP32[($1 + 16 | 0) >> 2] = 0;
  i64toi32_i32$1 = $1 + 8 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  return $1 | 0;
 }
 
 function void_20emscripten__internal__raw_destructor_Icosahedron__hash_properties__28Icosahedron__hash_properties__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  label$1 : {
   if (($4 | 0) == (0 | 0) & 1 | 0) {
    break label$1
   }
   operator_20delete_28void__29($4 | 0);
  }
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_Icosahedron__hash_properties_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_Icosahedron__hash_properties___get_28_29() | 0 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_int__28_29() {
  return 3576 | 0;
 }
 
 function ico__map_orientation_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20ico__map_orientation___getWire_Icosahedron__hash_properties__28ico__map_orientation_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $10 = emscripten__internal__EnumBindingType_ico__map_orientation___toWireType_28ico__map_orientation_29(HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $10 | 0;
 }
 
 function void_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20ico__map_orientation___setWire_Icosahedron__hash_properties__28ico__map_orientation_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties__2c_20ico__map_orientation_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $7 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $7 = emscripten__internal__EnumBindingType_ico__map_orientation___fromWireType_28ico__map_orientation_29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] = $7;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function ico__map_orientation_20Icosahedron__hash_properties_____20emscripten__internal__getContext_ico__map_orientation_20Icosahedron__hash_properties_____28ico__map_orientation_20Icosahedron__hash_properties____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function ico__rotation_method_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20ico__rotation_method___getWire_Icosahedron__hash_properties__28ico__rotation_method_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $10 = emscripten__internal__EnumBindingType_ico__rotation_method___toWireType_28ico__rotation_method_29(HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $10 | 0;
 }
 
 function void_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20ico__rotation_method___setWire_Icosahedron__hash_properties__28ico__rotation_method_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties__2c_20ico__rotation_method_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $7 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $7 = emscripten__internal__EnumBindingType_ico__rotation_method___fromWireType_28ico__rotation_method_29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] = $7;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function ico__rotation_method_20Icosahedron__hash_properties_____20emscripten__internal__getContext_ico__rotation_method_20Icosahedron__hash_properties_____28ico__rotation_method_20Icosahedron__hash_properties____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function int_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20int___getWire_Icosahedron__hash_properties__28int_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $9 = emscripten__internal__BindingType_int_2c_20void___toWireType_28int_20const__29((HEAP32[($4 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $9 | 0;
 }
 
 function void_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20int___setWire_Icosahedron__hash_properties__28int_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties__2c_20int_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $7 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $7 = emscripten__internal__BindingType_int_2c_20void___fromWireType_28int_29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0) | 0) >> 2] = $7;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function int_20Icosahedron__hash_properties_____20emscripten__internal__getContext_int_20Icosahedron__hash_properties_____28int_20Icosahedron__hash_properties____20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(4 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 | 0;
 }
 
 function emscripten__internal__noncopyable___noncopyable_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20___second_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Triangle__20___select_on_container_copy_construction_28std____2__allocator_Triangle__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 32 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 28 | 0) >> 2] = $0;
  std____2__allocator_traits_std____2__allocator_Triangle__20_____select_on_container_copy_construction_28std____2__integral_constant_bool_2c_20false__2c_20std____2__allocator_Triangle__20const__29(HEAP32[($3 + 28 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 32 | 0;
  return;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____vector_base_28std____2__allocator_Triangle____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($5 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  HEAP32[($5 + 4 | 0) >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20_____compressed_pair_std__nullptr_t_2c_20std____2__allocator_Triangle__20__28std__nullptr_t___2c_20std____2__allocator_Triangle____29($5 + 8 | 0 | 0, $4 + 4 | 0 | 0, std____2__remove_reference_std____2__allocator_Triangle_____type___20std____2__move_std____2__allocator_Triangle____28std____2__allocator_Triangle___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  return ((HEAP32[($4 + 4 | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (120 | 0) | 0 | 0;
 }
 
 function std____2__enable_if___is_cpp17_forward_iterator_Triangle____value_2c_20void___type_20std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____construct_at_end_Triangle___28Triangle__2c_20Triangle__2c_20unsigned_20long_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 28 | 0) >> 2] = $0;
  HEAP32[($6 + 24 | 0) >> 2] = $1;
  HEAP32[($6 + 20 | 0) >> 2] = $2;
  HEAP32[($6 + 16 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____ConstructTransaction___ConstructTransaction_28std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___2c_20unsigned_20long_29($6 | 0, $7 | 0, HEAP32[($6 + 16 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____construct_range_forward_Triangle__2c_20Triangle___28std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle__2c_20Triangle___29(std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 24 | 0) >> 2] | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0, $6 + 4 | 0 | 0);
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____ConstructTransaction____ConstructTransaction_28_29($6 | 0) | 0;
  __stack_pointer = $6 + 32 | 0;
  return;
 }
 
 function std____2__allocator_traits_std____2__allocator_Triangle__20_____select_on_container_copy_construction_28std____2__integral_constant_bool_2c_20false__2c_20std____2__allocator_Triangle__20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 4 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Triangle__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____vector_base_common_true_____vector_base_common_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_Triangle_____type___20std____2__move_std____2__allocator_Triangle____28std____2__allocator_Triangle___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20_____compressed_pair_std__nullptr_t_2c_20std____2__allocator_Triangle__20__28std__nullptr_t___2c_20std____2__allocator_Triangle____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Triangle__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_Triangle__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Triangle__2c_20void__28std____2__allocator_Triangle____29($6 | 0, std____2__allocator_Triangle____20std____2__forward_std____2__allocator_Triangle__20__28std____2__remove_reference_std____2__allocator_Triangle__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__allocator_traits_std____2__allocator_Triangle__20___max_size_28std____2__allocator_Triangle__20const__29(std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[($3 + 4 | 0) >> 2] = std____2__numeric_limits_long___max_28_29() | 0;
  $15 = HEAP32[(unsigned_20long_20const__20std____2__min_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($3 + 8 | 0 | 0, $3 + 4 | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20___second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Triangle__20___allocate_28std____2__allocator_Triangle___2c_20unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $8 = std____2__allocator_Triangle___allocate_28unsigned_20long_2c_20void_20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $8 | 0;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20___first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____annotate_new_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $5 = 0, $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($5 | 0, std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($5 | 0) | 0 | 0, (std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___capacity_28_29_20const($5 | 0) | 0, 120) | 0 | 0, (std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___capacity_28_29_20const($5 | 0) | 0, 120) | 0 | 0, (std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($5 | 0) | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 120) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____ConstructTransaction___ConstructTransaction_28std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0) + Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 120) | 0;
  return $6 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____construct_range_forward_Triangle__2c_20Triangle___28std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle__2c_20Triangle___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    void_20std____2__allocator_traits_std____2__allocator_Triangle__20___construct_Triangle_2c_20Triangle___28std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle__29(HEAP32[($6 + 12 | 0) >> 2] | 0 | 0, Triangle__20std____2____to_address_Triangle__28Triangle__29(HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($6 + 8 | 0) >> 2] | 0 | 0);
    HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[($6 + 8 | 0) >> 2] | 0) + 120 | 0;
    $22 = HEAP32[$6 >> 2] | 0;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 120 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20____ConstructTransaction____ConstructTransaction_28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[((HEAP32[$4 >> 2] | 0) + 4 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Triangle__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Triangle__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Triangle____20std____2__forward_std____2__allocator_Triangle__20__28std____2__remove_reference_std____2__allocator_Triangle__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Triangle__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Triangle__2c_20void__28std____2__allocator_Triangle____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_Triangle____20std____2__forward_std____2__allocator_Triangle__20__28std____2__remove_reference_std____2__allocator_Triangle__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Triangle__20___max_size_28std____2__allocator_Triangle__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__allocator_traits_std____2__allocator_Triangle__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Triangle__20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__numeric_limits_long___max_28_29() {
  return std____2____libcpp_numeric_limits_long_2c_20true___max_28_29() | 0 | 0;
 }
 
 function unsigned_20long_20const__20std____2__min_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $7 = unsigned_20long_20const__20std____2__min_unsigned_20long_2c_20std____2____less_unsigned_20long_2c_20unsigned_20long__20__28unsigned_20long_20const__2c_20unsigned_20long_20const__2c_20std____2____less_unsigned_20long_2c_20unsigned_20long__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__allocator_Triangle___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_Triangle___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29(Math_imul(HEAP32[($5 + 8 | 0) >> 2] | 0, 120) | 0, 8 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Triangle__2c_201_2c_20true_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Triangle__2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___data_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = Triangle__20std____2____to_address_Triangle__28Triangle__29(HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20___capacity_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $7 = 0;
  $7 = __stack_pointer - 32 | 0;
  HEAP32[($7 + 28 | 0) >> 2] = $0;
  HEAP32[($7 + 24 | 0) >> 2] = $1;
  HEAP32[($7 + 20 | 0) >> 2] = $2;
  HEAP32[($7 + 16 | 0) >> 2] = $3;
  HEAP32[($7 + 12 | 0) >> 2] = $4;
  return;
 }
 
 function unsigned_20long_20const__20std____2__min_unsigned_20long_2c_20std____2____less_unsigned_20long_2c_20unsigned_20long__20__28unsigned_20long_20const__2c_20unsigned_20long_20const__2c_20std____2____less_unsigned_20long_2c_20unsigned_20long__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $14 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  label$1 : {
   label$2 : {
    if (!((std____2____less_unsigned_20long_2c_20unsigned_20long___operator_28_29_28unsigned_20long_20const__2c_20unsigned_20long_20const__29_20const($4 + 8 | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
     break label$2
    }
    $14 = HEAP32[$4 >> 2] | 0;
    break label$1;
   }
   $14 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  }
  __stack_pointer = $4 + 16 | 0;
  return $14 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Triangle__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Triangle__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $5 = std____2__allocator_Triangle___max_size_28_29_20const(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____libcpp_numeric_limits_long_2c_20true___max_28_29() {
  return 2147483647 | 0;
 }
 
 function std____2____less_unsigned_20long_2c_20unsigned_20long___operator_28_29_28unsigned_20long_20const__2c_20unsigned_20long_20const__29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  return (HEAP32[(HEAP32[($5 + 8 | 0) >> 2] | 0) >> 2] | 0) >>> 0 < (HEAP32[(HEAP32[($5 + 4 | 0) >> 2] | 0) >> 2] | 0) >>> 0 & 1 | 0 | 0;
 }
 
 function std____2__allocator_Triangle___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 35791394 | 0;
 }
 
 function std____2____throw_length_error_28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = __cxa_allocate_exception(8 | 0) | 0;
  std__length_error__length_error_28char_20const__29($5 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __cxa_throw($5 | 0, 11528 | 0, 1 | 0);
  abort();
 }
 
 function std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $15 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  HEAP32[($4 + 4 | 0) >> 2] = $1;
  label$1 : {
   label$2 : {
    if (!((std____2____is_overaligned_for_new_28unsigned_20long_29(HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
     break label$2
    }
    HEAP32[$4 >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
    HEAP32[($4 + 12 | 0) >> 2] = operator_20new_28unsigned_20long_2c_20std__align_val_t_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
    break label$1;
   }
   HEAP32[($4 + 12 | 0) >> 2] = operator_20new_28unsigned_20long_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  }
  $15 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $15 | 0;
 }
 
 function std__length_error__length_error_28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std__logic_error__logic_error_28char_20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = 11488 + 8 | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____is_overaligned_for_new_28unsigned_20long_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return (HEAP32[($3 + 12 | 0) >> 2] | 0) >>> 0 > 16 >>> 0 & 1 | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Triangle__2c_201_2c_20true_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Triangle__2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Triangle__20std____2____to_address_Triangle__28Triangle__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (120 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20___first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Triangle__2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_Triangle__2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Triangle__20___construct_Triangle_2c_20Triangle___28std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____construct_Triangle_2c_20Triangle___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle__29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, Triangle__20std____2__forward_Triangle___28std____2__remove_reference_Triangle____type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function Triangle__20std____2__forward_Triangle___28std____2__remove_reference_Triangle____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____construct_Triangle_2c_20Triangle___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_Triangle___construct_Triangle_2c_20Triangle___28Triangle__2c_20Triangle__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, Triangle__20std____2__forward_Triangle___28std____2__remove_reference_Triangle____type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_Triangle___construct_Triangle_2c_20Triangle___28Triangle__2c_20Triangle__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  memcpy(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Triangle__20std____2__forward_Triangle___28std____2__remove_reference_Triangle____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, 120 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____wrap_iter_Triangle_20const____base_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_GPoint3____base_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____default_init_tag___20std____2__forward_std____2____default_init_tag__28std____2__remove_reference_std____2____default_init_tag___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20___second_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____vector_base_28std____2__allocator_GPoint3____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($5 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  HEAP32[($5 + 4 | 0) >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20_____compressed_pair_std__nullptr_t_2c_20std____2__allocator_GPoint3__20__28std__nullptr_t___2c_20std____2__allocator_GPoint3____29($5 + 8 | 0 | 0, $4 + 4 | 0 | 0, std____2__remove_reference_std____2__allocator_GPoint3_____type___20std____2__move_std____2__allocator_GPoint3____28std____2__allocator_GPoint3___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_GPoint3__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_GPoint3_____type___20std____2__move_std____2__allocator_GPoint3____28std____2__allocator_GPoint3___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20_____compressed_pair_std__nullptr_t_2c_20std____2__allocator_GPoint3__20__28std__nullptr_t___2c_20std____2__allocator_GPoint3____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_GPoint3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_GPoint3__2c_20void__28std____2__allocator_GPoint3____29($6 | 0, std____2__allocator_GPoint3____20std____2__forward_std____2__allocator_GPoint3__20__28std____2__remove_reference_std____2__allocator_GPoint3__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__allocator_traits_std____2__allocator_GPoint3__20___max_size_28std____2__allocator_GPoint3__20const__29(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[($3 + 4 | 0) >> 2] = std____2__numeric_limits_long___max_28_29() | 0;
  $15 = HEAP32[(unsigned_20long_20const__20std____2__min_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($3 + 8 | 0 | 0, $3 + 4 | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20___second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_GPoint3__20___allocate_28std____2__allocator_GPoint3___2c_20unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $8 = std____2__allocator_GPoint3___allocate_28unsigned_20long_2c_20void_20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $8 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____annotate_new_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $5 = 0, $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($5 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($5 | 0) | 0 | 0, (std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const($5 | 0) | 0, 56) | 0 | 0, (std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const($5 | 0) | 0, 56) | 0 | 0, (std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($5 | 0) | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 56) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____ConstructTransaction___ConstructTransaction_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0) + Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 56) | 0;
  return $6 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____ConstructTransaction____ConstructTransaction_28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[((HEAP32[$4 >> 2] | 0) + 4 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_GPoint3__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_GPoint3____20std____2__forward_std____2__allocator_GPoint3__20__28std____2__remove_reference_std____2__allocator_GPoint3__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_GPoint3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_GPoint3__2c_20void__28std____2__allocator_GPoint3____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_GPoint3____20std____2__forward_std____2__allocator_GPoint3__20__28std____2__remove_reference_std____2__allocator_GPoint3__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_GPoint3__20___max_size_28std____2__allocator_GPoint3__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__allocator_traits_std____2__allocator_GPoint3__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_GPoint3__20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_GPoint3___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_GPoint3___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29(Math_imul(HEAP32[($5 + 8 | 0) >> 2] | 0, 56) | 0, 8 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_GPoint3__2c_201_2c_20true_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___data_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = GPoint3__20std____2____to_address_GPoint3__28GPoint3__29(HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $7 = 0;
  $7 = __stack_pointer - 32 | 0;
  HEAP32[($7 + 28 | 0) >> 2] = $0;
  HEAP32[($7 + 24 | 0) >> 2] = $1;
  HEAP32[($7 + 20 | 0) >> 2] = $2;
  HEAP32[($7 + 16 | 0) >> 2] = $3;
  HEAP32[($7 + 12 | 0) >> 2] = $4;
  return;
 }
 
 function std____2__allocator_traits_std____2__allocator_GPoint3__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_GPoint3__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $5 = std____2__allocator_GPoint3___max_size_28_29_20const(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_GPoint3___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 76695844 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_GPoint3__2c_201_2c_20true_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function GPoint3__20std____2____to_address_GPoint3__28GPoint3__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (56 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20___first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20___clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____destruct_at_end_28Triangle__29($4 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2__allocator_traits_std____2__allocator_Triangle__20___deallocate_28std____2__allocator_Triangle___2c_20Triangle__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_Triangle___deallocate_28Triangle__2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____destruct_at_end_28Triangle__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $17 = 0, $14 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = std____2____vector_base_Triangle_2c_20std____2__allocator_Triangle__20_____alloc_28_29($5 | 0) | 0;
    $17 = (HEAP32[($4 + 4 | 0) >> 2] | 0) + -120 | 0;
    HEAP32[($4 + 4 | 0) >> 2] = $17;
    void_20std____2__allocator_traits_std____2__allocator_Triangle__20___destroy_Triangle__28std____2__allocator_Triangle___2c_20Triangle__29($14 | 0, Triangle__20std____2____to_address_Triangle__28Triangle__29($17 | 0) | 0 | 0);
    continue label$2;
   };
  }
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_Triangle___deallocate_28Triangle__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 120) | 0, 8 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Triangle__20___destroy_Triangle__28std____2__allocator_Triangle___2c_20Triangle__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____destroy_Triangle__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Triangle___2c_20Triangle__29(HEAP32[($4 + 28 | 0) >> 2] | 0 | 0, HEAP32[($4 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____destroy_Triangle__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Triangle___2c_20Triangle__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2__allocator_Triangle___destroy_28Triangle__29(HEAP32[($4 + 4 | 0) >> 2] | 0 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_Triangle___destroy_28Triangle__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  Triangle___Triangle_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2___DeallocateCaller____do_deallocate_handle_size_align_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2___DeallocateCaller____do_deallocate_handle_size_align_28void__2c_20unsigned_20long_2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   label$2 : {
    if (!((std____2____is_overaligned_for_new_28unsigned_20long_29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
     break label$2
    }
    HEAP32[$5 >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
    std____2___DeallocateCaller____do_deallocate_handle_size_28void__2c_20unsigned_20long_2c_20std__align_val_t_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0);
    break label$1;
   }
   std____2___DeallocateCaller____do_deallocate_handle_size_28void__2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2___DeallocateCaller____do_deallocate_handle_size_28void__2c_20unsigned_20long_2c_20std__align_val_t_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  void_20std____2___DeallocateCaller____do_call_std__align_val_t__28void__2c_20std__align_val_t_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2___DeallocateCaller____do_deallocate_handle_size_28void__2c_20unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2___DeallocateCaller____do_call_28void__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function void_20std____2___DeallocateCaller____do_call_std__align_val_t__28void__2c_20std__align_val_t_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  operator_20delete_28void__2c_20std__align_val_t_29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2___DeallocateCaller____do_call_28void__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  operator_20delete_28void__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_200_2c_20false_____compressed_pair_elem_28std____2____default_init_tag_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  return HEAP32[($3 + 4 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_char__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  std____2__allocator_char___allocator_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_char___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Triangle__2c_20std____2__allocator_Triangle__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Triangle__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____default_init_tag___20std____2__forward_std____2____default_init_tag__28std____2__remove_reference_std____2____default_init_tag___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_Triangle__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($6 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____construct_range_forward_Triangle_20const__2c_20Triangle___28std____2__allocator_Triangle___2c_20Triangle_20const__2c_20Triangle_20const__2c_20Triangle___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    void_20std____2__allocator_traits_std____2__allocator_Triangle__20___construct_Triangle_2c_20Triangle_20const___28std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle_20const__29(HEAP32[($6 + 12 | 0) >> 2] | 0 | 0, Triangle__20std____2____to_address_Triangle__28Triangle__29(HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($6 + 8 | 0) >> 2] | 0 | 0);
    HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[($6 + 8 | 0) >> 2] | 0) + 120 | 0;
    $22 = HEAP32[$6 >> 2] | 0;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 120 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Triangle__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  std____2__allocator_Triangle___allocator_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_Triangle___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Triangle__20___construct_Triangle_2c_20Triangle_20const___28std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____construct_Triangle_2c_20Triangle_20const___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle_20const__29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, Triangle_20const__20std____2__forward_Triangle_20const___28std____2__remove_reference_Triangle_20const____type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function Triangle_20const__20std____2__forward_Triangle_20const___28std____2__remove_reference_Triangle_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Triangle__20_____construct_Triangle_2c_20Triangle_20const___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Triangle___2c_20Triangle__2c_20Triangle_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_Triangle___construct_Triangle_2c_20Triangle_20const___28Triangle__2c_20Triangle_20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, Triangle_20const__20std____2__forward_Triangle_20const___28std____2__remove_reference_Triangle_20const____type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_Triangle___construct_Triangle_2c_20Triangle_20const___28Triangle__2c_20Triangle_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  memcpy(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Triangle_20const__20std____2__forward_Triangle_20const___28std____2__remove_reference_Triangle_20const____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, 120 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2__remove_reference_std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20_____type___20std____2__move_std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20____28std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____zero_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($3 + 4 | 0) >> 2] = 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($3 + 4 | 0) >> 2] | 0) >>> 0 < 3 >>> 0 & 1 | 0)) {
     break label$1
    }
    HEAP32[((HEAP32[($3 + 8 | 0) >> 2] | 0) + ((HEAP32[($3 + 4 | 0) >> 2] | 0) << 2 | 0) | 0) >> 2] = 0;
    HEAP32[($3 + 4 | 0) >> 2] = (HEAP32[($3 + 4 | 0) >> 2] | 0) + 1 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___20std____2____to_address_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29(HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $7 = 0;
  $7 = __stack_pointer - 32 | 0;
  HEAP32[($7 + 28 | 0) >> 2] = $0;
  HEAP32[($7 + 24 | 0) >> 2] = $1;
  HEAP32[($7 + 20 | 0) >> 2] = $2;
  HEAP32[($7 + 16 | 0) >> 2] = $3;
  HEAP32[($7 + 12 | 0) >> 2] = $4;
  return;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____destruct_at_end_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($4 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (12 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___deallocate_28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___deallocate_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___20std____2____to_address_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____destruct_at_end_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $17 = 0, $14 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29($5 | 0) | 0;
    $17 = (HEAP32[($4 + 4 | 0) >> 2] | 0) + -12 | 0;
    HEAP32[($4 + 4 | 0) >> 2] = $17;
    void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___destroy_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($14 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___20std____2____to_address_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($17 | 0) | 0 | 0);
    continue label$2;
   };
  }
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___deallocate_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 12) | 0, 4 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__2c_201_2c_20true_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___destroy_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____destroy_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29(HEAP32[($4 + 28 | 0) >> 2] | 0 | 0, HEAP32[($4 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____destroy_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___destroy_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29(HEAP32[($4 + 4 | 0) >> 2] | 0 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___destroy_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____vector_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__2c_201_2c_20true_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2____to_address_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $7 = 0;
  $7 = __stack_pointer - 32 | 0;
  HEAP32[($7 + 28 | 0) >> 2] = $0;
  HEAP32[($7 + 24 | 0) >> 2] = $1;
  HEAP32[($7 + 20 | 0) >> 2] = $2;
  HEAP32[($7 + 16 | 0) >> 2] = $3;
  HEAP32[($7 + 12 | 0) >> 2] = $4;
  return;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____destruct_at_end_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($4 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (12 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___deallocate_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___deallocate_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2____to_address_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____destruct_at_end_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $17 = 0, $14 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29($5 | 0) | 0;
    $17 = (HEAP32[($4 + 4 | 0) >> 2] | 0) + -12 | 0;
    HEAP32[($4 + 4 | 0) >> 2] = $17;
    void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___destroy_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($14 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2____to_address_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($17 | 0) | 0 | 0);
    continue label$2;
   };
  }
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___deallocate_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 12) | 0, 4 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_201_2c_20true_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___destroy_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____destroy_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($4 + 28 | 0) >> 2] | 0 | 0, HEAP32[($4 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____destroy_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___destroy_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($4 + 4 | 0) >> 2] | 0 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___destroy_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_delete_28_29_20const($4 | 0);
  std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20______vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_delete_28_29_20const($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($4 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($4 | 0) | 0 | 0, (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($4 | 0) | 0) + ((std____2__vector_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const($4 | 0) | 0) << 5 | 0) | 0 | 0, (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($4 | 0) | 0) + ((std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const($4 | 0) | 0) << 5 | 0) | 0 | 0, (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($4 | 0) | 0) + ((std____2__vector_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const($4 | 0) | 0) << 5 | 0) | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20______vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20___clear_28_29($4 | 0);
   std____2__allocator_traits_std____2__allocator_Point3__20___deallocate_28std____2__allocator_Point3___2c_20Point3__2c_20unsigned_20long_29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = Point3__20std____2____to_address_Point3__28Point3__29(HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $7 = 0;
  $7 = __stack_pointer - 32 | 0;
  HEAP32[($7 + 28 | 0) >> 2] = $0;
  HEAP32[($7 + 24 | 0) >> 2] = $1;
  HEAP32[($7 + 20 | 0) >> 2] = $2;
  HEAP32[($7 + 16 | 0) >> 2] = $3;
  HEAP32[($7 + 12 | 0) >> 2] = $4;
  return;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20___clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____destruct_at_end_28Point3__29($4 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20___second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) >> 5 | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Point3__20___deallocate_28std____2__allocator_Point3___2c_20Point3__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_Point3___deallocate_28Point3__2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function Point3__20std____2____to_address_Point3__28Point3__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20___first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____destruct_at_end_28Point3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $17 = 0, $14 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($5 | 0) | 0;
    $17 = (HEAP32[($4 + 4 | 0) >> 2] | 0) + -32 | 0;
    HEAP32[($4 + 4 | 0) >> 2] = $17;
    void_20std____2__allocator_traits_std____2__allocator_Point3__20___destroy_Point3__28std____2__allocator_Point3___2c_20Point3__29($14 | 0, Point3__20std____2____to_address_Point3__28Point3__29($17 | 0) | 0 | 0);
    continue label$2;
   };
  }
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_Point3___deallocate_28Point3__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, (HEAP32[($5 + 4 | 0) >> 2] | 0) << 5 | 0 | 0, 8 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Point3__2c_201_2c_20true_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20___destroy_Point3__28std____2__allocator_Point3___2c_20Point3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  void_20std____2__allocator_traits_std____2__allocator_Point3__20_____destroy_Point3__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3___2c_20Point3__29(HEAP32[($4 + 28 | 0) >> 2] | 0 | 0, HEAP32[($4 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20_____destroy_Point3__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3___2c_20Point3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2__allocator_Point3___destroy_28Point3__29(HEAP32[($4 + 4 | 0) >> 2] | 0 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_Point3___destroy_28Point3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  Point3___Point3_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__2c_201_2c_20true_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_201_2c_20true_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____select_on_container_copy_construction_28std____2__integral_constant_bool_2c_20false__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 4 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____type___20std____2__move_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____compressed_pair_std__nullptr_t_2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20__28std__nullptr_t___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_20void__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____29($6 | 0, std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____20std____2__forward_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20__28std____2__remove_reference_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___max_size_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20const__29(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[($3 + 4 | 0) >> 2] = std____2__numeric_limits_long___max_28_29() | 0;
  $15 = HEAP32[(unsigned_20long_20const__20std____2__min_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($3 + 8 | 0 | 0, $3 + 4 | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___allocate_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $8 = std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___allocate_28unsigned_20long_2c_20void_20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $8 | 0;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_new_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $5 = 0, $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($5 | 0, std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($5 | 0) | 0 | 0, (std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const($5 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const($5 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 12) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____ConstructTransaction___ConstructTransaction_28std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0) + Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 12) | 0;
  return $6 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_range_forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($6 + 12 | 0) >> 2] | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2____to_address_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($6 + 8 | 0) >> 2] | 0 | 0);
    HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[($6 + 8 | 0) >> 2] | 0) + 12 | 0;
    $22 = HEAP32[$6 >> 2] | 0;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 12 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____ConstructTransaction____ConstructTransaction_28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[((HEAP32[$4 >> 2] | 0) + 4 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____20std____2__forward_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20__28std____2__remove_reference_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_20void__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____20std____2__forward_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20__28std____2__remove_reference_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___max_size_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29(Math_imul(HEAP32[($5 + 8 | 0) >> 2] | 0, 12) | 0, 4 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $5 = std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___max_size_28_29_20const(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 357913941 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $26 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = $5;
  std____2__allocator_traits_std____2__allocator_Point3__20___select_on_container_copy_construction_28std____2__allocator_Point3__20const__29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29_20const(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____vector_base_28std____2__allocator_Point3____29($5 | 0, $4 + 16 | 0 | 0) | 0;
  HEAP32[($4 + 4 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0) >>> 0 > 0 >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____vallocate_28unsigned_20long_29($5 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
   std____2__enable_if___is_cpp17_forward_iterator_Point3____value_2c_20void___type_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____construct_at_end_Point3___28Point3__2c_20Point3__2c_20unsigned_20long_29($5 | 0, HEAP32[(HEAP32[($4 + 20 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  $26 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $26 | 0;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20___second_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Point3__20___select_on_container_copy_construction_28std____2__allocator_Point3__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 32 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 28 | 0) >> 2] = $0;
  std____2__allocator_traits_std____2__allocator_Point3__20_____select_on_container_copy_construction_28std____2__integral_constant_bool_2c_20false__2c_20std____2__allocator_Point3__20const__29(HEAP32[($3 + 28 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 32 | 0;
  return;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____vector_base_28std____2__allocator_Point3____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($5 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  HEAP32[($5 + 4 | 0) >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20_____compressed_pair_std__nullptr_t_2c_20std____2__allocator_Point3__20__28std__nullptr_t___2c_20std____2__allocator_Point3____29($5 + 8 | 0 | 0, $4 + 4 | 0 | 0, std____2__remove_reference_std____2__allocator_Point3_____type___20std____2__move_std____2__allocator_Point3____28std____2__allocator_Point3___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____vallocate_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $15 = 0, $20 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  label$1 : {
   if (!((HEAP32[($4 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___max_size_28_29_20const($5 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_common_true_____throw_length_error_28_29_20const($5 | 0);
   abort();
  }
  $15 = std____2__allocator_traits_std____2__allocator_Point3__20___allocate_28std____2__allocator_Point3___2c_20unsigned_20long_29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 4 | 0) >> 2] = $15;
  HEAP32[$5 >> 2] = $15;
  $20 = (HEAP32[$5 >> 2] | 0) + ((HEAP32[($4 + 8 | 0) >> 2] | 0) << 5 | 0) | 0;
  HEAP32[(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29($5 | 0) | 0) >> 2] = $20;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_new_28unsigned_20long_29_20const($5 | 0, 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__enable_if___is_cpp17_forward_iterator_Point3____value_2c_20void___type_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____construct_at_end_Point3___28Point3__2c_20Point3__2c_20unsigned_20long_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 28 | 0) >> 2] = $0;
  HEAP32[($6 + 24 | 0) >> 2] = $1;
  HEAP32[($6 + 20 | 0) >> 2] = $2;
  HEAP32[($6 + 16 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____ConstructTransaction___ConstructTransaction_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29($6 | 0, $7 | 0, HEAP32[($6 + 16 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_range_forward_Point3__2c_20Point3___28std____2__allocator_Point3___2c_20Point3__2c_20Point3__2c_20Point3___29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 24 | 0) >> 2] | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0, $6 + 4 | 0 | 0);
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____ConstructTransaction____ConstructTransaction_28_29($6 | 0) | 0;
  __stack_pointer = $6 + 32 | 0;
  return;
 }
 
 function std____2__allocator_traits_std____2__allocator_Point3__20_____select_on_container_copy_construction_28std____2__integral_constant_bool_2c_20false__2c_20std____2__allocator_Point3__20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 4 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Point3__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_Point3_____type___20std____2__move_std____2__allocator_Point3____28std____2__allocator_Point3___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20_____compressed_pair_std__nullptr_t_2c_20std____2__allocator_Point3__20__28std__nullptr_t___2c_20std____2__allocator_Point3____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__2c_20void__28std____2__allocator_Point3____29($6 | 0, std____2__allocator_Point3____20std____2__forward_std____2__allocator_Point3__20__28std____2__remove_reference_std____2__allocator_Point3__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__allocator_traits_std____2__allocator_Point3__20___max_size_28std____2__allocator_Point3__20const__29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[($3 + 4 | 0) >> 2] = std____2__numeric_limits_long___max_28_29() | 0;
  $15 = HEAP32[(unsigned_20long_20const__20std____2__min_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($3 + 8 | 0 | 0, $3 + 4 | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Point3__20___allocate_28std____2__allocator_Point3___2c_20unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $8 = std____2__allocator_Point3___allocate_28unsigned_20long_2c_20void_20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $8 | 0;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20___first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_new_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $5 = 0, $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($5 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($5 | 0) | 0 | 0, (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($5 | 0) | 0) + ((std____2__vector_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const($5 | 0) | 0) << 5 | 0) | 0 | 0, (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($5 | 0) | 0) + ((std____2__vector_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const($5 | 0) | 0) << 5 | 0) | 0 | 0, (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___data_28_29_20const($5 | 0) | 0) + ((HEAP32[($4 + 8 | 0) >> 2] | 0) << 5 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20____ConstructTransaction___ConstructTransaction_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0) + ((HEAP32[($5 + 4 | 0) >> 2] | 0) << 5 | 0) | 0;
  return $6 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_range_forward_Point3__2c_20Point3___28std____2__allocator_Point3___2c_20Point3__2c_20Point3__2c_20Point3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    void_20std____2__allocator_traits_std____2__allocator_Point3__20___construct_Point3_2c_20Point3___28std____2__allocator_Point3___2c_20Point3__2c_20Point3__29(HEAP32[($6 + 12 | 0) >> 2] | 0 | 0, Point3__20std____2____to_address_Point3__28Point3__29(HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($6 + 8 | 0) >> 2] | 0 | 0);
    HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[($6 + 8 | 0) >> 2] | 0) + 32 | 0;
    $22 = HEAP32[$6 >> 2] | 0;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 32 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20____ConstructTransaction____ConstructTransaction_28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[((HEAP32[$4 >> 2] | 0) + 4 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Point3____20std____2__forward_std____2__allocator_Point3__20__28std____2__remove_reference_std____2__allocator_Point3__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__2c_20void__28std____2__allocator_Point3____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_Point3____20std____2__forward_std____2__allocator_Point3__20__28std____2__remove_reference_std____2__allocator_Point3__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Point3__20___max_size_28std____2__allocator_Point3__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__allocator_traits_std____2__allocator_Point3__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3__20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Point3___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_Point3___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29((HEAP32[($5 + 8 | 0) >> 2] | 0) << 5 | 0 | 0, 8 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_Point3__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $5 = std____2__allocator_Point3___max_size_28_29_20const(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Point3___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 134217727 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20___construct_Point3_2c_20Point3___28std____2__allocator_Point3___2c_20Point3__2c_20Point3__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_Point3_2c_20Point3___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3___2c_20Point3__2c_20Point3__29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, Point3__20std____2__forward_Point3___28std____2__remove_reference_Point3____type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function Point3__20std____2__forward_Point3___28std____2__remove_reference_Point3____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_Point3_2c_20Point3___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3___2c_20Point3__2c_20Point3__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_Point3___construct_Point3_2c_20Point3___28Point3__2c_20Point3__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, Point3__20std____2__forward_Point3___28std____2__remove_reference_Point3____type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_Point3___construct_Point3_2c_20Point3___28Point3__2c_20Point3__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0, $8 = 0, $10 = 0, $14 = 0, $18 = 0, $44 = 0, $54 = 0, $64 = 0, $74 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $8 = Point3__20std____2__forward_Point3___28std____2__remove_reference_Point3____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = $8;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $44 = i64toi32_i32$0;
  i64toi32_i32$0 = $6;
  HEAP32[i64toi32_i32$0 >> 2] = $44;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $10 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $10 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $54 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $10 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $54;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $14 = 16;
  i64toi32_i32$2 = $8 + $14 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $64 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $14 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $64;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $18 = 8;
  i64toi32_i32$2 = $8 + $18 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $18 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $74;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____default_init_tag___20std____2__forward_std____2____default_init_tag__28std____2__remove_reference_std____2____default_init_tag___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($6 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___allocator_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____default_init_tag___20std____2__forward_std____2____default_init_tag__28std____2__remove_reference_std____2____default_init_tag___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_GPoint3__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($6 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_GPoint3__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  std____2__allocator_GPoint3___allocator_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_GPoint3___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20___clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____destruct_at_end_28GPoint3__29($4 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2__allocator_traits_std____2__allocator_GPoint3__20___deallocate_28std____2__allocator_GPoint3___2c_20GPoint3__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_GPoint3___deallocate_28GPoint3__2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____destruct_at_end_28GPoint3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $17 = 0, $14 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29($5 | 0) | 0;
    $17 = (HEAP32[($4 + 4 | 0) >> 2] | 0) + -56 | 0;
    HEAP32[($4 + 4 | 0) >> 2] = $17;
    void_20std____2__allocator_traits_std____2__allocator_GPoint3__20___destroy_GPoint3__28std____2__allocator_GPoint3___2c_20GPoint3__29($14 | 0, GPoint3__20std____2____to_address_GPoint3__28GPoint3__29($17 | 0) | 0 | 0);
    continue label$2;
   };
  }
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_GPoint3___deallocate_28GPoint3__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 56) | 0, 8 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_GPoint3__20___destroy_GPoint3__28std____2__allocator_GPoint3___2c_20GPoint3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  void_20std____2__allocator_traits_std____2__allocator_GPoint3__20_____destroy_GPoint3__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_GPoint3___2c_20GPoint3__29(HEAP32[($4 + 28 | 0) >> 2] | 0 | 0, HEAP32[($4 + 24 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_GPoint3__20_____destroy_GPoint3__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_GPoint3___2c_20GPoint3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2__allocator_GPoint3___destroy_28GPoint3__29(HEAP32[($4 + 4 | 0) >> 2] | 0 | 0, HEAP32[$4 >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__allocator_GPoint3___destroy_28GPoint3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  GPoint3___GPoint3_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____ConstructTransaction___ConstructTransaction_28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[((HEAP32[($5 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0) + Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 12) | 0;
  return $6 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20std____2__forward_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___construct_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____construct_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20std____2__forward_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____ConstructTransaction____ConstructTransaction_28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[((HEAP32[$4 >> 2] | 0) + 4 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____recommend_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $36 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___max_size_28_29_20const($5 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($4 + 20 | 0) >> 2] | 0) >>> 0 > (HEAP32[($4 + 16 | 0) >> 2] | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_common_true_____throw_length_error_28_29_20const($5 | 0);
   abort();
  }
  HEAP32[($4 + 12 | 0) >> 2] = std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($5 | 0) | 0;
  label$2 : {
   label$3 : {
    if (!((HEAP32[($4 + 12 | 0) >> 2] | 0) >>> 0 >= ((HEAP32[($4 + 16 | 0) >> 2] | 0) >>> 1 | 0) >>> 0 & 1 | 0)) {
     break label$3
    }
    HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 16 | 0) >> 2] | 0;
    break label$2;
   }
   HEAP32[($4 + 8 | 0) >> 2] = (HEAP32[($4 + 12 | 0) >> 2] | 0) << 1 | 0;
   HEAP32[($4 + 28 | 0) >> 2] = HEAP32[(unsigned_20long_20const__20std____2__max_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($4 + 8 | 0 | 0, $4 + 20 | 0 | 0) | 0) >> 2] | 0;
  }
  $36 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $36 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______split_buffer_28unsigned_20long_2c_20unsigned_20long_2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0, $19 = 0, $26 = 0, $31 = 0, $33 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 24 | 0) >> 2] = $0;
  HEAP32[($6 + 20 | 0) >> 2] = $1;
  HEAP32[($6 + 16 | 0) >> 2] = $2;
  HEAP32[($6 + 12 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 24 | 0) >> 2] | 0;
  HEAP32[($6 + 28 | 0) >> 2] = $7;
  HEAP32[($6 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______compressed_pair_std__nullptr_t_2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20____28std__nullptr_t___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___29($7 + 12 | 0 | 0, $6 + 8 | 0 | 0, HEAP32[($6 + 12 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!(HEAP32[($6 + 20 | 0) >> 2] | 0)) {
     break label$2
    }
    $19 = std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___allocate_28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20unsigned_20long_29(std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0) | 0;
    break label$1;
   }
   $19 = 0;
  }
  HEAP32[$7 >> 2] = $19;
  $26 = (HEAP32[$7 >> 2] | 0) + Math_imul(HEAP32[($6 + 16 | 0) >> 2] | 0, 12) | 0;
  HEAP32[($7 + 8 | 0) >> 2] = $26;
  HEAP32[($7 + 4 | 0) >> 2] = $26;
  $31 = (HEAP32[$7 >> 2] | 0) + Math_imul(HEAP32[($6 + 20 | 0) >> 2] | 0, 12) | 0;
  HEAP32[(std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______end_cap_28_29($7 | 0) | 0) >> 2] = $31;
  $33 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  __stack_pointer = $6 + 32 | 0;
  return $33 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____swap_out_circular_buffer_28std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_delete_28_29_20const($5 | 0);
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____construct_backward_with_exception_guarantees_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29($5 | 0) | 0 | 0, HEAP32[$5 >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  std____2__enable_if__28is_move_constructible_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____value_29_20___20_28is_move_assignable_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____value_29_2c_20void___type_20std____2__swap_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($5 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  std____2__enable_if__28is_move_constructible_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____value_29_20___20_28is_move_assignable_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____value_29_2c_20void___type_20std____2__swap_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($5 + 4 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0 | 0);
  std____2__enable_if__28is_move_constructible_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____value_29_20___20_28is_move_assignable_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____value_29_2c_20void___type_20std____2__swap_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29($5 | 0) | 0 | 0, std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______end_cap_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_new_28unsigned_20long_29_20const($5 | 0, std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___size_28_29_20const($5 | 0) | 0 | 0);
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____invalidate_all_iterators_28_29($5 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20________split_buffer_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____clear_28_29($4 | 0);
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___deallocate_28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20unsigned_20long_29(std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____construct_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___construct_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20std____2__forward_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___construct_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___vector_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20std____2__forward_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___vector_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $15 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____vector_base_28std____2__allocator_GPoint3____29($5 | 0, std____2__remove_reference_std____2__allocator_GPoint3_____type___20std____2__move_std____2__allocator_GPoint3____28std____2__allocator_GPoint3___29(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  $15 = HEAP32[(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____end_cap_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____end_cap_28_29($5 | 0) | 0) >> 2] = $15;
  HEAP32[(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____end_cap_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] = 0;
  HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] = 0;
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___max_size_28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20const__29(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[($3 + 4 | 0) >> 2] = std____2__numeric_limits_long___max_28_29() | 0;
  $15 = HEAP32[(unsigned_20long_20const__20std____2__min_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($3 + 8 | 0 | 0, $3 + 4 | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function unsigned_20long_20const__20std____2__max_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $7 = unsigned_20long_20const__20std____2__max_unsigned_20long_2c_20std____2____less_unsigned_20long_2c_20unsigned_20long__20__28unsigned_20long_20const__2c_20unsigned_20long_20const__2c_20std____2____less_unsigned_20long_2c_20unsigned_20long__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______compressed_pair_std__nullptr_t_2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20____28std__nullptr_t___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_201_2c_20false_____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20void__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___29($6 + 4 | 0 | 0, std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___20std____2__forward_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20____28std____2__remove_reference_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___allocate_28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $8 = std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___allocate_28unsigned_20long_2c_20void_20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $8 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____construct_backward_with_exception_guarantees_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0, $24 = 0, $14 = 0, $19 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = HEAP32[($6 + 12 | 0) >> 2] | 0;
    $19 = std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___20std____2____to_address_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29((HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0) + -12 | 0 | 0) | 0;
    $22 = (HEAP32[($6 + 4 | 0) >> 2] | 0) + -12 | 0;
    HEAP32[($6 + 4 | 0) >> 2] = $22;
    void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___construct_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($14 | 0, $19 | 0, std____2__conditional__28__28is_nothrow_move_constructible_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___value_29_29_20___20_28is_copy_constructible_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___value_29_2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20const__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20______type_20std____2__move_if_noexcept_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($22 | 0) | 0 | 0);
    $24 = HEAP32[$6 >> 2] | 0;
    HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -12 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__enable_if__28is_move_constructible_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____value_29_20___20_28is_move_assignable_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____value_29_2c_20void___type_20std____2__swap_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0, $16 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20______type___20std____2__move_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  $10 = HEAP32[(std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20______type___20std____2__move_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] = $10;
  $16 = HEAP32[(std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20______type___20std____2__move_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($4 + 4 | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = $16;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_new_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $5 = 0, $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($5 | 0, std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($5 | 0) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($5 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($5 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 12) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____invalidate_all_iterators_28_29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______destruct_at_end_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($4 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (12 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___max_size_28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function unsigned_20long_20const__20std____2__max_unsigned_20long_2c_20std____2____less_unsigned_20long_2c_20unsigned_20long__20__28unsigned_20long_20const__2c_20unsigned_20long_20const__2c_20std____2____less_unsigned_20long_2c_20unsigned_20long__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $14 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  label$1 : {
   label$2 : {
    if (!((std____2____less_unsigned_20long_2c_20unsigned_20long___operator_28_29_28unsigned_20long_20const__2c_20unsigned_20long_20const__29_20const($4 + 8 | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0) & 1 | 0)) {
     break label$2
    }
    $14 = HEAP32[$4 >> 2] | 0;
    break label$1;
   }
   $14 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  }
  __stack_pointer = $4 + 16 | 0;
  return $14 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $5 = std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___max_size_28_29_20const(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 357913941 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___20std____2__forward_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20____28std____2__remove_reference_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_201_2c_20false_____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20void__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___20std____2__forward_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20____28std____2__remove_reference_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29(Math_imul(HEAP32[($5 + 8 | 0) >> 2] | 0, 12) | 0, 4 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2__conditional__28__28is_nothrow_move_constructible_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___value_29_29_20___20_28is_copy_constructible_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___value_29_2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20const__2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20______type_20std____2__move_if_noexcept_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____type___20std____2__move_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20______type___20std____2__move_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______destruct_at_end_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______destruct_at_end_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__integral_constant_bool_2c_20false__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______destruct_at_end_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__integral_constant_bool_2c_20false__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $16 = 0, $13 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[$4 >> 2] | 0 | 0) != (HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $13 = std____2____split_buffer_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_______alloc_28_29($5 | 0) | 0;
    $16 = (HEAP32[($5 + 8 | 0) >> 2] | 0) + -12 | 0;
    HEAP32[($5 + 8 | 0) >> 2] = $16;
    void_20std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___destroy_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($13 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___20std____2____to_address_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($16 | 0) | 0 | 0);
    continue label$2;
   };
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $21 = 0, $51 = 0;
  $5 = __stack_pointer - 64 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 56 | 0) >> 2] = $0;
  HEAP32[($5 + 52 | 0) >> 2] = $1;
  HEAP32[($5 + 48 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 56 | 0) >> 2] | 0;
  HEAP32[($5 + 60 | 0) >> 2] = $6;
  HEAP32[($6 + 16 | 0) >> 2] = 0;
  label$1 : {
   if (!((bool_20std____2____function____not_null_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29(HEAP32[($5 + 52 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($5 + 40 | 0 | 0, HEAP32[($5 + 48 | 0) >> 2] | 0 | 0) | 0;
   $21 = std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($5 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($5 + 16 | 0 | 0, $5 + 40 | 0 | 0, 1 | 0) | 0;
   std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($5 + 24 | 0 | 0, $21 | 0, $5 + 16 | 0 | 0) | 0;
   std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29(std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($5 + 24 | 0 | 0) | 0 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29(HEAP32[($5 + 52 | 0) >> 2] | 0 | 0) | 0 | 0, $5 + 8 | 0 | 0) | 0;
   HEAP32[($6 + 16 | 0) >> 2] = std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($5 + 24 | 0 | 0) | 0;
   std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($5 + 24 | 0 | 0) | 0;
  }
  $51 = HEAP32[($5 + 60 | 0) >> 2] | 0;
  __stack_pointer = $5 + 64 | 0;
  return $51 | 0;
 }
 
 function bool_20std____2____function____not_null_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 1 & 1 | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29(Math_imul(HEAP32[($5 + 8 | 0) >> 2] | 0, 44) | 0, 4 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 1880 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($6 + 4 | 0 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 97612893 | 0;
 }
 
 function std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____29($6 | 0, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 + 4 | 0 | 0, std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = 2184 + 8 | 0;
  return $4 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29(std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29(std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[(std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, i64toi32_i32$1 = 0, $29 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $29 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $29;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return i64toi32_i32$0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20false_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($3 + 8 | 0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20false_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($3 + 8 | 0 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = 1880 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______alloc_func_28_29($4 + 4 | 0 | 0) | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______alloc_func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20______compressed_pair_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29_1($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29($4 | 0) | 0;
  operator_20delete_28void__29($4 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $16 = 0, $33 = 0, $36 = 0, $49 = 0;
  $3 = __stack_pointer - 48 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 44 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 44 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($3 + 40 | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  $16 = std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($3 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
  std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($3 + 16 | 0 | 0, $3 + 40 | 0 | 0, 1 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($3 + 24 | 0 | 0, $16 | 0, $3 + 16 | 0 | 0) | 0;
  $33 = std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($3 + 24 | 0 | 0) | 0;
  $36 = std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($4 + 4 | 0 | 0) | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20const__29($3 + 8 | 0 | 0, $3 + 40 | 0 | 0) | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($33 | 0, $36 | 0, $3 + 8 | 0 | 0) | 0;
  $49 = std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($3 + 24 | 0 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($3 + 24 | 0 | 0) | 0;
  __stack_pointer = $3 + 48 | 0;
  return $49 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___second_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 1880 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($5 + 4 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 1880 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20______compressed_pair_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_deallocate_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($3 + 8 | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($4 + 4 | 0 | 0);
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($3 + 8 | 0 | 0, $4 | 0, 1 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 44) | 0, 4 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20std____2____invoke_void_return_wrapper_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_____call_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29($0 | 0, std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___first_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_28std__type_info_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $12 = 0, $24 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  HEAP32[($4 + 4 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = 2280;
  $12 = HEAP32[((HEAP32[($4 + 16 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $12;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 28 | 0) >> 2] | 0 | 0) == (HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$2
    }
    HEAP32[($4 + 12 | 0) >> 2] = std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0;
    break label$1;
   }
   HEAP32[($4 + 12 | 0) >> 2] = 0;
  }
  $24 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $24 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_type_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 2280 | 0;
 }
 
 function std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______base_28_29_1($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  abort();
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20false_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20false_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0________tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__$_0_28$_0___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____29($4 + 16 | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0________tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__$_0_28$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $19 = 0, $41 = 0, $14 = 0, $64 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $41 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $41;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  Icosahedron__Icosahedron_28Icosahedron___29(i64toi32_i32$0 + 8 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  $14 = i64toi32_i32$0 + 28 | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 28 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $64 = i64toi32_i32$1;
  i64toi32_i32$1 = $14;
  HEAP32[i64toi32_i32$1 >> 2] = $64;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $19 = 8;
  HEAP32[(i64toi32_i32$1 + $19 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $19 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__Icosahedron_28Icosahedron___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, $5 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $42 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20___vector_28std____2__vector_Triangle_2c_20std____2__allocator_Triangle__20__20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 12 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $42 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + 12 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $42;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20______compressed_pair_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false______compressed_pair_elem_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false______compressed_pair_elem_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___$_0_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____29(std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____tuple_true_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29($3 + 8 | 0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____tuple_true_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__$_0_28$_0_20const__29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__$_0_28$_0_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $19 = 0, $41 = 0, $14 = 0, $64 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $41 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $41;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  Icosahedron__Icosahedron_28Icosahedron_20const__29(i64toi32_i32$0 + 8 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0 | 0) | 0;
  $14 = i64toi32_i32$0 + 28 | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 28 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $64 = i64toi32_i32$1;
  i64toi32_i32$1 = $14;
  HEAP32[i64toi32_i32$1 >> 2] = $64;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $19 = 8;
  HEAP32[(i64toi32_i32$1 + $19 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $19 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_traits_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29(HEAP32[$5 >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____tuple_true_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($3 + 8 | 0 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____tuple_true_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const______tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const______tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const___28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20std____2____invoke_void_return_wrapper_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_____call_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  decltype_28std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28fp_29_28_29_29_20std____2____invoke_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29($0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function decltype_28std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28fp_29_28_29_29_20std____2____invoke_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__operator_28_29_28_29_20const($0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__operator_28_29_28_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $87 = 0, $84 = 0, $7 = 0, $23 = 0, $89 = 0, $93 = 0, $97 = 0, $14 = 0, $16 = 0, $329 = 0, $339 = 0, $349 = 0, $359 = 0;
  $4 = __stack_pointer - 144 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 140 | 0) >> 2] = $0;
  HEAP32[($4 + 136 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 136 | 0) >> 2] | 0;
  $7 = $5 + 8 | 0;
  HEAP8[($4 + 135 | 0) >> 0] = 0 & 1 | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___vector_28_29($0 | 0) | 0;
  HEAP32[($4 + 128 | 0) >> 2] = HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0;
  HEAP32[($4 + 124 | 0) >> 2] = 0;
  label$1 : while (1) {
   $14 = HEAP32[($4 + 124 | 0) >> 2] | 0;
   $16 = std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const(HEAP32[($5 + 32 | 0) >> 2] | 0 | 0) | 0;
   $23 = 0;
   label$2 : {
    if (!($14 >>> 0 < $16 >>> 0 & 1 | 0)) {
     break label$2
    }
    $23 = (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 32 | 0) >> 2] | 0 | 0, 0 | 0) | 0 | 0) | 0) >>> 0 > 0 >>> 0;
   }
   label$3 : {
    if (!($23 & 1 | 0)) {
     break label$3
    }
    HEAP32[($4 + 120 | 0) >> 2] = (HEAP32[($4 + 128 | 0) >> 2] | 0) + (HEAP32[($4 + 124 | 0) >> 2] | 0) | 0;
    std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___vector_28_29($4 + 104 | 0 | 0) | 0;
    std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___push_back_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0 | 0, $4 + 104 | 0 | 0);
    std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____vector_28_29($4 + 104 | 0 | 0) | 0;
    HEAP32[($4 + 100 | 0) >> 2] = 0;
    label$4 : {
     label$5 : while (1) {
      if (!((HEAP32[($4 + 100 | 0) >> 2] | 0) >>> 0 < (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 32 | 0) >> 2] | 0 | 0, HEAP32[($4 + 124 | 0) >> 2] | 0 | 0) | 0 | 0) | 0) >>> 0 & 1 | 0)) {
       break label$4
      }
      HEAP32[($4 + 96 | 0) >> 2] = (Math_imul((HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0) + (HEAP32[($4 + 124 | 0) >> 2] | 0) | 0, HEAP32[((HEAP32[($5 + 28 | 0) >> 2] | 0) + 104 | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 4 | 0) >> 2] | 0) >> 2] | 0) | 0) + (HEAP32[($4 + 100 | 0) >> 2] | 0) | 0;
      label$6 : {
       if (!((HEAP32[($4 + 96 | 0) >> 2] | 0 | 0) == (Math_imul(HEAP32[($4 + 120 | 0) >> 2] | 0, 5) | 0) & 1 | 0)) {
        break label$6
       }
       HEAP32[($4 + 96 | 0) >> 2] = 0;
      }
      $84 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 32 | 0) >> 2] | 0 | 0, HEAP32[($4 + 124 | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($4 + 100 | 0) >> 2] | 0 | 0) | 0;
      $87 = $4 + 64 | 0;
      i64toi32_i32$2 = $84;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $329 = i64toi32_i32$0;
      i64toi32_i32$0 = $87;
      HEAP32[i64toi32_i32$0 >> 2] = $329;
      HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
      $89 = 24;
      i64toi32_i32$2 = i64toi32_i32$2 + $89 | 0;
      i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $339 = i64toi32_i32$1;
      i64toi32_i32$1 = $87 + $89 | 0;
      HEAP32[i64toi32_i32$1 >> 2] = $339;
      HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
      $93 = 16;
      i64toi32_i32$2 = $84 + $93 | 0;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $349 = i64toi32_i32$0;
      i64toi32_i32$0 = $87 + $93 | 0;
      HEAP32[i64toi32_i32$0 >> 2] = $349;
      HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
      $97 = 8;
      i64toi32_i32$2 = $84 + $97 | 0;
      i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $359 = i64toi32_i32$1;
      i64toi32_i32$1 = $87 + $97 | 0;
      HEAP32[i64toi32_i32$1 >> 2] = $359;
      HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
      GPoint3__GPoint3_28double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29($4 + 8 | 0 | 0, +(+HEAPF64[($4 + 64 | 0) >> 3]), +(+HEAPF64[($4 + 72 | 0) >> 3]), +(+HEAPF64[($4 + 80 | 0) >> 3]), HEAP32[(HEAP32[($5 + 36 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($4 + 120 | 0) >> 2] | 0 | 0, HEAP32[($4 + 96 | 0) >> 2] | 0 | 0, HEAP32[($7 + 12 | 0) >> 2] | 0 | 0, HEAP32[($7 + 16 | 0) >> 2] | 0 | 0, (GPoint3__is_phex_center_28int_2c_20int_2c_20int_29(HEAP32[(HEAP32[($5 + 36 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($4 + 120 | 0) >> 2] | 0 | 0, HEAP32[($4 + 96 | 0) >> 2] | 0 | 0) | 0) & 1 | 0 | 0, -1 | 0) | 0;
      std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___push_back_28GPoint3_20const__29(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator_5b_5d_28unsigned_20long_29($0 | 0, HEAP32[($4 + 124 | 0) >> 2] | 0 | 0) | 0 | 0, $4 + 8 | 0 | 0);
      GPoint3___GPoint3_28_29($4 + 8 | 0 | 0) | 0;
      Point3___Point3_28_29($4 + 64 | 0 | 0) | 0;
      HEAP32[($4 + 100 | 0) >> 2] = (HEAP32[($4 + 100 | 0) >> 2] | 0) + 1 | 0;
      continue label$5;
     };
    }
    HEAP32[($4 + 124 | 0) >> 2] = (HEAP32[($4 + 124 | 0) >> 2] | 0) + 1 | 0;
    continue label$1;
   }
   break label$1;
  };
  HEAP8[($4 + 135 | 0) >> 0] = 1 & 1 | 0;
  label$7 : {
   if ((HEAPU8[($4 + 135 | 0) >> 0] | 0) & 1 | 0) {
    break label$7
   }
   std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($0 | 0) | 0;
  }
  __stack_pointer = $4 + 144 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 12) | 0 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return (HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] | 0) + ((HEAP32[($4 + 8 | 0) >> 2] | 0) << 5 | 0) | 0 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___push_back_28GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) != (HEAP32[(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____end_cap_28_29($5 | 0) | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$2
    }
    void_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____construct_one_at_end_GPoint3_20const___28GPoint3_20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
    break label$1;
   }
   void_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____push_back_slow_path_GPoint3_20const___28GPoint3_20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function void_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____construct_one_at_end_GPoint3_20const___28GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____ConstructTransaction___ConstructTransaction_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20unsigned_20long_29($4 + 8 | 0 | 0, $5 | 0, 1 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_GPoint3__20___construct_GPoint3_2c_20GPoint3_20const___28std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3_20const__29(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29($5 | 0) | 0 | 0, GPoint3__20std____2____to_address_GPoint3__28GPoint3__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0 | 0, GPoint3_20const__20std____2__forward_GPoint3_20const___28std____2__remove_reference_GPoint3_20const____type__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[($4 + 12 | 0) >> 2] = (HEAP32[($4 + 12 | 0) >> 2] | 0) + 56 | 0;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____ConstructTransaction____ConstructTransaction_28_29($4 + 8 | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____push_back_slow_path_GPoint3_20const___28GPoint3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29($5 | 0) | 0;
  std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______split_buffer_28unsigned_20long_2c_20unsigned_20long_2c_20std____2__allocator_GPoint3___29($4 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____recommend_28unsigned_20long_29_20const($5 | 0, (std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___size_28_29_20const($5 | 0) | 0) + 1 | 0 | 0) | 0 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___size_28_29_20const($5 | 0) | 0 | 0, HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_GPoint3__20___construct_GPoint3_2c_20GPoint3_20const___28std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3_20const__29(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0, GPoint3__20std____2____to_address_GPoint3__28GPoint3__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, GPoint3_20const__20std____2__forward_GPoint3_20const___28std____2__remove_reference_GPoint3_20const____type__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[($4 + 8 | 0) >> 2] = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 56 | 0;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____swap_out_circular_buffer_28std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_____29($5 | 0, $4 | 0);
  std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3________split_buffer_28_29($4 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function GPoint3_20const__20std____2__forward_GPoint3_20const___28std____2__remove_reference_GPoint3_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_GPoint3__20___construct_GPoint3_2c_20GPoint3_20const___28std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_GPoint3__20_____construct_GPoint3_2c_20GPoint3_20const___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3_20const__29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, GPoint3_20const__20std____2__forward_GPoint3_20const___28std____2__remove_reference_GPoint3_20const____type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____recommend_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $36 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___max_size_28_29_20const($5 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($4 + 20 | 0) >> 2] | 0) >>> 0 > (HEAP32[($4 + 16 | 0) >> 2] | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_common_true_____throw_length_error_28_29_20const($5 | 0);
   abort();
  }
  HEAP32[($4 + 12 | 0) >> 2] = std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___capacity_28_29_20const($5 | 0) | 0;
  label$2 : {
   label$3 : {
    if (!((HEAP32[($4 + 12 | 0) >> 2] | 0) >>> 0 >= ((HEAP32[($4 + 16 | 0) >> 2] | 0) >>> 1 | 0) >>> 0 & 1 | 0)) {
     break label$3
    }
    HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 16 | 0) >> 2] | 0;
    break label$2;
   }
   HEAP32[($4 + 8 | 0) >> 2] = (HEAP32[($4 + 12 | 0) >> 2] | 0) << 1 | 0;
   HEAP32[($4 + 28 | 0) >> 2] = HEAP32[(unsigned_20long_20const__20std____2__max_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($4 + 8 | 0 | 0, $4 + 20 | 0 | 0) | 0) >> 2] | 0;
  }
  $36 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $36 | 0;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______split_buffer_28unsigned_20long_2c_20unsigned_20long_2c_20std____2__allocator_GPoint3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0, $19 = 0, $26 = 0, $31 = 0, $33 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 24 | 0) >> 2] = $0;
  HEAP32[($6 + 20 | 0) >> 2] = $1;
  HEAP32[($6 + 16 | 0) >> 2] = $2;
  HEAP32[($6 + 12 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 24 | 0) >> 2] | 0;
  HEAP32[($6 + 28 | 0) >> 2] = $7;
  HEAP32[($6 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3_______compressed_pair_std__nullptr_t_2c_20std____2__allocator_GPoint3____28std__nullptr_t___2c_20std____2__allocator_GPoint3___29($7 + 12 | 0 | 0, $6 + 8 | 0 | 0, HEAP32[($6 + 12 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!(HEAP32[($6 + 20 | 0) >> 2] | 0)) {
     break label$2
    }
    $19 = std____2__allocator_traits_std____2__allocator_GPoint3__20___allocate_28std____2__allocator_GPoint3___2c_20unsigned_20long_29(std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0) | 0;
    break label$1;
   }
   $19 = 0;
  }
  HEAP32[$7 >> 2] = $19;
  $26 = (HEAP32[$7 >> 2] | 0) + Math_imul(HEAP32[($6 + 16 | 0) >> 2] | 0, 56) | 0;
  HEAP32[($7 + 8 | 0) >> 2] = $26;
  HEAP32[($7 + 4 | 0) >> 2] = $26;
  $31 = (HEAP32[$7 >> 2] | 0) + Math_imul(HEAP32[($6 + 20 | 0) >> 2] | 0, 56) | 0;
  HEAP32[(std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______end_cap_28_29($7 | 0) | 0) >> 2] = $31;
  $33 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  __stack_pointer = $6 + 32 | 0;
  return $33 | 0;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____swap_out_circular_buffer_28std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____annotate_delete_28_29_20const($5 | 0);
  void_20std____2__allocator_traits_std____2__allocator_GPoint3__20_____construct_backward_with_exception_guarantees_GPoint3___28std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3__2c_20GPoint3___29(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____alloc_28_29($5 | 0) | 0 | 0, HEAP32[$5 >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  std____2__enable_if__28is_move_constructible_GPoint3____value_29_20___20_28is_move_assignable_GPoint3____value_29_2c_20void___type_20std____2__swap_GPoint3___28GPoint3___2c_20GPoint3___29($5 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  std____2__enable_if__28is_move_constructible_GPoint3____value_29_20___20_28is_move_assignable_GPoint3____value_29_2c_20void___type_20std____2__swap_GPoint3___28GPoint3___2c_20GPoint3___29($5 + 4 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0 | 0);
  std____2__enable_if__28is_move_constructible_GPoint3____value_29_20___20_28is_move_assignable_GPoint3____value_29_2c_20void___type_20std____2__swap_GPoint3___28GPoint3___2c_20GPoint3___29(std____2____vector_base_GPoint3_2c_20std____2__allocator_GPoint3__20_____end_cap_28_29($5 | 0) | 0 | 0, std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______end_cap_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____annotate_new_28unsigned_20long_29_20const($5 | 0, std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___size_28_29_20const($5 | 0) | 0 | 0);
  std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____invalidate_all_iterators_28_29($5 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3________split_buffer_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_____clear_28_29($4 | 0);
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_traits_std____2__allocator_GPoint3__20___deallocate_28std____2__allocator_GPoint3___2c_20GPoint3__2c_20unsigned_20long_29(std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_____capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_GPoint3__20_____construct_GPoint3_2c_20GPoint3_20const___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_GPoint3___construct_GPoint3_2c_20GPoint3_20const___28GPoint3__2c_20GPoint3_20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, GPoint3_20const__20std____2__forward_GPoint3_20const___28std____2__remove_reference_GPoint3_20const____type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_GPoint3___construct_GPoint3_2c_20GPoint3_20const___28GPoint3__2c_20GPoint3_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0, $8 = 0, $10 = 0, $14 = 0, $18 = 0, $22 = 0, $26 = 0, $30 = 0, $56 = 0, $66 = 0, $76 = 0, $86 = 0, $96 = 0, $106 = 0, $116 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $8 = GPoint3_20const__20std____2__forward_GPoint3_20const___28std____2__remove_reference_GPoint3_20const____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = $8;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $56 = i64toi32_i32$0;
  i64toi32_i32$0 = $6;
  HEAP32[i64toi32_i32$0 >> 2] = $56;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $10 = 48;
  i64toi32_i32$2 = i64toi32_i32$2 + $10 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $66 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $10 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $66;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $14 = 40;
  i64toi32_i32$2 = $8 + $14 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $76 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $14 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $76;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $18 = 32;
  i64toi32_i32$2 = $8 + $18 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $86 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $18 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $86;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $22 = 24;
  i64toi32_i32$2 = $8 + $22 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $96 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $22 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $96;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $26 = 16;
  i64toi32_i32$2 = $8 + $26 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $106 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $26 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $106;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $30 = 8;
  i64toi32_i32$2 = $8 + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $116 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $30 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $116;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3_______compressed_pair_std__nullptr_t_2c_20std____2__allocator_GPoint3____28std__nullptr_t___2c_20std____2__allocator_GPoint3___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_GPoint3___2c_201_2c_20false_____compressed_pair_elem_std____2__allocator_GPoint3___2c_20void__28std____2__allocator_GPoint3___29($6 + 4 | 0 | 0, std____2__allocator_GPoint3___20std____2__forward_std____2__allocator_GPoint3____28std____2__remove_reference_std____2__allocator_GPoint3_____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3_____second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3_____first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_GPoint3__20_____construct_backward_with_exception_guarantees_GPoint3___28std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3__2c_20GPoint3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0, $24 = 0, $14 = 0, $19 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = HEAP32[($6 + 12 | 0) >> 2] | 0;
    $19 = GPoint3__20std____2____to_address_GPoint3__28GPoint3__29((HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0) + -56 | 0 | 0) | 0;
    $22 = (HEAP32[($6 + 4 | 0) >> 2] | 0) + -56 | 0;
    HEAP32[($6 + 4 | 0) >> 2] = $22;
    void_20std____2__allocator_traits_std____2__allocator_GPoint3__20___construct_GPoint3_2c_20GPoint3__28std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3___29($14 | 0, $19 | 0, std____2__conditional__28__28is_nothrow_move_constructible_GPoint3___value_29_29_20___20_28is_copy_constructible_GPoint3___value_29_2c_20GPoint3_20const__2c_20GPoint3_____type_20std____2__move_if_noexcept_GPoint3__28GPoint3__29($22 | 0) | 0 | 0);
    $24 = HEAP32[$6 >> 2] | 0;
    HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -56 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__enable_if__28is_move_constructible_GPoint3____value_29_20___20_28is_move_assignable_GPoint3____value_29_2c_20void___type_20std____2__swap_GPoint3___28GPoint3___2c_20GPoint3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0, $16 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2__remove_reference_GPoint3_____type___20std____2__move_GPoint3____28GPoint3___29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  $10 = HEAP32[(std____2__remove_reference_GPoint3_____type___20std____2__move_GPoint3____28GPoint3___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] = $10;
  $16 = HEAP32[(std____2__remove_reference_GPoint3_____type___20std____2__move_GPoint3____28GPoint3___29($4 + 4 | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = $16;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____invalidate_all_iterators_28_29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_____clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______destruct_at_end_28GPoint3__29($4 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_____capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (56 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2__allocator_GPoint3___20std____2__forward_std____2__allocator_GPoint3____28std____2__remove_reference_std____2__allocator_GPoint3_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_GPoint3___2c_201_2c_20false_____compressed_pair_elem_std____2__allocator_GPoint3___2c_20void__28std____2__allocator_GPoint3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_GPoint3___20std____2__forward_std____2__allocator_GPoint3____28std____2__remove_reference_std____2__allocator_GPoint3_____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3_____second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2__allocator_GPoint3___2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3_____first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_GPoint3___2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2__conditional__28__28is_nothrow_move_constructible_GPoint3___value_29_29_20___20_28is_copy_constructible_GPoint3___value_29_2c_20GPoint3_20const__2c_20GPoint3_____type_20std____2__move_if_noexcept_GPoint3__28GPoint3__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__remove_reference_GPoint3____type___20std____2__move_GPoint3___28GPoint3__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_GPoint3__20___construct_GPoint3_2c_20GPoint3__28std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_GPoint3__20_____construct_GPoint3_2c_20GPoint3__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3___29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, GPoint3___20std____2__forward_GPoint3__28std____2__remove_reference_GPoint3___type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__remove_reference_GPoint3_____type___20std____2__move_GPoint3____28GPoint3___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function GPoint3___20std____2__forward_GPoint3__28std____2__remove_reference_GPoint3___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_GPoint3__20_____construct_GPoint3_2c_20GPoint3__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_GPoint3___2c_20GPoint3__2c_20GPoint3___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_GPoint3___construct_GPoint3_2c_20GPoint3__28GPoint3__2c_20GPoint3___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, GPoint3___20std____2__forward_GPoint3__28std____2__remove_reference_GPoint3___type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_GPoint3___construct_GPoint3_2c_20GPoint3__28GPoint3__2c_20GPoint3___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0, $8 = 0, $10 = 0, $14 = 0, $18 = 0, $22 = 0, $26 = 0, $30 = 0, $56 = 0, $66 = 0, $76 = 0, $86 = 0, $96 = 0, $106 = 0, $116 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $8 = GPoint3___20std____2__forward_GPoint3__28std____2__remove_reference_GPoint3___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = $8;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $56 = i64toi32_i32$0;
  i64toi32_i32$0 = $6;
  HEAP32[i64toi32_i32$0 >> 2] = $56;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $10 = 48;
  i64toi32_i32$2 = i64toi32_i32$2 + $10 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $66 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $10 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $66;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $14 = 40;
  i64toi32_i32$2 = $8 + $14 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $76 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $14 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $76;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $18 = 32;
  i64toi32_i32$2 = $8 + $18 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $86 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $18 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $86;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $22 = 24;
  i64toi32_i32$2 = $8 + $22 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $96 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $22 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $96;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $26 = 16;
  i64toi32_i32$2 = $8 + $26 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $106 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $26 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $106;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $30 = 8;
  i64toi32_i32$2 = $8 + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $116 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $30 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $116;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______destruct_at_end_28GPoint3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______destruct_at_end_28GPoint3__2c_20std____2__integral_constant_bool_2c_20false__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3_____first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______destruct_at_end_28GPoint3__2c_20std____2__integral_constant_bool_2c_20false__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $16 = 0, $13 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[$4 >> 2] | 0 | 0) != (HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $13 = std____2____split_buffer_GPoint3_2c_20std____2__allocator_GPoint3_______alloc_28_29($5 | 0) | 0;
    $16 = (HEAP32[($5 + 8 | 0) >> 2] | 0) + -56 | 0;
    HEAP32[($5 + 8 | 0) >> 2] = $16;
    void_20std____2__allocator_traits_std____2__allocator_GPoint3__20___destroy_GPoint3__28std____2__allocator_GPoint3___2c_20GPoint3__29($13 | 0, GPoint3__20std____2____to_address_GPoint3__28GPoint3__29($16 | 0) | 0 | 0);
    continue label$2;
   };
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_GPoint3__2c_20std____2__allocator_GPoint3_____first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_GPoint3__2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $21 = 0, $51 = 0;
  $5 = __stack_pointer - 64 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 56 | 0) >> 2] = $0;
  HEAP32[($5 + 52 | 0) >> 2] = $1;
  HEAP32[($5 + 48 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 56 | 0) >> 2] | 0;
  HEAP32[($5 + 60 | 0) >> 2] = $6;
  HEAP32[($6 + 16 | 0) >> 2] = 0;
  label$1 : {
   if (!((bool_20std____2____function____not_null_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29(HEAP32[($5 + 52 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($5 + 40 | 0 | 0, HEAP32[($5 + 48 | 0) >> 2] | 0 | 0) | 0;
   $21 = std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($5 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($5 + 16 | 0 | 0, $5 + 40 | 0 | 0, 1 | 0) | 0;
   std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($5 + 24 | 0 | 0, $21 | 0, $5 + 16 | 0 | 0) | 0;
   std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29(std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($5 + 24 | 0 | 0) | 0 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29(HEAP32[($5 + 52 | 0) >> 2] | 0 | 0) | 0 | 0, $5 + 8 | 0 | 0) | 0;
   HEAP32[($6 + 16 | 0) >> 2] = std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($5 + 24 | 0 | 0) | 0;
   std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($5 + 24 | 0 | 0) | 0;
  }
  $51 = HEAP32[($5 + 60 | 0) >> 2] | 0;
  __stack_pointer = $5 + 64 | 0;
  return $51 | 0;
 }
 
 function bool_20std____2____function____not_null_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 1 & 1 | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29(Math_imul(HEAP32[($5 + 8 | 0) >> 2] | 0, 48) | 0, 4 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2288 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($6 + 4 | 0 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 89478485 | 0;
 }
 
 function std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____29($6 | 0, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 + 4 | 0 | 0, std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29(std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29(std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[(std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, i64toi32_i32$1 = 0, $29 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $29 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $29;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return i64toi32_i32$0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20false_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($3 + 8 | 0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20false_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($3 + 8 | 0 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = 2288 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______alloc_func_28_29($4 + 4 | 0 | 0) | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______alloc_func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20______compressed_pair_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29_1($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29($4 | 0) | 0;
  operator_20delete_28void__29($4 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $16 = 0, $33 = 0, $36 = 0, $49 = 0;
  $3 = __stack_pointer - 48 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 44 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 44 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($3 + 40 | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  $16 = std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($3 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
  std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($3 + 16 | 0 | 0, $3 + 40 | 0 | 0, 1 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($3 + 24 | 0 | 0, $16 | 0, $3 + 16 | 0 | 0) | 0;
  $33 = std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($3 + 24 | 0 | 0) | 0;
  $36 = std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($4 + 4 | 0 | 0) | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20const__29($3 + 8 | 0 | 0, $3 + 40 | 0 | 0) | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($33 | 0, $36 | 0, $3 + 8 | 0 | 0) | 0;
  $49 = std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($3 + 24 | 0 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($3 + 24 | 0 | 0) | 0;
  __stack_pointer = $3 + 48 | 0;
  return $49 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___second_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2288 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($5 + 4 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2288 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20______compressed_pair_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_deallocate_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($3 + 8 | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($4 + 4 | 0 | 0);
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($3 + 8 | 0 | 0, $4 | 0, 1 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 48) | 0, 4 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20std____2____invoke_void_return_wrapper_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_____call_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29($0 | 0, std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___first_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_28std__type_info_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $12 = 0, $24 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  HEAP32[($4 + 4 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = 2548;
  $12 = HEAP32[((HEAP32[($4 + 16 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $12;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 28 | 0) >> 2] | 0 | 0) == (HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$2
    }
    HEAP32[($4 + 12 | 0) >> 2] = std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0;
    break label$1;
   }
   HEAP32[($4 + 12 | 0) >> 2] = 0;
  }
  $24 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $24 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_type_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 2548 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20false_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20false_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1________tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__$_1_28$_1___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____29($4 + 16 | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1________tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__$_1_28$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, $4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $5 = 0, $8 = 0, $23 = 0, $45 = 0, $18 = 0, $78 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $45 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $45;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $8 = 8;
  HEAP32[(i64toi32_i32$0 + $8 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $8 | 0) >> 2] | 0;
  Icosahedron__Icosahedron_28Icosahedron___29(i64toi32_i32$0 + 12 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  $18 = i64toi32_i32$0 + 32 | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 32 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $78 = i64toi32_i32$1;
  i64toi32_i32$1 = $18;
  HEAP32[i64toi32_i32$1 >> 2] = $78;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $23 = 8;
  HEAP32[(i64toi32_i32$1 + $23 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $23 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20______compressed_pair_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false______compressed_pair_elem_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false______compressed_pair_elem_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___$_1_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____29(std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____tuple_true_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29($3 + 8 | 0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____tuple_true_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__$_1_28$_1_20const__29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__$_1_28$_1_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, $4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $5 = 0, $8 = 0, $23 = 0, $45 = 0, $18 = 0, $78 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $45 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $45;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $8 = 8;
  HEAP32[(i64toi32_i32$0 + $8 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $8 | 0) >> 2] | 0;
  Icosahedron__Icosahedron_28Icosahedron_20const__29(i64toi32_i32$0 + 12 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  $18 = i64toi32_i32$0 + 32 | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 32 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $78 = i64toi32_i32$1;
  i64toi32_i32$1 = $18;
  HEAP32[i64toi32_i32$1 >> 2] = $78;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $23 = 8;
  HEAP32[(i64toi32_i32$1 + $23 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $23 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_traits_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29(HEAP32[$5 >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____tuple_true_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($3 + 8 | 0 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____tuple_true_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const______tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const______tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const___28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20std____2____invoke_void_return_wrapper_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_____call_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  decltype_28std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28fp_29_28_29_29_20std____2____invoke_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29($0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function decltype_28std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28fp_29_28_29_29_20std____2____invoke_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__operator_28_29_28_29_20const($0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__operator_28_29_28_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $104 = 0, $101 = 0, $7 = 0, $46 = 0, $106 = 0, $110 = 0, $114 = 0, $37 = 0, $39 = 0, $381 = 0, $391 = 0, $401 = 0, $411 = 0;
  $4 = __stack_pointer - 144 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 140 | 0) >> 2] = $0;
  HEAP32[($4 + 136 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 136 | 0) >> 2] | 0;
  $7 = $5 + 12 | 0;
  HEAP8[($4 + 135 | 0) >> 0] = 0 & 1 | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___vector_28_29($0 | 0) | 0;
  HEAP32[($4 + 128 | 0) >> 2] = hexmapf__closest_even_num_28int_29((HEAP32[((HEAP32[($5 + 40 | 0) >> 2] | 0) + 104 | 0) >> 2] | 0) - 5 | 0 | 0) | 0;
  HEAP32[($4 + 124 | 0) >> 2] = (HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 4 | 0) >> 2] | 0) >> 2] | 0) | 0;
  HEAP32[($4 + 120 | 0) >> 2] = (Math_imul(HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0, (HEAP32[($4 + 128 | 0) >> 2] | 0 | 0) / (2 | 0) | 0) + ((HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0) - (HEAP32[(HEAP32[($5 + 4 | 0) >> 2] | 0) >> 2] | 0) | 0) | 0) + (HEAP32[(HEAP32[($5 + 8 | 0) >> 2] | 0) >> 2] | 0) | 0;
  HEAP32[($4 + 116 | 0) >> 2] = 0;
  label$1 : while (1) {
   $37 = HEAP32[($4 + 116 | 0) >> 2] | 0;
   $39 = std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const(HEAP32[($5 + 32 | 0) >> 2] | 0 | 0) | 0;
   $46 = 0;
   label$2 : {
    if (!($37 >>> 0 < $39 >>> 0 & 1 | 0)) {
     break label$2
    }
    $46 = (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 32 | 0) >> 2] | 0 | 0, HEAP32[($4 + 116 | 0) >> 2] | 0 | 0) | 0 | 0) | 0) >>> 0 > 0 >>> 0;
   }
   label$3 : {
    if (!($46 & 1 | 0)) {
     break label$3
    }
    HEAP32[($4 + 112 | 0) >> 2] = (HEAP32[($4 + 124 | 0) >> 2] | 0) + (HEAP32[($4 + 116 | 0) >> 2] | 0) | 0;
    std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___vector_28_29($4 + 96 | 0 | 0) | 0;
    std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___push_back_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0 | 0, $4 + 96 | 0 | 0);
    std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____vector_28_29($4 + 96 | 0 | 0) | 0;
    HEAP32[($4 + 92 | 0) >> 2] = 0;
    label$4 : {
     label$5 : while (1) {
      if (!((HEAP32[($4 + 92 | 0) >> 2] | 0) >>> 0 < (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 32 | 0) >> 2] | 0 | 0, HEAP32[($4 + 116 | 0) >> 2] | 0 | 0) | 0 | 0) | 0) >>> 0 & 1 | 0)) {
       break label$4
      }
      HEAP32[($4 + 88 | 0) >> 2] = ((HEAP32[($4 + 120 | 0) >> 2] | 0) + (HEAP32[($4 + 92 | 0) >> 2] | 0) | 0) - (HEAP32[($4 + 116 | 0) >> 2] | 0) | 0;
      label$6 : {
       if (!((HEAP32[($4 + 88 | 0) >> 2] | 0 | 0) == (Math_imul(HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0, 5) | 0) & 1 | 0)) {
        break label$6
       }
       HEAP32[($4 + 88 | 0) >> 2] = 0;
      }
      $101 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 32 | 0) >> 2] | 0 | 0, HEAP32[($4 + 116 | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($4 + 92 | 0) >> 2] | 0 | 0) | 0;
      $104 = $4 + 56 | 0;
      i64toi32_i32$2 = $101;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $381 = i64toi32_i32$0;
      i64toi32_i32$0 = $104;
      HEAP32[i64toi32_i32$0 >> 2] = $381;
      HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
      $106 = 24;
      i64toi32_i32$2 = i64toi32_i32$2 + $106 | 0;
      i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $391 = i64toi32_i32$1;
      i64toi32_i32$1 = $104 + $106 | 0;
      HEAP32[i64toi32_i32$1 >> 2] = $391;
      HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
      $110 = 16;
      i64toi32_i32$2 = $101 + $110 | 0;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $401 = i64toi32_i32$0;
      i64toi32_i32$0 = $104 + $110 | 0;
      HEAP32[i64toi32_i32$0 >> 2] = $401;
      HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
      $114 = 8;
      i64toi32_i32$2 = $101 + $114 | 0;
      i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $411 = i64toi32_i32$1;
      i64toi32_i32$1 = $104 + $114 | 0;
      HEAP32[i64toi32_i32$1 >> 2] = $411;
      HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
      GPoint3__GPoint3_28double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29($4 | 0, +(+HEAPF64[($4 + 56 | 0) >> 3]), +(+HEAPF64[($4 + 64 | 0) >> 3]), +(+HEAPF64[($4 + 72 | 0) >> 3]), HEAP32[(HEAP32[($5 + 36 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($4 + 112 | 0) >> 2] | 0 | 0, HEAP32[($4 + 88 | 0) >> 2] | 0 | 0, HEAP32[($7 + 12 | 0) >> 2] | 0 | 0, HEAP32[($7 + 16 | 0) >> 2] | 0 | 0, (GPoint3__is_phex_center_28int_2c_20int_2c_20int_29(HEAP32[(HEAP32[($5 + 36 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($4 + 112 | 0) >> 2] | 0 | 0, HEAP32[($4 + 88 | 0) >> 2] | 0 | 0) | 0) & 1 | 0 | 0, -1 | 0) | 0;
      std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___push_back_28GPoint3_20const__29(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator_5b_5d_28unsigned_20long_29($0 | 0, HEAP32[($4 + 116 | 0) >> 2] | 0 | 0) | 0 | 0, $4 | 0);
      GPoint3___GPoint3_28_29($4 | 0) | 0;
      Point3___Point3_28_29($4 + 56 | 0 | 0) | 0;
      HEAP32[($4 + 92 | 0) >> 2] = (HEAP32[($4 + 92 | 0) >> 2] | 0) + 1 | 0;
      continue label$5;
     };
    }
    HEAP32[($4 + 116 | 0) >> 2] = (HEAP32[($4 + 116 | 0) >> 2] | 0) + 1 | 0;
    continue label$1;
   }
   break label$1;
  };
  HEAP8[($4 + 135 | 0) >> 0] = 1 & 1 | 0;
  label$7 : {
   if ((HEAPU8[($4 + 135 | 0) >> 0] | 0) & 1 | 0) {
    break label$7
   }
   std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($0 | 0) | 0;
  }
  __stack_pointer = $4 + 144 | 0;
  return;
 }
 
 function hexmapf__closest_even_num_28int_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $17 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  HEAP8[($3 + 11 | 0) >> 0] = ((HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) % (2 | 0) | 0 | 0) == (0 | 0) & 1 | 0;
  label$1 : {
   label$2 : {
    if (!((HEAPU8[($3 + 11 | 0) >> 0] | 0) & 1 | 0)) {
     break label$2
    }
    $17 = HEAP32[($3 + 12 | 0) >> 2] | 0;
    break label$1;
   }
   $17 = (HEAP32[($3 + 12 | 0) >> 2] | 0) - 1 | 0;
  }
  return $17 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $21 = 0, $51 = 0;
  $5 = __stack_pointer - 64 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 56 | 0) >> 2] = $0;
  HEAP32[($5 + 52 | 0) >> 2] = $1;
  HEAP32[($5 + 48 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 56 | 0) >> 2] | 0;
  HEAP32[($5 + 60 | 0) >> 2] = $6;
  HEAP32[($6 + 16 | 0) >> 2] = 0;
  label$1 : {
   if (!((bool_20std____2____function____not_null_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29(HEAP32[($5 + 52 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($5 + 40 | 0 | 0, HEAP32[($5 + 48 | 0) >> 2] | 0 | 0) | 0;
   $21 = std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($5 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($5 + 16 | 0 | 0, $5 + 40 | 0 | 0, 1 | 0) | 0;
   std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($5 + 24 | 0 | 0, $21 | 0, $5 + 16 | 0 | 0) | 0;
   std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29(std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($5 + 24 | 0 | 0) | 0 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29(HEAP32[($5 + 52 | 0) >> 2] | 0 | 0) | 0 | 0, $5 + 8 | 0 | 0) | 0;
   HEAP32[($6 + 16 | 0) >> 2] = std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($5 + 24 | 0 | 0) | 0;
   std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($5 + 24 | 0 | 0) | 0;
  }
  $51 = HEAP32[($5 + 60 | 0) >> 2] | 0;
  __stack_pointer = $5 + 64 | 0;
  return $51 | 0;
 }
 
 function bool_20std____2____function____not_null_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 1 & 1 | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29(Math_imul(HEAP32[($5 + 8 | 0) >> 2] | 0, 48) | 0, 4 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2556 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($6 + 4 | 0 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 89478485 | 0;
 }
 
 function std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____29($6 | 0, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 + 4 | 0 | 0, std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29(std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29(std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[(std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, i64toi32_i32$1 = 0, $29 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $29 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $29;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return i64toi32_i32$0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20false_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($3 + 8 | 0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20false_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($3 + 8 | 0 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = 2556 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______alloc_func_28_29($4 + 4 | 0 | 0) | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______alloc_func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20______compressed_pair_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29_1($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29($4 | 0) | 0;
  operator_20delete_28void__29($4 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $16 = 0, $33 = 0, $36 = 0, $49 = 0;
  $3 = __stack_pointer - 48 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 44 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 44 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($3 + 40 | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  $16 = std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($3 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
  std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($3 + 16 | 0 | 0, $3 + 40 | 0 | 0, 1 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($3 + 24 | 0 | 0, $16 | 0, $3 + 16 | 0 | 0) | 0;
  $33 = std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($3 + 24 | 0 | 0) | 0;
  $36 = std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($4 + 4 | 0 | 0) | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20const__29($3 + 8 | 0 | 0, $3 + 40 | 0 | 0) | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($33 | 0, $36 | 0, $3 + 8 | 0 | 0) | 0;
  $49 = std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($3 + 24 | 0 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($3 + 24 | 0 | 0) | 0;
  __stack_pointer = $3 + 48 | 0;
  return $49 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___second_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2556 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($5 + 4 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2556 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20______compressed_pair_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_deallocate_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($3 + 8 | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($4 + 4 | 0 | 0);
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($3 + 8 | 0 | 0, $4 | 0, 1 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 48) | 0, 4 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20std____2____invoke_void_return_wrapper_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_____call_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29($0 | 0, std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___first_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_28std__type_info_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $12 = 0, $24 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  HEAP32[($4 + 4 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = 2816;
  $12 = HEAP32[((HEAP32[($4 + 16 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $12;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 28 | 0) >> 2] | 0 | 0) == (HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$2
    }
    HEAP32[($4 + 12 | 0) >> 2] = std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0;
    break label$1;
   }
   HEAP32[($4 + 12 | 0) >> 2] = 0;
  }
  $24 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $24 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_type_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 2816 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20false_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20false_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2________tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__$_2_28$_2___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____29($4 + 16 | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2________tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__$_2_28$_2___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$1 = 0, $5 = 0, $8 = 0, $41 = 0, $51 = 0, $74 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $41 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $41;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $8 = 8;
  i64toi32_i32$2 = i64toi32_i32$2 + $8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $51 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $8 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $51;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  Icosahedron__Icosahedron_28Icosahedron___29($5 + 16 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 16 | 0 | 0) | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 36 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + 36 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $74;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20______compressed_pair_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false______compressed_pair_elem_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false______compressed_pair_elem_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___$_2_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____29(std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____tuple_true_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29($3 + 8 | 0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____tuple_true_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__$_2_28$_2_20const__29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__$_2_28$_2_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$1 = 0, $5 = 0, $8 = 0, $41 = 0, $51 = 0, $74 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $41 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $41;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $8 = 8;
  i64toi32_i32$2 = i64toi32_i32$2 + $8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $51 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $8 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $51;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  Icosahedron__Icosahedron_28Icosahedron_20const__29($5 + 16 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 16 | 0 | 0) | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 36 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + 36 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $74;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_traits_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29(HEAP32[$5 >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____tuple_true_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($3 + 8 | 0 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____tuple_true_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const______tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const______tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const___28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20std____2____invoke_void_return_wrapper_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_____call_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  decltype_28std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28fp_29_28_29_29_20std____2____invoke_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29($0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function decltype_28std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28fp_29_28_29_29_20std____2____invoke_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__operator_28_29_28_29_20const($0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__operator_28_29_28_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $103 = 0, $100 = 0, $7 = 0, $37 = 0, $105 = 0, $109 = 0, $113 = 0, $28 = 0, $30 = 0, $376 = 0, $386 = 0, $396 = 0, $406 = 0;
  $4 = __stack_pointer - 144 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 140 | 0) >> 2] = $0;
  HEAP32[($4 + 136 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 136 | 0) >> 2] | 0;
  $7 = $5 + 16 | 0;
  HEAP8[($4 + 135 | 0) >> 0] = 0 & 1 | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___vector_28_29($0 | 0) | 0;
  HEAP32[($4 + 128 | 0) >> 2] = hexmapf__closest_even_num_28int_29((HEAP32[((HEAP32[($5 + 40 | 0) >> 2] | 0) + 104 | 0) >> 2] | 0) - 5 | 0 | 0) | 0;
  HEAP32[($4 + 124 | 0) >> 2] = (HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0) + (HEAP32[(HEAP32[($5 + 4 | 0) >> 2] | 0) >> 2] | 0) | 0;
  HEAP32[($4 + 120 | 0) >> 2] = Math_imul(HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0, (HEAP32[($4 + 128 | 0) >> 2] | 0 | 0) / (2 | 0) | 0);
  HEAP32[($4 + 116 | 0) >> 2] = 0;
  label$1 : while (1) {
   $28 = HEAP32[($4 + 116 | 0) >> 2] | 0;
   $30 = std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const(HEAP32[($5 + 36 | 0) >> 2] | 0 | 0) | 0;
   $37 = 0;
   label$2 : {
    if (!($28 >>> 0 < $30 >>> 0 & 1 | 0)) {
     break label$2
    }
    $37 = (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 36 | 0) >> 2] | 0 | 0, HEAP32[($4 + 116 | 0) >> 2] | 0 | 0) | 0 | 0) | 0) >>> 0 > 0 >>> 0;
   }
   label$3 : {
    if (!($37 & 1 | 0)) {
     break label$3
    }
    HEAP32[($4 + 112 | 0) >> 2] = (HEAP32[($4 + 124 | 0) >> 2] | 0) + (HEAP32[($4 + 116 | 0) >> 2] | 0) | 0;
    std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___vector_28_29($4 + 96 | 0 | 0) | 0;
    std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___push_back_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0 | 0, $4 + 96 | 0 | 0);
    std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____vector_28_29($4 + 96 | 0 | 0) | 0;
    HEAP32[($4 + 92 | 0) >> 2] = 0;
    label$4 : {
     label$5 : while (1) {
      if (!((HEAP32[($4 + 92 | 0) >> 2] | 0) >>> 0 < (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 36 | 0) >> 2] | 0 | 0, HEAP32[($4 + 116 | 0) >> 2] | 0 | 0) | 0 | 0) | 0) >>> 0 & 1 | 0)) {
       break label$4
      }
      HEAP32[($4 + 88 | 0) >> 2] = ((((HEAP32[($4 + 120 | 0) >> 2] | 0) + ((HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0) << 1 | 0) | 0) - (HEAP32[($4 + 112 | 0) >> 2] | 0) | 0) - (HEAP32[(HEAP32[($5 + 8 | 0) >> 2] | 0) >> 2] | 0) | 0) - (HEAP32[($4 + 92 | 0) >> 2] | 0) | 0;
      label$6 : {
       if (!((HEAP32[($4 + 88 | 0) >> 2] | 0 | 0) == (Math_imul(HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0, 5) | 0) & 1 | 0)) {
        break label$6
       }
       HEAP32[($4 + 88 | 0) >> 2] = 0;
      }
      $100 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 36 | 0) >> 2] | 0 | 0, HEAP32[($4 + 116 | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($4 + 92 | 0) >> 2] | 0 | 0) | 0;
      $103 = $4 + 56 | 0;
      i64toi32_i32$2 = $100;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $376 = i64toi32_i32$0;
      i64toi32_i32$0 = $103;
      HEAP32[i64toi32_i32$0 >> 2] = $376;
      HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
      $105 = 24;
      i64toi32_i32$2 = i64toi32_i32$2 + $105 | 0;
      i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $386 = i64toi32_i32$1;
      i64toi32_i32$1 = $103 + $105 | 0;
      HEAP32[i64toi32_i32$1 >> 2] = $386;
      HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
      $109 = 16;
      i64toi32_i32$2 = $100 + $109 | 0;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $396 = i64toi32_i32$0;
      i64toi32_i32$0 = $103 + $109 | 0;
      HEAP32[i64toi32_i32$0 >> 2] = $396;
      HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
      $113 = 8;
      i64toi32_i32$2 = $100 + $113 | 0;
      i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $406 = i64toi32_i32$1;
      i64toi32_i32$1 = $103 + $113 | 0;
      HEAP32[i64toi32_i32$1 >> 2] = $406;
      HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
      GPoint3__GPoint3_28double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29($4 | 0, +(+HEAPF64[($4 + 56 | 0) >> 3]), +(+HEAPF64[($4 + 64 | 0) >> 3]), +(+HEAPF64[($4 + 72 | 0) >> 3]), HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($4 + 112 | 0) >> 2] | 0 | 0, HEAP32[($4 + 88 | 0) >> 2] | 0 | 0, HEAP32[($7 + 12 | 0) >> 2] | 0 | 0, HEAP32[($7 + 16 | 0) >> 2] | 0 | 0, (GPoint3__is_phex_center_28int_2c_20int_2c_20int_29(HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($4 + 112 | 0) >> 2] | 0 | 0, HEAP32[($4 + 88 | 0) >> 2] | 0 | 0) | 0) & 1 | 0 | 0, -1 | 0) | 0;
      std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___push_back_28GPoint3_20const__29(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator_5b_5d_28unsigned_20long_29($0 | 0, HEAP32[($4 + 116 | 0) >> 2] | 0 | 0) | 0 | 0, $4 | 0);
      GPoint3___GPoint3_28_29($4 | 0) | 0;
      Point3___Point3_28_29($4 + 56 | 0 | 0) | 0;
      HEAP32[($4 + 92 | 0) >> 2] = (HEAP32[($4 + 92 | 0) >> 2] | 0) + 1 | 0;
      continue label$5;
     };
    }
    HEAP32[($4 + 116 | 0) >> 2] = (HEAP32[($4 + 116 | 0) >> 2] | 0) + 1 | 0;
    continue label$1;
   }
   break label$1;
  };
  HEAP8[($4 + 135 | 0) >> 0] = 1 & 1 | 0;
  label$7 : {
   if ((HEAPU8[($4 + 135 | 0) >> 0] | 0) & 1 | 0) {
    break label$7
   }
   std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($0 | 0) | 0;
  }
  __stack_pointer = $4 + 144 | 0;
  return;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____value_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $21 = 0, $51 = 0;
  $5 = __stack_pointer - 64 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 56 | 0) >> 2] = $0;
  HEAP32[($5 + 52 | 0) >> 2] = $1;
  HEAP32[($5 + 48 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 56 | 0) >> 2] | 0;
  HEAP32[($5 + 60 | 0) >> 2] = $6;
  HEAP32[($6 + 16 | 0) >> 2] = 0;
  label$1 : {
   if (!((bool_20std____2____function____not_null_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29(HEAP32[($5 + 52 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($5 + 40 | 0 | 0, HEAP32[($5 + 48 | 0) >> 2] | 0 | 0) | 0;
   $21 = std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($5 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($5 + 16 | 0 | 0, $5 + 40 | 0 | 0, 1 | 0) | 0;
   std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($5 + 24 | 0 | 0, $21 | 0, $5 + 16 | 0 | 0) | 0;
   std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29(std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($5 + 24 | 0 | 0) | 0 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29(HEAP32[($5 + 52 | 0) >> 2] | 0 | 0) | 0 | 0, $5 + 8 | 0 | 0) | 0;
   HEAP32[($6 + 16 | 0) >> 2] = std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($5 + 24 | 0 | 0) | 0;
   std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($5 + 24 | 0 | 0) | 0;
  }
  $51 = HEAP32[($5 + 60 | 0) >> 2] | 0;
  __stack_pointer = $5 + 64 | 0;
  return $51 | 0;
 }
 
 function bool_20std____2____function____not_null_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 1 & 1 | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(1809 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29(Math_imul(HEAP32[($5 + 8 | 0) >> 2] | 0, 48) | 0, 4 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2824 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($6 + 4 | 0 | 0, std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 89478485 | 0;
 }
 
 function std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____29($6 | 0, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 + 4 | 0 | 0, std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29(std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____type___20std____2__move_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29(std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[(std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____20std____2__forward_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____28std____2__remove_reference_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, i64toi32_i32$1 = 0, $29 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $29 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $29;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return i64toi32_i32$0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20false_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($3 + 8 | 0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20false_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($3 + 8 | 0 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = 2824 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______alloc_func_28_29($4 + 4 | 0 | 0) | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______alloc_func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20______compressed_pair_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29_1($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29($4 | 0) | 0;
  operator_20delete_28void__29($4 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $16 = 0, $33 = 0, $36 = 0, $49 = 0;
  $3 = __stack_pointer - 48 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 44 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 44 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($3 + 40 | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  $16 = std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocate_28unsigned_20long_2c_20void_20const__29($3 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
  std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20unsigned_20long_29($3 + 16 | 0 | 0, $3 + 40 | 0 | 0, 1 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($3 + 24 | 0 | 0, $16 | 0, $3 + 16 | 0 | 0) | 0;
  $33 = std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($3 + 24 | 0 | 0) | 0;
  $36 = std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($4 + 4 | 0 | 0) | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20const__29($3 + 8 | 0 | 0, $3 + 40 | 0 | 0) | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($33 | 0, $36 | 0, $3 + 8 | 0 | 0) | 0;
  $49 = std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($3 + 24 | 0 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($3 + 24 | 0 | 0) | 0;
  __stack_pointer = $3 + 48 | 0;
  return $49 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___second_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20_____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20__28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2824 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($5 + 4 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 2824 + 8 | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20______compressed_pair_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_deallocate_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($3 + 8 | 0 | 0, std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29($4 + 4 | 0 | 0);
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($3 + 8 | 0 | 0, $4 | 0, 1 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, Math_imul(HEAP32[($5 + 4 | 0) >> 2] | 0, 48) | 0, 4 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20std____2____invoke_void_return_wrapper_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_____call_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29($0 | 0, std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___first_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_28std__type_info_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $12 = 0, $24 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  HEAP32[($4 + 4 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = 3084;
  $12 = HEAP32[((HEAP32[($4 + 16 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $12;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 28 | 0) >> 2] | 0 | 0) == (HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$2
    }
    HEAP32[($4 + 12 | 0) >> 2] = std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0;
    break label$1;
   }
   HEAP32[($4 + 12 | 0) >> 2] = 0;
  }
  $24 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $24 | 0;
 }
 
 function std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_type_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 3084 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20false_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20false_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3________tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__$_3_28$_3___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____29($4 + 16 | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3________tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__$_3_28$_3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$1 = 0, $5 = 0, $8 = 0, $41 = 0, $51 = 0, $74 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $41 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $41;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $8 = 8;
  i64toi32_i32$2 = i64toi32_i32$2 + $8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $51 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $8 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $51;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  Icosahedron__Icosahedron_28Icosahedron___29($5 + 16 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 16 | 0 | 0) | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 36 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + 36 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $74;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20______compressed_pair_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false______compressed_pair_elem_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false______compressed_pair_elem_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___$_3_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____29(std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____type___20std____2__move_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___reset_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29(std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____tuple_true_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29($3 + 8 | 0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3________type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_______28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____tuple_true_2c_20false__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__$_3_28$_3_20const__29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const______tuple_impl_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29($5 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20false_____tuple_leaf_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20void__28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___20___type__20std____2__get_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__$_3_28$_3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$1 = 0, $5 = 0, $8 = 0, $41 = 0, $51 = 0, $74 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $41 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $41;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $8 = 8;
  i64toi32_i32$2 = i64toi32_i32$2 + $8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $51 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $8 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $51;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  Icosahedron__Icosahedron_28Icosahedron_20const__29($5 + 16 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 16 | 0 | 0) | 0;
  i64toi32_i32$2 = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 36 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + 36 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $74;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___operator_28_29_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_traits_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29(HEAP32[$5 >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20__2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___2c_20std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29__20___deallocate_28std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____alloc_func_28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___20std____2__forward_as_tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___20std____2__forward_as_tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____tuple_true_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($3 + 8 | 0 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20_____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const______type___20std____2__move_std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const_____28std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____tuple_true_2c_20false__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const______tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const_____28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const______tuple_impl_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($5 | 0, std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_20false_____tuple_leaf_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_20void__28std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__20std____2__forward_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__remove_reference_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const___28std____2__tuple_std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20std____2____invoke_void_return_wrapper_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_____call_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  decltype_28std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28fp_29_28_29_29_20std____2____invoke_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29($0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function decltype_28std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28fp_29_28_29_29_20std____2____invoke_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__operator_28_29_28_29_20const($0 | 0, Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__20std____2__forward_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3___28std____2__remove_reference_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__operator_28_29_28_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $104 = 0, $101 = 0, $7 = 0, $28 = 0, $106 = 0, $110 = 0, $114 = 0, $19 = 0, $21 = 0, $381 = 0, $391 = 0, $401 = 0, $411 = 0;
  $4 = __stack_pointer - 144 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 140 | 0) >> 2] = $0;
  HEAP32[($4 + 136 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 136 | 0) >> 2] | 0;
  $7 = $5 + 16 | 0;
  HEAP8[($4 + 135 | 0) >> 0] = 0 & 1 | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___vector_28_29($0 | 0) | 0;
  HEAP32[($4 + 128 | 0) >> 2] = ((HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0) << 1 | 0) + (HEAP32[(HEAP32[($5 + 8 | 0) >> 2] | 0) >> 2] | 0) | 0;
  HEAP32[($4 + 124 | 0) >> 2] = 0;
  label$1 : while (1) {
   $19 = HEAP32[($4 + 124 | 0) >> 2] | 0;
   $21 = std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const(HEAP32[($5 + 36 | 0) >> 2] | 0 | 0) | 0;
   $28 = 0;
   label$2 : {
    if (!($19 >>> 0 < $21 >>> 0 & 1 | 0)) {
     break label$2
    }
    $28 = (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 36 | 0) >> 2] | 0 | 0, HEAP32[($4 + 124 | 0) >> 2] | 0 | 0) | 0 | 0) | 0) >>> 0 > 0 >>> 0;
   }
   label$3 : {
    if (!($28 & 1 | 0)) {
     break label$3
    }
    HEAP32[($4 + 120 | 0) >> 2] = (HEAP32[($4 + 128 | 0) >> 2] | 0) + (HEAP32[($4 + 124 | 0) >> 2] | 0) | 0;
    std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___vector_28_29($4 + 104 | 0 | 0) | 0;
    std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___push_back_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____29($0 | 0, $4 + 104 | 0 | 0);
    std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____vector_28_29($4 + 104 | 0 | 0) | 0;
    HEAP32[($4 + 100 | 0) >> 2] = 0;
    label$4 : {
     label$5 : while (1) {
      if (!((HEAP32[($4 + 100 | 0) >> 2] | 0) >>> 0 < (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 36 | 0) >> 2] | 0 | 0, HEAP32[($4 + 124 | 0) >> 2] | 0 | 0) | 0 | 0) | 0) >>> 0 & 1 | 0)) {
       break label$4
      }
      HEAP32[($4 + 96 | 0) >> 2] = (Math_imul(((HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0) - (HEAP32[(HEAP32[($5 + 8 | 0) >> 2] | 0) >> 2] | 0) | 0) - (HEAP32[($4 + 124 | 0) >> 2] | 0) | 0, ((HEAP32[((HEAP32[($5 + 40 | 0) >> 2] | 0) + 104 | 0) >> 2] | 0) - 15 | 0) + 1 | 0) - (HEAP32[(HEAP32[($5 + 4 | 0) >> 2] | 0) >> 2] | 0) | 0) - (HEAP32[($4 + 100 | 0) >> 2] | 0) | 0;
      label$6 : {
       if (!((HEAP32[($4 + 96 | 0) >> 2] | 0 | 0) == (Math_imul(Math_imul(HEAP32[(HEAP32[$5 >> 2] | 0) >> 2] | 0, 3) - (HEAP32[($4 + 120 | 0) >> 2] | 0) | 0, 5) | 0) & 1 | 0)) {
        break label$6
       }
       HEAP32[($4 + 96 | 0) >> 2] = 0;
      }
      $101 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29_20const(HEAP32[($5 + 36 | 0) >> 2] | 0 | 0, HEAP32[($4 + 124 | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($4 + 100 | 0) >> 2] | 0 | 0) | 0;
      $104 = $4 + 64 | 0;
      i64toi32_i32$2 = $101;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $381 = i64toi32_i32$0;
      i64toi32_i32$0 = $104;
      HEAP32[i64toi32_i32$0 >> 2] = $381;
      HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
      $106 = 24;
      i64toi32_i32$2 = i64toi32_i32$2 + $106 | 0;
      i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $391 = i64toi32_i32$1;
      i64toi32_i32$1 = $104 + $106 | 0;
      HEAP32[i64toi32_i32$1 >> 2] = $391;
      HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
      $110 = 16;
      i64toi32_i32$2 = $101 + $110 | 0;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $401 = i64toi32_i32$0;
      i64toi32_i32$0 = $104 + $110 | 0;
      HEAP32[i64toi32_i32$0 >> 2] = $401;
      HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
      $114 = 8;
      i64toi32_i32$2 = $101 + $114 | 0;
      i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      $411 = i64toi32_i32$1;
      i64toi32_i32$1 = $104 + $114 | 0;
      HEAP32[i64toi32_i32$1 >> 2] = $411;
      HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
      GPoint3__GPoint3_28double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29($4 + 8 | 0 | 0, +(+HEAPF64[($4 + 64 | 0) >> 3]), +(+HEAPF64[($4 + 72 | 0) >> 3]), +(+HEAPF64[($4 + 80 | 0) >> 3]), HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($4 + 120 | 0) >> 2] | 0 | 0, HEAP32[($4 + 96 | 0) >> 2] | 0 | 0, HEAP32[($7 + 12 | 0) >> 2] | 0 | 0, HEAP32[($7 + 16 | 0) >> 2] | 0 | 0, (GPoint3__is_phex_center_28int_2c_20int_2c_20int_29(HEAP32[(HEAP32[($5 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0, HEAP32[($4 + 120 | 0) >> 2] | 0 | 0, HEAP32[($4 + 96 | 0) >> 2] | 0 | 0) | 0) & 1 | 0 | 0, -1 | 0) | 0;
      std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___push_back_28GPoint3_20const__29(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___operator_5b_5d_28unsigned_20long_29($0 | 0, HEAP32[($4 + 124 | 0) >> 2] | 0 | 0) | 0 | 0, $4 + 8 | 0 | 0);
      GPoint3___GPoint3_28_29($4 + 8 | 0 | 0) | 0;
      Point3___Point3_28_29($4 + 64 | 0 | 0) | 0;
      HEAP32[($4 + 100 | 0) >> 2] = (HEAP32[($4 + 100 | 0) >> 2] | 0) + 1 | 0;
      continue label$5;
     };
    }
    HEAP32[($4 + 124 | 0) >> 2] = (HEAP32[($4 + 124 | 0) >> 2] | 0) + 1 | 0;
    continue label$1;
   }
   break label$1;
  };
  HEAP8[($4 + 135 | 0) >> 0] = 1 & 1 | 0;
  label$7 : {
   if ((HEAPU8[($4 + 135 | 0) >> 0] | 0) & 1 | 0) {
    break label$7
   }
   std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20____vector_28_29($0 | 0) | 0;
  }
  __stack_pointer = $4 + 144 | 0;
  return;
 }
 
 function std____2____throw_bad_function_call_28_29() {
  var $1 = 0;
  $1 = __cxa_allocate_exception(4 | 0) | 0;
  HEAP32[$1 >> 2] = 0;
  std____2__bad_function_call__bad_function_call_28_29($1 | 0) | 0;
  __cxa_throw($1 | 0, 10984 | 0, 54 | 0);
  abort();
 }
 
 function std____2__bad_function_call__bad_function_call_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std__exception__exception_28_29($4 | 0) | 0;
  HEAP32[$4 >> 2] = 10936 + 8 | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std__exception__exception_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = 11312 + 8 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____vdeallocate_28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___clear_28_29($4 | 0);
   std____2__allocator_traits_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___deallocate_28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20unsigned_20long_29(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($4 | 0) | 0 | 0);
   HEAP32[(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____end_cap_28_29($4 | 0) | 0) >> 2] = 0;
   HEAP32[($4 + 4 | 0) >> 2] = 0;
   HEAP32[$4 >> 2] = 0;
  }
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____move_assign_alloc_28std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____move_assign_alloc_28std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___2c_20std____2__integral_constant_bool_2c_20true__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___size_28_29_20const($4 | 0) | 0;
  std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___clear_28_29($4 | 0);
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_shrink_28unsigned_20long_29_20const($4 | 0, HEAP32[($3 + 8 | 0) >> 2] | 0 | 0);
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____invalidate_all_iterators_28_29($4 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____move_assign_alloc_28std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___2c_20std____2__integral_constant_bool_2c_20true__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__remove_reference_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____type___20std____2__move_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20____28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___29(std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29(HEAP32[$4 >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____vector_base_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____alloc_28_29($5 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_shrink_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $5 = 0, $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____annotate_contiguous_container_28void_20const__2c_20void_20const__2c_20void_20const__2c_20void_20const__29_20const($5 | 0, std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($5 | 0) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___capacity_28_29_20const($5 | 0) | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(HEAP32[($4 + 8 | 0) >> 2] | 0, 12) | 0 | 0, (std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___data_28_29_20const($5 | 0) | 0) + Math_imul(std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___size_28_29_20const($5 | 0) | 0, 12) | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__remove_reference_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20_____type___20std____2__move_std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20____28std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_Triangle_20const______wrap_iter_28Triangle_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  return $5 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___data_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = char_20const__20std____2____to_address_char_20const__28char_20const__29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if (!((std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____is_long_28_29_20const($4 | 0) | 0) & 1 | 0)) {
     break label$2
    }
    $9 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_size_28_29_20const($4 | 0) | 0;
    break label$1;
   }
   $9 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_size_28_29_20const($4 | 0) | 0;
  }
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if (!((std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____is_long_28_29_20const($4 | 0) | 0) & 1 | 0)) {
     break label$2
    }
    $9 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_pointer_28_29_20const($4 | 0) | 0;
    break label$1;
   }
   $9 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_pointer_28_29_20const($4 | 0) | 0;
  }
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function char_20const__20std____2____to_address_char_20const__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____is_long_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAPU8[((std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) + 11 | 0) >> 0] | 0;
  __stack_pointer = $3 + 16 | 0;
  return (($6 & 255 | 0) & 128 | 0 | 0) != (0 | 0) & 1 | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[((std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) + 4 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAPU8[((std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) + 11 | 0) >> 0] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 & 255 | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_pointer_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_pointer_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = std____2__pointer_traits_char_20const____pointer_to_28char_20const__29(std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__pointer_traits_char_20const____pointer_to_28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = char_20const__20std____2__addressof_char_20const__28char_20const__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function char_20const__20std____2__addressof_char_20const__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_GPoint3______wrap_iter_28GPoint3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  return $5 | 0;
 }
 
 function emscripten__internal__BindingType_long_2c_20void___fromWireType_28long_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__BindingType_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20void___toWireType_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $12 = 0, $23 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  HEAP32[($3 + 8 | 0) >> 2] = dlmalloc(((std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___length_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) << 0 | 0) + 4 | 0 | 0) | 0;
  $12 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___length_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[(HEAP32[($3 + 8 | 0) >> 2] | 0) >> 2] = $12;
  memcpy((HEAP32[($3 + 8 | 0) >> 2] | 0) + 4 | 0 | 0, std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___data_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0, (std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___length_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) << 0 | 0 | 0) | 0;
  $23 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $23 | 0;
 }
 
 function emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long__20___get_28_29() {
  return 3092 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___length_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___size_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20const__20emscripten__internal__getLightTypeID_Icosahedron__28Icosahedron_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 3256 | 0;
 }
 
 function emscripten__internal__LightTypeID_Icosahedron___get_28_29() {
  return 3256 | 0;
 }
 
 function emscripten__internal__LightTypeID_Icosahedron____get_28_29() {
  return 3280 | 0;
 }
 
 function emscripten__internal__LightTypeID_Icosahedron_20const____get_28_29() {
  return 3312 | 0;
 }
 
 function ico__map_orientation___20std____2__forward_ico__map_orientation__28std____2__remove_reference_ico__map_orientation___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function ico__rotation_method___20std____2__forward_ico__rotation_method__28std____2__remove_reference_ico__rotation_method___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__Invoker_Icosahedron__2c_20ico__map_orientation___2c_20ico__rotation_method_____invoke_28Icosahedron__20_28__29_28ico__map_orientation___2c_20ico__rotation_method___29_2c_20ico__map_orientation_2c_20ico__rotation_method_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $18 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 16 | 0) >> 2] = emscripten__internal__BindingType_ico__map_orientation___2c_20void___fromWireType_28ico__map_orientation_29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 12 | 0) >> 2] = emscripten__internal__BindingType_ico__rotation_method___2c_20void___fromWireType_28ico__rotation_method_29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
  $18 = emscripten__internal__BindingType_Icosahedron__2c_20void___toWireType_28Icosahedron__29(FUNCTION_TABLE[$6 | 0]($5 + 16 | 0, $5 + 12 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $18 | 0;
 }
 
 function emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Icosahedron__2c_20ico__map_orientation___2c_20ico__rotation_method_____getCount_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 3 | 0;
 }
 
 function emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Icosahedron__2c_20ico__map_orientation___2c_20ico__rotation_method_____getTypes_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_emscripten__internal__AllowedRawPointer_Icosahedron__2c_20ico__map_orientation___2c_20ico__rotation_method____20___get_28_29() | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int_2c_20int__28_29() {
  return 3412 | 0;
 }
 
 function emscripten__internal__BindingType_ico__map_orientation___2c_20void___fromWireType_28ico__map_orientation_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = emscripten__internal__EnumBindingType_ico__map_orientation___fromWireType_28ico__map_orientation_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function emscripten__internal__BindingType_ico__rotation_method___2c_20void___fromWireType_28ico__rotation_method_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = emscripten__internal__EnumBindingType_ico__rotation_method___fromWireType_28ico__rotation_method_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function emscripten__internal__BindingType_Icosahedron__2c_20void___toWireType_28Icosahedron__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_emscripten__internal__AllowedRawPointer_Icosahedron__2c_20ico__map_orientation___2c_20ico__rotation_method____20___get_28_29() {
  return 3336 | 0;
 }
 
 function emscripten__internal__EnumBindingType_ico__map_orientation___fromWireType_28ico__map_orientation_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__EnumBindingType_ico__rotation_method___fromWireType_28ico__rotation_method_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__Invoker_Icosahedron____invoke_28Icosahedron__20_28__29_28_29_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = emscripten__internal__BindingType_Icosahedron__2c_20void___toWireType_28Icosahedron__29(FUNCTION_TABLE[HEAP32[($3 + 12 | 0) >> 2] | 0 | 0]() | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Icosahedron____getCount_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 1 | 0;
 }
 
 function emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Icosahedron____getTypes_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_emscripten__internal__AllowedRawPointer_Icosahedron__20__20___get_28_29() | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_emscripten__internal__AllowedRawPointer_Icosahedron__20__20___get_28_29() {
  return 3420 | 0;
 }
 
 function emscripten__internal__MethodInvoker_Point3_20_28Icosahedron____29_28double_2c_20double_29_20const_2c_20Point3_2c_20Icosahedron_20const__2c_20double_2c_20double___invoke_28Point3_20_28Icosahedron____20const__29_28double_2c_20double_29_20const_2c_20Icosahedron_20const__2c_20double_2c_20double_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = +$2;
  $3 = +$3;
  var $6 = 0, $9 = 0, $10 = 0, $11 = 0, $14 = 0, $20 = 0, $8 = 0, $32 = 0;
  $6 = __stack_pointer - 64 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 60 | 0) >> 2] = $0;
  HEAP32[($6 + 56 | 0) >> 2] = $1;
  HEAPF64[($6 + 48 | 0) >> 3] = $2;
  HEAPF64[($6 + 40 | 0) >> 3] = $3;
  $8 = emscripten__internal__BindingType_Icosahedron_20const__2c_20void___fromWireType_28Icosahedron_20const__29(HEAP32[($6 + 56 | 0) >> 2] | 0 | 0) | 0;
  $9 = HEAP32[($6 + 60 | 0) >> 2] | 0;
  $10 = HEAP32[($9 + 4 | 0) >> 2] | 0;
  $11 = HEAP32[$9 >> 2] | 0;
  $14 = $8 + ($10 >> 1 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!($10 & 1 | 0)) {
     break label$2
    }
    $20 = HEAP32[((HEAP32[$14 >> 2] | 0) + $11 | 0) >> 2] | 0;
    break label$1;
   }
   $20 = $11;
  }
  FUNCTION_TABLE[$20 | 0]($6 + 8 | 0, $14, +emscripten__internal__BindingType_double_2c_20void___fromWireType_28double_29(+(+HEAPF64[($6 + 48 | 0) >> 3])), +emscripten__internal__BindingType_double_2c_20void___fromWireType_28double_29(+(+HEAPF64[($6 + 40 | 0) >> 3])));
  $32 = emscripten__internal__GenericBindingType_Point3___toWireType_28Point3___29($6 + 8 | 0 | 0) | 0;
  Point3___Point3_28_29($6 + 8 | 0 | 0) | 0;
  __stack_pointer = $6 + 64 | 0;
  return $32 | 0;
 }
 
 function emscripten__internal__WithPolicies____ArgTypeList_Point3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20double_2c_20double___getCount_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 4 | 0;
 }
 
 function emscripten__internal__WithPolicies____ArgTypeList_Point3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20double_2c_20double___getTypes_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_Point3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20double_2c_20double__20___get_28_29() | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int_2c_20double_2c_20double__28_29() {
  return 3456 | 0;
 }
 
 function Point3_20_28Icosahedron____emscripten__internal__getContext_Point3_20_28Icosahedron____29_28double_2c_20double_29_20const__28Point3_20_28Icosahedron____20const__29_28double_2c_20double_29_20const_29_29_28double_2c_20double_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $7 = 0, $8 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(8 | 0) | 0;
  $7 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($7 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = $8;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $10 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function emscripten__internal__BindingType_Icosahedron_20const__2c_20void___fromWireType_28Icosahedron_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__BindingType_double_2c_20void___fromWireType_28double_29($0) {
  $0 = +$0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAPF64[($3 + 8 | 0) >> 3] = $0;
  return +(+HEAPF64[($3 + 8 | 0) >> 3]);
 }
 
 function emscripten__internal__GenericBindingType_Point3___toWireType_28Point3___29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $3 = 0, $7 = 0, $9 = 0, $13 = 0, $17 = 0, $39 = 0, $49 = 0, $59 = 0, $69 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(32 | 0) | 0;
  $7 = Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $39 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $39;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $9 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $9 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $49 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $9 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $49;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $13 = 16;
  i64toi32_i32$2 = $7 + $13 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $59 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + $13 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $59;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $17 = 8;
  i64toi32_i32$2 = $7 + $17 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $69 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $17 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $69;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_Point3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20double_2c_20double__20___get_28_29() {
  return 3424 | 0;
 }
 
 function Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__MethodInvoker_Icosahedron__hash_properties_20_28Icosahedron____29_28Point3_2c_20int_29_2c_20Icosahedron__hash_properties_2c_20Icosahedron__2c_20Point3_2c_20int___invoke_28Icosahedron__hash_properties_20_28Icosahedron____20const__29_28Point3_2c_20int_29_2c_20Icosahedron__2c_20Point3__2c_20int_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $26 = 0, $23 = 0, $9 = 0, $10 = 0, $11 = 0, $14 = 0, $20 = 0, $28 = 0, $32 = 0, $36 = 0, $8 = 0, $112 = 0, $122 = 0, $132 = 0, $142 = 0, $51 = 0;
  $6 = __stack_pointer - 80 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 76 | 0) >> 2] = $0;
  HEAP32[($6 + 72 | 0) >> 2] = $1;
  HEAP32[($6 + 68 | 0) >> 2] = $2;
  HEAP32[($6 + 64 | 0) >> 2] = $3;
  $8 = emscripten__internal__BindingType_Icosahedron__2c_20void___fromWireType_28Icosahedron__29(HEAP32[($6 + 72 | 0) >> 2] | 0 | 0) | 0;
  $9 = HEAP32[($6 + 76 | 0) >> 2] | 0;
  $10 = HEAP32[($9 + 4 | 0) >> 2] | 0;
  $11 = HEAP32[$9 >> 2] | 0;
  $14 = $8 + ($10 >> 1 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!($10 & 1 | 0)) {
     break label$2
    }
    $20 = HEAP32[((HEAP32[$14 >> 2] | 0) + $11 | 0) >> 2] | 0;
    break label$1;
   }
   $20 = $11;
  }
  $23 = emscripten__internal__GenericBindingType_Point3___fromWireType_28Point3__29(HEAP32[($6 + 68 | 0) >> 2] | 0 | 0) | 0;
  $26 = $6 + 8 | 0;
  i64toi32_i32$2 = $23;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $112 = i64toi32_i32$0;
  i64toi32_i32$0 = $26;
  HEAP32[i64toi32_i32$0 >> 2] = $112;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $28 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $28 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $122 = i64toi32_i32$1;
  i64toi32_i32$1 = $26 + $28 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $122;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $32 = 16;
  i64toi32_i32$2 = $23 + $32 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $132 = i64toi32_i32$0;
  i64toi32_i32$0 = $26 + $32 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $132;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $36 = 8;
  i64toi32_i32$2 = $23 + $36 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $142 = i64toi32_i32$1;
  i64toi32_i32$1 = $26 + $36 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $142;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  FUNCTION_TABLE[$20 | 0]($6 + 40 | 0, $14, $6 + 8 | 0, emscripten__internal__BindingType_int_2c_20void___fromWireType_28int_29(HEAP32[($6 + 64 | 0) >> 2] | 0 | 0) | 0);
  $51 = emscripten__internal__GenericBindingType_Icosahedron__hash_properties___toWireType_28Icosahedron__hash_properties___29($6 + 40 | 0 | 0) | 0;
  Point3___Point3_28_29($6 + 8 | 0 | 0) | 0;
  __stack_pointer = $6 + 80 | 0;
  return $51 | 0;
 }
 
 function emscripten__internal__WithPolicies____ArgTypeList_Icosahedron__hash_properties_2c_20emscripten__internal__AllowedRawPointer_Icosahedron__2c_20Point3_2c_20int___getCount_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 4 | 0;
 }
 
 function emscripten__internal__WithPolicies____ArgTypeList_Icosahedron__hash_properties_2c_20emscripten__internal__AllowedRawPointer_Icosahedron__2c_20Point3_2c_20int___getTypes_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_Icosahedron__hash_properties_2c_20emscripten__internal__AllowedRawPointer_Icosahedron__2c_20Point3_2c_20int__20___get_28_29() | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20int_2c_20int_2c_20int__28_29() {
  return 3532 | 0;
 }
 
 function Icosahedron__hash_properties_20_28Icosahedron____emscripten__internal__getContext_Icosahedron__hash_properties_20_28Icosahedron____29_28Point3_2c_20int_29__28Icosahedron__hash_properties_20_28Icosahedron____20const__29_28Point3_2c_20int_29_29_29_28Point3_2c_20int_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $7 = 0, $8 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(8 | 0) | 0;
  $7 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($7 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = $8;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $10 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function emscripten__internal__BindingType_Icosahedron__2c_20void___fromWireType_28Icosahedron__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__GenericBindingType_Point3___fromWireType_28Point3__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__BindingType_int_2c_20void___fromWireType_28int_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__GenericBindingType_Icosahedron__hash_properties___toWireType_28Icosahedron__hash_properties___29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $3 = 0, $5 = 0, $9 = 0, $13 = 0, $35 = 0, $55 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(20 | 0) | 0;
  i64toi32_i32$2 = Icosahedron__hash_properties___20std____2__forward_Icosahedron__hash_properties__28std____2__remove_reference_Icosahedron__hash_properties___type__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $35 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $35;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $9 = 16;
  HEAP32[(i64toi32_i32$0 + $9 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $9 | 0) >> 2] | 0;
  $13 = 8;
  i64toi32_i32$2 = i64toi32_i32$2 + $13 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $55 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $13 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $55;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_Icosahedron__hash_properties_2c_20emscripten__internal__AllowedRawPointer_Icosahedron__2c_20Point3_2c_20int__20___get_28_29() {
  return 3472 | 0;
 }
 
 function Icosahedron__hash_properties___20std____2__forward_Icosahedron__hash_properties__28std____2__remove_reference_Icosahedron__hash_properties___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__MethodInvoker_GPoint3_20_28Icosahedron____29_28Icosahedron__hash_properties_29_20const_2c_20GPoint3_2c_20Icosahedron_20const__2c_20Icosahedron__hash_properties___invoke_28GPoint3_20_28Icosahedron____20const__29_28Icosahedron__hash_properties_29_20const_2c_20Icosahedron_20const__2c_20Icosahedron__hash_properties__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $8 = 0, $9 = 0, $10 = 0, $13 = 0, $19 = 0, $25 = 0, $27 = 0, $31 = 0, $37 = 0, $45 = 0, $7 = 0, $22 = 0, $120 = 0, $140 = 0, $176 = 0, $180 = 0, $61 = 0;
  $5 = __stack_pointer - 128 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 124 | 0) >> 2] = $0;
  HEAP32[($5 + 120 | 0) >> 2] = $1;
  HEAP32[($5 + 116 | 0) >> 2] = $2;
  $7 = emscripten__internal__BindingType_Icosahedron_20const__2c_20void___fromWireType_28Icosahedron_20const__29(HEAP32[($5 + 120 | 0) >> 2] | 0 | 0) | 0;
  $8 = HEAP32[($5 + 124 | 0) >> 2] | 0;
  $9 = HEAP32[($8 + 4 | 0) >> 2] | 0;
  $10 = HEAP32[$8 >> 2] | 0;
  $13 = $7 + ($9 >> 1 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!($9 & 1 | 0)) {
     break label$2
    }
    $19 = HEAP32[((HEAP32[$13 >> 2] | 0) + $10 | 0) >> 2] | 0;
    break label$1;
   }
   $19 = $10;
  }
  $22 = emscripten__internal__GenericBindingType_Icosahedron__hash_properties___fromWireType_28Icosahedron__hash_properties__29(HEAP32[($5 + 116 | 0) >> 2] | 0 | 0) | 0;
  $25 = $5 + 32 | 0;
  i64toi32_i32$2 = $22;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $120 = i64toi32_i32$0;
  i64toi32_i32$0 = $25;
  HEAP32[i64toi32_i32$0 >> 2] = $120;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $27 = 16;
  HEAP32[(i64toi32_i32$0 + $27 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $27 | 0) >> 2] | 0;
  $31 = 8;
  i64toi32_i32$2 = i64toi32_i32$2 + $31 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $140 = i64toi32_i32$1;
  i64toi32_i32$1 = $25 + $31 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $140;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $37 = 16;
  HEAP32[(($5 + 8 | 0) + $37 | 0) >> 2] = HEAP32[(($5 + 32 | 0) + $37 | 0) >> 2] | 0;
  $45 = 8;
  i64toi32_i32$2 = ($5 + 32 | 0) + $45 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $176 = i64toi32_i32$0;
  i64toi32_i32$0 = ($5 + 8 | 0) + $45 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $176;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 36 | 0) >> 2] | 0;
  $180 = i64toi32_i32$1;
  i64toi32_i32$1 = $5;
  HEAP32[($5 + 8 | 0) >> 2] = $180;
  HEAP32[($5 + 12 | 0) >> 2] = i64toi32_i32$0;
  FUNCTION_TABLE[$19 | 0]($5 + 56 | 0, $13, $5 + 8 | 0);
  $61 = emscripten__internal__GenericBindingType_GPoint3___toWireType_28GPoint3___29($5 + 56 | 0 | 0) | 0;
  GPoint3___GPoint3_28_29($5 + 56 | 0 | 0) | 0;
  __stack_pointer = $5 + 128 | 0;
  return $61 | 0;
 }
 
 function emscripten__internal__WithPolicies____ArgTypeList_GPoint3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20Icosahedron__hash_properties___getCount_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 3 | 0;
 }
 
 function emscripten__internal__WithPolicies____ArgTypeList_GPoint3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20Icosahedron__hash_properties___getTypes_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_GPoint3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20Icosahedron__hash_properties__20___get_28_29() | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function GPoint3_20_28Icosahedron____emscripten__internal__getContext_GPoint3_20_28Icosahedron____29_28Icosahedron__hash_properties_29_20const__28GPoint3_20_28Icosahedron____20const__29_28Icosahedron__hash_properties_29_20const_29_29_28Icosahedron__hash_properties_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $7 = 0, $8 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(8 | 0) | 0;
  $7 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($7 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = $8;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $10 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function emscripten__internal__GenericBindingType_Icosahedron__hash_properties___fromWireType_28Icosahedron__hash_properties__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__GenericBindingType_GPoint3___toWireType_28GPoint3___29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $7 = 0, $3 = 0, $9 = 0, $13 = 0, $17 = 0, $21 = 0, $25 = 0, $29 = 0, $51 = 0, $61 = 0, $71 = 0, $81 = 0, $91 = 0, $101 = 0, $111 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(56 | 0) | 0;
  $7 = GPoint3___20std____2__forward_GPoint3__28std____2__remove_reference_GPoint3___type__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $51 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $51;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $9 = 48;
  i64toi32_i32$2 = i64toi32_i32$2 + $9 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $61 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $9 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $61;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $13 = 40;
  i64toi32_i32$2 = $7 + $13 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $71 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + $13 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $71;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $17 = 32;
  i64toi32_i32$2 = $7 + $17 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $81 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $17 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $81;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $21 = 24;
  i64toi32_i32$2 = $7 + $21 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $91 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + $21 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $91;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $25 = 16;
  i64toi32_i32$2 = $7 + $25 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $101 = i64toi32_i32$1;
  i64toi32_i32$1 = $5 + $25 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $101;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $29 = 8;
  i64toi32_i32$2 = $7 + $29 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $111 = i64toi32_i32$0;
  i64toi32_i32$0 = $5 + $29 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $111;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_GPoint3_2c_20emscripten__internal__AllowedRawPointer_Icosahedron_20const__2c_20Icosahedron__hash_properties__20___get_28_29() {
  return 3540 | 0;
 }
 
 function emscripten__internal__LightTypeID_Icosahedron__hash_properties___get_28_29() {
  return 3524 | 0;
 }
 
 function emscripten__internal__EnumBindingType_ico__map_orientation___toWireType_28ico__map_orientation_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_ico__map_orientation___get_28_29() {
  return 3372 | 0;
 }
 
 function emscripten__internal__EnumBindingType_ico__rotation_method___toWireType_28ico__rotation_method_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_ico__rotation_method___get_28_29() {
  return 3404 | 0;
 }
 
 function emscripten__internal__BindingType_int_2c_20void___toWireType_28int_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_int___get_28_29() {
  return 12100 | 0;
 }
 
 function void_20const__20emscripten__internal__getLightTypeID_Point3__28Point3_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 3448 | 0;
 }
 
 function emscripten__internal__LightTypeID_Point3___get_28_29() {
  return 3448 | 0;
 }
 
 function emscripten__internal__LightTypeID_Point3____get_28_29() {
  return 3592 | 0;
 }
 
 function emscripten__internal__LightTypeID_Point3_20const____get_28_29() {
  return 3620 | 0;
 }
 
 function double___20std____2__forward_double__28std____2__remove_reference_double___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function bool___20std____2__forward_bool__28std____2__remove_reference_bool___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function int___20std____2__forward_int__28std____2__remove_reference_int___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__Invoker_Point3__2c_20double___2c_20double___2c_20double___2c_20bool___2c_20int_____invoke_28Point3__20_28__29_28double___2c_20double___2c_20double___2c_20bool___2c_20int___29_2c_20double_2c_20double_2c_20double_2c_20bool_2c_20int_29($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = +$1;
  $2 = +$2;
  $3 = +$3;
  $4 = $4 | 0;
  $5 = $5 | 0;
  var $8 = 0, $10 = 0, $41 = 0;
  $8 = __stack_pointer - 80 | 0;
  __stack_pointer = $8;
  HEAP32[($8 + 76 | 0) >> 2] = $0;
  HEAPF64[($8 + 64 | 0) >> 3] = $1;
  HEAPF64[($8 + 56 | 0) >> 3] = $2;
  HEAPF64[($8 + 48 | 0) >> 3] = $3;
  HEAP8[($8 + 47 | 0) >> 0] = $4;
  HEAP32[($8 + 40 | 0) >> 2] = $5;
  $10 = HEAP32[($8 + 76 | 0) >> 2] | 0;
  HEAPF64[($8 + 32 | 0) >> 3] = +emscripten__internal__BindingType_double___2c_20void___fromWireType_28double_29(+(+HEAPF64[($8 + 64 | 0) >> 3]));
  HEAPF64[($8 + 24 | 0) >> 3] = +emscripten__internal__BindingType_double___2c_20void___fromWireType_28double_29(+(+HEAPF64[($8 + 56 | 0) >> 3]));
  HEAPF64[($8 + 16 | 0) >> 3] = +emscripten__internal__BindingType_double___2c_20void___fromWireType_28double_29(+(+HEAPF64[($8 + 48 | 0) >> 3]));
  HEAP8[($8 + 15 | 0) >> 0] = (emscripten__internal__BindingType_bool___2c_20void___fromWireType_28bool_29((HEAPU8[($8 + 47 | 0) >> 0] | 0) & 1 | 0 | 0) | 0) & 1 | 0;
  HEAP32[($8 + 8 | 0) >> 2] = emscripten__internal__BindingType_int___2c_20void___fromWireType_28int_29(HEAP32[($8 + 40 | 0) >> 2] | 0 | 0) | 0;
  $41 = emscripten__internal__BindingType_Point3__2c_20void___toWireType_28Point3__29(FUNCTION_TABLE[$10 | 0]($8 + 32 | 0, $8 + 24 | 0, $8 + 16 | 0, $8 + 15 | 0, $8 + 8 | 0) | 0 | 0) | 0;
  __stack_pointer = $8 + 80 | 0;
  return $41 | 0;
 }
 
 function emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Point3__2c_20double___2c_20double___2c_20double___2c_20bool___2c_20int_____getCount_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 6 | 0;
 }
 
 function emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_Point3__2c_20double___2c_20double___2c_20double___2c_20bool___2c_20int_____getTypes_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_emscripten__internal__AllowedRawPointer_Point3__2c_20double___2c_20double___2c_20double___2c_20bool___2c_20int____20___get_28_29() | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20double_2c_20double_2c_20double_2c_20int_2c_20int__28_29() {
  return 3672 | 0;
 }
 
 function emscripten__internal__BindingType_double___2c_20void___fromWireType_28double_29($0) {
  $0 = +$0;
  var $3 = 0, $5 = 0.0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAPF64[($3 + 8 | 0) >> 3] = $0;
  $5 = +emscripten__internal__BindingType_double_2c_20void___fromWireType_28double_29(+(+HEAPF64[($3 + 8 | 0) >> 3]));
  __stack_pointer = $3 + 16 | 0;
  return +$5;
 }
 
 function emscripten__internal__BindingType_bool___2c_20void___fromWireType_28bool_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $8 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP8[($3 + 15 | 0) >> 0] = $0;
  $8 = emscripten__internal__BindingType_bool_2c_20void___fromWireType_28bool_29((HEAPU8[($3 + 15 | 0) >> 0] | 0) & 1 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $8 & 1 | 0 | 0;
 }
 
 function emscripten__internal__BindingType_int___2c_20void___fromWireType_28int_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = emscripten__internal__BindingType_int_2c_20void___fromWireType_28int_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function emscripten__internal__BindingType_Point3__2c_20void___toWireType_28Point3__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_emscripten__internal__AllowedRawPointer_Point3__2c_20double___2c_20double___2c_20double___2c_20bool___2c_20int____20___get_28_29() {
  return 3648 | 0;
 }
 
 function emscripten__internal__BindingType_bool_2c_20void___fromWireType_28bool_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP8[($3 + 15 | 0) >> 0] = $0;
  return (HEAPU8[($3 + 15 | 0) >> 0] | 0) & 1 | 0 | 0;
 }
 
 function emscripten__internal__BindingType_double_2c_20void___toWireType_28double_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return +(+HEAPF64[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 3]);
 }
 
 function emscripten__internal__LightTypeID_double___get_28_29() {
  return 12160 | 0;
 }
 
 function emscripten__internal__BindingType_bool_2c_20void___toWireType_28bool_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP8[($3 + 15 | 0) >> 0] = $0;
  return (HEAPU8[($3 + 15 | 0) >> 0] | 0) & 1 | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_bool___get_28_29() {
  return 12028 | 0;
 }
 
 function void_20const__20emscripten__internal__getLightTypeID_GPoint3__28GPoint3_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 3564 | 0;
 }
 
 function emscripten__internal__LightTypeID_GPoint3___get_28_29() {
  return 3564 | 0;
 }
 
 function emscripten__internal__LightTypeID_GPoint3____get_28_29() {
  return 3700 | 0;
 }
 
 function emscripten__internal__LightTypeID_GPoint3_20const____get_28_29() {
  return 3728 | 0;
 }
 
 function emscripten__internal__Invoker_GPoint3__2c_20double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int_____invoke_28GPoint3__20_28__29_28double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int___29_2c_20double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
  $0 = $0 | 0;
  $1 = +$1;
  $2 = +$2;
  $3 = +$3;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  $7 = $7 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  $10 = $10 | 0;
  var $13 = 0, $15 = 0, $71 = 0;
  $13 = __stack_pointer - 128 | 0;
  __stack_pointer = $13;
  HEAP32[($13 + 124 | 0) >> 2] = $0;
  HEAPF64[($13 + 112 | 0) >> 3] = $1;
  HEAPF64[($13 + 104 | 0) >> 3] = $2;
  HEAPF64[($13 + 96 | 0) >> 3] = $3;
  HEAP32[($13 + 92 | 0) >> 2] = $4;
  HEAP32[($13 + 88 | 0) >> 2] = $5;
  HEAP32[($13 + 84 | 0) >> 2] = $6;
  HEAP32[($13 + 80 | 0) >> 2] = $7;
  HEAP32[($13 + 76 | 0) >> 2] = $8;
  HEAP8[($13 + 75 | 0) >> 0] = $9;
  HEAP32[($13 + 68 | 0) >> 2] = $10;
  $15 = HEAP32[($13 + 124 | 0) >> 2] | 0;
  HEAPF64[($13 + 56 | 0) >> 3] = +emscripten__internal__BindingType_double___2c_20void___fromWireType_28double_29(+(+HEAPF64[($13 + 112 | 0) >> 3]));
  HEAPF64[($13 + 48 | 0) >> 3] = +emscripten__internal__BindingType_double___2c_20void___fromWireType_28double_29(+(+HEAPF64[($13 + 104 | 0) >> 3]));
  HEAPF64[($13 + 40 | 0) >> 3] = +emscripten__internal__BindingType_double___2c_20void___fromWireType_28double_29(+(+HEAPF64[($13 + 96 | 0) >> 3]));
  HEAP32[($13 + 36 | 0) >> 2] = emscripten__internal__BindingType_int___2c_20void___fromWireType_28int_29(HEAP32[($13 + 92 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($13 + 32 | 0) >> 2] = emscripten__internal__BindingType_int___2c_20void___fromWireType_28int_29(HEAP32[($13 + 88 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($13 + 28 | 0) >> 2] = emscripten__internal__BindingType_int___2c_20void___fromWireType_28int_29(HEAP32[($13 + 84 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($13 + 24 | 0) >> 2] = emscripten__internal__BindingType_ico__map_orientation___2c_20void___fromWireType_28ico__map_orientation_29(HEAP32[($13 + 80 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($13 + 20 | 0) >> 2] = emscripten__internal__BindingType_ico__rotation_method___2c_20void___fromWireType_28ico__rotation_method_29(HEAP32[($13 + 76 | 0) >> 2] | 0 | 0) | 0;
  HEAP8[($13 + 19 | 0) >> 0] = (emscripten__internal__BindingType_bool___2c_20void___fromWireType_28bool_29((HEAPU8[($13 + 75 | 0) >> 0] | 0) & 1 | 0 | 0) | 0) & 1 | 0;
  HEAP32[($13 + 12 | 0) >> 2] = emscripten__internal__BindingType_int___2c_20void___fromWireType_28int_29(HEAP32[($13 + 68 | 0) >> 2] | 0 | 0) | 0;
  $71 = emscripten__internal__BindingType_GPoint3__2c_20void___toWireType_28GPoint3__29(FUNCTION_TABLE[$15 | 0]($13 + 56 | 0, $13 + 48 | 0, $13 + 40 | 0, $13 + 36 | 0, $13 + 32 | 0, $13 + 28 | 0, $13 + 24 | 0, $13 + 20 | 0, $13 + 19 | 0, $13 + 12 | 0) | 0 | 0) | 0;
  __stack_pointer = $13 + 128 | 0;
  return $71 | 0;
 }
 
 function emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_GPoint3__2c_20double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int_____getCount_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 11 | 0;
 }
 
 function emscripten__internal__WithPolicies_emscripten__allow_raw_pointers___ArgTypeList_GPoint3__2c_20double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int_____getTypes_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_emscripten__internal__AllowedRawPointer_GPoint3__2c_20double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int____20___get_28_29() | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function char_20const__20emscripten__internal__getGenericSignature_int_2c_20int_2c_20double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_2c_20int__28_29() {
  return 3788 | 0;
 }
 
 function emscripten__internal__BindingType_GPoint3__2c_20void___toWireType_28GPoint3__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function emscripten__internal__ArgArrayGetter_emscripten__internal__TypeList_emscripten__internal__AllowedRawPointer_GPoint3__2c_20double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int____20___get_28_29() {
  return 3744 | 0;
 }
 
 function double_20_28GPoint3____emscripten__internal__getContext_double_20_28GPoint3____29_28_29_20const__28double_20_28GPoint3____20const__29_28_29_20const_29_29_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $7 = 0, $8 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(8 | 0) | 0;
  $7 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($7 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = $8;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $10 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function int_20_28GPoint3____emscripten__internal__getContext_int_20_28GPoint3____29_28_29_20const__28int_20_28GPoint3____20const__29_28_29_20const_29_29_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $7 = 0, $8 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(8 | 0) | 0;
  $7 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($7 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = $8;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $10 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function bool_20_28GPoint3____emscripten__internal__getContext_bool_20_28GPoint3____29_28_29_20const__28bool_20_28GPoint3____20const__29_28_29_20const_29_29_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0, $7 = 0, $8 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = operator_20new_28unsigned_20long_29(8 | 0) | 0;
  $7 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[($7 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = $8;
  HEAP32[($3 + 8 | 0) >> 2] = $5;
  $10 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function _GLOBAL__sub_I_icosahedron_cpp() {
  __cxx_global_var_init();
  return;
 }
 
 function Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  $7 = $7 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $12 = 0, $13 = 0, $28 = 0, $43 = 0, $15 = 0, $19 = 0, $23 = 0, $30 = 0, $34 = 0, $38 = 0, $45 = 0, $49 = 0, $53 = 0, $86 = 0, $96 = 0, $106 = 0, $116 = 0, $123 = 0, $133 = 0, $143 = 0, $153 = 0, $160 = 0, $170 = 0, $180 = 0, $190 = 0;
  $12 = __stack_pointer - 32 | 0;
  HEAP32[($12 + 28 | 0) >> 2] = $0;
  HEAP32[($12 + 24 | 0) >> 2] = $4;
  HEAP32[($12 + 20 | 0) >> 2] = $5;
  HEAP32[($12 + 16 | 0) >> 2] = $6;
  HEAP32[($12 + 12 | 0) >> 2] = $7;
  HEAP32[($12 + 8 | 0) >> 2] = $8;
  HEAP32[($12 + 4 | 0) >> 2] = $9;
  $13 = HEAP32[($12 + 28 | 0) >> 2] | 0;
  i64toi32_i32$2 = $1;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $86 = i64toi32_i32$0;
  i64toi32_i32$0 = $13;
  HEAP32[i64toi32_i32$0 >> 2] = $86;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $15 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $96 = i64toi32_i32$1;
  i64toi32_i32$1 = $13 + $15 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $96;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $19 = 16;
  i64toi32_i32$2 = $1 + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $106 = i64toi32_i32$0;
  i64toi32_i32$0 = $13 + $19 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $106;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $23 = 8;
  i64toi32_i32$2 = $1 + $23 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $116 = i64toi32_i32$1;
  i64toi32_i32$1 = $13 + $23 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $116;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $28 = $13 + 32 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $123 = i64toi32_i32$0;
  i64toi32_i32$0 = $28;
  HEAP32[i64toi32_i32$0 >> 2] = $123;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $30 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $30 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $133 = i64toi32_i32$1;
  i64toi32_i32$1 = $28 + $30 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $133;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $34 = 16;
  i64toi32_i32$2 = $2 + $34 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $143 = i64toi32_i32$0;
  i64toi32_i32$0 = $28 + $34 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $143;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $38 = 8;
  i64toi32_i32$2 = $2 + $38 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $153 = i64toi32_i32$1;
  i64toi32_i32$1 = $28 + $38 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $153;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $43 = $13 + 64 | 0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $160 = i64toi32_i32$0;
  i64toi32_i32$0 = $43;
  HEAP32[i64toi32_i32$0 >> 2] = $160;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $45 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $45 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $170 = i64toi32_i32$1;
  i64toi32_i32$1 = $43 + $45 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $170;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $49 = 16;
  i64toi32_i32$2 = $3 + $49 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $180 = i64toi32_i32$0;
  i64toi32_i32$0 = $43 + $49 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $180;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $53 = 8;
  i64toi32_i32$2 = $3 + $53 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $190 = i64toi32_i32$1;
  i64toi32_i32$1 = $43 + $53 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $190;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  HEAP32[($13 + 96 | 0) >> 2] = HEAP32[($12 + 24 | 0) >> 2] | 0;
  HEAP32[($13 + 100 | 0) >> 2] = HEAP32[($12 + 20 | 0) >> 2] | 0;
  HEAP32[($13 + 104 | 0) >> 2] = HEAP32[($12 + 16 | 0) >> 2] | 0;
  HEAP32[($13 + 108 | 0) >> 2] = HEAP32[($12 + 12 | 0) >> 2] | 0;
  HEAP32[($13 + 112 | 0) >> 2] = HEAP32[($12 + 8 | 0) >> 2] | 0;
  HEAP32[($13 + 116 | 0) >> 2] = HEAP32[($12 + 4 | 0) >> 2] | 0;
  return $13 | 0;
 }
 
 function Triangle__vec_side_components_28Triangle_20const__2c_20Point3_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, i64toi32_i32$3 = 0, $19 = 0, $7 = 0, $13 = 0, $6 = 0, $33 = 0, $59 = 0, $145 = 0, $228 = 0, $146 = 0, $27 = 0, $213 = 0, $231 = 0, $12 = 0, $18 = 0, $24 = 0, $39 = 0, $45 = 0, $51 = 0, $97$hi = 0, $98$hi = 0, $99$hi = 0, $100$hi = 0, $106$hi = 0, $107$hi = 0, $108$hi = 0, $109$hi = 0, $123$hi = 0, $124$hi = 0, $125$hi = 0, $129$hi = 0, $130$hi = 0, $136$hi = 0, $137$hi = 0, $138$hi = 0, $142$hi = 0, $143$hi = 0, $151$hi = 0, $152$hi = 0, $153$hi = 0, $157$hi = 0, $158$hi = 0, $164$hi = 0, $165$hi = 0, $166$hi = 0, $170$hi = 0, $171$hi = 0, $188$hi = 0, $205$hi = 0, $215 = 0, $219 = 0, $223 = 0, $233 = 0, $237 = 0, $241 = 0, $287 = 0, $300 = 0, $313 = 0, $317 = 0, $346 = 0, $359 = 0, $372 = 0, $376 = 0, $405 = 0, $418 = 0, $431 = 0, $435 = 0, $86 = 0, $86$hi = 0, $463 = 0, $94 = 0, $94$hi = 0, $483 = 0, $97 = 0, $98 = 0, $99 = 0, $500 = 0, $106 = 0, $107 = 0, $108 = 0, $522 = 0, $115 = 0, $115$hi = 0, $116 = 0, $116$hi = 0, $121 = 0, $121$hi = 0, $551 = 0, $123 = 0, $124 = 0, $125 = 0, $566$hi = 0, $147 = 0, $129 = 0, $578 = 0, $136 = 0, $137 = 0, $138 = 0, $598$hi = 0, $148 = 0, $142 = 0, $610 = 0, $149 = 0, $149$hi = 0, $150 = 0, $150$hi = 0, $151 = 0, $152 = 0, $153 = 0, $638$hi = 0, $154 = 0, $157 = 0, $650 = 0, $164 = 0, $165 = 0, $166 = 0, $670$hi = 0, $155 = 0, $170 = 0, $679 = 0, $173 = 0, $173$hi = 0, $174 = 0, $174$hi = 0, $701 = 0, $711 = 0, $721 = 0, $725 = 0, $188 = 0, $734$hi = 0, $156 = 0, $745 = 0, $755 = 0, $765 = 0, $769 = 0, $205 = 0, $782$hi = 0, $158 = 0, $791 = 0, $801 = 0, $811 = 0, $821 = 0, $832 = 0, $842 = 0, $852 = 0, $862 = 0;
  $5 = __stack_pointer - 480 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 476 | 0) >> 2] = $0;
  HEAP32[($5 + 472 | 0) >> 2] = $1;
  HEAP32[($5 + 468 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 472 | 0) >> 2] | 0;
  $7 = 24;
  i64toi32_i32$2 = $6 + $7 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $12 = ($5 + 432 | 0) + $7 | 0;
  $287 = i64toi32_i32$0;
  i64toi32_i32$0 = $12;
  HEAP32[i64toi32_i32$0 >> 2] = $287;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $13 = 16;
  i64toi32_i32$2 = $6 + $13 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $18 = ($5 + 432 | 0) + $13 | 0;
  $300 = i64toi32_i32$1;
  i64toi32_i32$1 = $18;
  HEAP32[i64toi32_i32$1 >> 2] = $300;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $19 = 8;
  i64toi32_i32$2 = $6 + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $24 = ($5 + 432 | 0) + $19 | 0;
  $313 = i64toi32_i32$0;
  i64toi32_i32$0 = $24;
  HEAP32[i64toi32_i32$0 >> 2] = $313;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $317 = i64toi32_i32$1;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 432 | 0) >> 2] = $317;
  HEAP32[(i64toi32_i32$1 + 436 | 0) >> 2] = i64toi32_i32$0;
  $27 = 64;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$1 + 432 | 0 | 0, (HEAP32[(i64toi32_i32$1 + 472 | 0) >> 2] | 0) + $27 | 0 | 0);
  Point3__unit_28_29(i64toi32_i32$1 + 432 | 0 | 0);
  $33 = HEAP32[(i64toi32_i32$1 + 472 | 0) >> 2] | 0;
  i64toi32_i32$2 = $33 + 56 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $39 = ($5 + 400 | 0) + $7 | 0;
  $346 = i64toi32_i32$0;
  i64toi32_i32$0 = $39;
  HEAP32[i64toi32_i32$0 >> 2] = $346;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $33 + 48 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $45 = ($5 + 400 | 0) + $13 | 0;
  $359 = i64toi32_i32$1;
  i64toi32_i32$1 = $45;
  HEAP32[i64toi32_i32$1 >> 2] = $359;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $33 + 40 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $51 = ($5 + 400 | 0) + $19 | 0;
  $372 = i64toi32_i32$0;
  i64toi32_i32$0 = $51;
  HEAP32[i64toi32_i32$0 >> 2] = $372;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $33;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $376 = i64toi32_i32$1;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 400 | 0) >> 2] = $376;
  HEAP32[(i64toi32_i32$1 + 404 | 0) >> 2] = i64toi32_i32$0;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$1 + 400 | 0 | 0, (HEAP32[(i64toi32_i32$1 + 472 | 0) >> 2] | 0) + $27 | 0 | 0);
  Point3__unit_28_29(i64toi32_i32$1 + 400 | 0 | 0);
  $59 = HEAP32[(i64toi32_i32$1 + 468 | 0) >> 2] | 0;
  i64toi32_i32$2 = $59 + $7 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $405 = i64toi32_i32$0;
  i64toi32_i32$0 = ($5 + 368 | 0) + $7 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $405;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $59 + $13 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $418 = i64toi32_i32$1;
  i64toi32_i32$1 = ($5 + 368 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $418;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $59 + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $431 = i64toi32_i32$0;
  i64toi32_i32$0 = ($5 + 368 | 0) + $19 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $431;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $59;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $435 = i64toi32_i32$1;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 368 | 0) >> 2] = $435;
  HEAP32[(i64toi32_i32$1 + 372 | 0) >> 2] = i64toi32_i32$0;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$1 + 368 | 0 | 0, (HEAP32[(i64toi32_i32$1 + 472 | 0) >> 2] | 0) + $27 | 0 | 0);
  Point3__angle_between_28Point3_20const__29_20const(i64toi32_i32$1 + 192 | 0 | 0, i64toi32_i32$1 + 432 | 0 | 0, i64toi32_i32$1 + 368 | 0 | 0);
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 192 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 196 | 0) >> 2] | 0;
  $86 = i64toi32_i32$0;
  $86$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 200 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 204 | 0) >> 2] | 0;
  $463 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 360 | 0) >> 2] = $463;
  HEAP32[(i64toi32_i32$1 + 364 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $86$hi;
  HEAP32[(i64toi32_i32$1 + 352 | 0) >> 2] = $86;
  HEAP32[(i64toi32_i32$1 + 356 | 0) >> 2] = i64toi32_i32$0;
  Point3__angle_between_28Point3_20const__29_20const(i64toi32_i32$1 + 176 | 0 | 0, i64toi32_i32$1 + 368 | 0 | 0, i64toi32_i32$1 + 400 | 0 | 0);
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 176 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 180 | 0) >> 2] | 0;
  $94 = i64toi32_i32$0;
  $94$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 184 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 188 | 0) >> 2] | 0;
  $483 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 344 | 0) >> 2] = $483;
  HEAP32[(i64toi32_i32$1 + 348 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $94$hi;
  HEAP32[(i64toi32_i32$1 + 336 | 0) >> 2] = $94;
  HEAP32[(i64toi32_i32$1 + 340 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12552 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12556 | 0) >> 2] | 0;
  $97 = i64toi32_i32$0;
  $97$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12544 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12548 | 0) >> 2] | 0;
  $98 = i64toi32_i32$1;
  $98$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 360 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 364 | 0) >> 2] | 0;
  $99 = i64toi32_i32$0;
  $99$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 352 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 356 | 0) >> 2] | 0;
  $100$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $98$hi;
  i64toi32_i32$0 = $97$hi;
  i64toi32_i32$0 = $100$hi;
  $500 = i64toi32_i32$1;
  i64toi32_i32$0 = $99$hi;
  i64toi32_i32$0 = $98$hi;
  i64toi32_i32$1 = $97$hi;
  i64toi32_i32$2 = $100$hi;
  i64toi32_i32$3 = $99$hi;
  __subtf3($5 + 80 | 0 | 0, $98 | 0, i64toi32_i32$0 | 0, $97 | 0, i64toi32_i32$1 | 0, $500 | 0, i64toi32_i32$2 | 0, $99 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 80 | 0) + $19 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $106 = i64toi32_i32$3;
  $106$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] | 0;
  $107 = i64toi32_i32$2;
  $107$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 344 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 348 | 0) >> 2] | 0;
  $108 = i64toi32_i32$3;
  $108$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 336 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 340 | 0) >> 2] | 0;
  $109$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $107$hi;
  i64toi32_i32$3 = $106$hi;
  i64toi32_i32$3 = $109$hi;
  $522 = i64toi32_i32$2;
  i64toi32_i32$3 = $108$hi;
  i64toi32_i32$3 = $107$hi;
  i64toi32_i32$2 = $106$hi;
  i64toi32_i32$1 = $109$hi;
  i64toi32_i32$0 = $108$hi;
  __subtf3($5 + 64 | 0 | 0, $107 | 0, i64toi32_i32$3 | 0, $106 | 0, i64toi32_i32$2 | 0, $522 | 0, i64toi32_i32$1 | 0, $108 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 64 | 0) + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $115 = i64toi32_i32$0;
  $115$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
  $116 = i64toi32_i32$1;
  $116$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $115$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 328 | 0) >> 2] = $115;
  HEAP32[(i64toi32_i32$1 + 332 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $116$hi;
  HEAP32[(i64toi32_i32$1 + 320 | 0) >> 2] = $116;
  HEAP32[(i64toi32_i32$1 + 324 | 0) >> 2] = i64toi32_i32$0;
  Point3__mag_28_29_20const(i64toi32_i32$1 + 160 | 0 | 0, i64toi32_i32$1 + 368 | 0 | 0);
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 160 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 164 | 0) >> 2] | 0;
  $121 = i64toi32_i32$0;
  $121$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 168 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 172 | 0) >> 2] | 0;
  $551 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 312 | 0) >> 2] = $551;
  HEAP32[(i64toi32_i32$1 + 316 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $121$hi;
  HEAP32[(i64toi32_i32$1 + 304 | 0) >> 2] = $121;
  HEAP32[(i64toi32_i32$1 + 308 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 312 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 316 | 0) >> 2] | 0;
  $123 = i64toi32_i32$0;
  $123$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 304 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 308 | 0) >> 2] | 0;
  $124 = i64toi32_i32$1;
  $124$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 360 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 364 | 0) >> 2] | 0;
  $125 = i64toi32_i32$0;
  $125$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 352 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 356 | 0) >> 2] | 0;
  $566$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $125$hi;
  i64toi32_i32$0 = $566$hi;
  $147 = i64toi32_i32$1;
  i64toi32_i32$1 = $125$hi;
  sin_28long_20double_29(i64toi32_i32$2 + 144 | 0 | 0, $147 | 0, i64toi32_i32$0 | 0, $125 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 152 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 156 | 0) >> 2] | 0;
  $129 = i64toi32_i32$1;
  $129$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 144 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 148 | 0) >> 2] | 0;
  $130$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $124$hi;
  i64toi32_i32$1 = $123$hi;
  i64toi32_i32$1 = $130$hi;
  $578 = i64toi32_i32$0;
  i64toi32_i32$1 = $129$hi;
  i64toi32_i32$1 = $124$hi;
  i64toi32_i32$0 = $123$hi;
  i64toi32_i32$2 = $130$hi;
  i64toi32_i32$3 = $129$hi;
  __multf3($5 + 48 | 0 | 0, $124 | 0, i64toi32_i32$1 | 0, $123 | 0, i64toi32_i32$0 | 0, $578 | 0, i64toi32_i32$2 | 0, $129 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$0 = ($5 + 48 | 0) + $19 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $136 = i64toi32_i32$3;
  $136$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 48 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 52 | 0) >> 2] | 0;
  $137 = i64toi32_i32$2;
  $137$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 328 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 332 | 0) >> 2] | 0;
  $138 = i64toi32_i32$3;
  $138$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 320 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 324 | 0) >> 2] | 0;
  $598$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $138$hi;
  i64toi32_i32$3 = $598$hi;
  $148 = i64toi32_i32$2;
  i64toi32_i32$2 = $138$hi;
  sin_28long_20double_29(i64toi32_i32$0 + 128 | 0 | 0, $148 | 0, i64toi32_i32$3 | 0, $138 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 136 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 140 | 0) >> 2] | 0;
  $142 = i64toi32_i32$2;
  $142$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 128 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 132 | 0) >> 2] | 0;
  $143$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $137$hi;
  i64toi32_i32$2 = $136$hi;
  i64toi32_i32$2 = $143$hi;
  $610 = i64toi32_i32$3;
  i64toi32_i32$2 = $142$hi;
  i64toi32_i32$2 = $137$hi;
  i64toi32_i32$3 = $136$hi;
  i64toi32_i32$0 = $143$hi;
  i64toi32_i32$1 = $142$hi;
  __divtf3($5 + 32 | 0 | 0, $137 | 0, i64toi32_i32$2 | 0, $136 | 0, i64toi32_i32$3 | 0, $610 | 0, i64toi32_i32$0 | 0, $142 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$3 = ($5 + 32 | 0) + $19 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $149 = i64toi32_i32$1;
  $149$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[($5 + 32 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 36 | 0) >> 2] | 0;
  $150 = i64toi32_i32$0;
  $150$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $149$hi;
  i64toi32_i32$0 = $5;
  HEAP32[(i64toi32_i32$0 + 296 | 0) >> 2] = $149;
  HEAP32[(i64toi32_i32$0 + 300 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $150$hi;
  HEAP32[(i64toi32_i32$0 + 288 | 0) >> 2] = $150;
  HEAP32[(i64toi32_i32$0 + 292 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$3 = i64toi32_i32$0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 312 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$0 + 316 | 0) >> 2] | 0;
  $151 = i64toi32_i32$1;
  $151$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[($5 + 304 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 308 | 0) >> 2] | 0;
  $152 = i64toi32_i32$0;
  $152$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 344 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 348 | 0) >> 2] | 0;
  $153 = i64toi32_i32$1;
  $153$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[($5 + 336 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 340 | 0) >> 2] | 0;
  $638$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $153$hi;
  i64toi32_i32$1 = $638$hi;
  $154 = i64toi32_i32$0;
  i64toi32_i32$0 = $153$hi;
  sin_28long_20double_29($5 + 112 | 0 | 0, $154 | 0, i64toi32_i32$1 | 0, $153 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[($5 + 120 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 124 | 0) >> 2] | 0;
  $157 = i64toi32_i32$0;
  $157$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 112 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 116 | 0) >> 2] | 0;
  $158$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $152$hi;
  i64toi32_i32$0 = $151$hi;
  i64toi32_i32$0 = $158$hi;
  $650 = i64toi32_i32$1;
  i64toi32_i32$0 = $157$hi;
  i64toi32_i32$0 = $152$hi;
  i64toi32_i32$1 = $151$hi;
  i64toi32_i32$3 = $158$hi;
  i64toi32_i32$2 = $157$hi;
  __multf3($5 + 16 | 0 | 0, $152 | 0, i64toi32_i32$0 | 0, $151 | 0, i64toi32_i32$1 | 0, $650 | 0, i64toi32_i32$3 | 0, $157 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$1 = ($5 + 16 | 0) + $19 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $164 = i64toi32_i32$2;
  $164$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
  $165 = i64toi32_i32$3;
  $165$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 328 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 332 | 0) >> 2] | 0;
  $166 = i64toi32_i32$2;
  $166$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 320 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 324 | 0) >> 2] | 0;
  $670$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $166$hi;
  i64toi32_i32$2 = $670$hi;
  $155 = i64toi32_i32$3;
  i64toi32_i32$3 = $166$hi;
  sin_28long_20double_29(i64toi32_i32$1 + 96 | 0 | 0, $155 | 0, i64toi32_i32$2 | 0, $166 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] | 0;
  $170 = i64toi32_i32$3;
  $170$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
  $171$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $165$hi;
  i64toi32_i32$3 = $164$hi;
  i64toi32_i32$3 = $171$hi;
  $679 = i64toi32_i32$2;
  i64toi32_i32$3 = $170$hi;
  i64toi32_i32$3 = $165$hi;
  i64toi32_i32$2 = $164$hi;
  i64toi32_i32$1 = $171$hi;
  i64toi32_i32$0 = $170$hi;
  __divtf3($5 | 0, $165 | 0, i64toi32_i32$3 | 0, $164 | 0, i64toi32_i32$2 | 0, $679 | 0, i64toi32_i32$1 | 0, $170 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5 + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $173 = i64toi32_i32$0;
  $173$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $174 = i64toi32_i32$1;
  $174$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $173$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 280 | 0) >> 2] = $173;
  HEAP32[(i64toi32_i32$1 + 284 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $174$hi;
  HEAP32[(i64toi32_i32$1 + 272 | 0) >> 2] = $174;
  HEAP32[(i64toi32_i32$1 + 276 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $12;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $701 = i64toi32_i32$0;
  i64toi32_i32$0 = ($5 + 240 | 0) + $7 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $701;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $18;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $711 = i64toi32_i32$1;
  i64toi32_i32$1 = ($5 + 240 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $711;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $24;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $721 = i64toi32_i32$0;
  i64toi32_i32$0 = ($5 + 240 | 0) + $19 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $721;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 432 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 436 | 0) >> 2] | 0;
  $725 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 240 | 0) >> 2] = $725;
  HEAP32[(i64toi32_i32$1 + 244 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 280 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 284 | 0) >> 2] | 0;
  $188 = i64toi32_i32$0;
  $188$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 272 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 276 | 0) >> 2] | 0;
  $734$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $188$hi;
  i64toi32_i32$0 = $734$hi;
  $156 = i64toi32_i32$1;
  i64toi32_i32$1 = $188$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$2 + 240 | 0 | 0, $156 | 0, i64toi32_i32$0 | 0, $188 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $39;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $745 = i64toi32_i32$1;
  i64toi32_i32$1 = ($5 + 208 | 0) + $7 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $745;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $45;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $755 = i64toi32_i32$0;
  i64toi32_i32$0 = ($5 + 208 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $755;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $51;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $765 = i64toi32_i32$1;
  i64toi32_i32$1 = ($5 + 208 | 0) + $19 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $765;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 400 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 404 | 0) >> 2] | 0;
  $769 = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 208 | 0) >> 2] = $769;
  HEAP32[(i64toi32_i32$2 + 212 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 296 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 300 | 0) >> 2] | 0;
  $205 = i64toi32_i32$1;
  $205$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 288 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 292 | 0) >> 2] | 0;
  $782$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $205$hi;
  i64toi32_i32$1 = $782$hi;
  $158 = i64toi32_i32$0;
  i64toi32_i32$0 = $205$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$2 + 208 | 0 | 0, $158 | 0, i64toi32_i32$1 | 0, $205 | 0, i64toi32_i32$0 | 0);
  $213 = i64toi32_i32$2 + 240 | 0;
  i64toi32_i32$2 = $213;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $791 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  HEAP32[i64toi32_i32$0 >> 2] = $791;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $215 = 21;
  i64toi32_i32$2 = i64toi32_i32$2 + $215 | 0;
  i64toi32_i32$1 = HEAPU8[i64toi32_i32$2 >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 1 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 2 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 3 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;
  i64toi32_i32$0 = HEAPU8[(i64toi32_i32$2 + 4 | 0) >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 5 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 6 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 7 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;
  $801 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + $215 | 0;
  $145 = $801;
  HEAP8[i64toi32_i32$1 >> 0] = $145;
  HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $145 >>> 8 | 0;
  HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $145 >>> 16 | 0;
  HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $145 >>> 24 | 0;
  HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;
  HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;
  HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;
  HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;
  $219 = 16;
  i64toi32_i32$2 = $213 + $219 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $811 = i64toi32_i32$0;
  i64toi32_i32$0 = $0 + $219 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $811;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $223 = 8;
  i64toi32_i32$2 = $213 + $223 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $821 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + $223 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $821;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $228 = $0 + 32 | 0;
  $231 = $5 + 208 | 0;
  i64toi32_i32$2 = $231;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $832 = i64toi32_i32$0;
  i64toi32_i32$0 = $228;
  HEAP32[i64toi32_i32$0 >> 2] = $832;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $233 = 21;
  i64toi32_i32$2 = i64toi32_i32$2 + $233 | 0;
  i64toi32_i32$1 = HEAPU8[i64toi32_i32$2 >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 1 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 2 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 3 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;
  i64toi32_i32$0 = HEAPU8[(i64toi32_i32$2 + 4 | 0) >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 5 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 6 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 7 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;
  $842 = i64toi32_i32$1;
  i64toi32_i32$1 = $228 + $233 | 0;
  $146 = $842;
  HEAP8[i64toi32_i32$1 >> 0] = $146;
  HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $146 >>> 8 | 0;
  HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $146 >>> 16 | 0;
  HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $146 >>> 24 | 0;
  HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;
  HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;
  HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;
  HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;
  $237 = 16;
  i64toi32_i32$2 = $231 + $237 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $852 = i64toi32_i32$0;
  i64toi32_i32$0 = $228 + $237 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $852;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $241 = 8;
  i64toi32_i32$2 = $231 + $241 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $862 = i64toi32_i32$1;
  i64toi32_i32$1 = $228 + $241 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $862;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  Point3___Point3_28_29($5 + 208 | 0 | 0) | 0;
  Point3___Point3_28_29($5 + 240 | 0 | 0) | 0;
  Point3___Point3_28_29($5 + 368 | 0 | 0) | 0;
  Point3___Point3_28_29($5 + 400 | 0 | 0) | 0;
  Point3___Point3_28_29($5 + 432 | 0 | 0) | 0;
  __stack_pointer = $5 + 480 | 0;
  return;
 }
 
 function sin_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $5 = 0, i64toi32_i32$2 = 0, $6$hi = 0, $6 = 0, $28$hi = 0, $16 = 0, $10 = 0, $10$hi = 0, $11 = 0, $11$hi = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] | 0;
  $6 = i64toi32_i32$0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  $28$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = $28$hi;
  $16 = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  sinl($5 | 0, $16 | 0, i64toi32_i32$0 | 0, $6 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $5 + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $10 = i64toi32_i32$1;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[$5 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 4 | 0) >> 2] | 0;
  $11 = i64toi32_i32$0;
  $11$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$0 = $0;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $10;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $11$hi;
  HEAP32[i64toi32_i32$0 >> 2] = $11;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function Triangle__calc_percent_gnomonic_28Point3_20const__29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$0 = 0, $5 = 0, $27 = 0, $6 = 0, $13 = 0, $20 = 0, $214 = 0, $231 = 0, $67 = 0, $134 = 0, $138 = 0, $142 = 0, $11 = 0, $16 = 0, $18 = 0, $23 = 0, $25 = 0, $30 = 0, $36 = 0, $40 = 0, $44 = 0, $47$hi = 0, $70$hi = 0, $78$hi = 0, $94$hi = 0, $95$hi = 0, $96$hi = 0, $100$hi = 0, $101$hi = 0, $113 = 0, $118 = 0, $123 = 0, $127$hi = 0, $146$hi = 0, $155 = 0, $161 = 0, $167 = 0, $171$hi = 0, $297$hi = 0, $298$hi = 0, $299$hi = 0, $300$hi = 0, $308$hi = 0, $309$hi = 0, $310$hi = 0, $311$hi = 0, $8 = 0, $8$hi = 0, $364 = 0, $379 = 0, $392 = 0, $405 = 0, $409 = 0, $424 = 0, $434 = 0, $444 = 0, $448 = 0, $453$hi = 0, $469 = 0, $479 = 0, $489 = 0, $493 = 0, $506$hi = 0, $78 = 0, $525$hi = 0, $150 = 0, $86 = 0, $86$hi = 0, $541 = 0, $92 = 0, $92$hi = 0, $557 = 0, $94 = 0, $95 = 0, $96 = 0, $572$hi = 0, $151 = 0, $100 = 0, $584 = 0, $107 = 0, $107$hi = 0, $108 = 0, $108$hi = 0, $612 = 0, $625 = 0, $638 = 0, $642 = 0, $127 = 0, $655$hi = 0, $152 = 0, $666 = 0, $676 = 0, $686 = 0, $690 = 0, $146 = 0, $703$hi = 0, $153 = 0, $717 = 0, $730 = 0, $743 = 0, $747 = 0, $171 = 0, $760$hi = 0, $154 = 0, $771 = 0, $781 = 0, $791 = 0, $795 = 0, $805 = 0, $815 = 0, $825 = 0, $829 = 0, $839 = 0, $849 = 0, $859 = 0, $863 = 0, $916 = 0, $929 = 0, $942 = 0, $946 = 0, $266 = 0, $266$hi = 0, $989 = 0, $272 = 0, $272$hi = 0, $1005 = 0, $1017 = 0, $1027 = 0, $1037 = 0, $1041 = 0, $295 = 0, $295$hi = 0, $1063 = 0, $297 = 0, $298 = 0, $299 = 0, $1080 = 0, $306 = 0, $306$hi = 0, $307 = 0, $307$hi = 0, $308 = 0, $309 = 0, $310 = 0, $1107 = 0, $313 = 0, $313$hi = 0, $314 = 0, $314$hi = 0;
  $5 = __stack_pointer - 848 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 844 | 0) >> 2] = $1;
  HEAP32[($5 + 840 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 844 | 0) >> 2] | 0;
  i64toi32_i32$2 = 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12528 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12532 | 0) >> 2] | 0;
  $8 = i64toi32_i32$0;
  $8$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12536 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12540 | 0) >> 2] | 0;
  $364 = i64toi32_i32$1;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 824 | 0) >> 2] = $364;
  HEAP32[(i64toi32_i32$1 + 828 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $8$hi;
  HEAP32[(i64toi32_i32$1 + 816 | 0) >> 2] = $8;
  HEAP32[(i64toi32_i32$1 + 820 | 0) >> 2] = i64toi32_i32$0;
  $11 = $6 + 56 | 0;
  i64toi32_i32$2 = $11;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $13 = 24;
  $16 = ($5 + 784 | 0) + $13 | 0;
  $379 = i64toi32_i32$0;
  i64toi32_i32$0 = $16;
  HEAP32[i64toi32_i32$0 >> 2] = $379;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $18 = $6 + 48 | 0;
  i64toi32_i32$2 = $18;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $20 = 16;
  $23 = ($5 + 784 | 0) + $20 | 0;
  $392 = i64toi32_i32$1;
  i64toi32_i32$1 = $23;
  HEAP32[i64toi32_i32$1 >> 2] = $392;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $25 = $6 + 40 | 0;
  i64toi32_i32$2 = $25;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $27 = 8;
  $30 = ($5 + 784 | 0) + $27 | 0;
  $405 = i64toi32_i32$0;
  i64toi32_i32$0 = $30;
  HEAP32[i64toi32_i32$0 >> 2] = $405;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $409 = i64toi32_i32$1;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 784 | 0) >> 2] = $409;
  HEAP32[(i64toi32_i32$1 + 788 | 0) >> 2] = i64toi32_i32$0;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$1 + 784 | 0 | 0, i64toi32_i32$2 | 0);
  $36 = (i64toi32_i32$1 + 752 | 0) + $13 | 0;
  i64toi32_i32$2 = $16;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $424 = i64toi32_i32$0;
  i64toi32_i32$0 = $36;
  HEAP32[i64toi32_i32$0 >> 2] = $424;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $40 = ($5 + 752 | 0) + $20 | 0;
  i64toi32_i32$2 = $23;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $434 = i64toi32_i32$1;
  i64toi32_i32$1 = $40;
  HEAP32[i64toi32_i32$1 >> 2] = $434;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $44 = ($5 + 752 | 0) + $27 | 0;
  i64toi32_i32$2 = $30;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $444 = i64toi32_i32$0;
  i64toi32_i32$0 = $44;
  HEAP32[i64toi32_i32$0 >> 2] = $444;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 784 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 788 | 0) >> 2] | 0;
  $448 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 752 | 0) >> 2] = $448;
  HEAP32[(i64toi32_i32$1 + 756 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = 1073741824;
  $47$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $453$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $47$hi;
  i64toi32_i32$0 = $453$hi;
  i64toi32_i32$1 = $47$hi;
  Point3__div_by_28long_20double_29(i64toi32_i32$2 + 752 | 0 | 0, 0 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$1 | 0);
  Point3__add_28Point3_20const__29(i64toi32_i32$2 + 752 | 0 | 0, $6 | 0);
  i64toi32_i32$2 = $36;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $469 = i64toi32_i32$1;
  i64toi32_i32$1 = ($5 + 720 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $469;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $40;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $479 = i64toi32_i32$0;
  i64toi32_i32$0 = ($5 + 720 | 0) + $20 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $479;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $44;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $489 = i64toi32_i32$1;
  i64toi32_i32$1 = ($5 + 720 | 0) + $27 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $489;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 752 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 756 | 0) >> 2] | 0;
  $493 = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 720 | 0) >> 2] = $493;
  HEAP32[(i64toi32_i32$2 + 724 | 0) >> 2] = i64toi32_i32$1;
  $67 = $6 + 64 | 0;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$2 + 720 | 0 | 0, $67 | 0);
  i64toi32_i32$1 = 1073632597;
  $70$hi = i64toi32_i32$1;
  i64toi32_i32$1 = 1342177280;
  $506$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $70$hi;
  i64toi32_i32$1 = $506$hi;
  i64toi32_i32$0 = $70$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$2 + 720 | 0 | 0, 0 | 0, i64toi32_i32$1 | 0, 1431655765 | 0, i64toi32_i32$0 | 0);
  Point3__add_28Point3_20const__29(i64toi32_i32$2 + 720 | 0 | 0, $67 | 0);
  Point3__unit_28_29(i64toi32_i32$2 + 720 | 0 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 824 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 828 | 0) >> 2] | 0;
  $78 = i64toi32_i32$0;
  $78$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 816 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 820 | 0) >> 2] | 0;
  $525$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $78$hi;
  i64toi32_i32$0 = $525$hi;
  $150 = i64toi32_i32$1;
  i64toi32_i32$1 = $78$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$2 + 720 | 0 | 0, $150 | 0, i64toi32_i32$0 | 0, $78 | 0, i64toi32_i32$1 | 0);
  Point3__angle_between_28Point3_20const__29_20const(i64toi32_i32$2 + 128 | 0 | 0, $67 | 0, i64toi32_i32$2 + 720 | 0 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 128 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 132 | 0) >> 2] | 0;
  $86 = i64toi32_i32$1;
  $86$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 136 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 140 | 0) >> 2] | 0;
  $541 = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 712 | 0) >> 2] = $541;
  HEAP32[(i64toi32_i32$2 + 716 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $86$hi;
  i64toi32_i32$0 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 704 | 0) >> 2] = $86;
  HEAP32[(i64toi32_i32$2 + 708 | 0) >> 2] = i64toi32_i32$1;
  Point3__mag_28_29_20const(i64toi32_i32$2 + 112 | 0 | 0, i64toi32_i32$2 + 720 | 0 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 112 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 116 | 0) >> 2] | 0;
  $92 = i64toi32_i32$1;
  $92$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 120 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 124 | 0) >> 2] | 0;
  $557 = i64toi32_i32$0;
  i64toi32_i32$0 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 696 | 0) >> 2] = $557;
  HEAP32[(i64toi32_i32$2 + 700 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $92$hi;
  i64toi32_i32$0 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 688 | 0) >> 2] = $92;
  HEAP32[(i64toi32_i32$2 + 692 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 696 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 700 | 0) >> 2] | 0;
  $94 = i64toi32_i32$1;
  $94$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 688 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 692 | 0) >> 2] | 0;
  $95 = i64toi32_i32$0;
  $95$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 712 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 716 | 0) >> 2] | 0;
  $96 = i64toi32_i32$1;
  $96$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 704 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 708 | 0) >> 2] | 0;
  $572$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $96$hi;
  i64toi32_i32$1 = $572$hi;
  $151 = i64toi32_i32$0;
  i64toi32_i32$0 = $96$hi;
  cos_28long_20double_29(i64toi32_i32$2 + 96 | 0 | 0, $151 | 0, i64toi32_i32$1 | 0, $96 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 104 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 108 | 0) >> 2] | 0;
  $100 = i64toi32_i32$0;
  $100$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $101$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $95$hi;
  i64toi32_i32$0 = $94$hi;
  i64toi32_i32$0 = $101$hi;
  $584 = i64toi32_i32$1;
  i64toi32_i32$0 = $100$hi;
  i64toi32_i32$0 = $95$hi;
  i64toi32_i32$1 = $94$hi;
  i64toi32_i32$2 = $101$hi;
  i64toi32_i32$3 = $100$hi;
  __divtf3($5 + 32 | 0 | 0, $95 | 0, i64toi32_i32$0 | 0, $94 | 0, i64toi32_i32$1 | 0, $584 | 0, i64toi32_i32$2 | 0, $100 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 32 | 0) + $27 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $107 = i64toi32_i32$3;
  $107$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $108 = i64toi32_i32$2;
  $108$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $107$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 680 | 0) >> 2] = $107;
  HEAP32[(i64toi32_i32$1 + 684 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $108$hi;
  HEAP32[(i64toi32_i32$1 + 672 | 0) >> 2] = $108;
  HEAP32[(i64toi32_i32$1 + 676 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $6 + $13 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $113 = ($5 + 640 | 0) + $13 | 0;
  $612 = i64toi32_i32$3;
  i64toi32_i32$3 = $113;
  HEAP32[i64toi32_i32$3 >> 2] = $612;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $6 + $20 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $118 = ($5 + 640 | 0) + $20 | 0;
  $625 = i64toi32_i32$2;
  i64toi32_i32$2 = $118;
  HEAP32[i64toi32_i32$2 >> 2] = $625;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $6 + $27 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $123 = ($5 + 640 | 0) + $27 | 0;
  $638 = i64toi32_i32$3;
  i64toi32_i32$3 = $123;
  HEAP32[i64toi32_i32$3 >> 2] = $638;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $642 = i64toi32_i32$2;
  i64toi32_i32$2 = $5;
  HEAP32[(i64toi32_i32$2 + 640 | 0) >> 2] = $642;
  HEAP32[(i64toi32_i32$2 + 644 | 0) >> 2] = i64toi32_i32$3;
  Point3__unit_28_29(i64toi32_i32$2 + 640 | 0 | 0);
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 680 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 684 | 0) >> 2] | 0;
  $127 = i64toi32_i32$3;
  $127$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 672 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 676 | 0) >> 2] | 0;
  $655$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $127$hi;
  i64toi32_i32$3 = $655$hi;
  $152 = i64toi32_i32$2;
  i64toi32_i32$2 = $127$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$1 + 640 | 0 | 0, $152 | 0, i64toi32_i32$3 | 0, $127 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$1 = $11;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $134 = ($5 + 608 | 0) + $13 | 0;
  $666 = i64toi32_i32$2;
  i64toi32_i32$2 = $134;
  HEAP32[i64toi32_i32$2 >> 2] = $666;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $18;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $138 = ($5 + 608 | 0) + $20 | 0;
  $676 = i64toi32_i32$3;
  i64toi32_i32$3 = $138;
  HEAP32[i64toi32_i32$3 >> 2] = $676;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $25;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $142 = ($5 + 608 | 0) + $27 | 0;
  $686 = i64toi32_i32$2;
  i64toi32_i32$2 = $142;
  HEAP32[i64toi32_i32$2 >> 2] = $686;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $690 = i64toi32_i32$3;
  i64toi32_i32$3 = $5;
  HEAP32[(i64toi32_i32$3 + 608 | 0) >> 2] = $690;
  HEAP32[(i64toi32_i32$3 + 612 | 0) >> 2] = i64toi32_i32$2;
  Point3__unit_28_29(i64toi32_i32$3 + 608 | 0 | 0);
  i64toi32_i32$1 = i64toi32_i32$3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 680 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 684 | 0) >> 2] | 0;
  $146 = i64toi32_i32$2;
  $146$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 672 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 676 | 0) >> 2] | 0;
  $703$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $146$hi;
  i64toi32_i32$2 = $703$hi;
  $153 = i64toi32_i32$3;
  i64toi32_i32$3 = $146$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$1 + 608 | 0 | 0, $153 | 0, i64toi32_i32$2 | 0, $146 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6 + 88 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $155 = ($5 + 576 | 0) + $13 | 0;
  $717 = i64toi32_i32$3;
  i64toi32_i32$3 = $155;
  HEAP32[i64toi32_i32$3 >> 2] = $717;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $6 + 80 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $161 = ($5 + 576 | 0) + $20 | 0;
  $730 = i64toi32_i32$2;
  i64toi32_i32$2 = $161;
  HEAP32[i64toi32_i32$2 >> 2] = $730;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $6 + 72 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $167 = ($5 + 576 | 0) + $27 | 0;
  $743 = i64toi32_i32$3;
  i64toi32_i32$3 = $167;
  HEAP32[i64toi32_i32$3 >> 2] = $743;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
  $747 = i64toi32_i32$2;
  i64toi32_i32$2 = $5;
  HEAP32[(i64toi32_i32$2 + 576 | 0) >> 2] = $747;
  HEAP32[(i64toi32_i32$2 + 580 | 0) >> 2] = i64toi32_i32$3;
  Point3__unit_28_29(i64toi32_i32$2 + 576 | 0 | 0);
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 680 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 684 | 0) >> 2] | 0;
  $171 = i64toi32_i32$3;
  $171$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 672 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 676 | 0) >> 2] | 0;
  $760$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $171$hi;
  i64toi32_i32$3 = $760$hi;
  $154 = i64toi32_i32$2;
  i64toi32_i32$2 = $171$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$1 + 576 | 0 | 0, $154 | 0, i64toi32_i32$3 | 0, $171 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$1 = $113;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $771 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 424 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $771;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $118;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $781 = i64toi32_i32$3;
  i64toi32_i32$3 = ($5 + 424 | 0) + $20 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $781;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $123;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $791 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 424 | 0) + $27 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $791;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 640 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 644 | 0) >> 2] | 0;
  $795 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 424 | 0) >> 2] = $795;
  HEAP32[(i64toi32_i32$1 + 428 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $134;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $805 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 392 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $805;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $138;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $815 = i64toi32_i32$3;
  i64toi32_i32$3 = ($5 + 392 | 0) + $20 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $815;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $142;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $825 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 392 | 0) + $27 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $825;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 608 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 612 | 0) >> 2] | 0;
  $829 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 392 | 0) >> 2] = $829;
  HEAP32[(i64toi32_i32$1 + 396 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $155;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $839 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 360 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $839;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $161;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $849 = i64toi32_i32$3;
  i64toi32_i32$3 = ($5 + 360 | 0) + $20 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $849;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $167;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $859 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 360 | 0) + $27 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $859;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 576 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 580 | 0) >> 2] | 0;
  $863 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 360 | 0) >> 2] = $863;
  HEAP32[(i64toi32_i32$1 + 364 | 0) >> 2] = i64toi32_i32$2;
  $214 = -1;
  Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29(i64toi32_i32$1 + 456 | 0 | 0, i64toi32_i32$1 + 424 | 0 | 0, i64toi32_i32$1 + 392 | 0 | 0, i64toi32_i32$1 + 360 | 0 | 0, 2 | 0, 3 | 0, $214 | 0, $214 | 0, $214 | 0, $214 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 360 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 392 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 424 | 0 | 0) | 0;
  $231 = HEAP32[(i64toi32_i32$1 + 840 | 0) >> 2] | 0;
  i64toi32_i32$1 = $231 + $13 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $916 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 296 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $916;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $231 + $20 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $929 = i64toi32_i32$3;
  i64toi32_i32$3 = ($5 + 296 | 0) + $20 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $929;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $231 + $27 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $942 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 296 | 0) + $27 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $942;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $231;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $946 = i64toi32_i32$3;
  i64toi32_i32$3 = $5;
  HEAP32[(i64toi32_i32$3 + 296 | 0) >> 2] = $946;
  HEAP32[(i64toi32_i32$3 + 300 | 0) >> 2] = i64toi32_i32$2;
  Triangle__plane_intersection_28Point3_29_20const(i64toi32_i32$3 + 328 | 0 | 0, i64toi32_i32$3 + 456 | 0 | 0, i64toi32_i32$3 + 296 | 0 | 0);
  Point3___Point3_28_29(i64toi32_i32$3 + 296 | 0 | 0) | 0;
  Triangle__vec_side_components_28Triangle_20const__2c_20Point3_20const__29(i64toi32_i32$3 + 232 | 0 | 0, i64toi32_i32$3 + 456 | 0 | 0, i64toi32_i32$3 + 328 | 0 | 0);
  Point3__mag_28_29_20const(i64toi32_i32$3 + 80 | 0 | 0, i64toi32_i32$3 + 232 | 0 | 0);
  i64toi32_i32$1 = i64toi32_i32$3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] | 0;
  $266 = i64toi32_i32$2;
  $266$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 88 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 92 | 0) >> 2] | 0;
  $989 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 216 | 0) >> 2] = $989;
  HEAP32[(i64toi32_i32$1 + 220 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $266$hi;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 208 | 0) >> 2] = $266;
  HEAP32[(i64toi32_i32$1 + 212 | 0) >> 2] = i64toi32_i32$2;
  Point3__mag_28_29_20const(i64toi32_i32$1 + 64 | 0 | 0, i64toi32_i32$1 + 264 | 0 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
  $272 = i64toi32_i32$2;
  $272$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 72 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 76 | 0) >> 2] | 0;
  $1005 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 200 | 0) >> 2] = $1005;
  HEAP32[(i64toi32_i32$1 + 204 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $272$hi;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 192 | 0) >> 2] = $272;
  HEAP32[(i64toi32_i32$1 + 196 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $134;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $1017 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 160 | 0) + $13 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $1017;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $138;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $1027 = i64toi32_i32$3;
  i64toi32_i32$3 = ($5 + 160 | 0) + $20 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $1027;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $142;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $1037 = i64toi32_i32$2;
  i64toi32_i32$2 = ($5 + 160 | 0) + $27 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $1037;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 608 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 612 | 0) >> 2] | 0;
  $1041 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 160 | 0) >> 2] = $1041;
  HEAP32[(i64toi32_i32$1 + 164 | 0) >> 2] = i64toi32_i32$2;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$1 + 160 | 0 | 0, i64toi32_i32$1 + 640 | 0 | 0);
  Point3__mag_28_29_20const(i64toi32_i32$1 + 48 | 0 | 0, i64toi32_i32$1 + 160 | 0 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 48 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 52 | 0) >> 2] | 0;
  $295 = i64toi32_i32$2;
  $295$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 56 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 60 | 0) >> 2] | 0;
  $1063 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 152 | 0) >> 2] = $1063;
  HEAP32[(i64toi32_i32$1 + 156 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $295$hi;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 144 | 0) >> 2] = $295;
  HEAP32[(i64toi32_i32$1 + 148 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 216 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 220 | 0) >> 2] | 0;
  $297 = i64toi32_i32$2;
  $297$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 208 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 212 | 0) >> 2] | 0;
  $298 = i64toi32_i32$3;
  $298$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 152 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 156 | 0) >> 2] | 0;
  $299 = i64toi32_i32$2;
  $299$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 144 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 148 | 0) >> 2] | 0;
  $300$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $298$hi;
  i64toi32_i32$2 = $297$hi;
  i64toi32_i32$2 = $300$hi;
  $1080 = i64toi32_i32$3;
  i64toi32_i32$2 = $299$hi;
  i64toi32_i32$2 = $298$hi;
  i64toi32_i32$3 = $297$hi;
  i64toi32_i32$1 = $300$hi;
  i64toi32_i32$0 = $299$hi;
  __divtf3($5 + 16 | 0 | 0, $298 | 0, i64toi32_i32$2 | 0, $297 | 0, i64toi32_i32$3 | 0, $1080 | 0, i64toi32_i32$1 | 0, $299 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$3 = ($5 + 16 | 0) + $27 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $306 = i64toi32_i32$0;
  $306$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 20 | 0) >> 2] | 0;
  $307 = i64toi32_i32$1;
  $307$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $306$hi;
  i64toi32_i32$1 = $0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $306;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $307$hi;
  HEAP32[i64toi32_i32$1 >> 2] = $307;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 200 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 204 | 0) >> 2] | 0;
  $308 = i64toi32_i32$0;
  $308$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 192 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 196 | 0) >> 2] | 0;
  $309 = i64toi32_i32$1;
  $309$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 152 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 156 | 0) >> 2] | 0;
  $310 = i64toi32_i32$0;
  $310$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 144 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 148 | 0) >> 2] | 0;
  $311$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $309$hi;
  i64toi32_i32$0 = $308$hi;
  i64toi32_i32$0 = $311$hi;
  $1107 = i64toi32_i32$1;
  i64toi32_i32$0 = $310$hi;
  i64toi32_i32$0 = $309$hi;
  i64toi32_i32$1 = $308$hi;
  i64toi32_i32$3 = $311$hi;
  i64toi32_i32$2 = $310$hi;
  __divtf3($5 | 0, $309 | 0, i64toi32_i32$0 | 0, $308 | 0, i64toi32_i32$1 | 0, $1107 | 0, i64toi32_i32$3 | 0, $310 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$1 = $5 + $27 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $313 = i64toi32_i32$2;
  $313$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $314 = i64toi32_i32$3;
  $314$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $313$hi;
  i64toi32_i32$3 = $0 + $13 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $313;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $314$hi;
  i64toi32_i32$3 = $0;
  HEAP32[(i64toi32_i32$3 + 16 | 0) >> 2] = $314;
  HEAP32[(i64toi32_i32$3 + 20 | 0) >> 2] = i64toi32_i32$2;
  Point3___Point3_28_29(i64toi32_i32$1 + 160 | 0 | 0) | 0;
  Triangle__vec_side_components_result___vec_side_components_result_28_29(i64toi32_i32$1 + 232 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 328 | 0 | 0) | 0;
  Triangle___Triangle_28_29(i64toi32_i32$1 + 456 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 576 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 608 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 640 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 720 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 752 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 784 | 0 | 0) | 0;
  __stack_pointer = i64toi32_i32$1 + 848 | 0;
  return;
 }
 
 function cos_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $5 = 0, i64toi32_i32$2 = 0, $6$hi = 0, $6 = 0, $28$hi = 0, $16 = 0, $10 = 0, $10$hi = 0, $11 = 0, $11$hi = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] | 0;
  $6 = i64toi32_i32$0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  $28$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = $28$hi;
  $16 = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  cosl($5 | 0, $16 | 0, i64toi32_i32$0 | 0, $6 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $5 + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $10 = i64toi32_i32$1;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[$5 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 4 | 0) >> 2] | 0;
  $11 = i64toi32_i32$0;
  $11$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$0 = $0;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $10;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $11$hi;
  HEAP32[i64toi32_i32$0 >> 2] = $11;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function Triangle__plane_intersection_28Point3_29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, $5 = 0, $30 = 0, $6 = 0, $9 = 0, $10 = 0.0, $13 = 0, $16 = 0, $17 = 0.0, $23 = 0, $37 = 0.0, $40 = 0.0, $57 = 0.0, $60 = 0.0, $76$hi = 0, $77$hi = 0, $84$hi = 0, $85$hi = 0, $91$hi = 0, $92$hi = 0, $93$hi = 0, $94$hi = 0, $101$hi = 0, $102$hi = 0, $108$hi = 0, $109$hi = 0, $115$hi = 0, $116$hi = 0, $117$hi = 0, $118$hi = 0, $125$hi = 0, $126$hi = 0, $132$hi = 0, $133$hi = 0, $141$hi = 0, $142$hi = 0, $149$hi = 0, $150$hi = 0, $156$hi = 0, $157$hi = 0, $158$hi = 0, $159$hi = 0, $166$hi = 0, $167$hi = 0, $173$hi = 0, $174$hi = 0, $180$hi = 0, $181$hi = 0, $182$hi = 0, $183$hi = 0, $190$hi = 0, $191$hi = 0, $197$hi = 0, $198$hi = 0, $206$hi = 0, $207$hi = 0, $208$hi = 0, $209$hi = 0, $223$hi = 0, $224$hi = 0, $225$hi = 0, $226$hi = 0, $240$hi = 0, $241$hi = 0, $242$hi = 0, $243$hi = 0, $253$hi = 0, $254$hi = 0, $255$hi = 0, $256$hi = 0, $264$hi = 0, $267$hi = 0, $270$hi = 0, $34 = 0, $34$hi = 0, $35 = 0, $35$hi = 0, $54 = 0, $54$hi = 0, $55 = 0, $55$hi = 0, $74 = 0, $74$hi = 0, $75 = 0, $75$hi = 0, $76 = 0, $77 = 0, $84 = 0, $485 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $101 = 0, $524 = 0, $108 = 0, $542 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $125 = 0, $581 = 0, $132 = 0, $599 = 0, $139 = 0, $139$hi = 0, $140 = 0, $140$hi = 0, $141 = 0, $142 = 0, $149 = 0, $642 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $166 = 0, $681 = 0, $173 = 0, $699 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $190 = 0, $738 = 0, $197 = 0, $756 = 0, $204 = 0, $204$hi = 0, $205 = 0, $205$hi = 0, $206 = 0, $207 = 0, $208 = 0, $786 = 0, $215 = 0, $215$hi = 0, $216 = 0, $216$hi = 0, $223 = 0, $224 = 0, $225 = 0, $829 = 0, $232 = 0, $232$hi = 0, $233 = 0, $233$hi = 0, $240 = 0, $241 = 0, $242 = 0, $872 = 0, $249 = 0, $249$hi = 0, $250 = 0, $250$hi = 0, $253 = 0, $254 = 0, $255 = 0, $909 = 0, $262 = 0, $262$hi = 0, $263 = 0, $263$hi = 0, $264 = 0, $929$hi = 0, $179 = 0, $266 = 0.0, $267 = 0, $936$hi = 0, $184 = 0, $269 = 0.0, $270 = 0, $943$hi = 0, $185 = 0;
  $5 = __stack_pointer - 576 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 572 | 0) >> 2] = $0;
  HEAP32[($5 + 568 | 0) >> 2] = $1;
  $6 = HEAP32[($5 + 568 | 0) >> 2] | 0;
  $9 = $6 + 40 | 0;
  $10 = +HEAPF64[$9 >> 3];
  $13 = $6 + 80 | 0;
  $16 = $6 + 48 | 0;
  $17 = +HEAPF64[$16 >> 3];
  $23 = $6 + 72 | 0;
  __extenddftf2($5 + 400 | 0 | 0, +((+HEAPF64[($6 + 8 | 0) >> 3] - $10) * (+HEAPF64[$13 >> 3] - $17) - (+HEAPF64[($6 + 16 | 0) >> 3] - $17) * (+HEAPF64[$23 >> 3] - $10)));
  $30 = 8;
  i64toi32_i32$2 = ($5 + 400 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $34 = i64toi32_i32$0;
  $34$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 400 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 404 | 0) >> 2] | 0;
  $35 = i64toi32_i32$1;
  $35$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $34$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 552 | 0) >> 2] = $34;
  HEAP32[(i64toi32_i32$1 + 556 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $35$hi;
  HEAP32[(i64toi32_i32$1 + 544 | 0) >> 2] = $35;
  HEAP32[(i64toi32_i32$1 + 548 | 0) >> 2] = i64toi32_i32$0;
  $37 = +HEAPF64[$16 >> 3];
  $40 = +HEAPF64[($6 + 32 | 0) >> 3];
  __extenddftf2(i64toi32_i32$1 + 384 | 0 | 0, +((+HEAPF64[($6 + 16 | 0) >> 3] - $37) * (+HEAPF64[($6 + 64 | 0) >> 3] - $40) - (+HEAPF64[$6 >> 3] - $40) * (+HEAPF64[$13 >> 3] - $37)));
  i64toi32_i32$2 = (i64toi32_i32$1 + 384 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $54 = i64toi32_i32$0;
  $54$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 384 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 388 | 0) >> 2] | 0;
  $55 = i64toi32_i32$1;
  $55$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $54$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 536 | 0) >> 2] = $54;
  HEAP32[(i64toi32_i32$1 + 540 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $55$hi;
  HEAP32[(i64toi32_i32$1 + 528 | 0) >> 2] = $55;
  HEAP32[(i64toi32_i32$1 + 532 | 0) >> 2] = i64toi32_i32$0;
  $57 = +HEAPF64[($6 + 32 | 0) >> 3];
  $60 = +HEAPF64[$9 >> 3];
  __extenddftf2(i64toi32_i32$1 + 368 | 0 | 0, +((+HEAPF64[$6 >> 3] - $57) * (+HEAPF64[$23 >> 3] - $60) - (+HEAPF64[($6 + 64 | 0) >> 3] - $57) * (+HEAPF64[($6 + 8 | 0) >> 3] - $60)));
  i64toi32_i32$2 = (i64toi32_i32$1 + 368 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$0;
  $74$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 368 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 372 | 0) >> 2] | 0;
  $75 = i64toi32_i32$1;
  $75$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $74$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 520 | 0) >> 2] = $74;
  HEAP32[(i64toi32_i32$1 + 524 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $75$hi;
  HEAP32[(i64toi32_i32$1 + 512 | 0) >> 2] = $75;
  HEAP32[(i64toi32_i32$1 + 516 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 552 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 556 | 0) >> 2] | 0;
  $76 = i64toi32_i32$0;
  $76$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 544 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 548 | 0) >> 2] | 0;
  $77 = i64toi32_i32$1;
  $77$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$2 + 240 | 0 | 0, +(+HEAPF64[$6 >> 3]));
  i64toi32_i32$2 = (i64toi32_i32$2 + 240 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $84 = i64toi32_i32$0;
  $84$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 240 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 244 | 0) >> 2] | 0;
  $85$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $77$hi;
  i64toi32_i32$0 = $76$hi;
  i64toi32_i32$0 = $85$hi;
  $485 = i64toi32_i32$1;
  i64toi32_i32$0 = $84$hi;
  i64toi32_i32$0 = $77$hi;
  i64toi32_i32$1 = $76$hi;
  i64toi32_i32$2 = $85$hi;
  i64toi32_i32$3 = $84$hi;
  __multf3($5 + 288 | 0 | 0, $77 | 0, i64toi32_i32$0 | 0, $76 | 0, i64toi32_i32$1 | 0, $485 | 0, i64toi32_i32$2 | 0, $84 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 288 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $91 = i64toi32_i32$3;
  $91$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 288 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 292 | 0) >> 2] | 0;
  $92 = i64toi32_i32$2;
  $92$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 536 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 540 | 0) >> 2] | 0;
  $93 = i64toi32_i32$3;
  $93$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 528 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 532 | 0) >> 2] | 0;
  $94 = i64toi32_i32$2;
  $94$hi = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$1 + 304 | 0 | 0, +(+HEAPF64[($6 + 8 | 0) >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 304 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $101 = i64toi32_i32$3;
  $101$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 304 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 308 | 0) >> 2] | 0;
  $102$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $94$hi;
  i64toi32_i32$3 = $93$hi;
  i64toi32_i32$3 = $102$hi;
  $524 = i64toi32_i32$2;
  i64toi32_i32$3 = $101$hi;
  i64toi32_i32$3 = $94$hi;
  i64toi32_i32$2 = $93$hi;
  i64toi32_i32$1 = $102$hi;
  i64toi32_i32$0 = $101$hi;
  __multf3($5 + 320 | 0 | 0, $94 | 0, i64toi32_i32$3 | 0, $93 | 0, i64toi32_i32$2 | 0, $524 | 0, i64toi32_i32$1 | 0, $101 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 320 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $108 = i64toi32_i32$0;
  $108$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 320 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 324 | 0) >> 2] | 0;
  $109$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $92$hi;
  i64toi32_i32$0 = $91$hi;
  i64toi32_i32$0 = $109$hi;
  $542 = i64toi32_i32$1;
  i64toi32_i32$0 = $108$hi;
  i64toi32_i32$0 = $92$hi;
  i64toi32_i32$1 = $91$hi;
  i64toi32_i32$2 = $109$hi;
  i64toi32_i32$3 = $108$hi;
  __addtf3($5 + 272 | 0 | 0, $92 | 0, i64toi32_i32$0 | 0, $91 | 0, i64toi32_i32$1 | 0, $542 | 0, i64toi32_i32$2 | 0, $108 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 272 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $115 = i64toi32_i32$3;
  $115$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 272 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 276 | 0) >> 2] | 0;
  $116 = i64toi32_i32$2;
  $116$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 520 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 524 | 0) >> 2] | 0;
  $117 = i64toi32_i32$3;
  $117$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 512 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 516 | 0) >> 2] | 0;
  $118 = i64toi32_i32$2;
  $118$hi = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$1 + 336 | 0 | 0, +(+HEAPF64[($6 + 16 | 0) >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 336 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $125 = i64toi32_i32$3;
  $125$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 336 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 340 | 0) >> 2] | 0;
  $126$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $118$hi;
  i64toi32_i32$3 = $117$hi;
  i64toi32_i32$3 = $126$hi;
  $581 = i64toi32_i32$2;
  i64toi32_i32$3 = $125$hi;
  i64toi32_i32$3 = $118$hi;
  i64toi32_i32$2 = $117$hi;
  i64toi32_i32$1 = $126$hi;
  i64toi32_i32$0 = $125$hi;
  __multf3($5 + 352 | 0 | 0, $118 | 0, i64toi32_i32$3 | 0, $117 | 0, i64toi32_i32$2 | 0, $581 | 0, i64toi32_i32$1 | 0, $125 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 352 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $132 = i64toi32_i32$0;
  $132$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 352 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 356 | 0) >> 2] | 0;
  $133$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $116$hi;
  i64toi32_i32$0 = $115$hi;
  i64toi32_i32$0 = $133$hi;
  $599 = i64toi32_i32$1;
  i64toi32_i32$0 = $132$hi;
  i64toi32_i32$0 = $116$hi;
  i64toi32_i32$1 = $115$hi;
  i64toi32_i32$2 = $133$hi;
  i64toi32_i32$3 = $132$hi;
  __addtf3($5 + 256 | 0 | 0, $116 | 0, i64toi32_i32$0 | 0, $115 | 0, i64toi32_i32$1 | 0, $599 | 0, i64toi32_i32$2 | 0, $132 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 256 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $139 = i64toi32_i32$3;
  $139$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 256 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 260 | 0) >> 2] | 0;
  $140 = i64toi32_i32$2;
  $140$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $139$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 504 | 0) >> 2] = $139;
  HEAP32[(i64toi32_i32$1 + 508 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $140$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 496 | 0) >> 2] = $140;
  HEAP32[(i64toi32_i32$1 + 500 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 552 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 556 | 0) >> 2] | 0;
  $141 = i64toi32_i32$3;
  $141$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 544 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 548 | 0) >> 2] | 0;
  $142 = i64toi32_i32$2;
  $142$hi = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$1 + 112 | 0 | 0, +(+HEAPF64[$2 >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 112 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $149 = i64toi32_i32$3;
  $149$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
  $150$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $142$hi;
  i64toi32_i32$3 = $141$hi;
  i64toi32_i32$3 = $150$hi;
  $642 = i64toi32_i32$2;
  i64toi32_i32$3 = $149$hi;
  i64toi32_i32$3 = $142$hi;
  i64toi32_i32$2 = $141$hi;
  i64toi32_i32$1 = $150$hi;
  i64toi32_i32$0 = $149$hi;
  __multf3($5 + 160 | 0 | 0, $142 | 0, i64toi32_i32$3 | 0, $141 | 0, i64toi32_i32$2 | 0, $642 | 0, i64toi32_i32$1 | 0, $149 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 160 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $156 = i64toi32_i32$0;
  $156$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 160 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 164 | 0) >> 2] | 0;
  $157 = i64toi32_i32$1;
  $157$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 536 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 540 | 0) >> 2] | 0;
  $158 = i64toi32_i32$0;
  $158$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 528 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 532 | 0) >> 2] | 0;
  $159 = i64toi32_i32$1;
  $159$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$2 + 208 | 0 | 0, +(+HEAPF64[($2 + 8 | 0) >> 3]));
  i64toi32_i32$2 = (i64toi32_i32$2 + 208 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $166 = i64toi32_i32$0;
  $166$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 208 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 212 | 0) >> 2] | 0;
  $167$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $159$hi;
  i64toi32_i32$0 = $158$hi;
  i64toi32_i32$0 = $167$hi;
  $681 = i64toi32_i32$1;
  i64toi32_i32$0 = $166$hi;
  i64toi32_i32$0 = $159$hi;
  i64toi32_i32$1 = $158$hi;
  i64toi32_i32$2 = $167$hi;
  i64toi32_i32$3 = $166$hi;
  __multf3($5 + 224 | 0 | 0, $159 | 0, i64toi32_i32$0 | 0, $158 | 0, i64toi32_i32$1 | 0, $681 | 0, i64toi32_i32$2 | 0, $166 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 224 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $173 = i64toi32_i32$3;
  $173$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 224 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 228 | 0) >> 2] | 0;
  $174$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $157$hi;
  i64toi32_i32$3 = $156$hi;
  i64toi32_i32$3 = $174$hi;
  $699 = i64toi32_i32$2;
  i64toi32_i32$3 = $173$hi;
  i64toi32_i32$3 = $157$hi;
  i64toi32_i32$2 = $156$hi;
  i64toi32_i32$1 = $174$hi;
  i64toi32_i32$0 = $173$hi;
  __addtf3($5 + 144 | 0 | 0, $157 | 0, i64toi32_i32$3 | 0, $156 | 0, i64toi32_i32$2 | 0, $699 | 0, i64toi32_i32$1 | 0, $173 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 144 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $180 = i64toi32_i32$0;
  $180$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 144 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 148 | 0) >> 2] | 0;
  $181 = i64toi32_i32$1;
  $181$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 520 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 524 | 0) >> 2] | 0;
  $182 = i64toi32_i32$0;
  $182$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 512 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 516 | 0) >> 2] | 0;
  $183 = i64toi32_i32$1;
  $183$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$2 + 176 | 0 | 0, +(+HEAPF64[($2 + 16 | 0) >> 3]));
  i64toi32_i32$2 = (i64toi32_i32$2 + 176 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $190 = i64toi32_i32$0;
  $190$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 176 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 180 | 0) >> 2] | 0;
  $191$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $183$hi;
  i64toi32_i32$0 = $182$hi;
  i64toi32_i32$0 = $191$hi;
  $738 = i64toi32_i32$1;
  i64toi32_i32$0 = $190$hi;
  i64toi32_i32$0 = $183$hi;
  i64toi32_i32$1 = $182$hi;
  i64toi32_i32$2 = $191$hi;
  i64toi32_i32$3 = $190$hi;
  __multf3($5 + 192 | 0 | 0, $183 | 0, i64toi32_i32$0 | 0, $182 | 0, i64toi32_i32$1 | 0, $738 | 0, i64toi32_i32$2 | 0, $190 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 192 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $197 = i64toi32_i32$3;
  $197$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 192 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 196 | 0) >> 2] | 0;
  $198$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $181$hi;
  i64toi32_i32$3 = $180$hi;
  i64toi32_i32$3 = $198$hi;
  $756 = i64toi32_i32$2;
  i64toi32_i32$3 = $197$hi;
  i64toi32_i32$3 = $181$hi;
  i64toi32_i32$2 = $180$hi;
  i64toi32_i32$1 = $198$hi;
  i64toi32_i32$0 = $197$hi;
  __addtf3($5 + 128 | 0 | 0, $181 | 0, i64toi32_i32$3 | 0, $180 | 0, i64toi32_i32$2 | 0, $756 | 0, i64toi32_i32$1 | 0, $197 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 128 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $204 = i64toi32_i32$0;
  $204$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 128 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 132 | 0) >> 2] | 0;
  $205 = i64toi32_i32$1;
  $205$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $204$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 488 | 0) >> 2] = $204;
  HEAP32[(i64toi32_i32$1 + 492 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $205$hi;
  HEAP32[(i64toi32_i32$1 + 480 | 0) >> 2] = $205;
  HEAP32[(i64toi32_i32$1 + 484 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 504 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 508 | 0) >> 2] | 0;
  $206 = i64toi32_i32$0;
  $206$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 496 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 500 | 0) >> 2] | 0;
  $207 = i64toi32_i32$1;
  $207$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 488 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 492 | 0) >> 2] | 0;
  $208 = i64toi32_i32$0;
  $208$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 480 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 484 | 0) >> 2] | 0;
  $209$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $207$hi;
  i64toi32_i32$0 = $206$hi;
  i64toi32_i32$0 = $209$hi;
  $786 = i64toi32_i32$1;
  i64toi32_i32$0 = $208$hi;
  i64toi32_i32$0 = $207$hi;
  i64toi32_i32$1 = $206$hi;
  i64toi32_i32$2 = $209$hi;
  i64toi32_i32$3 = $208$hi;
  __divtf3($5 + 96 | 0 | 0, $207 | 0, i64toi32_i32$0 | 0, $206 | 0, i64toi32_i32$1 | 0, $786 | 0, i64toi32_i32$2 | 0, $208 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 96 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $215 = i64toi32_i32$3;
  $215$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
  $216 = i64toi32_i32$2;
  $216$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $215$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 472 | 0) >> 2] = $215;
  HEAP32[(i64toi32_i32$1 + 476 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $216$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 464 | 0) >> 2] = $216;
  HEAP32[(i64toi32_i32$1 + 468 | 0) >> 2] = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$1 + 64 | 0 | 0, +(+HEAPF64[$2 >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 64 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $223 = i64toi32_i32$3;
  $223$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
  $224 = i64toi32_i32$2;
  $224$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 472 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 476 | 0) >> 2] | 0;
  $225 = i64toi32_i32$3;
  $225$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 464 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 468 | 0) >> 2] | 0;
  $226$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $224$hi;
  i64toi32_i32$3 = $223$hi;
  i64toi32_i32$3 = $226$hi;
  $829 = i64toi32_i32$2;
  i64toi32_i32$3 = $225$hi;
  i64toi32_i32$3 = $224$hi;
  i64toi32_i32$2 = $223$hi;
  i64toi32_i32$1 = $226$hi;
  i64toi32_i32$0 = $225$hi;
  __multf3($5 + 80 | 0 | 0, $224 | 0, i64toi32_i32$3 | 0, $223 | 0, i64toi32_i32$2 | 0, $829 | 0, i64toi32_i32$1 | 0, $225 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 80 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $232 = i64toi32_i32$0;
  $232$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
  $233 = i64toi32_i32$1;
  $233$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $232$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 456 | 0) >> 2] = $232;
  HEAP32[(i64toi32_i32$1 + 460 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $233$hi;
  HEAP32[(i64toi32_i32$1 + 448 | 0) >> 2] = $233;
  HEAP32[(i64toi32_i32$1 + 452 | 0) >> 2] = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$1 + 32 | 0 | 0, +(+HEAPF64[($2 + 8 | 0) >> 3]));
  i64toi32_i32$2 = (i64toi32_i32$1 + 32 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $240 = i64toi32_i32$0;
  $240$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $241 = i64toi32_i32$1;
  $241$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 472 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 476 | 0) >> 2] | 0;
  $242 = i64toi32_i32$0;
  $242$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 464 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 468 | 0) >> 2] | 0;
  $243$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $241$hi;
  i64toi32_i32$0 = $240$hi;
  i64toi32_i32$0 = $243$hi;
  $872 = i64toi32_i32$1;
  i64toi32_i32$0 = $242$hi;
  i64toi32_i32$0 = $241$hi;
  i64toi32_i32$1 = $240$hi;
  i64toi32_i32$2 = $243$hi;
  i64toi32_i32$3 = $242$hi;
  __multf3($5 + 48 | 0 | 0, $241 | 0, i64toi32_i32$0 | 0, $240 | 0, i64toi32_i32$1 | 0, $872 | 0, i64toi32_i32$2 | 0, $242 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 48 | 0) + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $249 = i64toi32_i32$3;
  $249$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 48 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 52 | 0) >> 2] | 0;
  $250 = i64toi32_i32$2;
  $250$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $249$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 440 | 0) >> 2] = $249;
  HEAP32[(i64toi32_i32$1 + 444 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $250$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 432 | 0) >> 2] = $250;
  HEAP32[(i64toi32_i32$1 + 436 | 0) >> 2] = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$1 | 0, +(+HEAPF64[($2 + 16 | 0) >> 3]));
  i64toi32_i32$1 = i64toi32_i32$1 + $30 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $253 = i64toi32_i32$3;
  $253$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $254 = i64toi32_i32$2;
  $254$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 472 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 476 | 0) >> 2] | 0;
  $255 = i64toi32_i32$3;
  $255$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 464 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 468 | 0) >> 2] | 0;
  $256$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $254$hi;
  i64toi32_i32$3 = $253$hi;
  i64toi32_i32$3 = $256$hi;
  $909 = i64toi32_i32$2;
  i64toi32_i32$3 = $255$hi;
  i64toi32_i32$3 = $254$hi;
  i64toi32_i32$2 = $253$hi;
  i64toi32_i32$1 = $256$hi;
  i64toi32_i32$0 = $255$hi;
  __multf3($5 + 16 | 0 | 0, $254 | 0, i64toi32_i32$3 | 0, $253 | 0, i64toi32_i32$2 | 0, $909 | 0, i64toi32_i32$1 | 0, $255 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 16 | 0) + $30 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $262 = i64toi32_i32$0;
  $262$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
  $263 = i64toi32_i32$1;
  $263$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $262$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 424 | 0) >> 2] = $262;
  HEAP32[(i64toi32_i32$1 + 428 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $263$hi;
  HEAP32[(i64toi32_i32$1 + 416 | 0) >> 2] = $263;
  HEAP32[(i64toi32_i32$1 + 420 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 456 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 460 | 0) >> 2] | 0;
  $264 = i64toi32_i32$0;
  $264$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 448 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 452 | 0) >> 2] | 0;
  $929$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $264$hi;
  i64toi32_i32$0 = $929$hi;
  $179 = i64toi32_i32$1;
  i64toi32_i32$1 = $264$hi;
  $266 = +__trunctfdf2($179 | 0, i64toi32_i32$0 | 0, $264 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 440 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 444 | 0) >> 2] | 0;
  $267 = i64toi32_i32$1;
  $267$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 432 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 436 | 0) >> 2] | 0;
  $936$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $267$hi;
  i64toi32_i32$1 = $936$hi;
  $184 = i64toi32_i32$0;
  i64toi32_i32$0 = $267$hi;
  $269 = +__trunctfdf2($184 | 0, i64toi32_i32$1 | 0, $267 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 424 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 428 | 0) >> 2] | 0;
  $270 = i64toi32_i32$0;
  $270$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 416 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 420 | 0) >> 2] | 0;
  $943$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $270$hi;
  i64toi32_i32$0 = $943$hi;
  $185 = i64toi32_i32$1;
  i64toi32_i32$1 = $270$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($0 | 0, +$266, +$269, +(+__trunctfdf2($185 | 0, i64toi32_i32$0 | 0, $270 | 0, i64toi32_i32$1 | 0)), 0 & 1 | 0 | 0, -1 | 0) | 0;
  __stack_pointer = i64toi32_i32$2 + 576 | 0;
  return;
 }
 
 function Triangle__vec_side_components_result___vec_side_components_result_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Point3___Point3_28_29($4 + 32 | 0 | 0) | 0;
  Point3___Point3_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function Triangle__calc_percent_quaternion_28Point3_20const__29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $7 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $1;
  HEAP32[($5 + 8 | 0) >> 2] = $2;
  $7 = __cxa_allocate_exception(8 | 0) | 0;
  std__logic_error__logic_error_28char_20const__29($7 | 0, 3801 | 0) | 0;
  __cxa_throw($7 | 0, 11420 | 0, 1 | 0);
  abort();
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___push_back_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($5 + 4 | 0) >> 2] | 0) >>> 0 < (HEAP32[(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____end_cap_28_29($5 | 0) | 0) >> 2] | 0) >>> 0 & 1 | 0)) {
     break label$2
    }
    void_20std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_one_at_end_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($5 | 0, std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____type___20std____2__move_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
    break label$1;
   }
   void_20std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____push_back_slow_path_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($5 | 0, std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____type___20std____2__move_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($4 | 0) | 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  HEAP32[($3 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($4 + 8 | 0 | 0, $3 + 8 | 0 | 0, $3 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____type___20std____2__move_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_one_at_end_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____ConstructTransaction___ConstructTransaction_28std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___2c_20unsigned_20long_29($4 + 8 | 0 | 0, $5 | 0, 1 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29($5 | 0) | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2____to_address_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20____20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___type__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[($4 + 12 | 0) >> 2] = (HEAP32[($4 + 12 | 0) >> 2] | 0) + 12 | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____ConstructTransaction____ConstructTransaction_28_29($4 + 8 | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____push_back_slow_path_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29($5 | 0) | 0;
  std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______split_buffer_28unsigned_20long_2c_20unsigned_20long_2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___29($4 | 0, std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____recommend_28unsigned_20long_29_20const($5 | 0, (std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const($5 | 0) | 0) + 1 | 0 | 0) | 0 | 0, std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const($5 | 0) | 0 | 0, HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2____to_address_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20____20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___type__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[($4 + 8 | 0) >> 2] = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 12 | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____swap_out_circular_buffer_28std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____29($5 | 0, $4 | 0);
  std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20________split_buffer_28_29($4 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function Triangle__lazy_points_around_28Point3__2c_20int_2c_20ico__rotation_method_29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $7 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, $8 = 0, $60$hi = 0, $61$hi = 0, $83$hi = 0, $187 = 0, $218 = 0, $56 = 0, $82$hi = 0, $184 = 0, $215 = 0, $35$hi = 0, $40$hi = 0, $60 = 0, $61 = 0, $62$hi = 0, $69$hi = 0, $70$hi = 0, $76$hi = 0, $82 = 0, $83 = 0, $84$hi = 0, $85$hi = 0, $89 = 0, $93$hi = 0, $94$hi = 0, $100$hi = 0, $117 = 0, $125 = 0, $136$hi = 0, $137$hi = 0, $141 = 0, $145$hi = 0, $146$hi = 0, $152$hi = 0, $156$hi = 0, $176 = 0, $189 = 0, $193 = 0, $197 = 0, $209 = 0, $220 = 0, $224 = 0, $228 = 0, $236 = 0, $257 = 0, $271 = 0, $10 = 0.0, $12 = 0.0, $35 = 0, $462$hi = 0, $103 = 0, $37 = 0.0, $40 = 0, $472$hi = 0, $105 = 0, $42 = 0.0, $43 = 0, $62 = 0, $527$hi = 0, $106 = 0, $69 = 0, $547 = 0, $76 = 0, $563$hi = 0, $107 = 0, $80 = 0, $80$hi = 0, $84 = 0, $85 = 0, $93 = 0, $598 = 0, $100 = 0, $614$hi = 0, $108 = 0, $104 = 0, $104$hi = 0, $136 = 0, $137 = 0, $145 = 0, $714 = 0, $152 = 0, $730$hi = 0, $109 = 0, $156 = 0, $736$hi = 0, $110 = 0, $795 = 0, $805 = 0, $815 = 0, $825 = 0, $860 = 0, $870 = 0, $880 = 0, $890 = 0, $272 = 0, $328 = 0, $334 = 0, $340 = 0, $346 = 0, $352 = 0;
  $7 = __stack_pointer - 544 | 0;
  __stack_pointer = $7;
  HEAP32[($7 + 540 | 0) >> 2] = $0;
  HEAP32[($7 + 536 | 0) >> 2] = $1;
  HEAP32[($7 + 532 | 0) >> 2] = $2;
  HEAP32[($7 + 528 | 0) >> 2] = $3;
  HEAP32[($7 + 524 | 0) >> 2] = $4;
  $8 = HEAP32[($7 + 536 | 0) >> 2] | 0;
  $10 = +HEAPF64[(HEAP32[($7 + 532 | 0) >> 2] | 0) >> 3];
  $12 = +HEAPF64[((HEAP32[($7 + 532 | 0) >> 2] | 0) + 8 | 0) >> 3];
  HEAPF64[($7 + 272 | 0) >> 3] = +HEAPF64[((HEAP32[($7 + 532 | 0) >> 2] | 0) + 16 | 0) >> 3];
  HEAPF64[($7 + 264 | 0) >> 3] = $12;
  HEAPF64[($7 + 256 | 0) >> 3] = $10;
  printf(3839 | 0, $7 + 256 | 0 | 0) | 0;
  HEAP32[($7 + 520 | 0) >> 2] = hexmapf__num_divisions_28int_29(HEAP32[($7 + 528 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    if (HEAP32[($7 + 524 | 0) >> 2] | 0) {
     break label$2
    }
    Triangle__calc_percent_gnomonic_28Point3_20const__29_20const($7 + 480 | 0 | 0, $8 | 0, HEAP32[($7 + 532 | 0) >> 2] | 0 | 0);
    break label$1;
   }
   Triangle__calc_percent_quaternion_28Point3_20const__29_20const($7 + 480 | 0 | 0, $8 | 0, HEAP32[($7 + 532 | 0) >> 2] | 0 | 0);
  }
  HEAP32[($7 + 208 | 0) >> 2] = HEAP32[($8 + 104 | 0) >> 2] | 0;
  printf(3894 | 0, $7 + 208 | 0 | 0) | 0;
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[($7 + 488 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($7 + 492 | 0) >> 2] | 0;
  $35 = i64toi32_i32$0;
  $35$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $7;
  i64toi32_i32$1 = HEAP32[($7 + 480 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($7 + 484 | 0) >> 2] | 0;
  $462$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $35$hi;
  i64toi32_i32$0 = $462$hi;
  $103 = i64toi32_i32$1;
  i64toi32_i32$1 = $35$hi;
  $37 = +__trunctfdf2($103 | 0, i64toi32_i32$0 | 0, $35 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $7 + 504 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $40 = i64toi32_i32$1;
  $40$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[($7 + 496 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($7 + 500 | 0) >> 2] | 0;
  $472$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $40$hi;
  i64toi32_i32$1 = $472$hi;
  $105 = i64toi32_i32$0;
  i64toi32_i32$0 = $40$hi;
  $42 = +__trunctfdf2($105 | 0, i64toi32_i32$1 | 0, $40 | 0, i64toi32_i32$0 | 0);
  $43 = HEAP32[($7 + 528 | 0) >> 2] | 0;
  HEAP32[($7 + 244 | 0) >> 2] = HEAP32[($7 + 520 | 0) >> 2] | 0;
  HEAP32[($7 + 240 | 0) >> 2] = $43;
  HEAPF64[($7 + 232 | 0) >> 3] = $42;
  HEAPF64[($7 + 224 | 0) >> 3] = $37;
  printf(3930 | 0, $7 + 224 | 0 | 0) | 0;
  label$3 : {
   label$4 : {
    if (HEAP32[($8 + 96 | 0) >> 2] | 0) {
     break label$4
    }
    __floatsitf($7 + 128 | 0 | 0, HEAP32[($7 + 520 | 0) >> 2] | 0 | 0);
    $56 = 8;
    i64toi32_i32$2 = ($7 + 128 | 0) + $56 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $60 = i64toi32_i32$0;
    $60$hi = i64toi32_i32$1;
    i64toi32_i32$2 = $7;
    i64toi32_i32$1 = HEAP32[($7 + 128 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[($7 + 132 | 0) >> 2] | 0;
    $61 = i64toi32_i32$1;
    $61$hi = i64toi32_i32$0;
    i64toi32_i32$2 = $7;
    i64toi32_i32$0 = HEAP32[($7 + 488 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[($7 + 492 | 0) >> 2] | 0;
    $62 = i64toi32_i32$0;
    $62$hi = i64toi32_i32$1;
    i64toi32_i32$2 = $7;
    i64toi32_i32$1 = HEAP32[($7 + 480 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[($7 + 484 | 0) >> 2] | 0;
    $527$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $62$hi;
    i64toi32_i32$0 = $61$hi;
    i64toi32_i32$0 = $60$hi;
    i64toi32_i32$0 = $527$hi;
    $106 = i64toi32_i32$1;
    i64toi32_i32$1 = $62$hi;
    i64toi32_i32$2 = $61$hi;
    i64toi32_i32$3 = $60$hi;
    __multf3($7 + 112 | 0 | 0, $106 | 0, i64toi32_i32$0 | 0, $62 | 0, i64toi32_i32$1 | 0, $61 | 0, i64toi32_i32$2 | 0, $60 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$1 = ($7 + 112 | 0) + $56 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $69 = i64toi32_i32$3;
    $69$hi = i64toi32_i32$2;
    i64toi32_i32$1 = $7;
    i64toi32_i32$2 = HEAP32[($7 + 112 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[($7 + 116 | 0) >> 2] | 0;
    $70$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $61$hi;
    i64toi32_i32$3 = $60$hi;
    i64toi32_i32$3 = $70$hi;
    $547 = i64toi32_i32$2;
    i64toi32_i32$3 = $69$hi;
    i64toi32_i32$3 = $61$hi;
    i64toi32_i32$2 = $60$hi;
    i64toi32_i32$1 = $70$hi;
    i64toi32_i32$0 = $69$hi;
    __subtf3($7 + 96 | 0 | 0, $61 | 0, i64toi32_i32$3 | 0, $60 | 0, i64toi32_i32$2 | 0, $547 | 0, i64toi32_i32$1 | 0, $69 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$2 = ($7 + 96 | 0) + $56 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $76 = i64toi32_i32$0;
    $76$hi = i64toi32_i32$1;
    i64toi32_i32$2 = $7;
    i64toi32_i32$1 = HEAP32[($7 + 96 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[($7 + 100 | 0) >> 2] | 0;
    $563$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $76$hi;
    i64toi32_i32$0 = $563$hi;
    $107 = i64toi32_i32$1;
    i64toi32_i32$1 = $76$hi;
    round_28long_20double_29($7 + 144 | 0 | 0, $107 | 0, i64toi32_i32$0 | 0, $76 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$2 = $7;
    i64toi32_i32$1 = HEAP32[($7 + 152 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[($7 + 156 | 0) >> 2] | 0;
    $80 = i64toi32_i32$1;
    $80$hi = i64toi32_i32$0;
    i64toi32_i32$2 = $7;
    i64toi32_i32$0 = HEAP32[($7 + 144 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[($7 + 148 | 0) >> 2] | 0;
    $82 = i64toi32_i32$0;
    $82$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $80$hi;
    $83 = $80;
    $83$hi = i64toi32_i32$1;
    break label$3;
   }
   i64toi32_i32$2 = $7;
   i64toi32_i32$1 = HEAP32[($7 + 488 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[($7 + 492 | 0) >> 2] | 0;
   $84 = i64toi32_i32$1;
   $84$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $7;
   i64toi32_i32$0 = HEAP32[($7 + 480 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[($7 + 484 | 0) >> 2] | 0;
   $85 = i64toi32_i32$0;
   $85$hi = i64toi32_i32$1;
   __floatsitf($7 + 176 | 0 | 0, HEAP32[($7 + 520 | 0) >> 2] | 0 | 0);
   $89 = 8;
   i64toi32_i32$2 = ($7 + 176 | 0) + $89 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $93 = i64toi32_i32$1;
   $93$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $7;
   i64toi32_i32$0 = HEAP32[($7 + 176 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[($7 + 180 | 0) >> 2] | 0;
   $94$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $85$hi;
   i64toi32_i32$1 = $84$hi;
   i64toi32_i32$1 = $94$hi;
   $598 = i64toi32_i32$0;
   i64toi32_i32$1 = $93$hi;
   i64toi32_i32$1 = $85$hi;
   i64toi32_i32$0 = $84$hi;
   i64toi32_i32$2 = $94$hi;
   i64toi32_i32$3 = $93$hi;
   __multf3($7 + 160 | 0 | 0, $85 | 0, i64toi32_i32$1 | 0, $84 | 0, i64toi32_i32$0 | 0, $598 | 0, i64toi32_i32$2 | 0, $93 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$0 = ($7 + 160 | 0) + $89 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $100 = i64toi32_i32$3;
   $100$hi = i64toi32_i32$2;
   i64toi32_i32$0 = $7;
   i64toi32_i32$2 = HEAP32[($7 + 160 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[($7 + 164 | 0) >> 2] | 0;
   $614$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $100$hi;
   i64toi32_i32$3 = $614$hi;
   $108 = i64toi32_i32$2;
   i64toi32_i32$2 = $100$hi;
   round_28long_20double_29($7 + 192 | 0 | 0, $108 | 0, i64toi32_i32$3 | 0, $100 | 0, i64toi32_i32$2 | 0);
   i64toi32_i32$0 = $7;
   i64toi32_i32$2 = HEAP32[($7 + 200 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[($7 + 204 | 0) >> 2] | 0;
   $104 = i64toi32_i32$2;
   $104$hi = i64toi32_i32$3;
   i64toi32_i32$0 = $7;
   i64toi32_i32$3 = HEAP32[($7 + 192 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[($7 + 196 | 0) >> 2] | 0;
   $82 = i64toi32_i32$3;
   $82$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $104$hi;
   $83 = $104;
   $83$hi = i64toi32_i32$2;
  }
  i64toi32_i32$2 = $83$hi;
  i64toi32_i32$2 = $82$hi;
  i64toi32_i32$2 = $83$hi;
  i64toi32_i32$2 = $82$hi;
  i64toi32_i32$3 = $83$hi;
  HEAP32[($7 + 476 | 0) >> 2] = __fixtfsi($82 | 0, i64toi32_i32$2 | 0, $83 | 0, i64toi32_i32$3 | 0) | 0;
  label$5 : {
   label$6 : {
    if (HEAP32[($7 + 524 | 0) >> 2] | 0) {
     break label$6
    }
    $117 = -1;
    Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29($7 + 448 | 0 | 0, $8 | 0, HEAP32[($7 + 476 | 0) >> 2] | 0 | 0, HEAP32[($7 + 528 | 0) >> 2] | 0 | 0, HEAP32[(0 + 12560 | 0) >> 2] | 0 | 0, $117 | 0, $117 | 0);
    break label$5;
   }
   $125 = -1;
   Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29($7 + 448 | 0 | 0, $8 | 0, HEAP32[($7 + 476 | 0) >> 2] | 0 | 0, HEAP32[($7 + 528 | 0) >> 2] | 0 | 0, HEAP32[(0 + 12560 | 0) >> 2] | 0 | 0, $125 | 0, $125 | 0);
  }
  HEAP32[($7 + 80 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const($7 + 448 | 0 | 0) | 0;
  printf(4015 | 0, $7 + 80 | 0 | 0) | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___vector_28_29($7 + 432 | 0 | 0) | 0;
  i64toi32_i32$0 = $7 + 504 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $136 = i64toi32_i32$3;
  $136$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $7;
  i64toi32_i32$2 = HEAP32[($7 + 496 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($7 + 500 | 0) >> 2] | 0;
  $137 = i64toi32_i32$2;
  $137$hi = i64toi32_i32$3;
  __floatsitf($7 + 48 | 0 | 0, HEAP32[($7 + 520 | 0) >> 2] | 0 | 0);
  $141 = 8;
  i64toi32_i32$0 = ($7 + 48 | 0) + $141 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $145 = i64toi32_i32$3;
  $145$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $7;
  i64toi32_i32$2 = HEAP32[($7 + 48 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($7 + 52 | 0) >> 2] | 0;
  $146$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $137$hi;
  i64toi32_i32$3 = $136$hi;
  i64toi32_i32$3 = $146$hi;
  $714 = i64toi32_i32$2;
  i64toi32_i32$3 = $145$hi;
  i64toi32_i32$3 = $137$hi;
  i64toi32_i32$2 = $136$hi;
  i64toi32_i32$0 = $146$hi;
  i64toi32_i32$1 = $145$hi;
  __multf3($7 + 32 | 0 | 0, $137 | 0, i64toi32_i32$3 | 0, $136 | 0, i64toi32_i32$2 | 0, $714 | 0, i64toi32_i32$0 | 0, $145 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = ($7 + 32 | 0) + $141 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $152 = i64toi32_i32$1;
  $152$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[($7 + 32 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($7 + 36 | 0) >> 2] | 0;
  $730$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $152$hi;
  i64toi32_i32$1 = $730$hi;
  $109 = i64toi32_i32$0;
  i64toi32_i32$0 = $152$hi;
  round_28long_20double_29($7 + 64 | 0 | 0, $109 | 0, i64toi32_i32$1 | 0, $152 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[($7 + 72 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($7 + 76 | 0) >> 2] | 0;
  $156 = i64toi32_i32$0;
  $156$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $7;
  i64toi32_i32$1 = HEAP32[($7 + 64 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($7 + 68 | 0) >> 2] | 0;
  $736$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $156$hi;
  i64toi32_i32$0 = $736$hi;
  $110 = i64toi32_i32$1;
  i64toi32_i32$1 = $156$hi;
  HEAP32[($7 + 428 | 0) >> 2] = __fixtfsi($110 | 0, i64toi32_i32$0 | 0, $156 | 0, i64toi32_i32$1 | 0) | 0;
  HEAP32[($7 + 420 | 0) >> 2] = 0;
  label$7 : {
   label$8 : while (1) {
    if (!((HEAP32[($7 + 420 | 0) >> 2] | 0) >>> 0 < (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const($7 + 448 | 0 | 0) | 0) >>> 0 & 1 | 0)) {
     break label$7
    }
    label$9 : {
     label$10 : {
      if (HEAP32[($8 + 96 | 0) >> 2] | 0) {
       break label$10
      }
      $176 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29($7 + 448 | 0 | 0, HEAP32[($7 + 420 | 0) >> 2] | 0 | 0) | 0;
      break label$9;
     }
     $176 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29(($7 + 448 | 0) + 12 | 0 | 0, HEAP32[($7 + 420 | 0) >> 2] | 0 | 0) | 0;
    }
    $184 = $176;
    $187 = $7 + 384 | 0;
    i64toi32_i32$2 = $184;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $795 = i64toi32_i32$1;
    i64toi32_i32$1 = $187;
    HEAP32[i64toi32_i32$1 >> 2] = $795;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    $189 = 24;
    i64toi32_i32$2 = i64toi32_i32$2 + $189 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $805 = i64toi32_i32$0;
    i64toi32_i32$0 = $187 + $189 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $805;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $193 = 16;
    i64toi32_i32$2 = $184 + $193 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $815 = i64toi32_i32$1;
    i64toi32_i32$1 = $187 + $193 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $815;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    $197 = 8;
    i64toi32_i32$2 = $184 + $197 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $825 = i64toi32_i32$0;
    i64toi32_i32$0 = $187 + $197 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $825;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    label$11 : {
     label$12 : {
      if (HEAP32[($8 + 96 | 0) >> 2] | 0) {
       break label$12
      }
      $209 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29(($7 + 448 | 0) + 12 | 0 | 0, HEAP32[($7 + 420 | 0) >> 2] | 0 | 0) | 0;
      break label$11;
     }
     $209 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29($7 + 448 | 0 | 0, HEAP32[($7 + 420 | 0) >> 2] | 0 | 0) | 0;
    }
    $215 = $209;
    $218 = $7 + 352 | 0;
    i64toi32_i32$2 = $215;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $860 = i64toi32_i32$1;
    i64toi32_i32$1 = $218;
    HEAP32[i64toi32_i32$1 >> 2] = $860;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    $220 = 24;
    i64toi32_i32$2 = i64toi32_i32$2 + $220 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $870 = i64toi32_i32$0;
    i64toi32_i32$0 = $218 + $220 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $870;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $224 = 16;
    i64toi32_i32$2 = $215 + $224 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $880 = i64toi32_i32$1;
    i64toi32_i32$1 = $218 + $224 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $880;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    $228 = 8;
    i64toi32_i32$2 = $215 + $228 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $890 = i64toi32_i32$0;
    i64toi32_i32$0 = $218 + $228 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $890;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    label$13 : {
     label$14 : {
      if (HEAP32[($8 + 96 | 0) >> 2] | 0) {
       break label$14
      }
      $236 = (HEAP32[($7 + 472 | 0) >> 2] | 0) + (HEAP32[($7 + 420 | 0) >> 2] | 0) | 0;
      break label$13;
     }
     $236 = (HEAP32[($7 + 520 | 0) >> 2] | 0) - ((HEAP32[($7 + 472 | 0) >> 2] | 0) + (HEAP32[($7 + 420 | 0) >> 2] | 0) | 0) | 0;
    }
    HEAP32[($7 + 348 | 0) >> 2] = $236;
    label$15 : {
     label$16 : {
      if (HEAP32[($7 + 524 | 0) >> 2] | 0) {
       break label$16
      }
      $257 = -1;
      Point3__lazy_row_points_gnomonic_28int_2c_20Point3_20const__2c_20Point3_20const__2c_20int_2c_20int_2c_20int_2c_20int_29($7 + 328 | 0 | 0, HEAP32[($7 + 428 | 0) >> 2] | 0 | 0, $7 + 384 | 0 | 0, $7 + 352 | 0 | 0, HEAP32[($7 + 348 | 0) >> 2] | 0 | 0, HEAP32[(0 + 12560 | 0) >> 2] | 0 | 0, $257 | 0, $257 | 0);
      break label$15;
     }
     $271 = -1;
     Point3__lazy_row_points_quaternion_28int_2c_20Point3_20const__2c_20Point3_20const__2c_20int_2c_20int_2c_20int_2c_20int_29($7 + 328 | 0 | 0, HEAP32[($7 + 428 | 0) >> 2] | 0 | 0, $7 + 384 | 0 | 0, $7 + 352 | 0 | 0, HEAP32[($7 + 348 | 0) >> 2] | 0 | 0, HEAP32[(0 + 12560 | 0) >> 2] | 0 | 0, $271 | 0, $271 | 0);
    }
    $272 = HEAP32[($7 + 524 | 0) >> 2] | 0;
    HEAP8[($7 + 295 | 0) >> 0] = 0 & 1 | 0;
    label$17 : {
     label$18 : {
      if ($272) {
       break label$18
      }
      std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($7 + 296 | 0 | 0, $7 + 328 | 0 | 0) | 0;
      HEAP8[($7 + 295 | 0) >> 0] = 1 & 1 | 0;
      Point3__spherify1D_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__29($7 + 312 | 0 | 0, $7 + 296 | 0 | 0);
      break label$17;
     }
     std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($7 + 312 | 0 | 0, $7 + 328 | 0 | 0) | 0;
    }
    std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___push_back_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($7 + 432 | 0 | 0, $7 + 312 | 0 | 0);
    std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($7 + 312 | 0 | 0) | 0;
    label$19 : {
     if (!((HEAPU8[($7 + 295 | 0) >> 0] | 0) & 1 | 0)) {
      break label$19
     }
     std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($7 + 296 | 0 | 0) | 0;
    }
    HEAP32[($7 + 424 | 0) >> 2] = HEAP32[($7 + 340 | 0) >> 2] | 0;
    Point3__lazy_row_points_result___lazy_row_points_result_28_29($7 + 328 | 0 | 0) | 0;
    Point3___Point3_28_29($7 + 352 | 0 | 0) | 0;
    Point3___Point3_28_29($7 + 384 | 0 | 0) | 0;
    HEAP32[($7 + 420 | 0) >> 2] = (HEAP32[($7 + 420 | 0) >> 2] | 0) + 1 | 0;
    continue label$8;
   };
  }
  $328 = std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const($7 + 432 | 0 | 0) | 0;
  $334 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29($7 + 432 | 0 | 0, 0 | 0) | 0 | 0) | 0;
  $340 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29($7 + 432 | 0 | 0, 1 | 0) | 0 | 0) | 0;
  $346 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29($7 + 432 | 0 | 0, 2 | 0) | 0 | 0) | 0;
  $352 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29($7 + 432 | 0 | 0, 3 | 0) | 0 | 0) | 0;
  HEAP32[($7 + 20 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const(std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___operator_5b_5d_28unsigned_20long_29($7 + 432 | 0 | 0, 4 | 0) | 0 | 0) | 0;
  HEAP32[($7 + 16 | 0) >> 2] = $352;
  HEAP32[($7 + 12 | 0) >> 2] = $346;
  HEAP32[($7 + 8 | 0) >> 2] = $340;
  HEAP32[($7 + 4 | 0) >> 2] = $334;
  HEAP32[$7 >> 2] = $328;
  printf(4062 | 0, $7 | 0) | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___vector_28std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20__20const__29($0 | 0, $7 + 432 | 0 | 0) | 0;
  HEAP32[($0 + 12 | 0) >> 2] = HEAP32[($7 + 472 | 0) >> 2] | 0;
  HEAP32[($0 + 16 | 0) >> 2] = HEAP32[($7 + 424 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20____vector_28_29($7 + 432 | 0 | 0) | 0;
  Point3__lazy_side_points_result___lazy_side_points_result_28_29($7 + 448 | 0 | 0) | 0;
  __stack_pointer = $7 + 544 | 0;
  return;
 }
 
 function round_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $5 = 0, i64toi32_i32$2 = 0, $6$hi = 0, $6 = 0, $28$hi = 0, $16 = 0, $10 = 0, $10$hi = 0, $11 = 0, $11$hi = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] | 0;
  $6 = i64toi32_i32$0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  $28$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = $28$hi;
  $16 = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  roundl($5 | 0, $16 | 0, i64toi32_i32$0 | 0, $6 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $5 + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $10 = i64toi32_i32$1;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[$5 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 4 | 0) >> 2] | 0;
  $11 = i64toi32_i32$0;
  $11$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$0 = $0;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $10;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $11$hi;
  HEAP32[i64toi32_i32$0 >> 2] = $11;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function Point3__lazy_row_points_result___lazy_row_points_result_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function Point3__lazy_side_points_result___lazy_side_points_result_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($4 + 12 | 0 | 0) | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function Triangle__generate_point_28int_2c_20int_2c_20int_2c_20ico__rotation_method_29_20const($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  var $8 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $9 = 0, $46 = 0, $77 = 0, $43 = 0, $74 = 0, $139 = 0, $35 = 0, $48 = 0, $52 = 0, $56 = 0, $68 = 0, $79 = 0, $83 = 0, $87 = 0, $95 = 0, $115 = 0, $141 = 0, $145 = 0, $149 = 0, $270 = 0, $280 = 0, $290 = 0, $300 = 0, $331 = 0, $341 = 0, $351 = 0, $361 = 0, $92 = 0, $112 = 0, $462 = 0, $472 = 0, $482 = 0, $492 = 0;
  $8 = __stack_pointer - 144 | 0;
  __stack_pointer = $8;
  HEAP32[($8 + 140 | 0) >> 2] = $0;
  HEAP32[($8 + 136 | 0) >> 2] = $1;
  HEAP32[($8 + 132 | 0) >> 2] = $2;
  HEAP32[($8 + 128 | 0) >> 2] = $3;
  HEAP32[($8 + 124 | 0) >> 2] = $4;
  HEAP32[($8 + 120 | 0) >> 2] = $5;
  $9 = HEAP32[($8 + 136 | 0) >> 2] | 0;
  HEAP32[($8 + 116 | 0) >> 2] = hexmapf__num_divisions_28int_29(HEAP32[($8 + 132 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    if (HEAP32[($8 + 120 | 0) >> 2] | 0) {
     break label$2
    }
    Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29($8 + 88 | 0 | 0, $9 | 0, HEAP32[($8 + 128 | 0) >> 2] | 0 | 0, HEAP32[($8 + 132 | 0) >> 2] | 0 | 0, 0 | 0, HEAP32[($8 + 128 | 0) >> 2] | 0 | 0, HEAP32[($8 + 128 | 0) >> 2] | 0 | 0);
    break label$1;
   }
   Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29($8 + 88 | 0 | 0, $9 | 0, HEAP32[($8 + 128 | 0) >> 2] | 0 | 0, HEAP32[($8 + 132 | 0) >> 2] | 0 | 0, 0 | 0, HEAP32[($8 + 128 | 0) >> 2] | 0 | 0, HEAP32[($8 + 128 | 0) >> 2] | 0 | 0);
  }
  label$3 : {
   label$4 : {
    if (HEAP32[($9 + 96 | 0) >> 2] | 0) {
     break label$4
    }
    $35 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29($8 + 88 | 0 | 0, 0 | 0) | 0;
    break label$3;
   }
   $35 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29(($8 + 88 | 0) + 12 | 0 | 0, 0 | 0) | 0;
  }
  $43 = $35;
  $46 = $8 + 56 | 0;
  i64toi32_i32$2 = $43;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $270 = i64toi32_i32$0;
  i64toi32_i32$0 = $46;
  HEAP32[i64toi32_i32$0 >> 2] = $270;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $48 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $48 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $280 = i64toi32_i32$1;
  i64toi32_i32$1 = $46 + $48 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $280;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $52 = 16;
  i64toi32_i32$2 = $43 + $52 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $290 = i64toi32_i32$0;
  i64toi32_i32$0 = $46 + $52 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $290;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $56 = 8;
  i64toi32_i32$2 = $43 + $56 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $300 = i64toi32_i32$1;
  i64toi32_i32$1 = $46 + $56 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $300;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  label$5 : {
   label$6 : {
    if (HEAP32[($9 + 96 | 0) >> 2] | 0) {
     break label$6
    }
    $68 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29(($8 + 88 | 0) + 12 | 0 | 0, 0 | 0) | 0;
    break label$5;
   }
   $68 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29($8 + 88 | 0 | 0, 0 | 0) | 0;
  }
  $74 = $68;
  $77 = $8 + 24 | 0;
  i64toi32_i32$2 = $74;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $331 = i64toi32_i32$0;
  i64toi32_i32$0 = $77;
  HEAP32[i64toi32_i32$0 >> 2] = $331;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $79 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $79 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $341 = i64toi32_i32$1;
  i64toi32_i32$1 = $77 + $79 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $341;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $83 = 16;
  i64toi32_i32$2 = $74 + $83 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $351 = i64toi32_i32$0;
  i64toi32_i32$0 = $77 + $83 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $351;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $87 = 8;
  i64toi32_i32$2 = $74 + $87 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $361 = i64toi32_i32$1;
  i64toi32_i32$1 = $77 + $87 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $361;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  label$7 : {
   label$8 : {
    if (HEAP32[($8 + 120 | 0) >> 2] | 0) {
     break label$8
    }
    $92 = HEAP32[($8 + 124 | 0) >> 2] | 0;
    label$9 : {
     label$10 : {
      if (HEAP32[($9 + 96 | 0) >> 2] | 0) {
       break label$10
      }
      $95 = HEAP32[($8 + 112 | 0) >> 2] | 0;
      break label$9;
     }
     $95 = (HEAP32[($8 + 116 | 0) >> 2] | 0) - (HEAP32[($8 + 112 | 0) >> 2] | 0) | 0;
    }
    Point3__lazy_row_points_gnomonic_28int_2c_20Point3_20const__2c_20Point3_20const__2c_20int_2c_20int_2c_20int_2c_20int_29($8 + 8 | 0 | 0, $92 | 0, $8 + 56 | 0 | 0, $8 + 24 | 0 | 0, $95 | 0, 0 | 0, HEAP32[($8 + 124 | 0) >> 2] | 0 | 0, HEAP32[($8 + 124 | 0) >> 2] | 0 | 0);
    break label$7;
   }
   $112 = HEAP32[($8 + 124 | 0) >> 2] | 0;
   label$11 : {
    label$12 : {
     if (HEAP32[($9 + 96 | 0) >> 2] | 0) {
      break label$12
     }
     $115 = HEAP32[($8 + 112 | 0) >> 2] | 0;
     break label$11;
    }
    $115 = (HEAP32[($8 + 116 | 0) >> 2] | 0) - (HEAP32[($8 + 112 | 0) >> 2] | 0) | 0;
   }
   Point3__lazy_row_points_quaternion_28int_2c_20Point3_20const__2c_20Point3_20const__2c_20int_2c_20int_2c_20int_2c_20int_29($8 + 8 | 0 | 0, $112 | 0, $8 + 56 | 0 | 0, $8 + 24 | 0 | 0, $115 | 0, 0 | 0, HEAP32[($8 + 124 | 0) >> 2] | 0 | 0, HEAP32[($8 + 124 | 0) >> 2] | 0 | 0);
  }
  HEAP8[($8 + 7 | 0) >> 0] = 0 & 1 | 0;
  $139 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___operator_5b_5d_28unsigned_20long_29($8 + 8 | 0 | 0, 0 | 0) | 0;
  i64toi32_i32$2 = $139;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $462 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  HEAP32[i64toi32_i32$0 >> 2] = $462;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $141 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $141 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $472 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + $141 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $472;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $145 = 16;
  i64toi32_i32$2 = $139 + $145 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $482 = i64toi32_i32$0;
  i64toi32_i32$0 = $0 + $145 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $482;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $149 = 8;
  i64toi32_i32$2 = $139 + $149 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $492 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + $149 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $492;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  label$13 : {
   if (HEAP32[($8 + 120 | 0) >> 2] | 0) {
    break label$13
   }
   Point3__spheriphy_28_29($0 | 0);
  }
  HEAP8[($8 + 7 | 0) >> 0] = 1 & 1 | 0;
  label$14 : {
   if ((HEAPU8[($8 + 7 | 0) >> 0] | 0) & 1 | 0) {
    break label$14
   }
   Point3___Point3_28_29($0 | 0) | 0;
  }
  Point3__lazy_row_points_result___lazy_row_points_result_28_29($8 + 8 | 0 | 0) | 0;
  Point3___Point3_28_29($8 + 24 | 0 | 0) | 0;
  Point3___Point3_28_29($8 + 56 | 0 | 0) | 0;
  Point3__lazy_side_points_result___lazy_side_points_result_28_29($8 + 88 | 0 | 0) | 0;
  __stack_pointer = $8 + 144 | 0;
  return;
 }
 
 function Triangle__contains_point_28Point3__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$3 = 0, $5 = 0, $75 = 0, $304 = 0, $63 = 0, $69 = 0, $192 = 0, $292 = 0, $298 = 0, $9 = 0, $123 = 0, $176 = 0, $184 = 0, $239 = 0, $352 = 0, $6 = 0, $11 = 0, $15 = 0, $19 = 0, $57$hi = 0, $148$hi = 0, $154$hi = 0, $155$hi = 0, $156$hi = 0, $157$hi = 0, $158$hi = 0, $159$hi = 0, $165$hi = 0, $166$hi = 0, $264$hi = 0, $270$hi = 0, $271$hi = 0, $272$hi = 0, $273$hi = 0, $274$hi = 0, $275$hi = 0, $281$hi = 0, $282$hi = 0, $377$hi = 0, $383$hi = 0, $384$hi = 0, $385$hi = 0, $386$hi = 0, $387$hi = 0, $388$hi = 0, $394$hi = 0, $395$hi = 0, $405$hi = 0, $406$hi = 0, $407$hi = 0, $408$hi = 0, $411 = 0, $415$hi = 0, $416$hi = 0, $417$hi = 0, $418$hi = 0, $422$hi = 0, $423$hi = 0, $424$hi = 0, $428$hi = 0, $434$hi = 0, $480 = 0, $490 = 0, $500 = 0, $510 = 0, $55 = 0, $55$hi = 0, $576 = 0, $57 = 0, $583$hi = 0, $163 = 0, $606 = 0, $619 = 0, $632 = 0, $636 = 0, $649 = 0, $662 = 0, $675 = 0, $679 = 0, $695 = 0, $711 = 0, $727 = 0, $731 = 0, $138 = 0, $138$hi = 0, $139 = 0, $148 = 0, $795$hi = 0, $164 = 0, $154 = 0, $155 = 0, $156 = 0, $166 = 0, $165 = 0, $834 = 0, $867 = 0, $883 = 0, $899 = 0, $903 = 0, $916 = 0, $929 = 0, $942 = 0, $946 = 0, $959 = 0, $972 = 0, $985 = 0, $989 = 0, $254 = 0, $254$hi = 0, $255 = 0, $264 = 0, $1053$hi = 0, $167 = 0, $270 = 0, $271 = 0, $272 = 0, $168 = 0, $281 = 0, $1092 = 0, $1122 = 0, $1135 = 0, $1148 = 0, $1152 = 0, $1168 = 0, $1184 = 0, $1200 = 0, $1204 = 0, $1217 = 0, $1230 = 0, $1243 = 0, $1247 = 0, $367 = 0, $367$hi = 0, $368 = 0, $377 = 0, $1311$hi = 0, $169 = 0, $383 = 0, $384 = 0, $385 = 0, $170 = 0, $394 = 0, $1350 = 0, $405 = 0, $406 = 0, $407 = 0, $1382 = 0, $415 = 0, $416 = 0, $417 = 0, $1401 = 0, $420 = 0, $420$hi = 0, $421 = 0, $421$hi = 0, $422 = 0, $423 = 0, $424 = 0, $1422$hi = 0, $171 = 0, $428 = 0, $1434$hi = 0, $172 = 0, $434 = 0, $1449$hi = 0, $173 = 0, $457 = 0;
  $4 = __stack_pointer - 1120 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 1112 | 0) >> 2] = $0;
  HEAP32[($4 + 1108 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 1112 | 0) >> 2] | 0;
  $6 = HEAP32[($4 + 1108 | 0) >> 2] | 0;
  $9 = $4 + 1040 | 0;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $480 = i64toi32_i32$0;
  i64toi32_i32$0 = $9;
  HEAP32[i64toi32_i32$0 >> 2] = $480;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $11 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $11 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $490 = i64toi32_i32$1;
  i64toi32_i32$1 = $9 + $11 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $490;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $15 = 16;
  i64toi32_i32$2 = $6 + $15 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $500 = i64toi32_i32$0;
  i64toi32_i32$0 = $9 + $15 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $500;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $19 = 8;
  i64toi32_i32$2 = $6 + $19 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $510 = i64toi32_i32$1;
  i64toi32_i32$1 = $9 + $19 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $510;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  Triangle__plane_intersection_28Point3_29_20const($4 + 1072 | 0 | 0, $5 | 0, $4 + 1040 | 0 | 0);
  Point3___Point3_28_29($4 + 1040 | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!((Point3__on_opposite_side_28Point3_20const__29_20const($4 + 1072 | 0 | 0, HEAP32[($4 + 1108 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
     break label$2
    }
    HEAP8[($4 + 1119 | 0) >> 0] = 0 & 1 | 0;
    HEAP32[($4 + 1036 | 0) >> 2] = 1;
    break label$1;
   }
   label$3 : {
    if ((Point3__is_valid_28_29_20const($4 + 1072 | 0 | 0) | 0) & 1 | 0) {
     break label$3
    }
    HEAP8[($4 + 1119 | 0) >> 0] = 0 & 1 | 0;
    HEAP32[($4 + 1036 | 0) >> 2] = 1;
    break label$1;
   }
   Triangle__area_28_29_20const($4 + 240 | 0 | 0, $5 | 0);
   i64toi32_i32$2 = $4;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 240 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 244 | 0) >> 2] | 0;
   $55 = i64toi32_i32$0;
   $55$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 248 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 252 | 0) >> 2] | 0;
   $576 = i64toi32_i32$1;
   i64toi32_i32$1 = i64toi32_i32$2;
   HEAP32[(i64toi32_i32$1 + 1016 | 0) >> 2] = $576;
   HEAP32[(i64toi32_i32$1 + 1020 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$0 = $55$hi;
   HEAP32[(i64toi32_i32$1 + 1008 | 0) >> 2] = $55;
   HEAP32[(i64toi32_i32$1 + 1012 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 1016 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 1020 | 0) >> 2] | 0;
   $57 = i64toi32_i32$0;
   $57$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1008 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1012 | 0) >> 2] | 0;
   $583$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $57$hi;
   i64toi32_i32$0 = $583$hi;
   $163 = i64toi32_i32$1;
   i64toi32_i32$1 = $57$hi;
   HEAPF64[(i64toi32_i32$2 + 224 | 0) >> 3] = +__trunctfdf2($163 | 0, i64toi32_i32$0 | 0, $57 | 0, i64toi32_i32$1 | 0);
   printf(4164 | 0, i64toi32_i32$2 + 224 | 0 | 0) | 0;
   $63 = 24;
   i64toi32_i32$2 = $5 + $63 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $606 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 840 | 0) + $63 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $606;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   $69 = 16;
   i64toi32_i32$2 = $5 + $69 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $619 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 840 | 0) + $69 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $619;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   $75 = 8;
   i64toi32_i32$2 = $5 + $75 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $632 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 840 | 0) + $75 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $632;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $636 = i64toi32_i32$0;
   i64toi32_i32$0 = $4;
   HEAP32[(i64toi32_i32$0 + 840 | 0) >> 2] = $636;
   HEAP32[(i64toi32_i32$0 + 844 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = i64toi32_i32$2 + 56 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $649 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 808 | 0) + $63 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $649;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5 + 48 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $662 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 808 | 0) + $69 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $662;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $5 + 40 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $675 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 808 | 0) + $75 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $675;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
   $679 = i64toi32_i32$0;
   i64toi32_i32$0 = $4;
   HEAP32[(i64toi32_i32$0 + 808 | 0) >> 2] = $679;
   HEAP32[(i64toi32_i32$0 + 812 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = (i64toi32_i32$0 + 1072 | 0) + $63 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $695 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 776 | 0) + $63 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $695;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = ($4 + 1072 | 0) + $69 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $711 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 776 | 0) + $69 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $711;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = ($4 + 1072 | 0) + $75 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $727 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 776 | 0) + $75 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $727;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $4;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1072 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1076 | 0) >> 2] | 0;
   $731 = i64toi32_i32$0;
   i64toi32_i32$0 = i64toi32_i32$2;
   HEAP32[(i64toi32_i32$0 + 776 | 0) >> 2] = $731;
   HEAP32[(i64toi32_i32$0 + 780 | 0) >> 2] = i64toi32_i32$1;
   $123 = -1;
   Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29(i64toi32_i32$0 + 872 | 0 | 0, i64toi32_i32$0 + 840 | 0 | 0, i64toi32_i32$0 + 808 | 0 | 0, i64toi32_i32$0 + 776 | 0 | 0, 2 | 0, 3 | 0, $123 | 0, $123 | 0, $123 | 0, $123 | 0) | 0;
   Triangle__area_28_29_20const(i64toi32_i32$0 + 208 | 0 | 0, i64toi32_i32$0 + 872 | 0 | 0);
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 208 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$0 + 212 | 0) >> 2] | 0;
   $138 = i64toi32_i32$1;
   $138$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 216 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 220 | 0) >> 2] | 0;
   $139 = i64toi32_i32$0;
   Triangle___Triangle_28_29(i64toi32_i32$2 + 872 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 776 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 808 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 840 | 0 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$2;
   HEAP32[(i64toi32_i32$0 + 1e3 | 0) >> 2] = $139;
   HEAP32[(i64toi32_i32$0 + 1004 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$1 = $138$hi;
   HEAP32[(i64toi32_i32$0 + 992 | 0) >> 2] = $138;
   HEAP32[(i64toi32_i32$0 + 996 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 1e3 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$0 + 1004 | 0) >> 2] | 0;
   $148 = i64toi32_i32$1;
   $148$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 992 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 996 | 0) >> 2] | 0;
   $795$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $148$hi;
   i64toi32_i32$1 = $795$hi;
   $164 = i64toi32_i32$0;
   i64toi32_i32$0 = $148$hi;
   HEAPF64[(i64toi32_i32$2 + 192 | 0) >> 3] = +__trunctfdf2($164 | 0, i64toi32_i32$1 | 0, $148 | 0, i64toi32_i32$0 | 0);
   printf(4198 | 0, i64toi32_i32$2 + 192 | 0 | 0) | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1e3 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1004 | 0) >> 2] | 0;
   $154 = i64toi32_i32$0;
   $154$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 992 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 996 | 0) >> 2] | 0;
   $155 = i64toi32_i32$1;
   $155$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1016 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1020 | 0) >> 2] | 0;
   $156 = i64toi32_i32$0;
   $156$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1008 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1012 | 0) >> 2] | 0;
   $157$hi = i64toi32_i32$0;
   i64toi32_i32$0 = 1073235886;
   $158$hi = i64toi32_i32$0;
   i64toi32_i32$0 = -1342177280;
   $159$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $157$hi;
   i64toi32_i32$0 = $156$hi;
   i64toi32_i32$0 = $159$hi;
   i64toi32_i32$0 = $158$hi;
   i64toi32_i32$0 = $157$hi;
   $166 = i64toi32_i32$1;
   i64toi32_i32$1 = $156$hi;
   i64toi32_i32$2 = $159$hi;
   i64toi32_i32$3 = $158$hi;
   __addtf3($4 + 176 | 0 | 0, $166 | 0, i64toi32_i32$0 | 0, $156 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 343597383 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$1 = ($4 + 176 | 0) + $75 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $165 = i64toi32_i32$3;
   $165$hi = i64toi32_i32$2;
   i64toi32_i32$1 = $4;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 176 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 180 | 0) >> 2] | 0;
   $166$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $155$hi;
   i64toi32_i32$3 = $154$hi;
   i64toi32_i32$3 = $166$hi;
   $834 = i64toi32_i32$2;
   i64toi32_i32$3 = $165$hi;
   i64toi32_i32$3 = $155$hi;
   i64toi32_i32$2 = $154$hi;
   i64toi32_i32$1 = $166$hi;
   i64toi32_i32$0 = $165$hi;
   label$4 : {
    if (!((__getf2($155 | 0, i64toi32_i32$3 | 0, $154 | 0, i64toi32_i32$2 | 0, $834 | 0, i64toi32_i32$1 | 0, $165 | 0, i64toi32_i32$0 | 0) | 0 | 0) > (0 | 0) & 1 | 0)) {
     break label$4
    }
    HEAP8[($4 + 1119 | 0) >> 0] = 0 & 1 | 0;
    HEAP32[($4 + 1036 | 0) >> 2] = 1;
    break label$1;
   }
   $176 = 24;
   i64toi32_i32$2 = ($4 + 1072 | 0) + $176 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $867 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 600 | 0) + $176 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $867;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   $184 = 16;
   i64toi32_i32$2 = ($4 + 1072 | 0) + $184 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $883 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 600 | 0) + $184 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $883;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   $192 = 8;
   i64toi32_i32$2 = ($4 + 1072 | 0) + $192 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $899 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 600 | 0) + $192 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $899;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $4;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1072 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1076 | 0) >> 2] | 0;
   $903 = i64toi32_i32$1;
   i64toi32_i32$1 = i64toi32_i32$2;
   HEAP32[(i64toi32_i32$1 + 600 | 0) >> 2] = $903;
   HEAP32[(i64toi32_i32$1 + 604 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5 + 56 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $916 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 568 | 0) + $176 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $916;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $5 + 48 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $929 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 568 | 0) + $184 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $929;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5 + 40 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $942 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 568 | 0) + $192 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $942;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $5;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
   $946 = i64toi32_i32$1;
   i64toi32_i32$1 = $4;
   HEAP32[(i64toi32_i32$1 + 568 | 0) >> 2] = $946;
   HEAP32[(i64toi32_i32$1 + 572 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = i64toi32_i32$2 + 88 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $959 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 536 | 0) + $176 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $959;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $5 + 80 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $972 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 536 | 0) + $184 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $972;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5 + 72 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $985 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 536 | 0) + $192 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $985;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $5;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
   $989 = i64toi32_i32$1;
   i64toi32_i32$1 = $4;
   HEAP32[(i64toi32_i32$1 + 536 | 0) >> 2] = $989;
   HEAP32[(i64toi32_i32$1 + 540 | 0) >> 2] = i64toi32_i32$0;
   $239 = -1;
   Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29(i64toi32_i32$1 + 632 | 0 | 0, i64toi32_i32$1 + 600 | 0 | 0, i64toi32_i32$1 + 568 | 0 | 0, i64toi32_i32$1 + 536 | 0 | 0, 2 | 0, 3 | 0, $239 | 0, $239 | 0, $239 | 0, $239 | 0) | 0;
   Triangle__area_28_29_20const(i64toi32_i32$1 + 160 | 0 | 0, i64toi32_i32$1 + 632 | 0 | 0);
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 160 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 164 | 0) >> 2] | 0;
   $254 = i64toi32_i32$0;
   $254$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 168 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 172 | 0) >> 2] | 0;
   $255 = i64toi32_i32$1;
   Triangle___Triangle_28_29(i64toi32_i32$2 + 632 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 536 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 568 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 600 | 0 | 0) | 0;
   i64toi32_i32$1 = i64toi32_i32$2;
   HEAP32[(i64toi32_i32$1 + 760 | 0) >> 2] = $255;
   HEAP32[(i64toi32_i32$1 + 764 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$0 = $254$hi;
   HEAP32[(i64toi32_i32$1 + 752 | 0) >> 2] = $254;
   HEAP32[(i64toi32_i32$1 + 756 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 760 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 764 | 0) >> 2] | 0;
   $264 = i64toi32_i32$0;
   $264$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 752 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 756 | 0) >> 2] | 0;
   $1053$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $264$hi;
   i64toi32_i32$0 = $1053$hi;
   $167 = i64toi32_i32$1;
   i64toi32_i32$1 = $264$hi;
   HEAPF64[(i64toi32_i32$2 + 144 | 0) >> 3] = +__trunctfdf2($167 | 0, i64toi32_i32$0 | 0, $264 | 0, i64toi32_i32$1 | 0);
   printf(4214 | 0, i64toi32_i32$2 + 144 | 0 | 0) | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 760 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 764 | 0) >> 2] | 0;
   $270 = i64toi32_i32$1;
   $270$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 752 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 756 | 0) >> 2] | 0;
   $271 = i64toi32_i32$0;
   $271$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1016 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1020 | 0) >> 2] | 0;
   $272 = i64toi32_i32$1;
   $272$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1008 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1012 | 0) >> 2] | 0;
   $273$hi = i64toi32_i32$1;
   i64toi32_i32$1 = 1073235886;
   $274$hi = i64toi32_i32$1;
   i64toi32_i32$1 = -1342177280;
   $275$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $273$hi;
   i64toi32_i32$1 = $272$hi;
   i64toi32_i32$1 = $275$hi;
   i64toi32_i32$1 = $274$hi;
   i64toi32_i32$1 = $273$hi;
   $168 = i64toi32_i32$0;
   i64toi32_i32$0 = $272$hi;
   i64toi32_i32$2 = $275$hi;
   i64toi32_i32$3 = $274$hi;
   __addtf3($4 + 128 | 0 | 0, $168 | 0, i64toi32_i32$1 | 0, $272 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0, 343597383 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$0 = ($4 + 128 | 0) + $192 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $281 = i64toi32_i32$3;
   $281$hi = i64toi32_i32$2;
   i64toi32_i32$0 = $4;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 128 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 132 | 0) >> 2] | 0;
   $282$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $271$hi;
   i64toi32_i32$3 = $270$hi;
   i64toi32_i32$3 = $282$hi;
   $1092 = i64toi32_i32$2;
   i64toi32_i32$3 = $281$hi;
   i64toi32_i32$3 = $271$hi;
   i64toi32_i32$2 = $270$hi;
   i64toi32_i32$0 = $282$hi;
   i64toi32_i32$1 = $281$hi;
   label$5 : {
    if (!((__getf2($271 | 0, i64toi32_i32$3 | 0, $270 | 0, i64toi32_i32$2 | 0, $1092 | 0, i64toi32_i32$0 | 0, $281 | 0, i64toi32_i32$1 | 0) | 0 | 0) > (0 | 0) & 1 | 0)) {
     break label$5
    }
    HEAP8[($4 + 1119 | 0) >> 0] = 0 & 1 | 0;
    HEAP32[($4 + 1036 | 0) >> 2] = 1;
    break label$1;
   }
   $292 = 24;
   i64toi32_i32$2 = $5 + $292 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1122 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 360 | 0) + $292 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $1122;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   $298 = 16;
   i64toi32_i32$2 = $5 + $298 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1135 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 360 | 0) + $298 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $1135;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   $304 = 8;
   i64toi32_i32$2 = $5 + $304 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1148 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 360 | 0) + $304 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $1148;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1152 = i64toi32_i32$0;
   i64toi32_i32$0 = $4;
   HEAP32[(i64toi32_i32$0 + 360 | 0) >> 2] = $1152;
   HEAP32[(i64toi32_i32$0 + 364 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = (i64toi32_i32$0 + 1072 | 0) + $292 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1168 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 328 | 0) + $292 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $1168;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = ($4 + 1072 | 0) + $298 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1184 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 328 | 0) + $298 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $1184;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = ($4 + 1072 | 0) + $304 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1200 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 328 | 0) + $304 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $1200;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $4;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1072 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1076 | 0) >> 2] | 0;
   $1204 = i64toi32_i32$0;
   i64toi32_i32$0 = i64toi32_i32$2;
   HEAP32[(i64toi32_i32$0 + 328 | 0) >> 2] = $1204;
   HEAP32[(i64toi32_i32$0 + 332 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $5 + 88 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1217 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 296 | 0) + $292 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $1217;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5 + 80 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1230 = i64toi32_i32$0;
   i64toi32_i32$0 = ($4 + 296 | 0) + $298 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $1230;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $5 + 72 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $1243 = i64toi32_i32$1;
   i64toi32_i32$1 = ($4 + 296 | 0) + $304 | 0;
   HEAP32[i64toi32_i32$1 >> 2] = $1243;
   HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = $5;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
   $1247 = i64toi32_i32$0;
   i64toi32_i32$0 = $4;
   HEAP32[(i64toi32_i32$0 + 296 | 0) >> 2] = $1247;
   HEAP32[(i64toi32_i32$0 + 300 | 0) >> 2] = i64toi32_i32$1;
   $352 = -1;
   Triangle__Triangle_28Point3_2c_20Point3_2c_20Point3_2c_20tri__pointing_2c_20tri__position_2c_20int_2c_20int_2c_20int_2c_20int_29(i64toi32_i32$0 + 392 | 0 | 0, i64toi32_i32$0 + 360 | 0 | 0, i64toi32_i32$0 + 328 | 0 | 0, i64toi32_i32$0 + 296 | 0 | 0, 2 | 0, 3 | 0, $352 | 0, $352 | 0, $352 | 0, $352 | 0) | 0;
   Triangle__area_28_29_20const(i64toi32_i32$0 + 112 | 0 | 0, i64toi32_i32$0 + 392 | 0 | 0);
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 112 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$0 + 116 | 0) >> 2] | 0;
   $367 = i64toi32_i32$1;
   $367$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 120 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 124 | 0) >> 2] | 0;
   $368 = i64toi32_i32$0;
   Triangle___Triangle_28_29(i64toi32_i32$2 + 392 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 296 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 328 | 0 | 0) | 0;
   Point3___Point3_28_29(i64toi32_i32$2 + 360 | 0 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$2;
   HEAP32[(i64toi32_i32$0 + 520 | 0) >> 2] = $368;
   HEAP32[(i64toi32_i32$0 + 524 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$1 = $367$hi;
   HEAP32[(i64toi32_i32$0 + 512 | 0) >> 2] = $367;
   HEAP32[(i64toi32_i32$0 + 516 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 1e3 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$0 + 1004 | 0) >> 2] | 0;
   $377 = i64toi32_i32$1;
   $377$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 992 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 996 | 0) >> 2] | 0;
   $1311$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $377$hi;
   i64toi32_i32$1 = $1311$hi;
   $169 = i64toi32_i32$0;
   i64toi32_i32$0 = $377$hi;
   HEAPF64[(i64toi32_i32$2 + 96 | 0) >> 3] = +__trunctfdf2($169 | 0, i64toi32_i32$1 | 0, $377 | 0, i64toi32_i32$0 | 0);
   printf(4230 | 0, i64toi32_i32$2 + 96 | 0 | 0) | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 520 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 524 | 0) >> 2] | 0;
   $383 = i64toi32_i32$0;
   $383$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 512 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 516 | 0) >> 2] | 0;
   $384 = i64toi32_i32$1;
   $384$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1016 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1020 | 0) >> 2] | 0;
   $385 = i64toi32_i32$0;
   $385$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1008 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1012 | 0) >> 2] | 0;
   $386$hi = i64toi32_i32$0;
   i64toi32_i32$0 = 1073235886;
   $387$hi = i64toi32_i32$0;
   i64toi32_i32$0 = -1342177280;
   $388$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $386$hi;
   i64toi32_i32$0 = $385$hi;
   i64toi32_i32$0 = $388$hi;
   i64toi32_i32$0 = $387$hi;
   i64toi32_i32$0 = $386$hi;
   $170 = i64toi32_i32$1;
   i64toi32_i32$1 = $385$hi;
   i64toi32_i32$2 = $388$hi;
   i64toi32_i32$3 = $387$hi;
   __addtf3($4 + 80 | 0 | 0, $170 | 0, i64toi32_i32$0 | 0, $385 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 343597383 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$1 = ($4 + 80 | 0) + $304 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $394 = i64toi32_i32$3;
   $394$hi = i64toi32_i32$2;
   i64toi32_i32$1 = $4;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] | 0;
   $395$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $384$hi;
   i64toi32_i32$3 = $383$hi;
   i64toi32_i32$3 = $395$hi;
   $1350 = i64toi32_i32$2;
   i64toi32_i32$3 = $394$hi;
   i64toi32_i32$3 = $384$hi;
   i64toi32_i32$2 = $383$hi;
   i64toi32_i32$1 = $395$hi;
   i64toi32_i32$0 = $394$hi;
   label$6 : {
    if (!((__getf2($384 | 0, i64toi32_i32$3 | 0, $383 | 0, i64toi32_i32$2 | 0, $1350 | 0, i64toi32_i32$1 | 0, $394 | 0, i64toi32_i32$0 | 0) | 0 | 0) > (0 | 0) & 1 | 0)) {
     break label$6
    }
    HEAP8[($4 + 1119 | 0) >> 0] = 0 & 1 | 0;
    HEAP32[($4 + 1036 | 0) >> 2] = 1;
    break label$1;
   }
   i64toi32_i32$2 = $4;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1e3 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1004 | 0) >> 2] | 0;
   $405 = i64toi32_i32$0;
   $405$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 992 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 996 | 0) >> 2] | 0;
   $406 = i64toi32_i32$1;
   $406$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 760 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 764 | 0) >> 2] | 0;
   $407 = i64toi32_i32$0;
   $407$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 752 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 756 | 0) >> 2] | 0;
   $408$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $406$hi;
   i64toi32_i32$0 = $405$hi;
   i64toi32_i32$0 = $408$hi;
   $1382 = i64toi32_i32$1;
   i64toi32_i32$0 = $407$hi;
   i64toi32_i32$0 = $406$hi;
   i64toi32_i32$1 = $405$hi;
   i64toi32_i32$2 = $408$hi;
   i64toi32_i32$3 = $407$hi;
   __addtf3($4 + 16 | 0 | 0, $406 | 0, i64toi32_i32$0 | 0, $405 | 0, i64toi32_i32$1 | 0, $1382 | 0, i64toi32_i32$2 | 0, $407 | 0, i64toi32_i32$3 | 0);
   $411 = 8;
   i64toi32_i32$1 = ($4 + 16 | 0) + $411 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $415 = i64toi32_i32$3;
   $415$hi = i64toi32_i32$2;
   i64toi32_i32$1 = $4;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
   $416 = i64toi32_i32$2;
   $416$hi = i64toi32_i32$3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 520 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 524 | 0) >> 2] | 0;
   $417 = i64toi32_i32$3;
   $417$hi = i64toi32_i32$2;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 512 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 516 | 0) >> 2] | 0;
   $418$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $416$hi;
   i64toi32_i32$3 = $415$hi;
   i64toi32_i32$3 = $418$hi;
   $1401 = i64toi32_i32$2;
   i64toi32_i32$3 = $417$hi;
   i64toi32_i32$3 = $416$hi;
   i64toi32_i32$2 = $415$hi;
   i64toi32_i32$1 = $418$hi;
   i64toi32_i32$0 = $417$hi;
   __addtf3($4 | 0, $416 | 0, i64toi32_i32$3 | 0, $415 | 0, i64toi32_i32$2 | 0, $1401 | 0, i64toi32_i32$1 | 0, $417 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$2 = $4 + $411 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $420 = i64toi32_i32$0;
   $420$hi = i64toi32_i32$1;
   i64toi32_i32$2 = $4;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $421 = i64toi32_i32$1;
   $421$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $420$hi;
   i64toi32_i32$1 = i64toi32_i32$2;
   HEAP32[(i64toi32_i32$1 + 280 | 0) >> 2] = $420;
   HEAP32[(i64toi32_i32$1 + 284 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$0 = $421$hi;
   HEAP32[(i64toi32_i32$1 + 272 | 0) >> 2] = $421;
   HEAP32[(i64toi32_i32$1 + 276 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 280 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 284 | 0) >> 2] | 0;
   $422 = i64toi32_i32$0;
   $422$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 272 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 276 | 0) >> 2] | 0;
   $423 = i64toi32_i32$1;
   $423$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1016 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1020 | 0) >> 2] | 0;
   $424 = i64toi32_i32$0;
   $424$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 1008 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 1012 | 0) >> 2] | 0;
   $1422$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $424$hi;
   i64toi32_i32$0 = $423$hi;
   i64toi32_i32$0 = $422$hi;
   i64toi32_i32$0 = $1422$hi;
   $171 = i64toi32_i32$1;
   i64toi32_i32$1 = $424$hi;
   i64toi32_i32$2 = $423$hi;
   i64toi32_i32$3 = $422$hi;
   HEAP32[($4 + 268 | 0) >> 2] = hexmapf__equal_enough_28long_20double_2c_20long_20double_2c_20int_29($171 | 0, i64toi32_i32$0 | 0, $424 | 0, i64toi32_i32$1 | 0, $423 | 0, i64toi32_i32$2 | 0, $422 | 0, i64toi32_i32$3 | 0, 6 | 0) | 0;
   i64toi32_i32$1 = $4;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 280 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 284 | 0) >> 2] | 0;
   $428 = i64toi32_i32$3;
   $428$hi = i64toi32_i32$2;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 272 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 276 | 0) >> 2] | 0;
   $1434$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $428$hi;
   i64toi32_i32$3 = $1434$hi;
   $172 = i64toi32_i32$2;
   i64toi32_i32$2 = $428$hi;
   HEAPF64[(i64toi32_i32$1 + 32 | 0) >> 3] = +__trunctfdf2($172 | 0, i64toi32_i32$3 | 0, $428 | 0, i64toi32_i32$2 | 0);
   printf(4246 | 0, i64toi32_i32$1 + 32 | 0 | 0) | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 1016 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 1020 | 0) >> 2] | 0;
   $434 = i64toi32_i32$2;
   $434$hi = i64toi32_i32$3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 1008 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 1012 | 0) >> 2] | 0;
   $1449$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $434$hi;
   i64toi32_i32$2 = $1449$hi;
   $173 = i64toi32_i32$3;
   i64toi32_i32$3 = $434$hi;
   HEAPF64[(i64toi32_i32$1 + 48 | 0) >> 3] = +__trunctfdf2($173 | 0, i64toi32_i32$2 | 0, $434 | 0, i64toi32_i32$3 | 0);
   printf(4267 | 0, i64toi32_i32$1 + 48 | 0 | 0) | 0;
   HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] = HEAP32[(i64toi32_i32$1 + 268 | 0) >> 2] | 0;
   printf(4288 | 0, i64toi32_i32$1 + 64 | 0 | 0) | 0;
   HEAP8[(i64toi32_i32$1 + 1119 | 0) >> 0] = (HEAP32[(i64toi32_i32$1 + 268 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0;
   HEAP32[(i64toi32_i32$1 + 1036 | 0) >> 2] = 1;
  }
  Point3___Point3_28_29($4 + 1072 | 0 | 0) | 0;
  $457 = (HEAPU8[($4 + 1119 | 0) >> 0] | 0) & 1 | 0;
  __stack_pointer = $4 + 1120 | 0;
  return $457 | 0;
 }
 
 function Triangle__area_28_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$3 = 0, $5 = 0, $25 = 0, $11 = 0, $18 = 0, $14 = 0, $21 = 0, $28 = 0, $76$hi = 0, $77$hi = 0, $78$hi = 0, $79$hi = 0, $7 = 0, $115 = 0, $128 = 0, $141 = 0, $145 = 0, $163 = 0, $176 = 0, $189 = 0, $193 = 0, $208 = 0, $218 = 0, $228 = 0, $232 = 0, $74 = 0, $74$hi = 0, $254 = 0, $76 = 0, $39 = 0, $81 = 0, $81$hi = 0, $82 = 0, $82$hi = 0;
  $4 = __stack_pointer - 160 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 156 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 156 | 0) >> 2] | 0;
  $7 = $5 + 32 | 0;
  i64toi32_i32$2 = $5 + 56 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $11 = 24;
  $14 = ($4 + 120 | 0) + $11 | 0;
  $115 = i64toi32_i32$0;
  i64toi32_i32$0 = $14;
  HEAP32[i64toi32_i32$0 >> 2] = $115;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $5 + 48 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $18 = 16;
  $21 = ($4 + 120 | 0) + $18 | 0;
  $128 = i64toi32_i32$1;
  i64toi32_i32$1 = $21;
  HEAP32[i64toi32_i32$1 >> 2] = $128;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $5 + 40 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $25 = 8;
  $28 = ($4 + 120 | 0) + $25 | 0;
  $141 = i64toi32_i32$0;
  i64toi32_i32$0 = $28;
  HEAP32[i64toi32_i32$0 >> 2] = $141;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $145 = i64toi32_i32$1;
  i64toi32_i32$1 = $4;
  HEAP32[(i64toi32_i32$1 + 120 | 0) >> 2] = $145;
  HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] = i64toi32_i32$0;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$1 + 120 | 0 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = i64toi32_i32$2 + 88 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $163 = i64toi32_i32$0;
  i64toi32_i32$0 = ($4 + 88 | 0) + $11 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $163;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $5 + 80 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $176 = i64toi32_i32$1;
  i64toi32_i32$1 = ($4 + 88 | 0) + $18 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $176;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $5 + 72 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $189 = i64toi32_i32$0;
  i64toi32_i32$0 = ($4 + 88 | 0) + $25 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $189;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
  $193 = i64toi32_i32$1;
  i64toi32_i32$1 = $4;
  HEAP32[(i64toi32_i32$1 + 88 | 0) >> 2] = $193;
  HEAP32[(i64toi32_i32$1 + 92 | 0) >> 2] = i64toi32_i32$0;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$1 + 88 | 0 | 0, $7 | 0);
  i64toi32_i32$2 = $14;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $208 = i64toi32_i32$0;
  i64toi32_i32$0 = ($4 + 56 | 0) + $11 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $208;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $21;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $218 = i64toi32_i32$1;
  i64toi32_i32$1 = ($4 + 56 | 0) + $18 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $218;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $28;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $228 = i64toi32_i32$0;
  i64toi32_i32$0 = ($4 + 56 | 0) + $25 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $228;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 120 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 124 | 0) >> 2] | 0;
  $232 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 56 | 0) >> 2] = $232;
  HEAP32[(i64toi32_i32$1 + 60 | 0) >> 2] = i64toi32_i32$0;
  Point3__cross_28Point3_20const__29(i64toi32_i32$1 + 56 | 0 | 0, i64toi32_i32$1 + 88 | 0 | 0);
  Point3__mag_28_29_20const(i64toi32_i32$1 + 16 | 0 | 0, i64toi32_i32$1 + 56 | 0 | 0);
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
  $74 = i64toi32_i32$0;
  $74$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 24 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 28 | 0) >> 2] | 0;
  $254 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 40 | 0) >> 2] = $254;
  HEAP32[(i64toi32_i32$1 + 44 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $74$hi;
  HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] = $74;
  HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 40 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 44 | 0) >> 2] | 0;
  $76 = i64toi32_i32$0;
  $76$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $77$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 1073741824;
  $78$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $79$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $77$hi;
  i64toi32_i32$0 = $76$hi;
  i64toi32_i32$0 = $79$hi;
  i64toi32_i32$0 = $78$hi;
  i64toi32_i32$0 = $77$hi;
  $39 = i64toi32_i32$1;
  i64toi32_i32$1 = $76$hi;
  i64toi32_i32$2 = $79$hi;
  i64toi32_i32$3 = $78$hi;
  __divtf3($4 | 0, $39 | 0, i64toi32_i32$0 | 0, $76 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $4 + $25 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $81 = i64toi32_i32$3;
  $81$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $4;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $82 = i64toi32_i32$2;
  $82$hi = i64toi32_i32$3;
  Point3___Point3_28_29(i64toi32_i32$1 + 56 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 88 | 0 | 0) | 0;
  Point3___Point3_28_29(i64toi32_i32$1 + 120 | 0 | 0) | 0;
  i64toi32_i32$3 = $81$hi;
  i64toi32_i32$2 = $0;
  HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] = $81;
  HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $82$hi;
  HEAP32[i64toi32_i32$2 >> 2] = $82;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  __stack_pointer = i64toi32_i32$1 + 160 | 0;
  return;
 }
 
 function hexmapf__equal_enough_28long_20double_2c_20long_20double_2c_20int_29($0, $0$hi, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  var $7 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, $25 = 0, $10 = 0.0, $16 = 0, $19$hi = 0, $20$hi = 0, $29$hi = 0, $30$hi = 0, $36$hi = 0, $40$hi = 0, $43$hi = 0, $44$hi = 0, $52$hi = 0, $53$hi = 0, $55$hi = 0, $59$hi = 0, $65$hi = 0, $68$hi = 0, $19 = 0, $20 = 0, $29 = 0, $154 = 0, $36 = 0, $170$hi = 0, $56 = 0, $40 = 0, $176$hi = 0, $57 = 0, $43 = 0, $44 = 0, $52 = 0, $207 = 0, $55 = 0, $220$hi = 0, $58 = 0, $59 = 0, $226$hi = 0, $60 = 0, $65 = 0, $244$hi = 0, $61 = 0, $67 = 0.0, $68 = 0, $251$hi = 0, $62 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $87 = 0;
  $7 = __stack_pointer - 208 | 0;
  __stack_pointer = $7;
  i64toi32_i32$0 = $0$hi;
  i64toi32_i32$1 = $7;
  HEAP32[($7 + 192 | 0) >> 2] = $0;
  HEAP32[($7 + 196 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $7;
  HEAP32[($7 + 200 | 0) >> 2] = $1;
  HEAP32[($7 + 204 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$1 = $7;
  HEAP32[($7 + 184 | 0) >> 2] = $3;
  HEAP32[($7 + 188 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$1 = $7;
  HEAP32[($7 + 176 | 0) >> 2] = $2;
  HEAP32[($7 + 180 | 0) >> 2] = i64toi32_i32$0;
  HEAP32[($7 + 172 | 0) >> 2] = $4;
  $10 = +std____2___MetaBase__28std__is_arithmetic_int___value_29_20___20_28std__is_arithmetic_int___value_29____EnableIfImpl_std____2____promote_int_2c_20int_2c_20void__20___type_20pow_int_2c_20int__28int_2c_20int_29(10 | 0, HEAP32[($7 + 172 | 0) >> 2] | 0 | 0);
  label$1 : {
   label$2 : {
    if (!(Math_abs($10) < 2147483648.0)) {
     break label$2
    }
    $16 = ~~$10;
    break label$1;
   }
   $16 = -2147483648;
  }
  HEAP32[($7 + 168 | 0) >> 2] = $16;
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[($7 + 200 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($7 + 204 | 0) >> 2] | 0;
  $19 = i64toi32_i32$0;
  $19$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $7;
  i64toi32_i32$1 = HEAP32[($7 + 192 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($7 + 196 | 0) >> 2] | 0;
  $20 = i64toi32_i32$1;
  $20$hi = i64toi32_i32$0;
  __extenddftf2($7 + 48 | 0 | 0, +(+(HEAP32[($7 + 168 | 0) >> 2] | 0 | 0)));
  $25 = 8;
  i64toi32_i32$2 = ($7 + 48 | 0) + $25 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $29 = i64toi32_i32$0;
  $29$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $7;
  i64toi32_i32$1 = HEAP32[($7 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($7 + 52 | 0) >> 2] | 0;
  $30$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $20$hi;
  i64toi32_i32$0 = $19$hi;
  i64toi32_i32$0 = $30$hi;
  $154 = i64toi32_i32$1;
  i64toi32_i32$0 = $29$hi;
  i64toi32_i32$0 = $20$hi;
  i64toi32_i32$1 = $19$hi;
  i64toi32_i32$2 = $30$hi;
  i64toi32_i32$3 = $29$hi;
  __multf3($7 + 32 | 0 | 0, $20 | 0, i64toi32_i32$0 | 0, $19 | 0, i64toi32_i32$1 | 0, $154 | 0, i64toi32_i32$2 | 0, $29 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($7 + 32 | 0) + $25 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $36 = i64toi32_i32$3;
  $36$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $7;
  i64toi32_i32$2 = HEAP32[($7 + 32 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($7 + 36 | 0) >> 2] | 0;
  $170$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $36$hi;
  i64toi32_i32$3 = $170$hi;
  $56 = i64toi32_i32$2;
  i64toi32_i32$2 = $36$hi;
  round_28long_20double_29($7 + 80 | 0 | 0, $56 | 0, i64toi32_i32$3 | 0, $36 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$1 = $7;
  i64toi32_i32$2 = HEAP32[($7 + 88 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($7 + 92 | 0) >> 2] | 0;
  $40 = i64toi32_i32$2;
  $40$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $7;
  i64toi32_i32$3 = HEAP32[($7 + 80 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($7 + 84 | 0) >> 2] | 0;
  $176$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $40$hi;
  i64toi32_i32$2 = $176$hi;
  $57 = i64toi32_i32$3;
  i64toi32_i32$3 = $40$hi;
  HEAPF64[($7 + 160 | 0) >> 3] = +__trunctfdf2($57 | 0, i64toi32_i32$2 | 0, $40 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $7;
  i64toi32_i32$3 = HEAP32[($7 + 184 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($7 + 188 | 0) >> 2] | 0;
  $43 = i64toi32_i32$3;
  $43$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $7;
  i64toi32_i32$2 = HEAP32[($7 + 176 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($7 + 180 | 0) >> 2] | 0;
  $44 = i64toi32_i32$2;
  $44$hi = i64toi32_i32$3;
  __extenddftf2($7 + 16 | 0 | 0, +(+(HEAP32[($7 + 168 | 0) >> 2] | 0 | 0)));
  i64toi32_i32$1 = ($7 + 16 | 0) + $25 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $52 = i64toi32_i32$3;
  $52$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $7;
  i64toi32_i32$2 = HEAP32[($7 + 16 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[($7 + 20 | 0) >> 2] | 0;
  $53$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $44$hi;
  i64toi32_i32$3 = $43$hi;
  i64toi32_i32$3 = $53$hi;
  $207 = i64toi32_i32$2;
  i64toi32_i32$3 = $52$hi;
  i64toi32_i32$3 = $44$hi;
  i64toi32_i32$2 = $43$hi;
  i64toi32_i32$1 = $53$hi;
  i64toi32_i32$0 = $52$hi;
  __multf3($7 | 0, $44 | 0, i64toi32_i32$3 | 0, $43 | 0, i64toi32_i32$2 | 0, $207 | 0, i64toi32_i32$1 | 0, $52 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $7 + $25 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $55 = i64toi32_i32$0;
  $55$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $7;
  i64toi32_i32$1 = HEAP32[$7 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($7 + 4 | 0) >> 2] | 0;
  $220$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $55$hi;
  i64toi32_i32$0 = $220$hi;
  $58 = i64toi32_i32$1;
  i64toi32_i32$1 = $55$hi;
  round_28long_20double_29($7 + 64 | 0 | 0, $58 | 0, i64toi32_i32$0 | 0, $55 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $7;
  i64toi32_i32$1 = HEAP32[($7 + 72 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($7 + 76 | 0) >> 2] | 0;
  $59 = i64toi32_i32$1;
  $59$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[($7 + 64 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($7 + 68 | 0) >> 2] | 0;
  $226$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $59$hi;
  i64toi32_i32$1 = $226$hi;
  $60 = i64toi32_i32$0;
  i64toi32_i32$0 = $59$hi;
  HEAPF64[($7 + 152 | 0) >> 3] = +__trunctfdf2($60 | 0, i64toi32_i32$1 | 0, $59 | 0, i64toi32_i32$0 | 0);
  HEAP8[($7 + 151 | 0) >> 0] = +HEAPF64[($7 + 160 | 0) >> 3] == +HEAPF64[($7 + 152 | 0) >> 3];
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[($7 + 200 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($7 + 204 | 0) >> 2] | 0;
  $65 = i64toi32_i32$0;
  $65$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $7;
  i64toi32_i32$1 = HEAP32[($7 + 192 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($7 + 196 | 0) >> 2] | 0;
  $244$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $65$hi;
  i64toi32_i32$0 = $244$hi;
  $61 = i64toi32_i32$1;
  i64toi32_i32$1 = $65$hi;
  $67 = +__trunctfdf2($61 | 0, i64toi32_i32$0 | 0, $65 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $7;
  i64toi32_i32$1 = HEAP32[($7 + 184 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($7 + 188 | 0) >> 2] | 0;
  $68 = i64toi32_i32$1;
  $68$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $7;
  i64toi32_i32$0 = HEAP32[($7 + 176 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($7 + 180 | 0) >> 2] | 0;
  $251$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $68$hi;
  i64toi32_i32$1 = $251$hi;
  $62 = i64toi32_i32$0;
  i64toi32_i32$0 = $68$hi;
  $70 = +__trunctfdf2($62 | 0, i64toi32_i32$1 | 0, $68 | 0, i64toi32_i32$0 | 0);
  $71 = +HEAPF64[($7 + 160 | 0) >> 3];
  $72 = +HEAPF64[($7 + 152 | 0) >> 3];
  HEAP32[($7 + 128 | 0) >> 2] = (HEAPU8[($7 + 151 | 0) >> 0] | 0) & 1 | 0;
  HEAPF64[($7 + 120 | 0) >> 3] = $72;
  HEAPF64[($7 + 112 | 0) >> 3] = $71;
  HEAPF64[($7 + 104 | 0) >> 3] = $70;
  HEAPF64[($7 + 96 | 0) >> 3] = $67;
  printf(4306 | 0, $7 + 96 | 0 | 0) | 0;
  $87 = (HEAPU8[($7 + 151 | 0) >> 0] | 0) & 1 | 0;
  __stack_pointer = $7 + 208 | 0;
  return $87 | 0;
 }
 
 function std____2___MetaBase__28std__is_arithmetic_int___value_29_20___20_28std__is_arithmetic_int___value_29____EnableIfImpl_std____2____promote_int_2c_20int_2c_20void__20___type_20pow_int_2c_20int__28int_2c_20int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0.0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $9 = +pow(+(+(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0)), +(+(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0)));
  __stack_pointer = $4 + 16 | 0;
  return +$9;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____default_init_tag___20std____2__forward_std____2____default_init_tag__28std____2__remove_reference_std____2____default_init_tag___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($6 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___allocator_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20____20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20____20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____recommend_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $36 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___max_size_28_29_20const($5 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($4 + 20 | 0) >> 2] | 0) >>> 0 > (HEAP32[($4 + 16 | 0) >> 2] | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_common_true_____throw_length_error_28_29_20const($5 | 0);
   abort();
  }
  HEAP32[($4 + 12 | 0) >> 2] = std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___capacity_28_29_20const($5 | 0) | 0;
  label$2 : {
   label$3 : {
    if (!((HEAP32[($4 + 12 | 0) >> 2] | 0) >>> 0 >= ((HEAP32[($4 + 16 | 0) >> 2] | 0) >>> 1 | 0) >>> 0 & 1 | 0)) {
     break label$3
    }
    HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 16 | 0) >> 2] | 0;
    break label$2;
   }
   HEAP32[($4 + 8 | 0) >> 2] = (HEAP32[($4 + 12 | 0) >> 2] | 0) << 1 | 0;
   HEAP32[($4 + 28 | 0) >> 2] = HEAP32[(unsigned_20long_20const__20std____2__max_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($4 + 8 | 0 | 0, $4 + 20 | 0 | 0) | 0) >> 2] | 0;
  }
  $36 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $36 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______split_buffer_28unsigned_20long_2c_20unsigned_20long_2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0, $19 = 0, $26 = 0, $31 = 0, $33 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 24 | 0) >> 2] = $0;
  HEAP32[($6 + 20 | 0) >> 2] = $1;
  HEAP32[($6 + 16 | 0) >> 2] = $2;
  HEAP32[($6 + 12 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 24 | 0) >> 2] | 0;
  HEAP32[($6 + 28 | 0) >> 2] = $7;
  HEAP32[($6 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______compressed_pair_std__nullptr_t_2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____28std__nullptr_t___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___29($7 + 12 | 0 | 0, $6 + 8 | 0 | 0, HEAP32[($6 + 12 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!(HEAP32[($6 + 20 | 0) >> 2] | 0)) {
     break label$2
    }
    $19 = std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___allocate_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20unsigned_20long_29(std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0) | 0;
    break label$1;
   }
   $19 = 0;
  }
  HEAP32[$7 >> 2] = $19;
  $26 = (HEAP32[$7 >> 2] | 0) + Math_imul(HEAP32[($6 + 16 | 0) >> 2] | 0, 12) | 0;
  HEAP32[($7 + 8 | 0) >> 2] = $26;
  HEAP32[($7 + 4 | 0) >> 2] = $26;
  $31 = (HEAP32[$7 >> 2] | 0) + Math_imul(HEAP32[($6 + 20 | 0) >> 2] | 0, 12) | 0;
  HEAP32[(std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______end_cap_28_29($7 | 0) | 0) >> 2] = $31;
  $33 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  __stack_pointer = $6 + 32 | 0;
  return $33 | 0;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____swap_out_circular_buffer_28std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_delete_28_29_20const($5 | 0);
  void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_backward_with_exception_guarantees_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____alloc_28_29($5 | 0) | 0 | 0, HEAP32[$5 >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  std____2__enable_if__28is_move_constructible_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_29_20___20_28is_move_assignable_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_29_2c_20void___type_20std____2__swap_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($5 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  std____2__enable_if__28is_move_constructible_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_29_20___20_28is_move_assignable_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_29_2c_20void___type_20std____2__swap_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($5 + 4 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0 | 0);
  std____2__enable_if__28is_move_constructible_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_29_20___20_28is_move_assignable_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_29_2c_20void___type_20std____2__swap_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(std____2____vector_base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____end_cap_28_29($5 | 0) | 0 | 0, std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______end_cap_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____annotate_new_28unsigned_20long_29_20const($5 | 0, std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___size_28_29_20const($5 | 0) | 0 | 0);
  std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____invalidate_all_iterators_28_29($5 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20________split_buffer_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____clear_28_29($4 | 0);
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___deallocate_28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29(std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20____20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20____20std____2__forward_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $15 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____vector_base_28std____2__allocator_Point3____29($5 | 0, std____2__remove_reference_std____2__allocator_Point3_____type___20std____2__move_std____2__allocator_Point3____28std____2__allocator_Point3___29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0 | 0) | 0;
  HEAP32[$5 >> 2] = HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  $15 = HEAP32[(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29($5 | 0) | 0) >> 2] = $15;
  HEAP32[(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] = 0;
  HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] = 0;
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______compressed_pair_std__nullptr_t_2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____28std__nullptr_t___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_201_2c_20false_____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20void__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___29($6 + 4 | 0 | 0, std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___20std____2__forward_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____28std____2__remove_reference_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____construct_backward_with_exception_guarantees_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0, $24 = 0, $14 = 0, $19 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = HEAP32[($6 + 12 | 0) >> 2] | 0;
    $19 = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2____to_address_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29((HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0) + -12 | 0 | 0) | 0;
    $22 = (HEAP32[($6 + 4 | 0) >> 2] | 0) + -12 | 0;
    HEAP32[($6 + 4 | 0) >> 2] = $22;
    void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___construct_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($14 | 0, $19 | 0, std____2__conditional__28__28is_nothrow_move_constructible_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___value_29_29_20___20_28is_copy_constructible_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___value_29_2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20______type_20std____2__move_if_noexcept_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($22 | 0) | 0 | 0);
    $24 = HEAP32[$6 >> 2] | 0;
    HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -12 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__enable_if__28is_move_constructible_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_29_20___20_28is_move_assignable_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____value_29_2c_20void___type_20std____2__swap_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0, $16 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20______type___20std____2__move_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  $10 = HEAP32[(std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20______type___20std____2__move_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] = $10;
  $16 = HEAP32[(std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20______type___20std____2__move_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($4 + 4 | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = $16;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20_____invalidate_all_iterators_28_29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______destruct_at_end_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($4 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0 | 0) / (12 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___20std____2__forward_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____28std____2__remove_reference_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_201_2c_20false_____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20void__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___20std____2__forward_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20____28std____2__remove_reference_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2__conditional__28__28is_nothrow_move_constructible_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___value_29_29_20___20_28is_copy_constructible_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___value_29_2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20______type_20std____2__move_if_noexcept_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____type___20std____2__move_std____2__vector_Point3_2c_20std____2__allocator_Point3__20____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__vector_Point3_2c_20std____2__allocator_Point3__20______type___20std____2__move_std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______destruct_at_end_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______destruct_at_end_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__integral_constant_bool_2c_20false__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______destruct_at_end_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__integral_constant_bool_2c_20false__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $16 = 0, $13 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[$4 >> 2] | 0 | 0) != (HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $13 = std____2____split_buffer_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_______alloc_28_29($5 | 0) | 0;
    $16 = (HEAP32[($5 + 8 | 0) >> 2] | 0) + -12 | 0;
    HEAP32[($5 + 8 | 0) >> 2] = $16;
    void_20std____2__allocator_traits_std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__20___destroy_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20___2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($13 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___20std____2____to_address_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20__28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___29($16 | 0) | 0 | 0);
    continue label$2;
   };
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20std____2__allocator_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function GPoint3__GPoint3_28double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
  $0 = $0 | 0;
  $1 = +$1;
  $2 = +$2;
  $3 = +$3;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  $7 = $7 | 0;
  $8 = $8 | 0;
  $9 = $9 | 0;
  $10 = $10 | 0;
  var $13 = 0, $15 = 0;
  $13 = __stack_pointer - 64 | 0;
  __stack_pointer = $13;
  HEAP32[($13 + 60 | 0) >> 2] = $0;
  HEAPF64[($13 + 48 | 0) >> 3] = $1;
  HEAPF64[($13 + 40 | 0) >> 3] = $2;
  HEAPF64[($13 + 32 | 0) >> 3] = $3;
  HEAP32[($13 + 28 | 0) >> 2] = $4;
  HEAP32[($13 + 24 | 0) >> 2] = $5;
  HEAP32[($13 + 20 | 0) >> 2] = $6;
  HEAP32[($13 + 16 | 0) >> 2] = $7;
  HEAP32[($13 + 12 | 0) >> 2] = $8;
  HEAP8[($13 + 11 | 0) >> 0] = $9;
  HEAP32[($13 + 4 | 0) >> 2] = $10;
  $15 = HEAP32[($13 + 60 | 0) >> 2] | 0;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($15 | 0, +(+HEAPF64[($13 + 48 | 0) >> 3]), +(+HEAPF64[($13 + 40 | 0) >> 3]), +(+HEAPF64[($13 + 32 | 0) >> 3]), (HEAPU8[($13 + 11 | 0) >> 0] | 0) & 1 | 0 | 0, HEAP32[($13 + 4 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($15 + 32 | 0) >> 2] = HEAP32[($13 + 28 | 0) >> 2] | 0;
  HEAP32[($15 + 36 | 0) >> 2] = HEAP32[($13 + 24 | 0) >> 2] | 0;
  HEAP32[($15 + 40 | 0) >> 2] = HEAP32[($13 + 20 | 0) >> 2] | 0;
  HEAP32[($15 + 44 | 0) >> 2] = HEAP32[($13 + 16 | 0) >> 2] | 0;
  HEAP32[($15 + 48 | 0) >> 2] = HEAP32[($13 + 12 | 0) >> 2] | 0;
  __stack_pointer = $13 + 64 | 0;
  return $15 | 0;
 }
 
 function Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = +$1;
  $2 = +$2;
  $3 = +$3;
  $4 = $4 | 0;
  $5 = $5 | 0;
  var $8 = 0, $10 = 0;
  $8 = __stack_pointer - 48 | 0;
  HEAP32[($8 + 44 | 0) >> 2] = $0;
  HEAPF64[($8 + 32 | 0) >> 3] = $1;
  HEAPF64[($8 + 24 | 0) >> 3] = $2;
  HEAPF64[($8 + 16 | 0) >> 3] = $3;
  HEAP8[($8 + 15 | 0) >> 0] = $4;
  HEAP32[($8 + 8 | 0) >> 2] = $5;
  $10 = HEAP32[($8 + 44 | 0) >> 2] | 0;
  HEAPF64[$10 >> 3] = +HEAPF64[($8 + 32 | 0) >> 3];
  HEAPF64[($10 + 8 | 0) >> 3] = +HEAPF64[($8 + 24 | 0) >> 3];
  HEAPF64[($10 + 16 | 0) >> 3] = +HEAPF64[($8 + 16 | 0) >> 3];
  HEAP32[($10 + 24 | 0) >> 2] = HEAP32[($8 + 8 | 0) >> 2] | 0;
  HEAP8[($10 + 28 | 0) >> 0] = (HEAPU8[($8 + 15 | 0) >> 0] | 0) & 1 | 0;
  return $10 | 0;
 }
 
 function GPoint3__GPoint3_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $5 = 0, $8$hi = 0, $13$hi = 0, $16$hi = 0, $8 = 0, $46$hi = 0, $17 = 0, $10 = 0.0, $13 = 0, $57$hi = 0, $18 = 0, $15 = 0.0, $16 = 0, $65$hi = 0, $19 = 0;
  $3 = __stack_pointer - 64 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 60 | 0) >> 2] = $0;
  $5 = HEAP32[($3 + 60 | 0) >> 2] | 0;
  std____2__numeric_limits_long_20double___infinity_28_29($3 + 32 | 0 | 0);
  i64toi32_i32$0 = HEAP32[($3 + 40 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 44 | 0) >> 2] | 0;
  $8 = i64toi32_i32$0;
  $8$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[($3 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 36 | 0) >> 2] | 0;
  $46$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$0 = $46$hi;
  $17 = i64toi32_i32$1;
  i64toi32_i32$1 = $8$hi;
  $10 = +__trunctfdf2($17 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0);
  std____2__numeric_limits_long_20double___infinity_28_29($3 + 16 | 0 | 0);
  i64toi32_i32$1 = HEAP32[($3 + 24 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 28 | 0) >> 2] | 0;
  $13 = i64toi32_i32$1;
  $13$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[($3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 20 | 0) >> 2] | 0;
  $57$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $13$hi;
  i64toi32_i32$1 = $57$hi;
  $18 = i64toi32_i32$0;
  i64toi32_i32$0 = $13$hi;
  $15 = +__trunctfdf2($18 | 0, i64toi32_i32$1 | 0, $13 | 0, i64toi32_i32$0 | 0);
  std____2__numeric_limits_long_20double___infinity_28_29($3 | 0);
  i64toi32_i32$0 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $16 = i64toi32_i32$0;
  $16$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  $65$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $16$hi;
  i64toi32_i32$0 = $65$hi;
  $19 = i64toi32_i32$1;
  i64toi32_i32$1 = $16$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($5 | 0, +$10, +$15, +(+__trunctfdf2($19 | 0, i64toi32_i32$0 | 0, $16 | 0, i64toi32_i32$1 | 0)), 0 & 1 | 0 | 0, -1 | 0) | 0;
  HEAP32[($5 + 32 | 0) >> 2] = -1;
  HEAP32[($5 + 36 | 0) >> 2] = -1;
  HEAP32[($5 + 40 | 0) >> 2] = -1;
  __stack_pointer = $3 + 64 | 0;
  return $5 | 0;
 }
 
 function std____2__numeric_limits_long_20double___infinity_28_29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$1 = 0, $3 = 0, i64toi32_i32$0 = 0, $4 = 0, $4$hi = 0, $19 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  std____2____libcpp_numeric_limits_long_20double_2c_20true___infinity_28_29($3 | 0);
  i64toi32_i32$0 = HEAP32[$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  $4 = i64toi32_i32$0;
  $4$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $19 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $19;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $4$hi;
  HEAP32[i64toi32_i32$1 >> 2] = $4;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____libcpp_numeric_limits_long_20double_2c_20true___infinity_28_29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0;
  i64toi32_i32$0 = 2147418112;
  i64toi32_i32$1 = $0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = 0;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  HEAP32[i64toi32_i32$1 >> 2] = 0;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  return;
 }
 
 function GPoint3__is_phex_center_28int_2c_20int_2c_20int_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $100 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 24 | 0) >> 2] = $0;
  HEAP32[($5 + 20 | 0) >> 2] = $1;
  HEAP32[($5 + 16 | 0) >> 2] = $2;
  HEAP32[($5 + 12 | 0) >> 2] = hexmapf__num_divisions_28int_29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     if (!(HEAP32[($5 + 20 | 0) >> 2] | 0)) {
      break label$3
     }
     if (!((HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) == (Math_imul(HEAP32[($5 + 12 | 0) >> 2] | 0, 3) | 0) & 1 | 0)) {
      break label$2
     }
    }
    HEAP8[($5 + 31 | 0) >> 0] = 1 & 1 | 0;
    break label$1;
   }
   HEAP32[($5 + 8 | 0) >> 2] = -1;
   HEAP32[($5 + 4 | 0) >> 2] = -1;
   label$4 : {
    if (!((HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) > ((HEAP32[($5 + 12 | 0) >> 2] | 0) << 1 | 0 | 0) & 1 | 0)) {
     break label$4
    }
    HEAP32[($5 + 8 | 0) >> 2] = (HEAP32[($5 + 20 | 0) >> 2] | 0) - ((HEAP32[($5 + 12 | 0) >> 2] | 0) << 1 | 0) | 0;
    HEAP32[($5 + 4 | 0) >> 2] = (HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) % ((HEAP32[($5 + 12 | 0) >> 2] | 0) - (HEAP32[($5 + 8 | 0) >> 2] | 0) | 0 | 0) | 0;
    HEAP8[($5 + 31 | 0) >> 0] = (((HEAP32[($5 + 4 | 0) >> 2] | 0) - ((HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) % (3 | 0) | 0) | 0 | 0) % (3 | 0) | 0 | 0) == (0 | 0) & 1 | 0;
    break label$1;
   }
   label$5 : {
    if (!((HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) >= (HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$5
    }
    HEAP32[($5 + 8 | 0) >> 2] = HEAP32[($5 + 20 | 0) >> 2] | 0;
    HEAP32[($5 + 4 | 0) >> 2] = (HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) % (HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
    HEAP8[($5 + 31 | 0) >> 0] = (((HEAP32[($5 + 4 | 0) >> 2] | 0) - ((HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) % (3 | 0) | 0) | 0 | 0) % (3 | 0) | 0 | 0) == (0 | 0) & 1 | 0;
    break label$1;
   }
   HEAP32[($5 + 8 | 0) >> 2] = HEAP32[($5 + 20 | 0) >> 2] | 0;
   HEAP32[($5 + 4 | 0) >> 2] = (HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) % (HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
   HEAP8[($5 + 31 | 0) >> 0] = (((HEAP32[($5 + 4 | 0) >> 2] | 0) - (3 - ((HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) % (3 | 0) | 0) | 0) | 0 | 0) % (3 | 0) | 0 | 0) == (0 | 0) & 1 | 0;
  }
  $100 = (HEAPU8[($5 + 31 | 0) >> 0] | 0) & 1 | 0;
  __stack_pointer = $5 + 32 | 0;
  return $100 | 0;
 }
 
 function Quaternion__Quaternion_28long_20double_2c_20long_20double_2c_20long_20double_2c_20long_20double_29($0, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4, $4$hi, $5, $5$hi, $6, $6$hi, $7, $7$hi, $8, $8$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  $4$hi = $4$hi | 0;
  $5 = $5 | 0;
  $5$hi = $5$hi | 0;
  $6 = $6 | 0;
  $6$hi = $6$hi | 0;
  $7 = $7 | 0;
  $7$hi = $7$hi | 0;
  $8 = $8 | 0;
  $8$hi = $8$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $11 = 0, $12 = 0, $13$hi = 0, $16$hi = 0, $19$hi = 0, $13 = 0, $59$hi = 0, $36 = 0, $15 = 0.0, $16 = 0, $66$hi = 0, $37 = 0, $18 = 0.0, $19 = 0, $73$hi = 0, $38 = 0, $24 = 0, $24$hi = 0, $91 = 0;
  $11 = __stack_pointer - 80 | 0;
  __stack_pointer = $11;
  HEAP32[($11 + 76 | 0) >> 2] = $0;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$1 = $11;
  HEAP32[(i64toi32_i32$1 + 56 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 60 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  HEAP32[(i64toi32_i32$1 + 48 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 52 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $4$hi;
  HEAP32[(i64toi32_i32$1 + 40 | 0) >> 2] = $4;
  HEAP32[(i64toi32_i32$1 + 44 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $3$hi;
  HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] = $3;
  HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] = $6;
  HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $5$hi;
  HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = $5;
  HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $8$hi;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $8;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  HEAP32[i64toi32_i32$1 >> 2] = $7;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $12 = HEAP32[(i64toi32_i32$1 + 76 | 0) >> 2] | 0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 56 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 60 | 0) >> 2] | 0;
  $13 = i64toi32_i32$0;
  $13$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
  $59$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $13$hi;
  i64toi32_i32$0 = $59$hi;
  $36 = i64toi32_i32$1;
  i64toi32_i32$1 = $13$hi;
  $15 = +__trunctfdf2($36 | 0, i64toi32_i32$0 | 0, $13 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 40 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 44 | 0) >> 2] | 0;
  $16 = i64toi32_i32$1;
  $16$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $66$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $16$hi;
  i64toi32_i32$1 = $66$hi;
  $37 = i64toi32_i32$0;
  i64toi32_i32$0 = $16$hi;
  $18 = +__trunctfdf2($37 | 0, i64toi32_i32$1 | 0, $16 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 24 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 28 | 0) >> 2] | 0;
  $19 = i64toi32_i32$0;
  $19$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
  $73$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $19$hi;
  i64toi32_i32$0 = $73$hi;
  $38 = i64toi32_i32$1;
  i64toi32_i32$1 = $19$hi;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($12 | 0, +$15, +$18, +(+__trunctfdf2($38 | 0, i64toi32_i32$0 | 0, $19 | 0, i64toi32_i32$1 | 0)), 0 | 0, -1 | 0) | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $24 = i64toi32_i32$1;
  $24$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] | 0;
  $91 = i64toi32_i32$0;
  i64toi32_i32$0 = $12 + 40 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $91;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $24$hi;
  i64toi32_i32$0 = $12;
  HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] = $24;
  HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = i64toi32_i32$2 + 80 | 0;
  return i64toi32_i32$0 | 0;
 }
 
 function Quaternion__unit_28_29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, $3 = 0, $4 = 0, $12 = 0, $16$hi = 0, $17$hi = 0, $18$hi = 0, $19$hi = 0, $25$hi = 0, $34$hi = 0, $35$hi = 0, $36$hi = 0, $37$hi = 0, $43$hi = 0, $52$hi = 0, $53$hi = 0, $54$hi = 0, $55$hi = 0, $61$hi = 0, $65 = 0, $66$hi = 0, $67$hi = 0, $68$hi = 0, $69$hi = 0, $7 = 0, $7$hi = 0, $94 = 0, $16 = 0, $17 = 0, $18 = 0, $124 = 0, $25 = 0, $136$hi = 0, $57 = 0, $34 = 0, $35 = 0, $36 = 0, $168 = 0, $43 = 0, $180$hi = 0, $58 = 0, $52 = 0, $53 = 0, $54 = 0, $212 = 0, $61 = 0, $224$hi = 0, $59 = 0, $66 = 0, $67 = 0, $68 = 0, $243 = 0, $71 = 0, $71$hi = 0, $72 = 0, $72$hi = 0;
  $3 = __stack_pointer - 160 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 156 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 156 | 0) >> 2] | 0;
  Quaternion__mag_28_29($3 + 112 | 0 | 0, $4 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 112 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 116 | 0) >> 2] | 0;
  $7 = i64toi32_i32$0;
  $7$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 120 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 124 | 0) >> 2] | 0;
  $94 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 136 | 0) >> 2] = $94;
  HEAP32[(i64toi32_i32$1 + 140 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  HEAP32[(i64toi32_i32$1 + 128 | 0) >> 2] = $7;
  HEAP32[(i64toi32_i32$1 + 132 | 0) >> 2] = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$1 + 80 | 0 | 0, +(+HEAPF64[$4 >> 3]));
  $12 = 8;
  i64toi32_i32$2 = (i64toi32_i32$1 + 80 | 0) + $12 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $16 = i64toi32_i32$0;
  $16$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
  $17 = i64toi32_i32$1;
  $17$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 136 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 140 | 0) >> 2] | 0;
  $18 = i64toi32_i32$0;
  $18$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 128 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 132 | 0) >> 2] | 0;
  $19$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $17$hi;
  i64toi32_i32$0 = $16$hi;
  i64toi32_i32$0 = $19$hi;
  $124 = i64toi32_i32$1;
  i64toi32_i32$0 = $18$hi;
  i64toi32_i32$0 = $17$hi;
  i64toi32_i32$1 = $16$hi;
  i64toi32_i32$2 = $19$hi;
  i64toi32_i32$3 = $18$hi;
  __divtf3($3 + 96 | 0 | 0, $17 | 0, i64toi32_i32$0 | 0, $16 | 0, i64toi32_i32$1 | 0, $124 | 0, i64toi32_i32$2 | 0, $18 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($3 + 96 | 0) + $12 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $25 = i64toi32_i32$3;
  $25$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $3;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
  $136$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $25$hi;
  i64toi32_i32$3 = $136$hi;
  $57 = i64toi32_i32$2;
  i64toi32_i32$2 = $25$hi;
  HEAPF64[$4 >> 3] = +__trunctfdf2($57 | 0, i64toi32_i32$3 | 0, $25 | 0, i64toi32_i32$2 | 0);
  __extenddftf2(i64toi32_i32$1 + 48 | 0 | 0, +(+HEAPF64[($4 + 8 | 0) >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 48 | 0) + $12 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $34 = i64toi32_i32$2;
  $34$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 48 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 52 | 0) >> 2] | 0;
  $35 = i64toi32_i32$3;
  $35$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 136 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 140 | 0) >> 2] | 0;
  $36 = i64toi32_i32$2;
  $36$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 128 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 132 | 0) >> 2] | 0;
  $37$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $35$hi;
  i64toi32_i32$2 = $34$hi;
  i64toi32_i32$2 = $37$hi;
  $168 = i64toi32_i32$3;
  i64toi32_i32$2 = $36$hi;
  i64toi32_i32$2 = $35$hi;
  i64toi32_i32$3 = $34$hi;
  i64toi32_i32$1 = $37$hi;
  i64toi32_i32$0 = $36$hi;
  __divtf3($3 + 64 | 0 | 0, $35 | 0, i64toi32_i32$2 | 0, $34 | 0, i64toi32_i32$3 | 0, $168 | 0, i64toi32_i32$1 | 0, $36 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$3 = ($3 + 64 | 0) + $12 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $43 = i64toi32_i32$0;
  $43$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $3;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 64 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 68 | 0) >> 2] | 0;
  $180$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $43$hi;
  i64toi32_i32$0 = $180$hi;
  $58 = i64toi32_i32$1;
  i64toi32_i32$1 = $43$hi;
  HEAPF64[($4 + 8 | 0) >> 3] = +__trunctfdf2($58 | 0, i64toi32_i32$0 | 0, $43 | 0, i64toi32_i32$1 | 0);
  __extenddftf2(i64toi32_i32$3 + 16 | 0 | 0, +(+HEAPF64[($4 + 16 | 0) >> 3]));
  i64toi32_i32$3 = (i64toi32_i32$3 + 16 | 0) + $12 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $52 = i64toi32_i32$1;
  $52$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 20 | 0) >> 2] | 0;
  $53 = i64toi32_i32$0;
  $53$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 136 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 140 | 0) >> 2] | 0;
  $54 = i64toi32_i32$1;
  $54$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 128 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 132 | 0) >> 2] | 0;
  $55$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $53$hi;
  i64toi32_i32$1 = $52$hi;
  i64toi32_i32$1 = $55$hi;
  $212 = i64toi32_i32$0;
  i64toi32_i32$1 = $54$hi;
  i64toi32_i32$1 = $53$hi;
  i64toi32_i32$0 = $52$hi;
  i64toi32_i32$3 = $55$hi;
  i64toi32_i32$2 = $54$hi;
  __divtf3($3 + 32 | 0 | 0, $53 | 0, i64toi32_i32$1 | 0, $52 | 0, i64toi32_i32$0 | 0, $212 | 0, i64toi32_i32$3 | 0, $54 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$0 = ($3 + 32 | 0) + $12 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $61 = i64toi32_i32$2;
  $61$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] | 0;
  $224$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $61$hi;
  i64toi32_i32$2 = $224$hi;
  $59 = i64toi32_i32$3;
  i64toi32_i32$3 = $61$hi;
  HEAPF64[($4 + 16 | 0) >> 3] = +__trunctfdf2($59 | 0, i64toi32_i32$2 | 0, $61 | 0, i64toi32_i32$3 | 0);
  $65 = $4 + 40 | 0;
  i64toi32_i32$0 = $65;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $66 = i64toi32_i32$3;
  $66$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $4;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] | 0;
  $67 = i64toi32_i32$2;
  $67$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 136 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 140 | 0) >> 2] | 0;
  $68 = i64toi32_i32$3;
  $68$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 128 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 132 | 0) >> 2] | 0;
  $69$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $67$hi;
  i64toi32_i32$3 = $66$hi;
  i64toi32_i32$3 = $69$hi;
  $243 = i64toi32_i32$2;
  i64toi32_i32$3 = $68$hi;
  i64toi32_i32$3 = $67$hi;
  i64toi32_i32$2 = $66$hi;
  i64toi32_i32$0 = $69$hi;
  i64toi32_i32$1 = $68$hi;
  __divtf3($3 | 0, $67 | 0, i64toi32_i32$3 | 0, $66 | 0, i64toi32_i32$2 | 0, $243 | 0, i64toi32_i32$0 | 0, $68 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $3 + $12 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $71 = i64toi32_i32$1;
  $71$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $72 = i64toi32_i32$0;
  $72$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $71$hi;
  i64toi32_i32$0 = $65;
  HEAP32[i64toi32_i32$0 >> 2] = $71;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $72$hi;
  i64toi32_i32$0 = $4;
  HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] = $72;
  HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = i64toi32_i32$2 + 160 | 0;
  return;
 }
 
 function Quaternion__mag_28_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$3 = 0, $5 = 0, $16 = 0, $24$hi = 0, $6 = 0.0, $8 = 0.0, $11 = 0.0, $20$hi = 0, $21$hi = 0, $24 = 0, $25 = 0, $98$hi = 0, $31$hi = 0, $32$hi = 0, $34$hi = 0, $20 = 0, $21 = 0, $31 = 0, $115 = 0, $34 = 0, $128$hi = 0, $30 = 0, $38 = 0, $38$hi = 0, $135 = 0;
  $4 = __stack_pointer - 80 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 76 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 76 | 0) >> 2] | 0;
  $6 = +HEAPF64[$5 >> 3];
  $8 = +HEAPF64[($5 + 8 | 0) >> 3];
  $11 = +HEAPF64[($5 + 16 | 0) >> 3];
  __extenddftf2($4 + 32 | 0 | 0, +($6 * $6 + $8 * $8 + $11 * $11));
  $16 = 8;
  i64toi32_i32$2 = ($4 + 32 | 0) + $16 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $20 = i64toi32_i32$0;
  $20$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $21 = i64toi32_i32$1;
  $21$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5 + 40 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $24 = i64toi32_i32$0;
  $24$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $25 = i64toi32_i32$1;
  $98$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $24$hi;
  i64toi32_i32$0 = $98$hi;
  i64toi32_i32$0 = $24$hi;
  i64toi32_i32$0 = $98$hi;
  i64toi32_i32$1 = $24$hi;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$3 = i64toi32_i32$1;
  __multf3($4 + 16 | 0 | 0, $25 | 0, i64toi32_i32$0 | 0, $24 | 0, i64toi32_i32$1 | 0, $25 | 0, i64toi32_i32$0 | 0, $24 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = ($4 + 16 | 0) + $16 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $31 = i64toi32_i32$3;
  $31$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $4;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
  $32$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $21$hi;
  i64toi32_i32$3 = $20$hi;
  i64toi32_i32$3 = $32$hi;
  $115 = i64toi32_i32$2;
  i64toi32_i32$3 = $31$hi;
  i64toi32_i32$3 = $21$hi;
  i64toi32_i32$2 = $20$hi;
  i64toi32_i32$1 = $32$hi;
  i64toi32_i32$0 = $31$hi;
  __addtf3($4 | 0, $21 | 0, i64toi32_i32$3 | 0, $20 | 0, i64toi32_i32$2 | 0, $115 | 0, i64toi32_i32$1 | 0, $31 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $4 + $16 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $34 = i64toi32_i32$0;
  $34$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $128$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $34$hi;
  i64toi32_i32$0 = $128$hi;
  $30 = i64toi32_i32$1;
  i64toi32_i32$1 = $34$hi;
  sqrt_28long_20double_29(i64toi32_i32$2 + 48 | 0 | 0, $30 | 0, i64toi32_i32$0 | 0, $34 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
  $38 = i64toi32_i32$1;
  $38$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 56 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 60 | 0) >> 2] | 0;
  $135 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $135;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $38$hi;
  HEAP32[i64toi32_i32$0 >> 2] = $38;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = i64toi32_i32$2 + 80 | 0;
  return;
 }
 
 function Quaternion__multiply_28Quaternion_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$3 = 0, $5 = 0, $35 = 0, $19 = 0, $27 = 0, $13 = 0, $70 = 0, $71 = 0, $9 = 0, $10 = 0, $22 = 0, $25 = 0, $30 = 0, $33 = 0, $38 = 0, $41 = 0, $72$hi = 0, $89 = 0, $91$hi = 0, $101 = 0, $105 = 0, $119$hi = 0, $120$hi = 0, $121 = 0, $123$hi = 0, $124$hi = 0, $130$hi = 0, $131$hi = 0, $138$hi = 0, $139$hi = 0, $229 = 0, $245 = 0, $261 = 0, $265 = 0, $289 = 0, $305 = 0, $321 = 0, $325 = 0, $72 = 0, $337$hi = 0, $68 = 0, $348 = 0, $358 = 0, $368 = 0, $372 = 0, $91 = 0, $386$hi = 0, $69 = 0, $397 = 0, $407 = 0, $417 = 0, $421 = 0, $119 = 0, $120 = 0, $123 = 0, $469 = 0, $130 = 0, $131 = 0, $138 = 0, $500 = 0, $141 = 0, $141$hi = 0, $142 = 0, $142$hi = 0;
  $4 = __stack_pointer - 256 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 252 | 0) >> 2] = $0;
  HEAP32[($4 + 248 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 252 | 0) >> 2] | 0;
  $9 = -1;
  $10 = 0;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($4 + 216 | 0 | 0, +(+HEAPF64[$5 >> 3]), +(+HEAPF64[($5 + 8 | 0) >> 3]), +(+HEAPF64[($5 + 16 | 0) >> 3]), $10 | 0, $9 | 0) | 0;
  $13 = HEAP32[($4 + 248 | 0) >> 2] | 0;
  Point3__Point3_28double_2c_20double_2c_20double_2c_20bool_2c_20int_29($4 + 184 | 0 | 0, +(+HEAPF64[$13 >> 3]), +(+HEAPF64[($13 + 8 | 0) >> 3]), +(+HEAPF64[($13 + 16 | 0) >> 3]), $10 | 0, $9 | 0) | 0;
  $19 = 24;
  $22 = ($4 + 152 | 0) + $19 | 0;
  $25 = ($4 + 216 | 0) + $19 | 0;
  i64toi32_i32$2 = $25;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $229 = i64toi32_i32$0;
  i64toi32_i32$0 = $22;
  HEAP32[i64toi32_i32$0 >> 2] = $229;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $27 = 16;
  $30 = ($4 + 152 | 0) + $27 | 0;
  $33 = ($4 + 216 | 0) + $27 | 0;
  i64toi32_i32$2 = $33;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $245 = i64toi32_i32$1;
  i64toi32_i32$1 = $30;
  HEAP32[i64toi32_i32$1 >> 2] = $245;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $35 = 8;
  $38 = ($4 + 152 | 0) + $35 | 0;
  $41 = ($4 + 216 | 0) + $35 | 0;
  i64toi32_i32$2 = $41;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $261 = i64toi32_i32$0;
  i64toi32_i32$0 = $38;
  HEAP32[i64toi32_i32$0 >> 2] = $261;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[($4 + 216 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($4 + 220 | 0) >> 2] | 0;
  $265 = i64toi32_i32$1;
  i64toi32_i32$1 = $4;
  HEAP32[(i64toi32_i32$1 + 152 | 0) >> 2] = $265;
  HEAP32[(i64toi32_i32$1 + 156 | 0) >> 2] = i64toi32_i32$0;
  Point3__cross_28Point3_20const__29(i64toi32_i32$1 + 152 | 0 | 0, i64toi32_i32$1 + 184 | 0 | 0);
  i64toi32_i32$2 = (i64toi32_i32$1 + 184 | 0) + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $289 = i64toi32_i32$0;
  i64toi32_i32$0 = ($4 + 120 | 0) + $19 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $289;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = ($4 + 184 | 0) + $27 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $305 = i64toi32_i32$1;
  i64toi32_i32$1 = ($4 + 120 | 0) + $27 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $305;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = ($4 + 184 | 0) + $35 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $321 = i64toi32_i32$0;
  i64toi32_i32$0 = ($4 + 120 | 0) + $35 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $321;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[($4 + 184 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($4 + 188 | 0) >> 2] | 0;
  $325 = i64toi32_i32$1;
  i64toi32_i32$1 = $4;
  HEAP32[(i64toi32_i32$1 + 120 | 0) >> 2] = $325;
  HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] = i64toi32_i32$0;
  $70 = 40;
  $71 = $5 + $70 | 0;
  i64toi32_i32$2 = $71;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $72 = i64toi32_i32$0;
  $72$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $337$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $72$hi;
  i64toi32_i32$0 = $337$hi;
  $68 = i64toi32_i32$1;
  i64toi32_i32$1 = $72$hi;
  Point3__mult_by_28long_20double_29($4 + 120 | 0 | 0, $68 | 0, i64toi32_i32$0 | 0, $72 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $25;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $348 = i64toi32_i32$1;
  i64toi32_i32$1 = ($4 + 88 | 0) + $19 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $348;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $33;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $358 = i64toi32_i32$0;
  i64toi32_i32$0 = ($4 + 88 | 0) + $27 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $358;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $41;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $368 = i64toi32_i32$1;
  i64toi32_i32$1 = ($4 + 88 | 0) + $35 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $368;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $4;
  i64toi32_i32$0 = HEAP32[($4 + 216 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($4 + 220 | 0) >> 2] | 0;
  $372 = i64toi32_i32$0;
  i64toi32_i32$0 = $4;
  HEAP32[(i64toi32_i32$0 + 88 | 0) >> 2] = $372;
  HEAP32[(i64toi32_i32$0 + 92 | 0) >> 2] = i64toi32_i32$1;
  $89 = HEAP32[(i64toi32_i32$0 + 248 | 0) >> 2] | 0;
  i64toi32_i32$2 = $89 + $70 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $91 = i64toi32_i32$1;
  $91$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $89;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $386$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $91$hi;
  i64toi32_i32$1 = $386$hi;
  $69 = i64toi32_i32$0;
  i64toi32_i32$0 = $91$hi;
  Point3__mult_by_28long_20double_29($4 + 88 | 0 | 0, $69 | 0, i64toi32_i32$1 | 0, $91 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $22;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $397 = i64toi32_i32$0;
  i64toi32_i32$0 = ($4 + 56 | 0) + $19 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $397;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $101 = ($4 + 56 | 0) + $27 | 0;
  i64toi32_i32$2 = $30;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $407 = i64toi32_i32$1;
  i64toi32_i32$1 = $101;
  HEAP32[i64toi32_i32$1 >> 2] = $407;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $105 = ($4 + 56 | 0) + $35 | 0;
  i64toi32_i32$2 = $38;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $417 = i64toi32_i32$0;
  i64toi32_i32$0 = $105;
  HEAP32[i64toi32_i32$0 >> 2] = $417;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[($4 + 152 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($4 + 156 | 0) >> 2] | 0;
  $421 = i64toi32_i32$1;
  i64toi32_i32$1 = $4;
  HEAP32[(i64toi32_i32$1 + 56 | 0) >> 2] = $421;
  HEAP32[(i64toi32_i32$1 + 60 | 0) >> 2] = i64toi32_i32$0;
  Point3__add_28Point3_20const__29(i64toi32_i32$1 + 56 | 0 | 0, i64toi32_i32$1 + 120 | 0 | 0);
  Point3__add_28Point3_20const__29(i64toi32_i32$1 + 56 | 0 | 0, i64toi32_i32$1 + 88 | 0 | 0);
  HEAPF64[$5 >> 3] = +HEAPF64[(i64toi32_i32$1 + 56 | 0) >> 3];
  HEAPF64[($5 + 8 | 0) >> 3] = +HEAPF64[$105 >> 3];
  HEAPF64[($5 + 16 | 0) >> 3] = +HEAPF64[$101 >> 3];
  i64toi32_i32$2 = $71;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $119 = i64toi32_i32$0;
  $119$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $120 = i64toi32_i32$1;
  $120$hi = i64toi32_i32$0;
  $121 = HEAP32[($4 + 248 | 0) >> 2] | 0;
  i64toi32_i32$2 = $121 + $70 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $123 = i64toi32_i32$0;
  $123$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $121;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
  $124$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $120$hi;
  i64toi32_i32$0 = $119$hi;
  i64toi32_i32$0 = $124$hi;
  $469 = i64toi32_i32$1;
  i64toi32_i32$0 = $123$hi;
  i64toi32_i32$0 = $120$hi;
  i64toi32_i32$1 = $119$hi;
  i64toi32_i32$2 = $124$hi;
  i64toi32_i32$3 = $123$hi;
  __multf3($4 + 16 | 0 | 0, $120 | 0, i64toi32_i32$0 | 0, $119 | 0, i64toi32_i32$1 | 0, $469 | 0, i64toi32_i32$2 | 0, $123 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($4 + 16 | 0) + $35 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $130 = i64toi32_i32$3;
  $130$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $4;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
  $131 = i64toi32_i32$2;
  $131$hi = i64toi32_i32$3;
  Point3__dot_28Point3_20const__29_20const(i64toi32_i32$1 + 32 | 0 | 0, i64toi32_i32$1 + 216 | 0 | 0, i64toi32_i32$1 + 184 | 0 | 0);
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 40 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 44 | 0) >> 2] | 0;
  $138 = i64toi32_i32$3;
  $138$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $139$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $131$hi;
  i64toi32_i32$3 = $130$hi;
  i64toi32_i32$3 = $139$hi;
  $500 = i64toi32_i32$2;
  i64toi32_i32$3 = $138$hi;
  i64toi32_i32$3 = $131$hi;
  i64toi32_i32$2 = $130$hi;
  i64toi32_i32$1 = $139$hi;
  i64toi32_i32$0 = $138$hi;
  __subtf3($4 | 0, $131 | 0, i64toi32_i32$3 | 0, $130 | 0, i64toi32_i32$2 | 0, $500 | 0, i64toi32_i32$1 | 0, $138 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $4 + $35 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $141 = i64toi32_i32$0;
  $141$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[$4 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  $142 = i64toi32_i32$1;
  $142$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $141$hi;
  i64toi32_i32$1 = $71;
  HEAP32[i64toi32_i32$1 >> 2] = $141;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $142$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] = $142;
  HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] = i64toi32_i32$0;
  FUNCTION_TABLE[94 | 0]($4 + 56 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($4 + 88 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($4 + 120 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($4 + 152 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($4 + 184 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($4 + 216 | 0) | 0;
  __stack_pointer = $4 + 256 | 0;
  return;
 }
 
 function Point3__cross_28Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, $4 = 0, $9 = 0, $5 = 0, $31$hi = 0, $32$hi = 0, $33 = 0, $40$hi = 0, $41$hi = 0, $47$hi = 0, $48$hi = 0, $55$hi = 0, $56$hi = 0, $57$hi = 0, $58$hi = 0, $64$hi = 0, $65$hi = 0, $71$hi = 0, $74$hi = 0, $75$hi = 0, $76 = 0, $83$hi = 0, $84$hi = 0, $90$hi = 0, $91$hi = 0, $98$hi = 0, $99$hi = 0, $100$hi = 0, $101$hi = 0, $107$hi = 0, $108$hi = 0, $114$hi = 0, $117$hi = 0, $118$hi = 0, $119 = 0, $126$hi = 0, $127$hi = 0, $133$hi = 0, $134$hi = 0, $141$hi = 0, $142$hi = 0, $143$hi = 0, $144$hi = 0, $150$hi = 0, $151$hi = 0, $153$hi = 0, $13 = 0, $13$hi = 0, $14 = 0, $14$hi = 0, $21 = 0, $21$hi = 0, $22 = 0, $22$hi = 0, $29 = 0, $29$hi = 0, $30 = 0, $30$hi = 0, $31 = 0, $32 = 0, $40 = 0, $261 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $57 = 0, $300 = 0, $64 = 0, $318 = 0, $71 = 0, $330$hi = 0, $105 = 0, $74 = 0, $75 = 0, $83 = 0, $364 = 0, $90 = 0, $91 = 0, $98 = 0, $99 = 0, $100 = 0, $403 = 0, $107 = 0, $421 = 0, $114 = 0, $433$hi = 0, $106 = 0, $117 = 0, $118 = 0, $126 = 0, $467 = 0, $133 = 0, $134 = 0, $141 = 0, $142 = 0, $143 = 0, $506 = 0, $150 = 0, $521 = 0, $153 = 0, $530$hi = 0, $108 = 0;
  $4 = __stack_pointer - 352 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 348 | 0) >> 2] = $0;
  HEAP32[($4 + 344 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 348 | 0) >> 2] | 0;
  __extenddftf2($4 + 272 | 0 | 0, +(+HEAPF64[$5 >> 3]));
  $9 = 8;
  i64toi32_i32$2 = ($4 + 272 | 0) + $9 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $13 = i64toi32_i32$0;
  $13$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 272 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 276 | 0) >> 2] | 0;
  $14 = i64toi32_i32$1;
  $14$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $13$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 328 | 0) >> 2] = $13;
  HEAP32[(i64toi32_i32$1 + 332 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $14$hi;
  HEAP32[(i64toi32_i32$1 + 320 | 0) >> 2] = $14;
  HEAP32[(i64toi32_i32$1 + 324 | 0) >> 2] = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$1 + 256 | 0 | 0, +(+HEAPF64[($5 + 8 | 0) >> 3]));
  i64toi32_i32$2 = (i64toi32_i32$1 + 256 | 0) + $9 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $21 = i64toi32_i32$0;
  $21$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 256 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 260 | 0) >> 2] | 0;
  $22 = i64toi32_i32$1;
  $22$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $21$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 312 | 0) >> 2] = $21;
  HEAP32[(i64toi32_i32$1 + 316 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $22$hi;
  HEAP32[(i64toi32_i32$1 + 304 | 0) >> 2] = $22;
  HEAP32[(i64toi32_i32$1 + 308 | 0) >> 2] = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$1 + 240 | 0 | 0, +(+HEAPF64[($5 + 16 | 0) >> 3]));
  i64toi32_i32$2 = (i64toi32_i32$1 + 240 | 0) + $9 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $29 = i64toi32_i32$0;
  $29$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 240 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 244 | 0) >> 2] | 0;
  $30 = i64toi32_i32$1;
  $30$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $29$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 296 | 0) >> 2] = $29;
  HEAP32[(i64toi32_i32$1 + 300 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $30$hi;
  HEAP32[(i64toi32_i32$1 + 288 | 0) >> 2] = $30;
  HEAP32[(i64toi32_i32$1 + 292 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 312 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 316 | 0) >> 2] | 0;
  $31 = i64toi32_i32$0;
  $31$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 304 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 308 | 0) >> 2] | 0;
  $32 = i64toi32_i32$1;
  $32$hi = i64toi32_i32$0;
  $33 = HEAP32[(i64toi32_i32$2 + 344 | 0) >> 2] | 0;
  __extenddftf2(i64toi32_i32$2 + 208 | 0 | 0, +(+HEAPF64[($33 + 16 | 0) >> 3]));
  i64toi32_i32$2 = (i64toi32_i32$2 + 208 | 0) + $9 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $40 = i64toi32_i32$0;
  $40$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 208 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 212 | 0) >> 2] | 0;
  $41$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $32$hi;
  i64toi32_i32$0 = $31$hi;
  i64toi32_i32$0 = $41$hi;
  $261 = i64toi32_i32$1;
  i64toi32_i32$0 = $40$hi;
  i64toi32_i32$0 = $32$hi;
  i64toi32_i32$1 = $31$hi;
  i64toi32_i32$2 = $41$hi;
  i64toi32_i32$3 = $40$hi;
  __multf3($4 + 224 | 0 | 0, $32 | 0, i64toi32_i32$0 | 0, $31 | 0, i64toi32_i32$1 | 0, $261 | 0, i64toi32_i32$2 | 0, $40 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($4 + 224 | 0) + $9 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $47 = i64toi32_i32$3;
  $47$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $4;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 224 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 228 | 0) >> 2] | 0;
  $48 = i64toi32_i32$2;
  $48$hi = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$1 + 192 | 0 | 0, +(+HEAPF64[($33 + 8 | 0) >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 192 | 0) + $9 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $55 = i64toi32_i32$3;
  $55$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $4;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 192 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 196 | 0) >> 2] | 0;
  $56 = i64toi32_i32$2;
  $56$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 296 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 300 | 0) >> 2] | 0;
  $57 = i64toi32_i32$3;
  $57$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 288 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 292 | 0) >> 2] | 0;
  $58$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $56$hi;
  i64toi32_i32$3 = $55$hi;
  i64toi32_i32$3 = $58$hi;
  $300 = i64toi32_i32$2;
  i64toi32_i32$3 = $57$hi;
  i64toi32_i32$3 = $56$hi;
  i64toi32_i32$2 = $55$hi;
  i64toi32_i32$1 = $58$hi;
  i64toi32_i32$0 = $57$hi;
  __multf3($4 + 176 | 0 | 0, $56 | 0, i64toi32_i32$3 | 0, $55 | 0, i64toi32_i32$2 | 0, $300 | 0, i64toi32_i32$1 | 0, $57 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($4 + 176 | 0) + $9 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $64 = i64toi32_i32$0;
  $64$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 176 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 180 | 0) >> 2] | 0;
  $65$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $48$hi;
  i64toi32_i32$0 = $47$hi;
  i64toi32_i32$0 = $65$hi;
  $318 = i64toi32_i32$1;
  i64toi32_i32$0 = $64$hi;
  i64toi32_i32$0 = $48$hi;
  i64toi32_i32$1 = $47$hi;
  i64toi32_i32$2 = $65$hi;
  i64toi32_i32$3 = $64$hi;
  __subtf3($4 + 160 | 0 | 0, $48 | 0, i64toi32_i32$0 | 0, $47 | 0, i64toi32_i32$1 | 0, $318 | 0, i64toi32_i32$2 | 0, $64 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($4 + 160 | 0) + $9 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $71 = i64toi32_i32$3;
  $71$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $4;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 160 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 164 | 0) >> 2] | 0;
  $330$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $71$hi;
  i64toi32_i32$3 = $330$hi;
  $105 = i64toi32_i32$2;
  i64toi32_i32$2 = $71$hi;
  HEAPF64[$5 >> 3] = +__trunctfdf2($105 | 0, i64toi32_i32$3 | 0, $71 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 296 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 300 | 0) >> 2] | 0;
  $74 = i64toi32_i32$2;
  $74$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 288 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 292 | 0) >> 2] | 0;
  $75 = i64toi32_i32$3;
  $75$hi = i64toi32_i32$2;
  $76 = HEAP32[(i64toi32_i32$1 + 344 | 0) >> 2] | 0;
  __extenddftf2(i64toi32_i32$1 + 112 | 0 | 0, +(+HEAPF64[$76 >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 112 | 0) + $9 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $83 = i64toi32_i32$2;
  $83$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $4;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
  $84$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $75$hi;
  i64toi32_i32$2 = $74$hi;
  i64toi32_i32$2 = $84$hi;
  $364 = i64toi32_i32$3;
  i64toi32_i32$2 = $83$hi;
  i64toi32_i32$2 = $75$hi;
  i64toi32_i32$3 = $74$hi;
  i64toi32_i32$1 = $84$hi;
  i64toi32_i32$0 = $83$hi;
  __multf3($4 + 128 | 0 | 0, $75 | 0, i64toi32_i32$2 | 0, $74 | 0, i64toi32_i32$3 | 0, $364 | 0, i64toi32_i32$1 | 0, $83 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$3 = ($4 + 128 | 0) + $9 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $90 = i64toi32_i32$0;
  $90$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 128 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 132 | 0) >> 2] | 0;
  $91 = i64toi32_i32$1;
  $91$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$3 + 144 | 0 | 0, +(+HEAPF64[($76 + 16 | 0) >> 3]));
  i64toi32_i32$3 = (i64toi32_i32$3 + 144 | 0) + $9 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $98 = i64toi32_i32$0;
  $98$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 144 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 148 | 0) >> 2] | 0;
  $99 = i64toi32_i32$1;
  $99$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 328 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 332 | 0) >> 2] | 0;
  $100 = i64toi32_i32$0;
  $100$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 320 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 324 | 0) >> 2] | 0;
  $101$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $99$hi;
  i64toi32_i32$0 = $98$hi;
  i64toi32_i32$0 = $101$hi;
  $403 = i64toi32_i32$1;
  i64toi32_i32$0 = $100$hi;
  i64toi32_i32$0 = $99$hi;
  i64toi32_i32$1 = $98$hi;
  i64toi32_i32$3 = $101$hi;
  i64toi32_i32$2 = $100$hi;
  __multf3($4 + 96 | 0 | 0, $99 | 0, i64toi32_i32$0 | 0, $98 | 0, i64toi32_i32$1 | 0, $403 | 0, i64toi32_i32$3 | 0, $100 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$1 = ($4 + 96 | 0) + $9 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $107 = i64toi32_i32$2;
  $107$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $4;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
  $108$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $91$hi;
  i64toi32_i32$2 = $90$hi;
  i64toi32_i32$2 = $108$hi;
  $421 = i64toi32_i32$3;
  i64toi32_i32$2 = $107$hi;
  i64toi32_i32$2 = $91$hi;
  i64toi32_i32$3 = $90$hi;
  i64toi32_i32$1 = $108$hi;
  i64toi32_i32$0 = $107$hi;
  __subtf3($4 + 80 | 0 | 0, $91 | 0, i64toi32_i32$2 | 0, $90 | 0, i64toi32_i32$3 | 0, $421 | 0, i64toi32_i32$1 | 0, $107 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$3 = ($4 + 80 | 0) + $9 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $114 = i64toi32_i32$0;
  $114$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $4;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 80 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 84 | 0) >> 2] | 0;
  $433$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $114$hi;
  i64toi32_i32$0 = $433$hi;
  $106 = i64toi32_i32$1;
  i64toi32_i32$1 = $114$hi;
  HEAPF64[($5 + 8 | 0) >> 3] = +__trunctfdf2($106 | 0, i64toi32_i32$0 | 0, $114 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 328 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 332 | 0) >> 2] | 0;
  $117 = i64toi32_i32$1;
  $117$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 320 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 324 | 0) >> 2] | 0;
  $118 = i64toi32_i32$0;
  $118$hi = i64toi32_i32$1;
  $119 = HEAP32[(i64toi32_i32$3 + 344 | 0) >> 2] | 0;
  __extenddftf2(i64toi32_i32$3 + 48 | 0 | 0, +(+HEAPF64[($119 + 8 | 0) >> 3]));
  i64toi32_i32$3 = (i64toi32_i32$3 + 48 | 0) + $9 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $126 = i64toi32_i32$1;
  $126$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $4;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 48 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 52 | 0) >> 2] | 0;
  $127$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $118$hi;
  i64toi32_i32$1 = $117$hi;
  i64toi32_i32$1 = $127$hi;
  $467 = i64toi32_i32$0;
  i64toi32_i32$1 = $126$hi;
  i64toi32_i32$1 = $118$hi;
  i64toi32_i32$0 = $117$hi;
  i64toi32_i32$3 = $127$hi;
  i64toi32_i32$2 = $126$hi;
  __multf3($4 + 64 | 0 | 0, $118 | 0, i64toi32_i32$1 | 0, $117 | 0, i64toi32_i32$0 | 0, $467 | 0, i64toi32_i32$3 | 0, $126 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$0 = ($4 + 64 | 0) + $9 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $133 = i64toi32_i32$2;
  $133$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $4;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 64 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 68 | 0) >> 2] | 0;
  $134 = i64toi32_i32$3;
  $134$hi = i64toi32_i32$2;
  __extenddftf2(i64toi32_i32$0 + 32 | 0 | 0, +(+HEAPF64[$119 >> 3]));
  i64toi32_i32$0 = (i64toi32_i32$0 + 32 | 0) + $9 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $141 = i64toi32_i32$2;
  $141$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $4;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] | 0;
  $142 = i64toi32_i32$3;
  $142$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 312 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 316 | 0) >> 2] | 0;
  $143 = i64toi32_i32$2;
  $143$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 304 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 308 | 0) >> 2] | 0;
  $144$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $142$hi;
  i64toi32_i32$2 = $141$hi;
  i64toi32_i32$2 = $144$hi;
  $506 = i64toi32_i32$3;
  i64toi32_i32$2 = $143$hi;
  i64toi32_i32$2 = $142$hi;
  i64toi32_i32$3 = $141$hi;
  i64toi32_i32$0 = $144$hi;
  i64toi32_i32$1 = $143$hi;
  __multf3($4 + 16 | 0 | 0, $142 | 0, i64toi32_i32$2 | 0, $141 | 0, i64toi32_i32$3 | 0, $506 | 0, i64toi32_i32$0 | 0, $143 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$3 = ($4 + 16 | 0) + $9 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $150 = i64toi32_i32$1;
  $150$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $4;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 20 | 0) >> 2] | 0;
  $151$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $134$hi;
  i64toi32_i32$1 = $133$hi;
  i64toi32_i32$1 = $151$hi;
  $521 = i64toi32_i32$0;
  i64toi32_i32$1 = $150$hi;
  i64toi32_i32$1 = $134$hi;
  i64toi32_i32$0 = $133$hi;
  i64toi32_i32$3 = $151$hi;
  i64toi32_i32$2 = $150$hi;
  __subtf3($4 | 0, $134 | 0, i64toi32_i32$1 | 0, $133 | 0, i64toi32_i32$0 | 0, $521 | 0, i64toi32_i32$3 | 0, $150 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$0 = $4 + $9 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $153 = i64toi32_i32$2;
  $153$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $4;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $530$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $153$hi;
  i64toi32_i32$2 = $530$hi;
  $108 = i64toi32_i32$3;
  i64toi32_i32$3 = $153$hi;
  HEAPF64[($5 + 16 | 0) >> 3] = +__trunctfdf2($108 | 0, i64toi32_i32$2 | 0, $153 | 0, i64toi32_i32$3 | 0);
  __stack_pointer = i64toi32_i32$0 + 352 | 0;
  return;
 }
 
 function Point3__mult_by_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0, $12 = 0, $7$hi = 0, $8$hi = 0, $16$hi = 0, $23$hi = 0, $26$hi = 0, $27$hi = 0, $34$hi = 0, $41$hi = 0, $44$hi = 0, $45$hi = 0, $48$hi = 0, $55$hi = 0, $7 = 0, $8 = 0, $16 = 0, $98$hi = 0, $42 = 0, $23 = 0, $112$hi = 0, $43 = 0, $26 = 0, $27 = 0, $34 = 0, $142$hi = 0, $46 = 0, $41 = 0, $156$hi = 0, $47 = 0, $44 = 0, $45 = 0, $48 = 0, $180$hi = 0, $49 = 0, $55 = 0, $194$hi = 0, $50 = 0;
  $5 = __stack_pointer - 128 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 124 | 0) >> 2] = $0;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] = i64toi32_i32$0;
  $6 = HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] | 0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] | 0;
  $7 = i64toi32_i32$0;
  $7$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $8 = i64toi32_i32$1;
  $8$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$2 + 80 | 0 | 0, +(+HEAPF64[$6 >> 3]));
  $12 = 8;
  i64toi32_i32$2 = (i64toi32_i32$2 + 80 | 0) + $12 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $16 = i64toi32_i32$0;
  $16$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
  $98$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $16$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $98$hi;
  $42 = i64toi32_i32$1;
  i64toi32_i32$1 = $16$hi;
  i64toi32_i32$2 = $8$hi;
  i64toi32_i32$3 = $7$hi;
  __multf3($5 + 64 | 0 | 0, $42 | 0, i64toi32_i32$0 | 0, $16 | 0, i64toi32_i32$1 | 0, $8 | 0, i64toi32_i32$2 | 0, $7 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 64 | 0) + $12 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $23 = i64toi32_i32$3;
  $23$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
  $112$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $23$hi;
  i64toi32_i32$3 = $112$hi;
  $43 = i64toi32_i32$2;
  i64toi32_i32$2 = $23$hi;
  HEAPF64[$6 >> 3] = +__trunctfdf2($43 | 0, i64toi32_i32$3 | 0, $23 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] | 0;
  $26 = i64toi32_i32$2;
  $26$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
  $27 = i64toi32_i32$3;
  $27$hi = i64toi32_i32$2;
  __extenddftf2(i64toi32_i32$1 + 32 | 0 | 0, +(+HEAPF64[($6 + 8 | 0) >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 32 | 0) + $12 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $34 = i64toi32_i32$2;
  $34$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $142$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $34$hi;
  i64toi32_i32$2 = $27$hi;
  i64toi32_i32$2 = $26$hi;
  i64toi32_i32$2 = $142$hi;
  $46 = i64toi32_i32$3;
  i64toi32_i32$3 = $34$hi;
  i64toi32_i32$1 = $27$hi;
  i64toi32_i32$0 = $26$hi;
  __multf3($5 + 48 | 0 | 0, $46 | 0, i64toi32_i32$2 | 0, $34 | 0, i64toi32_i32$3 | 0, $27 | 0, i64toi32_i32$1 | 0, $26 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$3 = ($5 + 48 | 0) + $12 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $41 = i64toi32_i32$0;
  $41$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 52 | 0) >> 2] | 0;
  $156$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $41$hi;
  i64toi32_i32$0 = $156$hi;
  $47 = i64toi32_i32$1;
  i64toi32_i32$1 = $41$hi;
  HEAPF64[($6 + 8 | 0) >> 3] = +__trunctfdf2($47 | 0, i64toi32_i32$0 | 0, $41 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 104 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 108 | 0) >> 2] | 0;
  $44 = i64toi32_i32$1;
  $44$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 96 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 100 | 0) >> 2] | 0;
  $45 = i64toi32_i32$0;
  $45$hi = i64toi32_i32$1;
  __extenddftf2(i64toi32_i32$3 | 0, +(+HEAPF64[($6 + 16 | 0) >> 3]));
  i64toi32_i32$3 = i64toi32_i32$3 + $12 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $48 = i64toi32_i32$1;
  $48$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $180$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $48$hi;
  i64toi32_i32$1 = $45$hi;
  i64toi32_i32$1 = $44$hi;
  i64toi32_i32$1 = $180$hi;
  $49 = i64toi32_i32$0;
  i64toi32_i32$0 = $48$hi;
  i64toi32_i32$3 = $45$hi;
  i64toi32_i32$2 = $44$hi;
  __multf3($5 + 16 | 0 | 0, $49 | 0, i64toi32_i32$1 | 0, $48 | 0, i64toi32_i32$0 | 0, $45 | 0, i64toi32_i32$3 | 0, $44 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$0 = ($5 + 16 | 0) + $12 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $55 = i64toi32_i32$2;
  $55$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] | 0;
  $194$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $55$hi;
  i64toi32_i32$2 = $194$hi;
  $50 = i64toi32_i32$3;
  i64toi32_i32$3 = $55$hi;
  HEAPF64[($6 + 16 | 0) >> 3] = +__trunctfdf2($50 | 0, i64toi32_i32$2 | 0, $55 | 0, i64toi32_i32$3 | 0);
  __stack_pointer = i64toi32_i32$0 + 128 | 0;
  return;
 }
 
 function Point3__add_28Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAPF64[$5 >> 3] = +HEAPF64[$5 >> 3] + +HEAPF64[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 3];
  HEAPF64[($5 + 8 | 0) >> 3] = +HEAPF64[($5 + 8 | 0) >> 3] + +HEAPF64[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0) >> 3];
  HEAPF64[($5 + 16 | 0) >> 3] = +HEAPF64[($5 + 16 | 0) >> 3] + +HEAPF64[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 16 | 0) >> 3];
  return;
 }
 
 function Point3__dot_28Point3_20const__29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $6 = 0, $8 = 0, i64toi32_i32$2 = 0, $23 = 0, $23$hi = 0, $24 = 0, $24$hi = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $1;
  HEAP32[($5 + 24 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  $8 = HEAP32[($5 + 24 | 0) >> 2] | 0;
  __extenddftf2($5 + 8 | 0 | 0, +(+HEAPF64[$6 >> 3] * +HEAPF64[$8 >> 3] + +HEAPF64[($6 + 8 | 0) >> 3] * +HEAPF64[($8 + 8 | 0) >> 3] + +HEAPF64[($6 + 16 | 0) >> 3] * +HEAPF64[($8 + 16 | 0) >> 3]));
  i64toi32_i32$2 = $5 + 16 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $23 = i64toi32_i32$0;
  $23$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  $24 = i64toi32_i32$1;
  $24$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $23$hi;
  i64toi32_i32$1 = $0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $23;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $24$hi;
  HEAP32[i64toi32_i32$1 >> 2] = $24;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function Point3___Point3_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Point3__angle_between_28Point3_20const__29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $5 = 0, $6 = 0, $10$hi = 0, $11$hi = 0, $14$hi = 0, $15$hi = 0, $19$hi = 0, $20$hi = 0, $23 = 0, $27$hi = 0, $28$hi = 0, $36$hi = 0, $37$hi = 0, $38$hi = 0, $39$hi = 0, $47$hi = 0, $48$hi = 0, $49$hi = 0, $50$hi = 0, $58$hi = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $19 = 0, $113 = 0, $27 = 0, $131 = 0, $34 = 0, $34$hi = 0, $35 = 0, $35$hi = 0, $36 = 0, $46 = 0, $47 = 0, $48 = 0, $58 = 0, $194$hi = 0, $49 = 0, $60 = 0, $60$hi = 0, $201 = 0;
  $5 = __stack_pointer - 128 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 124 | 0) >> 2] = $1;
  HEAP32[($5 + 120 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 124 | 0) >> 2] | 0;
  Point3__dot_28Point3_20const__29_20const($5 + 80 | 0 | 0, $6 | 0, HEAP32[($5 + 120 | 0) >> 2] | 0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 88 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 92 | 0) >> 2] | 0;
  $10 = i64toi32_i32$0;
  $10$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
  $11 = i64toi32_i32$1;
  $11$hi = i64toi32_i32$0;
  Point3__mag_28_29_20const(i64toi32_i32$2 + 64 | 0 | 0, $6 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 72 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 76 | 0) >> 2] | 0;
  $14 = i64toi32_i32$0;
  $14$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
  $15 = i64toi32_i32$1;
  $15$hi = i64toi32_i32$0;
  Point3__mag_28_29_20const(i64toi32_i32$2 + 48 | 0 | 0, HEAP32[(i64toi32_i32$2 + 120 | 0) >> 2] | 0 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 56 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 60 | 0) >> 2] | 0;
  $19 = i64toi32_i32$0;
  $19$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
  $20$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $15$hi;
  i64toi32_i32$0 = $14$hi;
  i64toi32_i32$0 = $20$hi;
  $113 = i64toi32_i32$1;
  i64toi32_i32$0 = $19$hi;
  i64toi32_i32$0 = $15$hi;
  i64toi32_i32$1 = $14$hi;
  i64toi32_i32$2 = $20$hi;
  i64toi32_i32$3 = $19$hi;
  __multf3($5 + 32 | 0 | 0, $15 | 0, i64toi32_i32$0 | 0, $14 | 0, i64toi32_i32$1 | 0, $113 | 0, i64toi32_i32$2 | 0, $19 | 0, i64toi32_i32$3 | 0);
  $23 = 8;
  i64toi32_i32$1 = ($5 + 32 | 0) + $23 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $27 = i64toi32_i32$3;
  $27$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $28$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $11$hi;
  i64toi32_i32$3 = $10$hi;
  i64toi32_i32$3 = $28$hi;
  $131 = i64toi32_i32$2;
  i64toi32_i32$3 = $27$hi;
  i64toi32_i32$3 = $11$hi;
  i64toi32_i32$2 = $10$hi;
  i64toi32_i32$1 = $28$hi;
  i64toi32_i32$0 = $27$hi;
  __divtf3($5 + 16 | 0 | 0, $11 | 0, i64toi32_i32$3 | 0, $10 | 0, i64toi32_i32$2 | 0, $131 | 0, i64toi32_i32$1 | 0, $27 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($5 + 16 | 0) + $23 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $34 = i64toi32_i32$0;
  $34$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
  $35 = i64toi32_i32$1;
  $35$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $34$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 104 | 0) >> 2] = $34;
  HEAP32[(i64toi32_i32$2 + 108 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $35$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] = $35;
  HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 104 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 108 | 0) >> 2] | 0;
  $36 = i64toi32_i32$0;
  $36$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $37$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 1073676288;
  $38$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $39$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $37$hi;
  i64toi32_i32$0 = $36$hi;
  i64toi32_i32$0 = $39$hi;
  i64toi32_i32$0 = $38$hi;
  i64toi32_i32$0 = $37$hi;
  $46 = i64toi32_i32$1;
  i64toi32_i32$1 = $36$hi;
  i64toi32_i32$2 = $39$hi;
  i64toi32_i32$3 = $38$hi;
  label$1 : {
   label$2 : {
    if (!((__getf2($46 | 0, i64toi32_i32$0 | 0, $36 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0) | 0 | 0) > (0 | 0) & 1 | 0)) {
     break label$2
    }
    i64toi32_i32$3 = 1073676288;
    i64toi32_i32$2 = $5;
    HEAP32[(i64toi32_i32$2 + 104 | 0) >> 2] = 0;
    HEAP32[(i64toi32_i32$2 + 108 | 0) >> 2] = i64toi32_i32$3;
    i64toi32_i32$3 = 0;
    HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] = 0;
    HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] = i64toi32_i32$3;
    break label$1;
   }
   i64toi32_i32$1 = $5;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] | 0;
   $47 = i64toi32_i32$3;
   $47$hi = i64toi32_i32$2;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
   $48$hi = i64toi32_i32$3;
   i64toi32_i32$3 = -1073807360;
   $49$hi = i64toi32_i32$3;
   i64toi32_i32$3 = 0;
   $50$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $48$hi;
   i64toi32_i32$3 = $47$hi;
   i64toi32_i32$3 = $50$hi;
   i64toi32_i32$3 = $49$hi;
   i64toi32_i32$3 = $48$hi;
   $48 = i64toi32_i32$2;
   i64toi32_i32$2 = $47$hi;
   i64toi32_i32$1 = $50$hi;
   i64toi32_i32$0 = $49$hi;
   label$3 : {
    if (!((__letf2($48 | 0, i64toi32_i32$3 | 0, $47 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$0 | 0) | 0 | 0) < (0 | 0) & 1 | 0)) {
     break label$3
    }
    i64toi32_i32$0 = -1073807360;
    i64toi32_i32$1 = $5;
    HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] = 0;
    HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] = 0;
    HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] = i64toi32_i32$0;
   }
  }
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 104 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 108 | 0) >> 2] | 0;
  $58 = i64toi32_i32$0;
  $58$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $194$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $58$hi;
  i64toi32_i32$0 = $194$hi;
  $49 = i64toi32_i32$1;
  i64toi32_i32$1 = $58$hi;
  acos_28long_20double_29(i64toi32_i32$2 | 0, $49 | 0, i64toi32_i32$0 | 0, $58 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $60 = i64toi32_i32$1;
  $60$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] | 0;
  $201 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $201;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $60$hi;
  HEAP32[i64toi32_i32$0 >> 2] = $60;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = i64toi32_i32$2 + 128 | 0;
  return;
 }
 
 function Point3__mag_28_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$1 = 0, $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0.0, $8 = 0.0, $11 = 0.0, $17 = 0, $17$hi = 0, $18 = 0, $18$hi = 0, $19 = 0, $19$hi = 0, $73 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  $6 = +HEAPF64[$5 >> 3];
  $8 = +HEAPF64[($5 + 8 | 0) >> 3];
  $11 = +HEAPF64[($5 + 16 | 0) >> 3];
  __extenddftf2($4 | 0, +Math_sqrt($6 * $6 + $8 * $8 + $11 * $11));
  i64toi32_i32$2 = $4 + 8 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $17 = i64toi32_i32$0;
  $17$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[$4 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  $18 = i64toi32_i32$1;
  $18$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $17$hi;
  i64toi32_i32$1 = $4;
  HEAP32[(i64toi32_i32$1 + 24 | 0) >> 2] = $17;
  HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $18$hi;
  HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = $18;
  HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
  $19 = i64toi32_i32$0;
  $19$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  $73 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $73;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $19$hi;
  HEAP32[i64toi32_i32$1 >> 2] = $19;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $4 + 48 | 0;
  return;
 }
 
 function Point3__rotate_28Point3_20const__2c_20long_20double_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, i64toi32_i32$4 = 0, i64toi32_i32$6 = 0, i64toi32_i32$5 = 0, i64toi32_i32$7 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $11 = 0, $33$hi = 0, $33 = 0, i64toi32_i32$3 = 0, $6 = 0, $42$hi = 0, $62$hi = 0, $63$hi = 0, $148$hi = 0, $151$hi = 0, $7 = 0, $42 = 0, $62 = 0, $63 = 0, $148 = 0, $151 = 0, $15$hi = 0, $16$hi = 0, $23$hi = 0, $24$hi = 0, $31$hi = 0, $32$hi = 0, $38 = 0, $40$hi = 0, $41$hi = 0, $48$hi = 0, $60$hi = 0, $61$hi = 0, $69$hi = 0, $70$hi = 0, $77$hi = 0, $84$hi = 0, $85$hi = 0, $92$hi = 0, $99$hi = 0, $100$hi = 0, $101 = 0, $103$hi = 0, $110$hi = 0, $114$hi = 0, $115$hi = 0, $124$hi = 0, $125$hi = 0, $132$hi = 0, $133$hi = 0, $140$hi = 0, $141$hi = 0, $146$hi = 0, $147$hi = 0, $149$hi = 0, $150$hi = 0, $157$hi = 0, $158$hi = 0, $165$hi = 0, $172$hi = 0, $173$hi = 0, $180$hi = 0, $187$hi = 0, $188$hi = 0, $189 = 0, $191$hi = 0, $198$hi = 0, $202$hi = 0, $203$hi = 0, $15 = 0, $16 = 0, $23 = 0, $24 = 0, $31 = 0, $311 = 0, $40 = 0, $129 = 0, $48 = 0, $351$hi = 0, $130 = 0, $52 = 0, $52$hi = 0, $358 = 0, $60 = 0, $61 = 0, $69 = 0, $70 = 0, $77 = 0, $421$hi = 0, $131 = 0, $84 = 0, $85 = 0, $92 = 0, $456$hi = 0, $134 = 0, $99 = 0, $100 = 0, $103 = 0, $483$hi = 0, $135 = 0, $110 = 0, $501$hi = 0, $136 = 0, $114 = 0, $517 = 0, $124 = 0, $125 = 0, $132 = 0, $133 = 0, $140 = 0, $579 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $165 = 0, $641$hi = 0, $137 = 0, $172 = 0, $173 = 0, $180 = 0, $676$hi = 0, $138 = 0, $187 = 0, $188 = 0, $191 = 0, $703$hi = 0, $139 = 0, $198 = 0, $721$hi = 0, $141 = 0, $202 = 0, $741 = 0;
  $5 = __stack_pointer - 608 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 604 | 0) >> 2] = $0;
  HEAP32[($5 + 600 | 0) >> 2] = $1;
  HEAP32[($5 + 596 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 604 | 0) >> 2] | 0;
  $7 = HEAP32[($5 + 600 | 0) >> 2] | 0;
  __extenddftf2($5 + 288 | 0 | 0, +(+HEAPF64[$7 >> 3]));
  $11 = 8;
  i64toi32_i32$2 = ($5 + 288 | 0) + $11 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $15 = i64toi32_i32$0;
  $15$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 288 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 292 | 0) >> 2] | 0;
  $16 = i64toi32_i32$1;
  $16$hi = i64toi32_i32$0;
  __extenddftf2($5 + 320 | 0 | 0, +(+HEAPF64[($7 + 8 | 0) >> 3]));
  i64toi32_i32$2 = ($5 + 320 | 0) + $11 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $23 = i64toi32_i32$0;
  $23$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 320 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 324 | 0) >> 2] | 0;
  $24 = i64toi32_i32$1;
  $24$hi = i64toi32_i32$0;
  __extenddftf2($5 + 304 | 0 | 0, +(+HEAPF64[($7 + 16 | 0) >> 3]));
  i64toi32_i32$2 = ($5 + 304 | 0) + $11 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $31 = i64toi32_i32$0;
  $31$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 304 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 308 | 0) >> 2] | 0;
  $32$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $33 = 0;
  $33$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $16$hi;
  i64toi32_i32$0 = $15$hi;
  i64toi32_i32$0 = $24$hi;
  i64toi32_i32$0 = $23$hi;
  i64toi32_i32$0 = $32$hi;
  $311 = i64toi32_i32$1;
  i64toi32_i32$0 = $31$hi;
  i64toi32_i32$0 = $33$hi;
  i64toi32_i32$0 = $16$hi;
  i64toi32_i32$1 = $15$hi;
  i64toi32_i32$2 = $24$hi;
  i64toi32_i32$3 = $23$hi;
  i64toi32_i32$4 = $32$hi;
  i64toi32_i32$5 = $31$hi;
  i64toi32_i32$6 = $33$hi;
  i64toi32_i32$7 = i64toi32_i32$6;
  Quaternion__Quaternion_28long_20double_2c_20long_20double_2c_20long_20double_2c_20long_20double_29($5 + 544 | 0 | 0, $16 | 0, i64toi32_i32$0 | 0, $15 | 0, i64toi32_i32$1 | 0, $24 | 0, i64toi32_i32$2 | 0, $23 | 0, i64toi32_i32$3 | 0, $311 | 0, i64toi32_i32$4 | 0, $31 | 0, i64toi32_i32$5 | 0, $33 | 0, i64toi32_i32$6 | 0, $33 | 0, i64toi32_i32$6 | 0) | 0;
  Quaternion__unit_28_29($5 + 544 | 0 | 0);
  $38 = HEAP32[($5 + 596 | 0) >> 2] | 0;
  i64toi32_i32$5 = $38 + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$5 >> 2] | 0;
  i64toi32_i32$6 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
  $40 = i64toi32_i32$7;
  $40$hi = i64toi32_i32$6;
  i64toi32_i32$5 = $38;
  i64toi32_i32$6 = HEAP32[i64toi32_i32$5 >> 2] | 0;
  i64toi32_i32$7 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
  $41$hi = i64toi32_i32$7;
  i64toi32_i32$7 = 1073741824;
  $42 = 0;
  $42$hi = i64toi32_i32$7;
  i64toi32_i32$7 = $41$hi;
  i64toi32_i32$7 = $40$hi;
  i64toi32_i32$7 = $33$hi;
  i64toi32_i32$7 = $42$hi;
  i64toi32_i32$7 = $41$hi;
  $129 = i64toi32_i32$6;
  i64toi32_i32$6 = $40$hi;
  i64toi32_i32$5 = $33$hi;
  i64toi32_i32$4 = $42$hi;
  __divtf3($5 + 272 | 0 | 0, $129 | 0, i64toi32_i32$7 | 0, $40 | 0, i64toi32_i32$6 | 0, $33 | 0, i64toi32_i32$5 | 0, $42 | 0, i64toi32_i32$4 | 0);
  i64toi32_i32$6 = ($5 + 272 | 0) + $11 | 0;
  i64toi32_i32$4 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$5 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $48 = i64toi32_i32$4;
  $48$hi = i64toi32_i32$5;
  i64toi32_i32$6 = $5;
  i64toi32_i32$5 = HEAP32[($5 + 272 | 0) >> 2] | 0;
  i64toi32_i32$4 = HEAP32[($5 + 276 | 0) >> 2] | 0;
  $351$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $48$hi;
  i64toi32_i32$4 = $351$hi;
  $130 = i64toi32_i32$5;
  i64toi32_i32$5 = $48$hi;
  sin_28long_20double_29($5 + 352 | 0 | 0, $130 | 0, i64toi32_i32$4 | 0, $48 | 0, i64toi32_i32$5 | 0);
  i64toi32_i32$6 = $5;
  i64toi32_i32$5 = HEAP32[($5 + 352 | 0) >> 2] | 0;
  i64toi32_i32$4 = HEAP32[($5 + 356 | 0) >> 2] | 0;
  $52 = i64toi32_i32$5;
  $52$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 360 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 364 | 0) >> 2] | 0;
  $358 = i64toi32_i32$4;
  i64toi32_i32$4 = $5;
  HEAP32[($5 + 536 | 0) >> 2] = $358;
  HEAP32[($5 + 540 | 0) >> 2] = i64toi32_i32$5;
  i64toi32_i32$5 = $52$hi;
  i64toi32_i32$4 = $5;
  HEAP32[($5 + 528 | 0) >> 2] = $52;
  HEAP32[($5 + 532 | 0) >> 2] = i64toi32_i32$5;
  __extenddftf2($5 + 160 | 0 | 0, +(+HEAPF64[($5 + 544 | 0) >> 3]));
  i64toi32_i32$6 = ($5 + 160 | 0) + $11 | 0;
  i64toi32_i32$5 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $60 = i64toi32_i32$5;
  $60$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 160 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 164 | 0) >> 2] | 0;
  $61 = i64toi32_i32$4;
  $61$hi = i64toi32_i32$5;
  i64toi32_i32$6 = $5;
  i64toi32_i32$5 = HEAP32[($5 + 536 | 0) >> 2] | 0;
  i64toi32_i32$4 = HEAP32[($5 + 540 | 0) >> 2] | 0;
  $62 = i64toi32_i32$5;
  $62$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 528 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 532 | 0) >> 2] | 0;
  $63 = i64toi32_i32$4;
  $63$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $61$hi;
  i64toi32_i32$5 = $60$hi;
  i64toi32_i32$5 = $63$hi;
  i64toi32_i32$5 = $62$hi;
  i64toi32_i32$5 = $61$hi;
  i64toi32_i32$4 = $60$hi;
  i64toi32_i32$6 = $63$hi;
  i64toi32_i32$7 = $62$hi;
  __multf3($5 + 176 | 0 | 0, $61 | 0, i64toi32_i32$5 | 0, $60 | 0, i64toi32_i32$4 | 0, $63 | 0, i64toi32_i32$6 | 0, $62 | 0, i64toi32_i32$7 | 0);
  i64toi32_i32$4 = ($5 + 176 | 0) + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$4 >> 2] | 0;
  i64toi32_i32$6 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
  $69 = i64toi32_i32$7;
  $69$hi = i64toi32_i32$6;
  i64toi32_i32$4 = $5;
  i64toi32_i32$6 = HEAP32[($5 + 176 | 0) >> 2] | 0;
  i64toi32_i32$7 = HEAP32[($5 + 180 | 0) >> 2] | 0;
  $70 = i64toi32_i32$6;
  $70$hi = i64toi32_i32$7;
  __extenddftf2($5 + 192 | 0 | 0, +(+HEAPF64[($5 + 552 | 0) >> 3]));
  i64toi32_i32$4 = ($5 + 192 | 0) + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$4 >> 2] | 0;
  i64toi32_i32$6 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
  $77 = i64toi32_i32$7;
  $77$hi = i64toi32_i32$6;
  i64toi32_i32$4 = $5;
  i64toi32_i32$6 = HEAP32[($5 + 192 | 0) >> 2] | 0;
  i64toi32_i32$7 = HEAP32[($5 + 196 | 0) >> 2] | 0;
  $421$hi = i64toi32_i32$7;
  i64toi32_i32$7 = $77$hi;
  i64toi32_i32$7 = $63$hi;
  i64toi32_i32$7 = $62$hi;
  i64toi32_i32$7 = $421$hi;
  $131 = i64toi32_i32$6;
  i64toi32_i32$6 = $77$hi;
  i64toi32_i32$4 = $63$hi;
  i64toi32_i32$5 = $62$hi;
  __multf3($5 + 208 | 0 | 0, $131 | 0, i64toi32_i32$7 | 0, $77 | 0, i64toi32_i32$6 | 0, $63 | 0, i64toi32_i32$4 | 0, $62 | 0, i64toi32_i32$5 | 0);
  i64toi32_i32$6 = ($5 + 208 | 0) + $11 | 0;
  i64toi32_i32$5 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $84 = i64toi32_i32$5;
  $84$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 208 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 212 | 0) >> 2] | 0;
  $85 = i64toi32_i32$4;
  $85$hi = i64toi32_i32$5;
  __extenddftf2($5 + 224 | 0 | 0, +(+HEAPF64[($5 + 560 | 0) >> 3]));
  i64toi32_i32$6 = ($5 + 224 | 0) + $11 | 0;
  i64toi32_i32$5 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $92 = i64toi32_i32$5;
  $92$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 224 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 228 | 0) >> 2] | 0;
  $456$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $92$hi;
  i64toi32_i32$5 = $63$hi;
  i64toi32_i32$5 = $62$hi;
  i64toi32_i32$5 = $456$hi;
  $134 = i64toi32_i32$4;
  i64toi32_i32$4 = $92$hi;
  i64toi32_i32$6 = $63$hi;
  i64toi32_i32$7 = $62$hi;
  __multf3($5 + 240 | 0 | 0, $134 | 0, i64toi32_i32$5 | 0, $92 | 0, i64toi32_i32$4 | 0, $63 | 0, i64toi32_i32$6 | 0, $62 | 0, i64toi32_i32$7 | 0);
  i64toi32_i32$4 = ($5 + 240 | 0) + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$4 >> 2] | 0;
  i64toi32_i32$6 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
  $99 = i64toi32_i32$7;
  $99$hi = i64toi32_i32$6;
  i64toi32_i32$4 = $5;
  i64toi32_i32$6 = HEAP32[($5 + 240 | 0) >> 2] | 0;
  i64toi32_i32$7 = HEAP32[($5 + 244 | 0) >> 2] | 0;
  $100 = i64toi32_i32$6;
  $100$hi = i64toi32_i32$7;
  $101 = HEAP32[($5 + 596 | 0) >> 2] | 0;
  i64toi32_i32$4 = $101 + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$4 >> 2] | 0;
  i64toi32_i32$6 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
  $103 = i64toi32_i32$7;
  $103$hi = i64toi32_i32$6;
  i64toi32_i32$4 = $101;
  i64toi32_i32$6 = HEAP32[i64toi32_i32$4 >> 2] | 0;
  i64toi32_i32$7 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
  $483$hi = i64toi32_i32$7;
  i64toi32_i32$7 = $103$hi;
  i64toi32_i32$7 = $33$hi;
  i64toi32_i32$7 = $42$hi;
  i64toi32_i32$7 = $483$hi;
  $135 = i64toi32_i32$6;
  i64toi32_i32$6 = $103$hi;
  i64toi32_i32$4 = $33$hi;
  i64toi32_i32$5 = $42$hi;
  __divtf3($5 + 256 | 0 | 0, $135 | 0, i64toi32_i32$7 | 0, $103 | 0, i64toi32_i32$6 | 0, $33 | 0, i64toi32_i32$4 | 0, $42 | 0, i64toi32_i32$5 | 0);
  i64toi32_i32$6 = ($5 + 256 | 0) + $11 | 0;
  i64toi32_i32$5 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $110 = i64toi32_i32$5;
  $110$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 256 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 260 | 0) >> 2] | 0;
  $501$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $110$hi;
  i64toi32_i32$5 = $501$hi;
  $136 = i64toi32_i32$4;
  i64toi32_i32$4 = $110$hi;
  cos_28long_20double_29($5 + 336 | 0 | 0, $136 | 0, i64toi32_i32$5 | 0, $110 | 0, i64toi32_i32$4 | 0);
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 344 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 348 | 0) >> 2] | 0;
  $114 = i64toi32_i32$4;
  $114$hi = i64toi32_i32$5;
  i64toi32_i32$6 = $5;
  i64toi32_i32$5 = HEAP32[($5 + 336 | 0) >> 2] | 0;
  i64toi32_i32$4 = HEAP32[($5 + 340 | 0) >> 2] | 0;
  $115$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $70$hi;
  i64toi32_i32$4 = $69$hi;
  i64toi32_i32$4 = $85$hi;
  i64toi32_i32$4 = $84$hi;
  i64toi32_i32$4 = $100$hi;
  i64toi32_i32$4 = $99$hi;
  i64toi32_i32$4 = $115$hi;
  $517 = i64toi32_i32$5;
  i64toi32_i32$4 = $114$hi;
  i64toi32_i32$4 = $70$hi;
  i64toi32_i32$5 = $69$hi;
  i64toi32_i32$6 = $85$hi;
  i64toi32_i32$7 = $84$hi;
  i64toi32_i32$3 = $100$hi;
  i64toi32_i32$2 = $99$hi;
  i64toi32_i32$1 = $115$hi;
  i64toi32_i32$0 = $114$hi;
  Quaternion__Quaternion_28long_20double_2c_20long_20double_2c_20long_20double_2c_20long_20double_29($5 + 480 | 0 | 0, $70 | 0, i64toi32_i32$4 | 0, $69 | 0, i64toi32_i32$5 | 0, $85 | 0, i64toi32_i32$6 | 0, $84 | 0, i64toi32_i32$7 | 0, $100 | 0, i64toi32_i32$3 | 0, $99 | 0, i64toi32_i32$2 | 0, $517 | 0, i64toi32_i32$1 | 0, $114 | 0, i64toi32_i32$0 | 0) | 0;
  __extenddftf2($5 + 112 | 0 | 0, +(+HEAPF64[$6 >> 3]));
  i64toi32_i32$2 = ($5 + 112 | 0) + $11 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $124 = i64toi32_i32$0;
  $124$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 112 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 116 | 0) >> 2] | 0;
  $125 = i64toi32_i32$1;
  $125$hi = i64toi32_i32$0;
  __extenddftf2($5 + 128 | 0 | 0, +(+HEAPF64[($6 + 8 | 0) >> 3]));
  i64toi32_i32$2 = ($5 + 128 | 0) + $11 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $132 = i64toi32_i32$0;
  $132$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 128 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 132 | 0) >> 2] | 0;
  $133 = i64toi32_i32$1;
  $133$hi = i64toi32_i32$0;
  __extenddftf2($5 + 144 | 0 | 0, +(+HEAPF64[($6 + 16 | 0) >> 3]));
  i64toi32_i32$2 = ($5 + 144 | 0) + $11 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $140 = i64toi32_i32$0;
  $140$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 144 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 148 | 0) >> 2] | 0;
  $141$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $125$hi;
  i64toi32_i32$0 = $124$hi;
  i64toi32_i32$0 = $133$hi;
  i64toi32_i32$0 = $132$hi;
  i64toi32_i32$0 = $141$hi;
  $579 = i64toi32_i32$1;
  i64toi32_i32$0 = $140$hi;
  i64toi32_i32$0 = $33$hi;
  i64toi32_i32$0 = $125$hi;
  i64toi32_i32$1 = $124$hi;
  i64toi32_i32$2 = $133$hi;
  i64toi32_i32$3 = $132$hi;
  i64toi32_i32$7 = $141$hi;
  i64toi32_i32$6 = $140$hi;
  i64toi32_i32$5 = $33$hi;
  i64toi32_i32$4 = i64toi32_i32$5;
  Quaternion__Quaternion_28long_20double_2c_20long_20double_2c_20long_20double_2c_20long_20double_29($5 + 432 | 0 | 0, $125 | 0, i64toi32_i32$0 | 0, $124 | 0, i64toi32_i32$1 | 0, $133 | 0, i64toi32_i32$2 | 0, $132 | 0, i64toi32_i32$3 | 0, $579 | 0, i64toi32_i32$7 | 0, $140 | 0, i64toi32_i32$6 | 0, $33 | 0, i64toi32_i32$4 | 0, $33 | 0, i64toi32_i32$4 | 0) | 0;
  __extenddftf2($5 | 0, +(+HEAPF64[($5 + 544 | 0) >> 3]));
  i64toi32_i32$6 = $5 + $11 | 0;
  i64toi32_i32$4 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$5 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $146 = i64toi32_i32$4;
  $146$hi = i64toi32_i32$5;
  i64toi32_i32$6 = $5;
  i64toi32_i32$5 = HEAP32[$5 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[($5 + 4 | 0) >> 2] | 0;
  $147 = i64toi32_i32$5;
  $147$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 528 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 532 | 0) >> 2] | 0;
  $148 = i64toi32_i32$4;
  $148$hi = i64toi32_i32$5;
  i64toi32_i32$6 = $5;
  i64toi32_i32$5 = HEAP32[($5 + 536 | 0) >> 2] | 0;
  i64toi32_i32$4 = HEAP32[($5 + 540 | 0) >> 2] | 0;
  $149$hi = i64toi32_i32$4;
  i64toi32_i32$4 = -2147483648;
  $150$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $149$hi;
  i64toi32_i32$4 = $150$hi;
  i64toi32_i32$4 = $149$hi;
  i64toi32_i32$6 = i64toi32_i32$5;
  i64toi32_i32$5 = $150$hi;
  i64toi32_i32$7 = 0;
  i64toi32_i32$5 = i64toi32_i32$4 ^ i64toi32_i32$5 | 0;
  $151 = i64toi32_i32$6 ^ i64toi32_i32$7 | 0;
  $151$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $147$hi;
  i64toi32_i32$5 = $146$hi;
  i64toi32_i32$5 = $148$hi;
  i64toi32_i32$5 = $151$hi;
  i64toi32_i32$5 = $147$hi;
  i64toi32_i32$6 = $146$hi;
  i64toi32_i32$4 = $148$hi;
  i64toi32_i32$7 = $151$hi;
  __multf3($5 + 16 | 0 | 0, $147 | 0, i64toi32_i32$5 | 0, $146 | 0, i64toi32_i32$6 | 0, $148 | 0, i64toi32_i32$4 | 0, $151 | 0, i64toi32_i32$7 | 0);
  i64toi32_i32$6 = ($5 + 16 | 0) + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $157 = i64toi32_i32$7;
  $157$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 16 | 0) >> 2] | 0;
  i64toi32_i32$7 = HEAP32[($5 + 20 | 0) >> 2] | 0;
  $158 = i64toi32_i32$4;
  $158$hi = i64toi32_i32$7;
  __extenddftf2($5 + 32 | 0 | 0, +(+HEAPF64[($5 + 552 | 0) >> 3]));
  i64toi32_i32$6 = ($5 + 32 | 0) + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $165 = i64toi32_i32$7;
  $165$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 32 | 0) >> 2] | 0;
  i64toi32_i32$7 = HEAP32[($5 + 36 | 0) >> 2] | 0;
  $641$hi = i64toi32_i32$7;
  i64toi32_i32$7 = $165$hi;
  i64toi32_i32$7 = $148$hi;
  i64toi32_i32$7 = $151$hi;
  i64toi32_i32$7 = $641$hi;
  $137 = i64toi32_i32$4;
  i64toi32_i32$4 = $165$hi;
  i64toi32_i32$6 = $148$hi;
  i64toi32_i32$5 = $151$hi;
  __multf3($5 + 48 | 0 | 0, $137 | 0, i64toi32_i32$7 | 0, $165 | 0, i64toi32_i32$4 | 0, $148 | 0, i64toi32_i32$6 | 0, $151 | 0, i64toi32_i32$5 | 0);
  i64toi32_i32$4 = ($5 + 48 | 0) + $11 | 0;
  i64toi32_i32$5 = HEAP32[i64toi32_i32$4 >> 2] | 0;
  i64toi32_i32$6 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
  $172 = i64toi32_i32$5;
  $172$hi = i64toi32_i32$6;
  i64toi32_i32$4 = $5;
  i64toi32_i32$6 = HEAP32[($5 + 48 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  $173 = i64toi32_i32$6;
  $173$hi = i64toi32_i32$5;
  __extenddftf2($5 + 64 | 0 | 0, +(+HEAPF64[($5 + 560 | 0) >> 3]));
  i64toi32_i32$4 = ($5 + 64 | 0) + $11 | 0;
  i64toi32_i32$5 = HEAP32[i64toi32_i32$4 >> 2] | 0;
  i64toi32_i32$6 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
  $180 = i64toi32_i32$5;
  $180$hi = i64toi32_i32$6;
  i64toi32_i32$4 = $5;
  i64toi32_i32$6 = HEAP32[($5 + 64 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 68 | 0) >> 2] | 0;
  $676$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $180$hi;
  i64toi32_i32$5 = $148$hi;
  i64toi32_i32$5 = $151$hi;
  i64toi32_i32$5 = $676$hi;
  $138 = i64toi32_i32$6;
  i64toi32_i32$6 = $180$hi;
  i64toi32_i32$4 = $148$hi;
  i64toi32_i32$7 = $151$hi;
  __multf3($5 + 80 | 0 | 0, $138 | 0, i64toi32_i32$5 | 0, $180 | 0, i64toi32_i32$6 | 0, $148 | 0, i64toi32_i32$4 | 0, $151 | 0, i64toi32_i32$7 | 0);
  i64toi32_i32$6 = ($5 + 80 | 0) + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $187 = i64toi32_i32$7;
  $187$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $5;
  i64toi32_i32$4 = HEAP32[($5 + 80 | 0) >> 2] | 0;
  i64toi32_i32$7 = HEAP32[($5 + 84 | 0) >> 2] | 0;
  $188 = i64toi32_i32$4;
  $188$hi = i64toi32_i32$7;
  $189 = HEAP32[($5 + 596 | 0) >> 2] | 0;
  i64toi32_i32$6 = $189 + $11 | 0;
  i64toi32_i32$7 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$4 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $191 = i64toi32_i32$7;
  $191$hi = i64toi32_i32$4;
  i64toi32_i32$6 = $189;
  i64toi32_i32$4 = HEAP32[i64toi32_i32$6 >> 2] | 0;
  i64toi32_i32$7 = HEAP32[(i64toi32_i32$6 + 4 | 0) >> 2] | 0;
  $703$hi = i64toi32_i32$7;
  i64toi32_i32$7 = $191$hi;
  i64toi32_i32$7 = $33$hi;
  i64toi32_i32$7 = $42$hi;
  i64toi32_i32$7 = $703$hi;
  $139 = i64toi32_i32$4;
  i64toi32_i32$4 = $191$hi;
  i64toi32_i32$6 = $33$hi;
  i64toi32_i32$5 = $42$hi;
  __divtf3($5 + 96 | 0 | 0, $139 | 0, i64toi32_i32$7 | 0, $191 | 0, i64toi32_i32$4 | 0, $33 | 0, i64toi32_i32$6 | 0, $42 | 0, i64toi32_i32$5 | 0);
  i64toi32_i32$4 = ($5 + 96 | 0) + $11 | 0;
  i64toi32_i32$5 = HEAP32[i64toi32_i32$4 >> 2] | 0;
  i64toi32_i32$6 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
  $198 = i64toi32_i32$5;
  $198$hi = i64toi32_i32$6;
  i64toi32_i32$4 = $5;
  i64toi32_i32$6 = HEAP32[($5 + 96 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 100 | 0) >> 2] | 0;
  $721$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $198$hi;
  i64toi32_i32$5 = $721$hi;
  $141 = i64toi32_i32$6;
  i64toi32_i32$6 = $198$hi;
  cos_28long_20double_29($5 + 368 | 0 | 0, $141 | 0, i64toi32_i32$5 | 0, $198 | 0, i64toi32_i32$6 | 0);
  i64toi32_i32$4 = $5;
  i64toi32_i32$6 = HEAP32[($5 + 376 | 0) >> 2] | 0;
  i64toi32_i32$5 = HEAP32[($5 + 380 | 0) >> 2] | 0;
  $202 = i64toi32_i32$6;
  $202$hi = i64toi32_i32$5;
  i64toi32_i32$4 = $5;
  i64toi32_i32$5 = HEAP32[($5 + 368 | 0) >> 2] | 0;
  i64toi32_i32$6 = HEAP32[($5 + 372 | 0) >> 2] | 0;
  $203$hi = i64toi32_i32$6;
  i64toi32_i32$6 = $158$hi;
  i64toi32_i32$6 = $157$hi;
  i64toi32_i32$6 = $173$hi;
  i64toi32_i32$6 = $172$hi;
  i64toi32_i32$6 = $188$hi;
  i64toi32_i32$6 = $187$hi;
  i64toi32_i32$6 = $203$hi;
  $741 = i64toi32_i32$5;
  i64toi32_i32$6 = $202$hi;
  i64toi32_i32$6 = $158$hi;
  i64toi32_i32$5 = $157$hi;
  i64toi32_i32$4 = $173$hi;
  i64toi32_i32$7 = $172$hi;
  i64toi32_i32$3 = $188$hi;
  i64toi32_i32$2 = $187$hi;
  i64toi32_i32$1 = $203$hi;
  i64toi32_i32$0 = $202$hi;
  Quaternion__Quaternion_28long_20double_2c_20long_20double_2c_20long_20double_2c_20long_20double_29($5 + 384 | 0 | 0, $158 | 0, i64toi32_i32$6 | 0, $157 | 0, i64toi32_i32$5 | 0, $173 | 0, i64toi32_i32$4 | 0, $172 | 0, i64toi32_i32$7 | 0, $188 | 0, i64toi32_i32$3 | 0, $187 | 0, i64toi32_i32$2 | 0, $741 | 0, i64toi32_i32$1 | 0, $202 | 0, i64toi32_i32$0 | 0) | 0;
  Quaternion__multiply_28Quaternion_20const__29($5 + 480 | 0 | 0, $5 + 432 | 0 | 0);
  Quaternion__multiply_28Quaternion_20const__29($5 + 480 | 0 | 0, $5 + 432 | 0 | 0);
  HEAPF64[$6 >> 3] = +HEAPF64[($5 + 480 | 0) >> 3];
  HEAPF64[($6 + 8 | 0) >> 3] = +HEAPF64[($5 + 488 | 0) >> 3];
  HEAPF64[($6 + 16 | 0) >> 3] = +HEAPF64[($5 + 496 | 0) >> 3];
  Quaternion___Quaternion_28_29($5 + 384 | 0 | 0) | 0;
  Quaternion___Quaternion_28_29($5 + 432 | 0 | 0) | 0;
  Quaternion___Quaternion_28_29($5 + 480 | 0 | 0) | 0;
  Quaternion___Quaternion_28_29($5 + 544 | 0 | 0) | 0;
  __stack_pointer = $5 + 608 | 0;
  return;
 }
 
 function Quaternion___Quaternion_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Point3___Point3_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function Point3__subtract_28Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAPF64[$5 >> 3] = +HEAPF64[$5 >> 3] - +HEAPF64[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 3];
  HEAPF64[($5 + 8 | 0) >> 3] = +HEAPF64[($5 + 8 | 0) >> 3] - +HEAPF64[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0) >> 3];
  HEAPF64[($5 + 16 | 0) >> 3] = +HEAPF64[($5 + 16 | 0) >> 3] - +HEAPF64[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 16 | 0) >> 3];
  return;
 }
 
 function Point3__unit_28_29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $3 = 0, $4 = 0, $27 = 0, $9$hi = 0, $10$hi = 0, $11 = 0, $11$hi = 0, $22$hi = 0, $23$hi = 0, $31$hi = 0, $38$hi = 0, $41$hi = 0, $42$hi = 0, $49$hi = 0, $56$hi = 0, $59$hi = 0, $60$hi = 0, $63$hi = 0, $70$hi = 0, $7 = 0, $7$hi = 0, $94 = 0, $9 = 0, $46 = 0, $22 = 0, $23 = 0, $31 = 0, $150$hi = 0, $47 = 0, $38 = 0, $164$hi = 0, $48 = 0, $41 = 0, $42 = 0, $49 = 0, $194$hi = 0, $50 = 0, $56 = 0, $208$hi = 0, $51 = 0, $59 = 0, $60 = 0, $63 = 0, $232$hi = 0, $52 = 0, $70 = 0, $246$hi = 0, $53 = 0;
  $3 = __stack_pointer - 144 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 140 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 140 | 0) >> 2] | 0;
  Point3__mag_28_29_20const($3 + 96 | 0 | 0, $4 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $7 = i64toi32_i32$0;
  $7$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 104 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 108 | 0) >> 2] | 0;
  $94 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 120 | 0) >> 2] = $94;
  HEAP32[(i64toi32_i32$2 + 124 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$2 + 112 | 0) >> 2] = $7;
  HEAP32[(i64toi32_i32$2 + 116 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 120 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 124 | 0) >> 2] | 0;
  $9 = i64toi32_i32$0;
  $9$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 112 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 116 | 0) >> 2] | 0;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $11 = 0;
  $11$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $10$hi;
  i64toi32_i32$0 = $9$hi;
  i64toi32_i32$0 = $11$hi;
  i64toi32_i32$0 = $10$hi;
  $46 = i64toi32_i32$1;
  i64toi32_i32$1 = $9$hi;
  i64toi32_i32$2 = $11$hi;
  i64toi32_i32$3 = i64toi32_i32$2;
  label$1 : {
   label$2 : {
    if (!(!(__letf2($46 | 0, i64toi32_i32$0 | 0, $9 | 0, i64toi32_i32$1 | 0, $11 | 0, i64toi32_i32$2 | 0, $11 | 0, i64toi32_i32$2 | 0) | 0) & 1 | 0)) {
     break label$2
    }
    HEAPF64[$4 >> 3] = +(0 | 0);
    HEAPF64[($4 + 8 | 0) >> 3] = +(0 | 0);
    HEAPF64[($4 + 16 | 0) >> 3] = +(0 | 0);
    break label$1;
   }
   i64toi32_i32$1 = $3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 120 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] | 0;
   $22 = i64toi32_i32$3;
   $22$hi = i64toi32_i32$2;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
   $23 = i64toi32_i32$2;
   $23$hi = i64toi32_i32$3;
   __extenddftf2(i64toi32_i32$1 + 64 | 0 | 0, +(+HEAPF64[$4 >> 3]));
   $27 = 8;
   i64toi32_i32$1 = (i64toi32_i32$1 + 64 | 0) + $27 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $31 = i64toi32_i32$3;
   $31$hi = i64toi32_i32$2;
   i64toi32_i32$1 = $3;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
   $150$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $31$hi;
   i64toi32_i32$3 = $23$hi;
   i64toi32_i32$3 = $22$hi;
   i64toi32_i32$3 = $150$hi;
   $47 = i64toi32_i32$2;
   i64toi32_i32$2 = $31$hi;
   i64toi32_i32$1 = $23$hi;
   i64toi32_i32$0 = $22$hi;
   __divtf3($3 + 80 | 0 | 0, $47 | 0, i64toi32_i32$3 | 0, $31 | 0, i64toi32_i32$2 | 0, $23 | 0, i64toi32_i32$1 | 0, $22 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$2 = ($3 + 80 | 0) + $27 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $38 = i64toi32_i32$0;
   $38$hi = i64toi32_i32$1;
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
   $164$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $38$hi;
   i64toi32_i32$0 = $164$hi;
   $48 = i64toi32_i32$1;
   i64toi32_i32$1 = $38$hi;
   HEAPF64[$4 >> 3] = +__trunctfdf2($48 | 0, i64toi32_i32$0 | 0, $38 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 120 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 124 | 0) >> 2] | 0;
   $41 = i64toi32_i32$1;
   $41$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 112 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 116 | 0) >> 2] | 0;
   $42 = i64toi32_i32$0;
   $42$hi = i64toi32_i32$1;
   __extenddftf2(i64toi32_i32$2 + 32 | 0 | 0, +(+HEAPF64[($4 + 8 | 0) >> 3]));
   i64toi32_i32$2 = (i64toi32_i32$2 + 32 | 0) + $27 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $49 = i64toi32_i32$1;
   $49$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
   $194$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $49$hi;
   i64toi32_i32$1 = $42$hi;
   i64toi32_i32$1 = $41$hi;
   i64toi32_i32$1 = $194$hi;
   $50 = i64toi32_i32$0;
   i64toi32_i32$0 = $49$hi;
   i64toi32_i32$2 = $42$hi;
   i64toi32_i32$3 = $41$hi;
   __divtf3($3 + 48 | 0 | 0, $50 | 0, i64toi32_i32$1 | 0, $49 | 0, i64toi32_i32$0 | 0, $42 | 0, i64toi32_i32$2 | 0, $41 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$0 = ($3 + 48 | 0) + $27 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $56 = i64toi32_i32$3;
   $56$hi = i64toi32_i32$2;
   i64toi32_i32$0 = $3;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 48 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 52 | 0) >> 2] | 0;
   $208$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $56$hi;
   i64toi32_i32$3 = $208$hi;
   $51 = i64toi32_i32$2;
   i64toi32_i32$2 = $56$hi;
   HEAPF64[($4 + 8 | 0) >> 3] = +__trunctfdf2($51 | 0, i64toi32_i32$3 | 0, $56 | 0, i64toi32_i32$2 | 0);
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 120 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 124 | 0) >> 2] | 0;
   $59 = i64toi32_i32$2;
   $59$hi = i64toi32_i32$3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 112 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 116 | 0) >> 2] | 0;
   $60 = i64toi32_i32$3;
   $60$hi = i64toi32_i32$2;
   __extenddftf2(i64toi32_i32$0 | 0, +(+HEAPF64[($4 + 16 | 0) >> 3]));
   i64toi32_i32$0 = i64toi32_i32$0 + $27 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $63 = i64toi32_i32$2;
   $63$hi = i64toi32_i32$3;
   i64toi32_i32$0 = $3;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $232$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $63$hi;
   i64toi32_i32$2 = $60$hi;
   i64toi32_i32$2 = $59$hi;
   i64toi32_i32$2 = $232$hi;
   $52 = i64toi32_i32$3;
   i64toi32_i32$3 = $63$hi;
   i64toi32_i32$0 = $60$hi;
   i64toi32_i32$1 = $59$hi;
   __divtf3($3 + 16 | 0 | 0, $52 | 0, i64toi32_i32$2 | 0, $63 | 0, i64toi32_i32$3 | 0, $60 | 0, i64toi32_i32$0 | 0, $59 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$3 = ($3 + 16 | 0) + $27 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $70 = i64toi32_i32$1;
   $70$hi = i64toi32_i32$0;
   i64toi32_i32$3 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 16 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 20 | 0) >> 2] | 0;
   $246$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $70$hi;
   i64toi32_i32$1 = $246$hi;
   $53 = i64toi32_i32$0;
   i64toi32_i32$0 = $70$hi;
   HEAPF64[($4 + 16 | 0) >> 3] = +__trunctfdf2($53 | 0, i64toi32_i32$1 | 0, $70 | 0, i64toi32_i32$0 | 0);
  }
  __stack_pointer = $3 + 144 | 0;
  return;
 }
 
 function Point3__div_by_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0, $12 = 0, $7$hi = 0, $8$hi = 0, $16$hi = 0, $23$hi = 0, $26$hi = 0, $27$hi = 0, $34$hi = 0, $41$hi = 0, $44$hi = 0, $45$hi = 0, $48$hi = 0, $55$hi = 0, $7 = 0, $8 = 0, $16 = 0, $98$hi = 0, $42 = 0, $23 = 0, $112$hi = 0, $43 = 0, $26 = 0, $27 = 0, $34 = 0, $142$hi = 0, $46 = 0, $41 = 0, $156$hi = 0, $47 = 0, $44 = 0, $45 = 0, $48 = 0, $180$hi = 0, $49 = 0, $55 = 0, $194$hi = 0, $50 = 0;
  $5 = __stack_pointer - 128 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 124 | 0) >> 2] = $0;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$1 = $5;
  HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] = i64toi32_i32$0;
  $6 = HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] | 0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] | 0;
  $7 = i64toi32_i32$0;
  $7$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $8 = i64toi32_i32$1;
  $8$hi = i64toi32_i32$0;
  __extenddftf2(i64toi32_i32$2 + 80 | 0 | 0, +(+HEAPF64[$6 >> 3]));
  $12 = 8;
  i64toi32_i32$2 = (i64toi32_i32$2 + 80 | 0) + $12 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $16 = i64toi32_i32$0;
  $16$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
  $98$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $16$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $98$hi;
  $42 = i64toi32_i32$1;
  i64toi32_i32$1 = $16$hi;
  i64toi32_i32$2 = $8$hi;
  i64toi32_i32$3 = $7$hi;
  __divtf3($5 + 64 | 0 | 0, $42 | 0, i64toi32_i32$0 | 0, $16 | 0, i64toi32_i32$1 | 0, $8 | 0, i64toi32_i32$2 | 0, $7 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($5 + 64 | 0) + $12 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $23 = i64toi32_i32$3;
  $23$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
  $112$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $23$hi;
  i64toi32_i32$3 = $112$hi;
  $43 = i64toi32_i32$2;
  i64toi32_i32$2 = $23$hi;
  HEAPF64[$6 >> 3] = +__trunctfdf2($43 | 0, i64toi32_i32$3 | 0, $23 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] | 0;
  $26 = i64toi32_i32$2;
  $26$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
  $27 = i64toi32_i32$3;
  $27$hi = i64toi32_i32$2;
  __extenddftf2(i64toi32_i32$1 + 32 | 0 | 0, +(+HEAPF64[($6 + 8 | 0) >> 3]));
  i64toi32_i32$1 = (i64toi32_i32$1 + 32 | 0) + $12 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $34 = i64toi32_i32$2;
  $34$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $142$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $34$hi;
  i64toi32_i32$2 = $27$hi;
  i64toi32_i32$2 = $26$hi;
  i64toi32_i32$2 = $142$hi;
  $46 = i64toi32_i32$3;
  i64toi32_i32$3 = $34$hi;
  i64toi32_i32$1 = $27$hi;
  i64toi32_i32$0 = $26$hi;
  __divtf3($5 + 48 | 0 | 0, $46 | 0, i64toi32_i32$2 | 0, $34 | 0, i64toi32_i32$3 | 0, $27 | 0, i64toi32_i32$1 | 0, $26 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$3 = ($5 + 48 | 0) + $12 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $41 = i64toi32_i32$0;
  $41$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 52 | 0) >> 2] | 0;
  $156$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $41$hi;
  i64toi32_i32$0 = $156$hi;
  $47 = i64toi32_i32$1;
  i64toi32_i32$1 = $41$hi;
  HEAPF64[($6 + 8 | 0) >> 3] = +__trunctfdf2($47 | 0, i64toi32_i32$0 | 0, $41 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 104 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 108 | 0) >> 2] | 0;
  $44 = i64toi32_i32$1;
  $44$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 96 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 100 | 0) >> 2] | 0;
  $45 = i64toi32_i32$0;
  $45$hi = i64toi32_i32$1;
  __extenddftf2(i64toi32_i32$3 | 0, +(+HEAPF64[($6 + 16 | 0) >> 3]));
  i64toi32_i32$3 = i64toi32_i32$3 + $12 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $48 = i64toi32_i32$1;
  $48$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $180$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $48$hi;
  i64toi32_i32$1 = $45$hi;
  i64toi32_i32$1 = $44$hi;
  i64toi32_i32$1 = $180$hi;
  $49 = i64toi32_i32$0;
  i64toi32_i32$0 = $48$hi;
  i64toi32_i32$3 = $45$hi;
  i64toi32_i32$2 = $44$hi;
  __divtf3($5 + 16 | 0 | 0, $49 | 0, i64toi32_i32$1 | 0, $48 | 0, i64toi32_i32$0 | 0, $45 | 0, i64toi32_i32$3 | 0, $44 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$0 = ($5 + 16 | 0) + $12 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $55 = i64toi32_i32$2;
  $55$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] | 0;
  $194$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $55$hi;
  i64toi32_i32$2 = $194$hi;
  $50 = i64toi32_i32$3;
  i64toi32_i32$3 = $55$hi;
  HEAPF64[($6 + 16 | 0) >> 3] = +__trunctfdf2($50 | 0, i64toi32_i32$2 | 0, $55 | 0, i64toi32_i32$3 | 0);
  __stack_pointer = i64toi32_i32$0 + 128 | 0;
  return;
 }
 
 function Point3__distance_28Point3_20const__29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $6 = 0, $8 = 0, i64toi32_i32$2 = 0, $10 = 0.0, $14 = 0.0, $19 = 0.0, $27 = 0, $27$hi = 0, $28 = 0, $28$hi = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $1;
  HEAP32[($5 + 24 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  $8 = HEAP32[($5 + 24 | 0) >> 2] | 0;
  $10 = +HEAPF64[$6 >> 3] - +HEAPF64[$8 >> 3];
  $14 = +HEAPF64[($6 + 8 | 0) >> 3] - +HEAPF64[($8 + 8 | 0) >> 3];
  $19 = +HEAPF64[($6 + 16 | 0) >> 3] - +HEAPF64[($8 + 16 | 0) >> 3];
  __extenddftf2($5 + 8 | 0 | 0, +Math_sqrt($10 * $10 + $14 * $14 + $19 * $19));
  i64toi32_i32$2 = $5 + 16 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $27 = i64toi32_i32$0;
  $27$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  $28 = i64toi32_i32$1;
  $28$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $27$hi;
  i64toi32_i32$1 = $0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $27;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $28$hi;
  HEAP32[i64toi32_i32$1 >> 2] = $28;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function Point3__spheriphy_28_29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $3 = 0, i64toi32_i32$2 = 0, $4 = 0, $6$hi = 0, $6 = 0, $25$hi = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  Point3__unit_28_29($4 | 0);
  i64toi32_i32$2 = 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12536 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12540 | 0) >> 2] | 0;
  $6 = i64toi32_i32$0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12528 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12532 | 0) >> 2] | 0;
  $25$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = $25$hi;
  $9 = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  Point3__mult_by_28long_20double_29($4 | 0, $9 | 0, i64toi32_i32$0 | 0, $6 | 0, i64toi32_i32$1 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function Point3__spherify1D_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  HEAP32[($4 + 16 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___begin_28_29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($4 + 8 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___end_28_29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((bool_20std____2__operator___Point3___28std____2____wrap_iter_Point3___20const__2c_20std____2____wrap_iter_Point3___20const__29($4 + 16 | 0 | 0, $4 + 8 | 0 | 0) | 0) & 1 | 0)) {
     break label$1
    }
    HEAP32[($4 + 4 | 0) >> 2] = std____2____wrap_iter_Point3____operator__28_29_20const($4 + 16 | 0 | 0) | 0;
    Point3__spheriphy_28_29(HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
    std____2____wrap_iter_Point3____operator___28_29($4 + 16 | 0 | 0) | 0;
    continue label$2;
   };
  }
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20____29($0 | 0, $1 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___begin_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____make_iter_28Point3__29($4 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
  $7 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___end_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____make_iter_28Point3__29($4 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) | 0;
  $7 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function bool_20std____2__operator___Point3___28std____2____wrap_iter_Point3___20const__2c_20std____2____wrap_iter_Point3___20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $7 = bool_20std____2__operator___Point3__2c_20Point3___28std____2____wrap_iter_Point3___20const__2c_20std____2____wrap_iter_Point3___20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return ($7 ^ -1 | 0) & 1 | 0 | 0;
 }
 
 function std____2____wrap_iter_Point3____operator__28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_Point3____operator___28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 32 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____make_iter_28Point3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2____wrap_iter_Point3______wrap_iter_28Point3__29($4 + 8 | 0 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
  $9 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $9 | 0;
 }
 
 function bool_20std____2__operator___Point3__2c_20Point3___28std____2____wrap_iter_Point3___20const__2c_20std____2____wrap_iter_Point3___20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $6 = std____2____wrap_iter_Point3____base_28_29_20const(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0;
  $8 = std____2____wrap_iter_Point3____base_28_29_20const(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return ($6 | 0) == ($8 | 0) & 1 | 0 | 0;
 }
 
 function Point3__on_opposite_side_28Point3_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $21 = 0, $9 = 0, $12 = 0, $25 = 0, $28 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $9 = (std____2__enable_if_std__is_floating_point_double___value_2c_20bool___type_20signbit_double__28double_29(+(+HEAPF64[$5 >> 3])) | 0) & 1 | 0;
  $12 = std____2__enable_if_std__is_floating_point_double___value_2c_20bool___type_20signbit_double__28double_29(+(+HEAPF64[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 3])) | 0;
  $21 = 1;
  label$1 : {
   if (($9 | 0) != ($12 & 1 | 0 | 0) & 1 | 0) {
    break label$1
   }
   $25 = (std____2__enable_if_std__is_floating_point_double___value_2c_20bool___type_20signbit_double__28double_29(+(+HEAPF64[($5 + 8 | 0) >> 3])) | 0) & 1 | 0;
   $28 = std____2__enable_if_std__is_floating_point_double___value_2c_20bool___type_20signbit_double__28double_29(+(+HEAPF64[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0) >> 3])) | 0;
   $21 = 1;
   if (($25 | 0) != ($28 & 1 | 0 | 0) & 1 | 0) {
    break label$1
   }
   $21 = ((std____2__enable_if_std__is_floating_point_double___value_2c_20bool___type_20signbit_double__28double_29(+(+HEAPF64[($5 + 16 | 0) >> 3])) | 0) & 1 | 0 | 0) != ((std____2__enable_if_std__is_floating_point_double___value_2c_20bool___type_20signbit_double__28double_29(+(+HEAPF64[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 16 | 0) >> 3])) | 0) & 1 | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return $21 & 1 | 0 | 0;
 }
 
 function std____2__enable_if_std__is_floating_point_double___value_2c_20bool___type_20signbit_double__28double_29($0) {
  $0 = +$0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAPF64[($3 + 8 | 0) >> 3] = $0;
  $5 = bool_20__libcpp_signbit_double__28double_29(+(+HEAPF64[($3 + 8 | 0) >> 3])) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 & 1 | 0 | 0;
 }
 
 function bool_20__libcpp_signbit_double__28double_29($0) {
  $0 = +$0;
  var i64toi32_i32$1 = 0, i64toi32_i32$4 = 0, $3 = 0, i64toi32_i32$0 = 0, $5$hi = 0, $6$hi = 0, i64toi32_i32$3 = 0, $9 = 0, i64toi32_i32$2 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAPF64[($3 + 8 | 0) >> 3] = $0;
  i64toi32_i32$0 = __DOUBLE_BITS_28double_29(+(+HEAPF64[($3 + 8 | 0) >> 3])) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  $5$hi = i64toi32_i32$1;
  i64toi32_i32$1 = 0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$1 = $6$hi;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$3 = 63;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = 0;
   $9 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$0 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   $9 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
  }
  __stack_pointer = $3 + 16 | 0;
  return ($9 | 0) != (0 | 0) & 1 | 0 | 0;
 }
 
 function Point3__is_valid_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0, $6 = 0, $12 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $6 = std____2__enable_if__28std__is_arithmetic_double___value_29_20___20_28std__numeric_limits_double___has_infinity_29_2c_20bool___type_20isfinite_double__28double_29(+(+HEAPF64[$4 >> 3])) | 0;
  $10 = 0;
  label$1 : {
   if (!($6 & 1 | 0)) {
    break label$1
   }
   $12 = std____2__enable_if__28std__is_arithmetic_double___value_29_20___20_28std__numeric_limits_double___has_infinity_29_2c_20bool___type_20isfinite_double__28double_29(+(+HEAPF64[($4 + 8 | 0) >> 3])) | 0;
   $10 = 0;
   if (!($12 & 1 | 0)) {
    break label$1
   }
   $10 = std____2__enable_if__28std__is_arithmetic_double___value_29_20___20_28std__numeric_limits_double___has_infinity_29_2c_20bool___type_20isfinite_double__28double_29(+(+HEAPF64[($4 + 16 | 0) >> 3])) | 0;
  }
  __stack_pointer = $3 + 16 | 0;
  return $10 & 1 | 0 | 0;
 }
 
 function std____2__enable_if__28std__is_arithmetic_double___value_29_20___20_28std__numeric_limits_double___has_infinity_29_2c_20bool___type_20isfinite_double__28double_29($0) {
  $0 = +$0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAPF64[($3 + 8 | 0) >> 3] = $0;
  $5 = bool_20__libcpp_isfinite_double__28double_29(+(+HEAPF64[($3 + 8 | 0) >> 3])) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 & 1 | 0 | 0;
 }
 
 function bool_20__libcpp_isfinite_double__28double_29($0) {
  $0 = +$0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $8$hi = 0, $3 = 0, i64toi32_i32$3 = 0, $7$hi = 0, $5$hi = 0, $6$hi = 0, i64toi32_i32$2 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAPF64[($3 + 8 | 0) >> 3] = $0;
  i64toi32_i32$0 = __DOUBLE_BITS_28double_29(+(+HEAPF64[($3 + 8 | 0) >> 3])) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  $5$hi = i64toi32_i32$1;
  i64toi32_i32$1 = 2147483647;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$1 = $6$hi;
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$3 = -1;
  i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
  $7$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 2146435072;
  $8$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
  i64toi32_i32$2 = $8$hi;
  i64toi32_i32$3 = 0;
  __stack_pointer = $3 + 16 | 0;
  return (i64toi32_i32$0 >>> 0 < $8$hi >>> 0 | ((i64toi32_i32$0 | 0) == ($8$hi | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0) & 1 | 0 | 0;
 }
 
 function Point3__closest_point_2d_28std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, $5 = 0, i64toi32_i32$3 = 0, $75 = 0, $110 = 0, $74 = 0, $13 = 0, $13$hi = 0, $136 = 0, $8 = 0, $10$hi = 0, $11$hi = 0, $12$hi = 0, $63$hi = 0, $64$hi = 0, $65$hi = 0, $66$hi = 0, $77 = 0, $81 = 0, $85 = 0, $89 = 0, $93 = 0, $97 = 0, $112 = 0, $116 = 0, $120 = 0, $124 = 0, $128 = 0, $132 = 0, $6 = 0, $10 = 0, $66 = 0, $18 = 0, $18$hi = 0, $19 = 0, $19$hi = 0, $61 = 0, $61$hi = 0, $296 = 0, $63 = 0, $64 = 0, $65 = 0, $309 = 0, $72 = 0, $72$hi = 0, $325 = 0, $335 = 0, $355 = 0, $365 = 0, $375 = 0, $385 = 0, $395 = 0, $418 = 0, $428 = 0, $438 = 0, $448 = 0, $458 = 0, $468 = 0, $478 = 0;
  $5 = __stack_pointer - 128 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 124 | 0) >> 2] = $0;
  HEAP32[($5 + 120 | 0) >> 2] = $1;
  HEAP32[($5 + 116 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 120 | 0) >> 2] | 0;
  $8 = operator_20new_28unsigned_20long_29(56 | 0) | 0;
  GPoint3__GPoint3_28_29($8 | 0) | 0;
  HEAP32[($5 + 112 | 0) >> 2] = $8;
  i64toi32_i32$2 = 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12536 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12540 | 0) >> 2] | 0;
  $10 = i64toi32_i32$0;
  $10$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 12528 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12532 | 0) >> 2] | 0;
  $11$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 1073954816;
  $12$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $13 = 0;
  $13$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $11$hi;
  i64toi32_i32$0 = $10$hi;
  i64toi32_i32$0 = $13$hi;
  i64toi32_i32$0 = $12$hi;
  i64toi32_i32$0 = $11$hi;
  $66 = i64toi32_i32$1;
  i64toi32_i32$1 = $10$hi;
  i64toi32_i32$2 = $13$hi;
  i64toi32_i32$3 = $12$hi;
  __multf3($5 + 16 | 0 | 0, $66 | 0, i64toi32_i32$0 | 0, $10 | 0, i64toi32_i32$1 | 0, $13 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $5 + 24 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $18 = i64toi32_i32$3;
  $18$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
  $19 = i64toi32_i32$2;
  $19$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $18$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] = $18;
  HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $19$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] = $19;
  HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $13$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 88 | 0) >> 2] = $13;
  HEAP32[(i64toi32_i32$1 + 92 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] = $13;
  HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] = i64toi32_i32$3;
  HEAP32[(i64toi32_i32$1 + 76 | 0) >> 2] = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
  HEAP32[(i64toi32_i32$1 + 72 | 0) >> 2] = std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___begin_28_29(HEAP32[(i64toi32_i32$1 + 76 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] = std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___end_28_29(HEAP32[(i64toi32_i32$1 + 76 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((bool_20std____2__operator___std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20const__2c_20std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20const__29($5 + 72 | 0 | 0, $5 + 64 | 0 | 0) | 0) & 1 | 0)) {
     break label$1
    }
    HEAP32[($5 + 60 | 0) >> 2] = std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____operator__28_29_20const($5 + 72 | 0 | 0) | 0;
    HEAP32[($5 + 56 | 0) >> 2] = HEAP32[($5 + 60 | 0) >> 2] | 0;
    HEAP32[($5 + 48 | 0) >> 2] = std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___begin_28_29(HEAP32[($5 + 56 | 0) >> 2] | 0 | 0) | 0;
    HEAP32[($5 + 40 | 0) >> 2] = std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___end_28_29(HEAP32[($5 + 56 | 0) >> 2] | 0 | 0) | 0;
    label$3 : {
     label$4 : while (1) {
      if (!((bool_20std____2__operator___GPoint3___28std____2____wrap_iter_GPoint3___20const__2c_20std____2____wrap_iter_GPoint3___20const__29($5 + 48 | 0 | 0, $5 + 40 | 0 | 0) | 0) & 1 | 0)) {
       break label$3
      }
      HEAP32[($5 + 36 | 0) >> 2] = std____2____wrap_iter_GPoint3____operator__28_29_20const($5 + 48 | 0 | 0) | 0;
      label$5 : {
       if (!((HEAPU8[((HEAP32[($5 + 36 | 0) >> 2] | 0) + 28 | 0) >> 0] | 0) & 1 | 0)) {
        break label$5
       }
       Point3__distance_28Point3_20const__29_20const($5 | 0, $6 | 0, HEAP32[($5 + 36 | 0) >> 2] | 0 | 0);
       i64toi32_i32$1 = $5;
       i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
       i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
       $61 = i64toi32_i32$3;
       $61$hi = i64toi32_i32$2;
       i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] | 0;
       i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] | 0;
       $296 = i64toi32_i32$2;
       i64toi32_i32$2 = i64toi32_i32$1;
       HEAP32[(i64toi32_i32$1 + 88 | 0) >> 2] = $296;
       HEAP32[(i64toi32_i32$1 + 92 | 0) >> 2] = i64toi32_i32$3;
       i64toi32_i32$3 = $61$hi;
       i64toi32_i32$2 = i64toi32_i32$1;
       HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] = $61;
       HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] = i64toi32_i32$3;
       i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 88 | 0) >> 2] | 0;
       i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 92 | 0) >> 2] | 0;
       $63 = i64toi32_i32$3;
       $63$hi = i64toi32_i32$2;
       i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] | 0;
       i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] | 0;
       $64 = i64toi32_i32$2;
       $64$hi = i64toi32_i32$3;
       i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] | 0;
       i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] | 0;
       $65 = i64toi32_i32$3;
       $65$hi = i64toi32_i32$2;
       i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
       i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
       $66$hi = i64toi32_i32$3;
       i64toi32_i32$3 = $64$hi;
       i64toi32_i32$3 = $63$hi;
       i64toi32_i32$3 = $66$hi;
       $309 = i64toi32_i32$2;
       i64toi32_i32$3 = $65$hi;
       i64toi32_i32$3 = $64$hi;
       i64toi32_i32$2 = $63$hi;
       i64toi32_i32$1 = $66$hi;
       i64toi32_i32$0 = $65$hi;
       label$6 : {
        if (!((__letf2($64 | 0, i64toi32_i32$3 | 0, $63 | 0, i64toi32_i32$2 | 0, $309 | 0, i64toi32_i32$1 | 0, $65 | 0, i64toi32_i32$0 | 0) | 0 | 0) < (0 | 0) & 1 | 0)) {
         break label$6
        }
        i64toi32_i32$2 = $5;
        i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
        i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
        $72 = i64toi32_i32$0;
        $72$hi = i64toi32_i32$1;
        i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 88 | 0) >> 2] | 0;
        i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 92 | 0) >> 2] | 0;
        $325 = i64toi32_i32$1;
        i64toi32_i32$1 = i64toi32_i32$2;
        HEAP32[(i64toi32_i32$1 + 104 | 0) >> 2] = $325;
        HEAP32[(i64toi32_i32$1 + 108 | 0) >> 2] = i64toi32_i32$0;
        i64toi32_i32$0 = $72$hi;
        HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] = $72;
        HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] = i64toi32_i32$0;
        $74 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
        $75 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
        i64toi32_i32$2 = $74;
        i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
        i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
        $335 = i64toi32_i32$0;
        i64toi32_i32$0 = $75;
        HEAP32[i64toi32_i32$0 >> 2] = $335;
        HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
        $77 = 48;
        HEAP32[(i64toi32_i32$0 + $77 | 0) >> 2] = HEAP32[(i64toi32_i32$2 + $77 | 0) >> 2] | 0;
        $81 = 40;
        i64toi32_i32$2 = i64toi32_i32$2 + $81 | 0;
        i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
        i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
        $355 = i64toi32_i32$1;
        i64toi32_i32$1 = $75 + $81 | 0;
        HEAP32[i64toi32_i32$1 >> 2] = $355;
        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
        $85 = 32;
        i64toi32_i32$2 = $74 + $85 | 0;
        i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
        i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
        $365 = i64toi32_i32$0;
        i64toi32_i32$0 = $75 + $85 | 0;
        HEAP32[i64toi32_i32$0 >> 2] = $365;
        HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
        $89 = 24;
        i64toi32_i32$2 = $74 + $89 | 0;
        i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
        i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
        $375 = i64toi32_i32$1;
        i64toi32_i32$1 = $75 + $89 | 0;
        HEAP32[i64toi32_i32$1 >> 2] = $375;
        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
        $93 = 16;
        i64toi32_i32$2 = $74 + $93 | 0;
        i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
        i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
        $385 = i64toi32_i32$0;
        i64toi32_i32$0 = $75 + $93 | 0;
        HEAP32[i64toi32_i32$0 >> 2] = $385;
        HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
        $97 = 8;
        i64toi32_i32$2 = $74 + $97 | 0;
        i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
        i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
        $395 = i64toi32_i32$1;
        i64toi32_i32$1 = $75 + $97 | 0;
        HEAP32[i64toi32_i32$1 >> 2] = $395;
        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
       }
      }
      std____2____wrap_iter_GPoint3____operator___28_29($5 + 48 | 0 | 0) | 0;
      continue label$4;
     };
    }
    std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____operator___28_29($5 + 72 | 0 | 0) | 0;
    continue label$2;
   };
  }
  HEAP8[($5 + 35 | 0) >> 0] = 0 & 1 | 0;
  $110 = HEAP32[($5 + 112 | 0) >> 2] | 0;
  i64toi32_i32$2 = $110;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $418 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  HEAP32[i64toi32_i32$0 >> 2] = $418;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $112 = 48;
  i64toi32_i32$2 = i64toi32_i32$2 + $112 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $428 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + $112 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $428;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $116 = 40;
  i64toi32_i32$2 = $110 + $116 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $438 = i64toi32_i32$0;
  i64toi32_i32$0 = $0 + $116 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $438;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $120 = 32;
  i64toi32_i32$2 = $110 + $120 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $448 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + $120 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $448;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $124 = 24;
  i64toi32_i32$2 = $110 + $124 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $458 = i64toi32_i32$0;
  i64toi32_i32$0 = $0 + $124 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $458;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $128 = 16;
  i64toi32_i32$2 = $110 + $128 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $468 = i64toi32_i32$1;
  i64toi32_i32$1 = $0 + $128 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $468;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $132 = 8;
  i64toi32_i32$2 = $110 + $132 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $478 = i64toi32_i32$0;
  i64toi32_i32$0 = $0 + $132 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $478;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $136 = HEAP32[($5 + 112 | 0) >> 2] | 0;
  label$7 : {
   if (($136 | 0) == (0 | 0) & 1 | 0) {
    break label$7
   }
   GPoint3___GPoint3_28_29($136 | 0) | 0;
   operator_20delete_28void__29($136 | 0);
  }
  HEAP8[($5 + 35 | 0) >> 0] = 1 & 1 | 0;
  label$8 : {
   if ((HEAPU8[($5 + 35 | 0) >> 0] | 0) & 1 | 0) {
    break label$8
   }
   GPoint3___GPoint3_28_29($0 | 0) | 0;
  }
  __stack_pointer = $5 + 128 | 0;
  return;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___begin_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____make_iter_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($4 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
  $7 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20___end_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____make_iter_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($4 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) | 0;
  $7 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function bool_20std____2__operator___std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20const__2c_20std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $7 = bool_20std____2__operator___std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20const__2c_20std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20const__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return ($7 ^ -1 | 0) & 1 | 0 | 0;
 }
 
 function std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____operator__28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____operator___28_29($0) {
  $0 = $0 | 0;
  var $4 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 12 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20_____make_iter_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $9 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_______wrap_iter_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($4 + 8 | 0 | 0, HEAP32[$4 >> 2] | 0 | 0) | 0;
  $9 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $9 | 0;
 }
 
 function bool_20std____2__operator___std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___2c_20std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____28std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20const__2c_20std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20____20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $6 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $6 = std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____base_28_29_20const(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0;
  $8 = std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____base_28_29_20const(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return ($6 | 0) == ($8 | 0) & 1 | 0 | 0;
 }
 
 function Point3__rotate_around_y_28long_20double_29($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $5 = 0, $19 = 0, $6 = 0, $7 = 0.0, $13 = 0, $23$hi = 0, $24$hi = 0, $25$hi = 0, $29$hi = 0, $30$hi = 0, $36$hi = 0, $37$hi = 0, $44$hi = 0, $45$hi = 0, $46$hi = 0, $50$hi = 0, $51$hi = 0, $57$hi = 0, $58$hi = 0, $64$hi = 0, $75$hi = 0, $76$hi = 0, $77$hi = 0, $81$hi = 0, $82$hi = 0, $88$hi = 0, $89$hi = 0, $92$hi = 0, $93$hi = 0, $94$hi = 0, $98$hi = 0, $99$hi = 0, $105$hi = 0, $106$hi = 0, $112$hi = 0, $23 = 0, $24 = 0, $25 = 0, $172$hi = 0, $80 = 0, $29 = 0, $184 = 0, $36 = 0, $37 = 0, $44 = 0, $45 = 0, $46 = 0, $221$hi = 0, $82 = 0, $50 = 0, $233 = 0, $57 = 0, $251 = 0, $64 = 0, $263$hi = 0, $83 = 0, $75 = 0, $76 = 0, $77 = 0, $296$hi = 0, $84 = 0, $81 = 0, $308 = 0, $88 = 0, $89 = 0, $92 = 0, $93 = 0, $94 = 0, $339$hi = 0, $85 = 0, $98 = 0, $351 = 0, $105 = 0, $369 = 0, $112 = 0, $381$hi = 0, $86 = 0;
  $5 = __stack_pointer - 272 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 268 | 0) >> 2] = $0;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$1 = $5;
  HEAP32[($5 + 248 | 0) >> 2] = $2;
  HEAP32[($5 + 252 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $5;
  HEAP32[($5 + 240 | 0) >> 2] = $1;
  HEAP32[($5 + 244 | 0) >> 2] = i64toi32_i32$0;
  $6 = HEAP32[($5 + 268 | 0) >> 2] | 0;
  $7 = +HEAPF64[$6 >> 3];
  label$1 : {
   label$2 : {
    if (!(Math_abs($7) < 2147483648.0)) {
     break label$2
    }
    $13 = ~~$7;
    break label$1;
   }
   $13 = -2147483648;
  }
  HEAP32[($5 + 236 | 0) >> 2] = $13;
  __extenddftf2($5 + 128 | 0 | 0, +(+HEAPF64[$6 >> 3]));
  $19 = 8;
  i64toi32_i32$2 = ($5 + 128 | 0) + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $23 = i64toi32_i32$0;
  $23$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 128 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 132 | 0) >> 2] | 0;
  $24 = i64toi32_i32$1;
  $24$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[($5 + 248 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 252 | 0) >> 2] | 0;
  $25 = i64toi32_i32$0;
  $25$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 240 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 244 | 0) >> 2] | 0;
  $172$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $25$hi;
  i64toi32_i32$0 = $172$hi;
  $80 = i64toi32_i32$1;
  i64toi32_i32$1 = $25$hi;
  cos_28long_20double_29($5 + 208 | 0 | 0, $80 | 0, i64toi32_i32$0 | 0, $25 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$1 = HEAP32[($5 + 216 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($5 + 220 | 0) >> 2] | 0;
  $29 = i64toi32_i32$1;
  $29$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[($5 + 208 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 212 | 0) >> 2] | 0;
  $30$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $24$hi;
  i64toi32_i32$1 = $23$hi;
  i64toi32_i32$1 = $30$hi;
  $184 = i64toi32_i32$0;
  i64toi32_i32$1 = $29$hi;
  i64toi32_i32$1 = $24$hi;
  i64toi32_i32$0 = $23$hi;
  i64toi32_i32$2 = $30$hi;
  i64toi32_i32$3 = $29$hi;
  __multf3($5 + 144 | 0 | 0, $24 | 0, i64toi32_i32$1 | 0, $23 | 0, i64toi32_i32$0 | 0, $184 | 0, i64toi32_i32$2 | 0, $29 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$0 = ($5 + 144 | 0) + $19 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $36 = i64toi32_i32$3;
  $36$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 144 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 148 | 0) >> 2] | 0;
  $37 = i64toi32_i32$2;
  $37$hi = i64toi32_i32$3;
  __extenddftf2(i64toi32_i32$0 + 80 | 0 | 0, +(+HEAPF64[($6 + 16 | 0) >> 3]));
  i64toi32_i32$0 = (i64toi32_i32$0 + 80 | 0) + $19 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $44 = i64toi32_i32$3;
  $44$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 80 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 84 | 0) >> 2] | 0;
  $45 = i64toi32_i32$2;
  $45$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 248 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 252 | 0) >> 2] | 0;
  $46 = i64toi32_i32$3;
  $46$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 240 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 244 | 0) >> 2] | 0;
  $221$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $46$hi;
  i64toi32_i32$3 = $221$hi;
  $82 = i64toi32_i32$2;
  i64toi32_i32$2 = $46$hi;
  sin_28long_20double_29(i64toi32_i32$0 + 192 | 0 | 0, $82 | 0, i64toi32_i32$3 | 0, $46 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 200 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 204 | 0) >> 2] | 0;
  $50 = i64toi32_i32$2;
  $50$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 192 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 196 | 0) >> 2] | 0;
  $51$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $45$hi;
  i64toi32_i32$2 = $44$hi;
  i64toi32_i32$2 = $51$hi;
  $233 = i64toi32_i32$3;
  i64toi32_i32$2 = $50$hi;
  i64toi32_i32$2 = $45$hi;
  i64toi32_i32$3 = $44$hi;
  i64toi32_i32$0 = $51$hi;
  i64toi32_i32$1 = $50$hi;
  __multf3($5 + 112 | 0 | 0, $45 | 0, i64toi32_i32$2 | 0, $44 | 0, i64toi32_i32$3 | 0, $233 | 0, i64toi32_i32$0 | 0, $50 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$3 = ($5 + 112 | 0) + $19 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $57 = i64toi32_i32$1;
  $57$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[($5 + 112 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($5 + 116 | 0) >> 2] | 0;
  $58$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $37$hi;
  i64toi32_i32$1 = $36$hi;
  i64toi32_i32$1 = $58$hi;
  $251 = i64toi32_i32$0;
  i64toi32_i32$1 = $57$hi;
  i64toi32_i32$1 = $37$hi;
  i64toi32_i32$0 = $36$hi;
  i64toi32_i32$3 = $58$hi;
  i64toi32_i32$2 = $57$hi;
  __addtf3($5 + 96 | 0 | 0, $37 | 0, i64toi32_i32$1 | 0, $36 | 0, i64toi32_i32$0 | 0, $251 | 0, i64toi32_i32$3 | 0, $57 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$0 = ($5 + 96 | 0) + $19 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $64 = i64toi32_i32$2;
  $64$hi = i64toi32_i32$3;
  i64toi32_i32$0 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 96 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 100 | 0) >> 2] | 0;
  $263$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $64$hi;
  i64toi32_i32$2 = $263$hi;
  $83 = i64toi32_i32$3;
  i64toi32_i32$3 = $64$hi;
  HEAPF64[$6 >> 3] = +__trunctfdf2($83 | 0, i64toi32_i32$2 | 0, $64 | 0, i64toi32_i32$3 | 0);
  __floatsitf(i64toi32_i32$0 + 64 | 0 | 0, 0 - (HEAP32[(i64toi32_i32$0 + 236 | 0) >> 2] | 0) | 0 | 0);
  i64toi32_i32$0 = (i64toi32_i32$0 + 64 | 0) + $19 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
  $75 = i64toi32_i32$3;
  $75$hi = i64toi32_i32$2;
  i64toi32_i32$0 = $5;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 64 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 68 | 0) >> 2] | 0;
  $76 = i64toi32_i32$2;
  $76$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 248 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 252 | 0) >> 2] | 0;
  $77 = i64toi32_i32$3;
  $77$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 240 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 244 | 0) >> 2] | 0;
  $296$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $77$hi;
  i64toi32_i32$3 = $296$hi;
  $84 = i64toi32_i32$2;
  i64toi32_i32$2 = $77$hi;
  sin_28long_20double_29(i64toi32_i32$0 + 176 | 0 | 0, $84 | 0, i64toi32_i32$3 | 0, $77 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 184 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 188 | 0) >> 2] | 0;
  $81 = i64toi32_i32$2;
  $81$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 176 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 180 | 0) >> 2] | 0;
  $82$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $76$hi;
  i64toi32_i32$2 = $75$hi;
  i64toi32_i32$2 = $82$hi;
  $308 = i64toi32_i32$3;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$2 = $76$hi;
  i64toi32_i32$3 = $75$hi;
  i64toi32_i32$0 = $82$hi;
  i64toi32_i32$1 = $81$hi;
  __multf3($5 + 48 | 0 | 0, $76 | 0, i64toi32_i32$2 | 0, $75 | 0, i64toi32_i32$3 | 0, $308 | 0, i64toi32_i32$0 | 0, $81 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$3 = ($5 + 48 | 0) + $19 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $88 = i64toi32_i32$1;
  $88$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 48 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 52 | 0) >> 2] | 0;
  $89 = i64toi32_i32$0;
  $89$hi = i64toi32_i32$1;
  __extenddftf2(i64toi32_i32$3 | 0, +(+HEAPF64[($6 + 16 | 0) >> 3]));
  i64toi32_i32$3 = i64toi32_i32$3 + $19 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $92 = i64toi32_i32$1;
  $92$hi = i64toi32_i32$0;
  i64toi32_i32$3 = $5;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $93 = i64toi32_i32$0;
  $93$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 248 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 252 | 0) >> 2] | 0;
  $94 = i64toi32_i32$1;
  $94$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 240 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 244 | 0) >> 2] | 0;
  $339$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $94$hi;
  i64toi32_i32$1 = $339$hi;
  $85 = i64toi32_i32$0;
  i64toi32_i32$0 = $94$hi;
  cos_28long_20double_29(i64toi32_i32$3 + 160 | 0 | 0, $85 | 0, i64toi32_i32$1 | 0, $94 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 168 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 172 | 0) >> 2] | 0;
  $98 = i64toi32_i32$0;
  $98$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 160 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 164 | 0) >> 2] | 0;
  $99$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $93$hi;
  i64toi32_i32$0 = $92$hi;
  i64toi32_i32$0 = $99$hi;
  $351 = i64toi32_i32$1;
  i64toi32_i32$0 = $98$hi;
  i64toi32_i32$0 = $93$hi;
  i64toi32_i32$1 = $92$hi;
  i64toi32_i32$3 = $99$hi;
  i64toi32_i32$2 = $98$hi;
  __multf3($5 + 32 | 0 | 0, $93 | 0, i64toi32_i32$0 | 0, $92 | 0, i64toi32_i32$1 | 0, $351 | 0, i64toi32_i32$3 | 0, $98 | 0, i64toi32_i32$2 | 0);
  i64toi32_i32$1 = ($5 + 32 | 0) + $19 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $105 = i64toi32_i32$2;
  $105$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[($5 + 32 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[($5 + 36 | 0) >> 2] | 0;
  $106$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $89$hi;
  i64toi32_i32$2 = $88$hi;
  i64toi32_i32$2 = $106$hi;
  $369 = i64toi32_i32$3;
  i64toi32_i32$2 = $105$hi;
  i64toi32_i32$2 = $89$hi;
  i64toi32_i32$3 = $88$hi;
  i64toi32_i32$1 = $106$hi;
  i64toi32_i32$0 = $105$hi;
  __addtf3($5 + 16 | 0 | 0, $89 | 0, i64toi32_i32$2 | 0, $88 | 0, i64toi32_i32$3 | 0, $369 | 0, i64toi32_i32$1 | 0, $105 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$3 = ($5 + 16 | 0) + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
  $112 = i64toi32_i32$0;
  $112$hi = i64toi32_i32$1;
  i64toi32_i32$3 = $5;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 16 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 20 | 0) >> 2] | 0;
  $381$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $112$hi;
  i64toi32_i32$0 = $381$hi;
  $86 = i64toi32_i32$1;
  i64toi32_i32$1 = $112$hi;
  HEAPF64[($6 + 16 | 0) >> 3] = +__trunctfdf2($86 | 0, i64toi32_i32$0 | 0, $112 | 0, i64toi32_i32$1 | 0);
  __stack_pointer = i64toi32_i32$3 + 272 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____vector_base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___push_back_28Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) != (HEAP32[(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29($5 | 0) | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$2
    }
    void_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____construct_one_at_end_Point3_20const___28Point3_20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
    break label$1;
   }
   void_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____push_back_slow_path_Point3_20const___28Point3_20const__29($5 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____vector_base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____vector_base_common_true_____vector_base_common_28_29($4 | 0) | 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[($4 + 4 | 0) >> 2] = 0;
  HEAP32[($3 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($4 + 8 | 0 | 0, $3 + 8 | 0 | 0, $3 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function void_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____construct_one_at_end_Point3_20const___28Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____ConstructTransaction___ConstructTransaction_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29($4 + 8 | 0 | 0, $5 | 0, 1 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_Point3__20___construct_Point3_2c_20Point3_20const___28std____2__allocator_Point3___2c_20Point3__2c_20Point3_20const__29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($5 | 0) | 0 | 0, Point3__20std____2____to_address_Point3__28Point3__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[($4 + 12 | 0) >> 2] = (HEAP32[($4 + 12 | 0) >> 2] | 0) + 32 | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____ConstructTransaction____ConstructTransaction_28_29($4 + 8 | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function void_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____push_back_slow_path_Point3_20const___28Point3_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 28 | 0) >> 2] = $0;
  HEAP32[($4 + 24 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($5 | 0) | 0;
  std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______split_buffer_28unsigned_20long_2c_20unsigned_20long_2c_20std____2__allocator_Point3___29($4 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____recommend_28unsigned_20long_29_20const($5 | 0, (std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const($5 | 0) | 0) + 1 | 0 | 0) | 0 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const($5 | 0) | 0 | 0, HEAP32[($4 + 20 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_Point3__20___construct_Point3_2c_20Point3_20const___28std____2__allocator_Point3___2c_20Point3__2c_20Point3_20const__29(HEAP32[($4 + 20 | 0) >> 2] | 0 | 0, Point3__20std____2____to_address_Point3__28Point3__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[($4 + 8 | 0) >> 2] = (HEAP32[($4 + 8 | 0) >> 2] | 0) + 32 | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____swap_out_circular_buffer_28std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_____29($5 | 0, $4 | 0);
  std____2____split_buffer_Point3_2c_20std____2__allocator_Point3________split_buffer_28_29($4 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return;
 }
 
 function Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29($0, $1, $2, $3, $4, $5, $6) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  var $9 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $86 = 0, $110 = 0, $134 = 0, $158 = 0, $83 = 0, $107 = 0, $131 = 0, $155 = 0, $63 = 0, $79 = 0, $88 = 0, $92 = 0, $96 = 0, $105 = 0, $112 = 0, $116 = 0, $120 = 0, $127 = 0, $136 = 0, $140 = 0, $144 = 0, $153 = 0, $160 = 0, $164 = 0, $168 = 0, $48 = 0, $49 = 0, $387 = 0, $419 = 0, $429 = 0, $439 = 0, $449 = 0, $472 = 0, $482 = 0, $492 = 0, $502 = 0, $525 = 0, $535 = 0, $545 = 0, $555 = 0, $578 = 0, $588 = 0, $598 = 0, $608 = 0;
  $9 = __stack_pointer - 272 | 0;
  __stack_pointer = $9;
  HEAP32[($9 + 268 | 0) >> 2] = $0;
  HEAP32[($9 + 264 | 0) >> 2] = $1;
  HEAP32[($9 + 260 | 0) >> 2] = $2;
  HEAP32[($9 + 256 | 0) >> 2] = $3;
  HEAP32[($9 + 252 | 0) >> 2] = $4;
  HEAP32[($9 + 248 | 0) >> 2] = $5;
  HEAP32[($9 + 244 | 0) >> 2] = $6;
  HEAP32[($9 + 240 | 0) >> 2] = hexmapf__num_divisions_28int_29(HEAP32[($9 + 256 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($9 + 248 | 0) >> 2] | 0 | 0) == (-1 | 0) & 1 | 0)) {
    break label$1
   }
   HEAP32[($9 + 248 | 0) >> 2] = (HEAP32[($9 + 260 | 0) >> 2] | 0) - (HEAP32[($9 + 252 | 0) >> 2] | 0) | 0;
  }
  label$2 : {
   if (!((HEAP32[($9 + 248 | 0) >> 2] | 0 | 0) < (0 | 0) & 1 | 0)) {
    break label$2
   }
   HEAP32[($9 + 248 | 0) >> 2] = 0;
  }
  label$3 : {
   if (!((HEAP32[($9 + 244 | 0) >> 2] | 0 | 0) == (-1 | 0) & 1 | 0)) {
    break label$3
   }
   HEAP32[($9 + 244 | 0) >> 2] = (HEAP32[($9 + 260 | 0) >> 2] | 0) + (HEAP32[($9 + 252 | 0) >> 2] | 0) | 0;
  }
  label$4 : {
   if (!((HEAP32[($9 + 244 | 0) >> 2] | 0 | 0) > (HEAP32[($9 + 240 | 0) >> 2] | 0 | 0) & 1 | 0)) {
    break label$4
   }
   HEAP32[($9 + 244 | 0) >> 2] = HEAP32[($9 + 240 | 0) >> 2] | 0;
  }
  $48 = HEAP32[($9 + 248 | 0) >> 2] | 0;
  $49 = HEAP32[($9 + 260 | 0) >> 2] | 0;
  HEAP32[($9 + 8 | 0) >> 2] = HEAP32[($9 + 252 | 0) >> 2] | 0;
  HEAP32[($9 + 4 | 0) >> 2] = $49;
  HEAP32[$9 >> 2] = $48;
  printf(4377 | 0, $9 | 0) | 0;
  HEAP32[($9 + 200 | 0) >> 2] = $9 + 240 | 0;
  HEAP32[($9 + 204 | 0) >> 2] = $9 + 248 | 0;
  HEAP32[($9 + 208 | 0) >> 2] = $9 + 244 | 0;
  $63 = 8;
  HEAP32[(($9 + 24 | 0) + $63 | 0) >> 2] = HEAP32[(($9 + 200 | 0) + $63 | 0) >> 2] | 0;
  i64toi32_i32$2 = $9;
  i64toi32_i32$0 = HEAP32[($9 + 200 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($9 + 204 | 0) >> 2] | 0;
  $387 = i64toi32_i32$0;
  i64toi32_i32$0 = $9;
  HEAP32[($9 + 24 | 0) >> 2] = $387;
  HEAP32[($9 + 28 | 0) >> 2] = i64toi32_i32$1;
  std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___function_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20void__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_29($9 + 216 | 0 | 0, $9 + 24 | 0 | 0) | 0;
  label$5 : {
   label$6 : {
    if (HEAP32[((HEAP32[($9 + 264 | 0) >> 2] | 0) + 96 | 0) >> 2] | 0) {
     break label$6
    }
    $79 = HEAP32[($9 + 264 | 0) >> 2] | 0;
    break label$5;
   }
   $79 = (HEAP32[($9 + 264 | 0) >> 2] | 0) + 32 | 0;
  }
  $83 = $79;
  $86 = $9 + 168 | 0;
  i64toi32_i32$2 = $83;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $419 = i64toi32_i32$1;
  i64toi32_i32$1 = $86;
  HEAP32[i64toi32_i32$1 >> 2] = $419;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $88 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $88 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $429 = i64toi32_i32$0;
  i64toi32_i32$0 = $86 + $88 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $429;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $92 = 16;
  i64toi32_i32$2 = $83 + $92 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $439 = i64toi32_i32$1;
  i64toi32_i32$1 = $86 + $92 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $439;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $96 = 8;
  i64toi32_i32$2 = $83 + $96 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $449 = i64toi32_i32$0;
  i64toi32_i32$0 = $86 + $96 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $449;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  label$7 : {
   label$8 : {
    if (HEAP32[((HEAP32[($9 + 264 | 0) >> 2] | 0) + 96 | 0) >> 2] | 0) {
     break label$8
    }
    $105 = (HEAP32[($9 + 264 | 0) >> 2] | 0) + 64 | 0;
    break label$7;
   }
   $105 = HEAP32[($9 + 264 | 0) >> 2] | 0;
  }
  $107 = $105;
  $110 = $9 + 136 | 0;
  i64toi32_i32$2 = $107;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $472 = i64toi32_i32$1;
  i64toi32_i32$1 = $110;
  HEAP32[i64toi32_i32$1 >> 2] = $472;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $112 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $112 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $482 = i64toi32_i32$0;
  i64toi32_i32$0 = $110 + $112 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $482;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $116 = 16;
  i64toi32_i32$2 = $107 + $116 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $492 = i64toi32_i32$1;
  i64toi32_i32$1 = $110 + $116 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $492;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $120 = 8;
  i64toi32_i32$2 = $107 + $120 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $502 = i64toi32_i32$0;
  i64toi32_i32$0 = $110 + $120 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $502;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  label$9 : {
   label$10 : {
    if (HEAP32[((HEAP32[($9 + 264 | 0) >> 2] | 0) + 96 | 0) >> 2] | 0) {
     break label$10
    }
    $127 = HEAP32[($9 + 264 | 0) >> 2] | 0;
    break label$9;
   }
   $127 = (HEAP32[($9 + 264 | 0) >> 2] | 0) + 64 | 0;
  }
  $131 = $127;
  $134 = $9 + 104 | 0;
  i64toi32_i32$2 = $131;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $525 = i64toi32_i32$1;
  i64toi32_i32$1 = $134;
  HEAP32[i64toi32_i32$1 >> 2] = $525;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $136 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $136 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $535 = i64toi32_i32$0;
  i64toi32_i32$0 = $134 + $136 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $535;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $140 = 16;
  i64toi32_i32$2 = $131 + $140 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $545 = i64toi32_i32$1;
  i64toi32_i32$1 = $134 + $140 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $545;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $144 = 8;
  i64toi32_i32$2 = $131 + $144 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $555 = i64toi32_i32$0;
  i64toi32_i32$0 = $134 + $144 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $555;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  label$11 : {
   label$12 : {
    if (HEAP32[((HEAP32[($9 + 264 | 0) >> 2] | 0) + 96 | 0) >> 2] | 0) {
     break label$12
    }
    $153 = (HEAP32[($9 + 264 | 0) >> 2] | 0) + 32 | 0;
    break label$11;
   }
   $153 = HEAP32[($9 + 264 | 0) >> 2] | 0;
  }
  $155 = $153;
  $158 = $9 + 72 | 0;
  i64toi32_i32$2 = $155;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $578 = i64toi32_i32$1;
  i64toi32_i32$1 = $158;
  HEAP32[i64toi32_i32$1 >> 2] = $578;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $160 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $160 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $588 = i64toi32_i32$0;
  i64toi32_i32$0 = $158 + $160 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $588;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $164 = 16;
  i64toi32_i32$2 = $155 + $164 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $598 = i64toi32_i32$1;
  i64toi32_i32$1 = $158 + $164 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $598;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $168 = 8;
  i64toi32_i32$2 = $155 + $168 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $608 = i64toi32_i32$0;
  i64toi32_i32$0 = $158 + $168 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $608;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29_20const($9 + 56 | 0 | 0, $9 + 216 | 0 | 0, $9 + 168 | 0 | 0, $9 + 136 | 0 | 0);
  std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29_20const($9 + 40 | 0 | 0, $9 + 216 | 0 | 0, $9 + 104 | 0 | 0, $9 + 72 | 0 | 0);
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($0 | 0, $9 + 56 | 0 | 0) | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($0 + 12 | 0 | 0, $9 + 40 | 0 | 0) | 0;
  HEAP32[($0 + 24 | 0) >> 2] = HEAP32[($9 + 248 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($9 + 40 | 0 | 0) | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($9 + 56 | 0 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 72 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 104 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 136 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 168 | 0) | 0;
  std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____function_28_29($9 + 216 | 0 | 0) | 0;
  __stack_pointer = $9 + 272 | 0;
  return;
 }
 
 function std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___function_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20void__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____value_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20void__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($5 | 0, std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____type___20std____2__move_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__29($1 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29_20const($0 | 0, HEAP32[($6 + 8 | 0) >> 2] | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[$6 >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____function_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______value_func_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____type___20std____2__move_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____value_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20void__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___allocator_28_29($4 | 0) | 0;
  std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____value_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($5 | 0, $7 | 0, $4 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0, $15 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  $7 = HEAP32[($6 + 8 | 0) >> 2] | 0;
  label$1 : {
   if (!((HEAP32[($7 + 16 | 0) >> 2] | 0 | 0) == (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____throw_bad_function_call_28_29();
   abort();
  }
  $15 = HEAP32[($7 + 16 | 0) >> 2] | 0;
  ((((wasm2js_i32$1 = $0, wasm2js_i32$2 = $15), wasm2js_i32$3 = Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0), wasm2js_i32$4 = Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[$6 >> 2] | 0 | 0) | 0), wasm2js_i32$0 = HEAP32[((HEAP32[$15 >> 2] | 0) + 24 | 0) >> 2] | 0 | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______value_func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $11 = 0, $21 = 0, $24 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 16 | 0) >> 2] | 0 | 0) == ($4 | 0) & 1 | 0)) {
     break label$2
    }
    $11 = HEAP32[($4 + 16 | 0) >> 2] | 0;
    FUNCTION_TABLE[HEAP32[((HEAP32[$11 >> 2] | 0) + 16 | 0) >> 2] | 0 | 0]($11);
    break label$1;
   }
   label$3 : {
    if (!((HEAP32[($4 + 16 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
     break label$3
    }
    $21 = HEAP32[($4 + 16 | 0) >> 2] | 0;
    FUNCTION_TABLE[HEAP32[((HEAP32[$21 >> 2] | 0) + 20 | 0) >> 2] | 0 | 0]($21);
   }
  }
  $24 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $24 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std__initializer_list_Point3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $17 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $5;
  std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____vector_base_28_29($5 | 0) | 0;
  label$1 : {
   if (!((std__initializer_list_Point3___size_28_29_20const($1 | 0) | 0) >>> 0 > 0 >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____vallocate_28unsigned_20long_29($5 | 0, std__initializer_list_Point3___size_28_29_20const($1 | 0) | 0 | 0);
   std____2__enable_if___is_cpp17_forward_iterator_Point3_20const____value_2c_20void___type_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____construct_at_end_Point3_20const___28Point3_20const__2c_20Point3_20const__2c_20unsigned_20long_29($5 | 0, std__initializer_list_Point3___begin_28_29_20const($1 | 0) | 0 | 0, std__initializer_list_Point3___end_28_29_20const($1 | 0) | 0 | 0, std__initializer_list_Point3___size_28_29_20const($1 | 0) | 0 | 0);
  }
  $17 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $17 | 0;
 }
 
 function std__initializer_list_Point3___size_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0 | 0;
 }
 
 function std__initializer_list_Point3___begin_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std__initializer_list_Point3___end_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  return (HEAP32[$4 >> 2] | 0) + ((HEAP32[($4 + 4 | 0) >> 2] | 0) << 5 | 0) | 0 | 0;
 }
 
 function std____2__enable_if___is_cpp17_forward_iterator_Point3_20const____value_2c_20void___type_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____construct_at_end_Point3_20const___28Point3_20const__2c_20Point3_20const__2c_20unsigned_20long_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 28 | 0) >> 2] = $0;
  HEAP32[($6 + 24 | 0) >> 2] = $1;
  HEAP32[($6 + 20 | 0) >> 2] = $2;
  HEAP32[($6 + 16 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____ConstructTransaction___ConstructTransaction_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20___2c_20unsigned_20long_29($6 | 0, $7 | 0, HEAP32[($6 + 16 | 0) >> 2] | 0 | 0) | 0;
  void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_range_forward_Point3_20const__2c_20Point3___28std____2__allocator_Point3___2c_20Point3_20const__2c_20Point3_20const__2c_20Point3___29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 24 | 0) >> 2] | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0, $6 + 4 | 0 | 0);
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____ConstructTransaction____ConstructTransaction_28_29($6 | 0) | 0;
  __stack_pointer = $6 + 32 | 0;
  return;
 }
 
 function Point3__lazy_row_points_gnomonic_28int_2c_20Point3_20const__2c_20Point3_20const__2c_20int_2c_20int_2c_20int_2c_20int_29($0, $1, $2, $3, $4, $5, $6, $7) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  $7 = $7 | 0;
  var $10 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $20 = 0, $73 = 0, $123 = 0, $157 = 0, $21 = 0, $51 = 0, $120 = 0, $23 = 0, $27 = 0, $31 = 0, $45 = 0, $48 = 0, $102$hi = 0, $103$hi = 0, $107 = 0, $111$hi = 0, $112$hi = 0, $125 = 0, $129 = 0, $133 = 0, $152$hi = 0, $153$hi = 0, $161$hi = 0, $162$hi = 0, $170 = 0, $178 = 0, $194$hi = 0, $274 = 0, $284 = 0, $294 = 0, $304 = 0, $316 = 0, $100 = 0, $100$hi = 0, $445 = 0, $102 = 0, $103 = 0, $111 = 0, $475 = 0, $118 = 0, $118$hi = 0, $119 = 0, $119$hi = 0, $500 = 0, $510 = 0, $520 = 0, $530 = 0, $152 = 0, $153 = 0, $161 = 0, $589 = 0, $168 = 0, $168$hi = 0, $169 = 0, $169$hi = 0, $620 = 0, $636 = 0, $652 = 0, $656 = 0, $194 = 0, $669$hi = 0, $74 = 0;
  $10 = __stack_pointer - 320 | 0;
  __stack_pointer = $10;
  HEAP32[($10 + 316 | 0) >> 2] = $0;
  HEAP32[($10 + 312 | 0) >> 2] = $1;
  HEAP32[($10 + 308 | 0) >> 2] = $2;
  HEAP32[($10 + 304 | 0) >> 2] = $3;
  HEAP32[($10 + 300 | 0) >> 2] = $4;
  HEAP32[($10 + 296 | 0) >> 2] = $5;
  HEAP32[($10 + 292 | 0) >> 2] = $6;
  HEAP32[($10 + 288 | 0) >> 2] = $7;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($10 + 300 | 0) >> 2] | 0 | 0) <= (0 | 0) & 1 | 0)) {
     break label$2
    }
    $20 = $10 + 248 | 0;
    HEAP32[($10 + 244 | 0) >> 2] = $20;
    $21 = HEAP32[($10 + 308 | 0) >> 2] | 0;
    i64toi32_i32$2 = $21;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $274 = i64toi32_i32$0;
    i64toi32_i32$0 = $20;
    HEAP32[i64toi32_i32$0 >> 2] = $274;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $23 = 21;
    i64toi32_i32$2 = i64toi32_i32$2 + $23 | 0;
    i64toi32_i32$1 = HEAPU8[i64toi32_i32$2 >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 1 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 2 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 3 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;
    i64toi32_i32$0 = HEAPU8[(i64toi32_i32$2 + 4 | 0) >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 5 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 6 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 7 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;
    $284 = i64toi32_i32$1;
    i64toi32_i32$1 = $20 + $23 | 0;
    $73 = $284;
    HEAP8[i64toi32_i32$1 >> 0] = $73;
    HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $73 >>> 8 | 0;
    HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $73 >>> 16 | 0;
    HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $73 >>> 24 | 0;
    HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;
    HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;
    HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;
    HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;
    $27 = 16;
    i64toi32_i32$2 = $21 + $27 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $294 = i64toi32_i32$0;
    i64toi32_i32$0 = $20 + $27 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $294;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $31 = 8;
    i64toi32_i32$2 = $21 + $31 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $304 = i64toi32_i32$1;
    i64toi32_i32$1 = $20 + $31 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $304;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    HEAP32[($10 + 280 | 0) >> 2] = $10 + 248 | 0;
    HEAP32[($10 + 284 | 0) >> 2] = 1;
    i64toi32_i32$2 = $10;
    i64toi32_i32$0 = HEAP32[($10 + 280 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[($10 + 284 | 0) >> 2] | 0;
    $316 = i64toi32_i32$0;
    i64toi32_i32$0 = $10;
    HEAP32[($10 + 8 | 0) >> 2] = $316;
    HEAP32[($10 + 12 | 0) >> 2] = i64toi32_i32$1;
    std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std__initializer_list_Point3__29($0 | 0, $10 + 8 | 0 | 0) | 0;
    HEAP32[($0 + 12 | 0) >> 2] = 0;
    $45 = $10 + 248 | 0;
    $48 = $45 + 32 | 0;
    label$3 : while (1) {
     $51 = $48 + -32 | 0;
     FUNCTION_TABLE[94 | 0]($51) | 0;
     $48 = $51;
     if (!(($51 | 0) == ($45 | 0) & 1 | 0)) {
      continue label$3
     }
     break label$3;
    };
    break label$1;
   }
   label$4 : {
    if (!((HEAP32[($10 + 292 | 0) >> 2] | 0 | 0) == (-1 | 0) & 1 | 0)) {
     break label$4
    }
    HEAP32[($10 + 292 | 0) >> 2] = (HEAP32[($10 + 312 | 0) >> 2] | 0) - (HEAP32[($10 + 296 | 0) >> 2] | 0) | 0;
   }
   label$5 : {
    if (!((HEAP32[($10 + 292 | 0) >> 2] | 0 | 0) < (0 | 0) & 1 | 0)) {
     break label$5
    }
    HEAP32[($10 + 292 | 0) >> 2] = 0;
   }
   label$6 : {
    if (!((HEAP32[($10 + 288 | 0) >> 2] | 0 | 0) == (-1 | 0) & 1 | 0)) {
     break label$6
    }
    HEAP32[($10 + 288 | 0) >> 2] = (HEAP32[($10 + 312 | 0) >> 2] | 0) + (HEAP32[($10 + 296 | 0) >> 2] | 0) | 0;
   }
   label$7 : {
    if (!((HEAP32[($10 + 288 | 0) >> 2] | 0 | 0) > (HEAP32[($10 + 300 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$7
    }
    HEAP32[($10 + 288 | 0) >> 2] = HEAP32[($10 + 300 | 0) >> 2] | 0;
   }
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28_29($10 + 232 | 0 | 0) | 0;
   Point3__distance_28Point3_20const__29_20const($10 + 80 | 0 | 0, HEAP32[($10 + 308 | 0) >> 2] | 0 | 0, HEAP32[($10 + 304 | 0) >> 2] | 0 | 0);
   i64toi32_i32$2 = $10;
   i64toi32_i32$1 = HEAP32[($10 + 80 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[($10 + 84 | 0) >> 2] | 0;
   $100 = i64toi32_i32$1;
   $100$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $10;
   i64toi32_i32$0 = HEAP32[($10 + 88 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[($10 + 92 | 0) >> 2] | 0;
   $445 = i64toi32_i32$0;
   i64toi32_i32$0 = $10;
   HEAP32[($10 + 216 | 0) >> 2] = $445;
   HEAP32[($10 + 220 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$1 = $100$hi;
   i64toi32_i32$0 = $10;
   HEAP32[($10 + 208 | 0) >> 2] = $100;
   HEAP32[($10 + 212 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $10;
   i64toi32_i32$1 = HEAP32[($10 + 216 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[($10 + 220 | 0) >> 2] | 0;
   $102 = i64toi32_i32$1;
   $102$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $10;
   i64toi32_i32$0 = HEAP32[($10 + 208 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[($10 + 212 | 0) >> 2] | 0;
   $103 = i64toi32_i32$0;
   $103$hi = i64toi32_i32$1;
   __floatsitf($10 + 64 | 0 | 0, HEAP32[($10 + 300 | 0) >> 2] | 0 | 0);
   $107 = 8;
   i64toi32_i32$2 = ($10 + 64 | 0) + $107 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $111 = i64toi32_i32$1;
   $111$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $10;
   i64toi32_i32$0 = HEAP32[($10 + 64 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[($10 + 68 | 0) >> 2] | 0;
   $112$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $103$hi;
   i64toi32_i32$1 = $102$hi;
   i64toi32_i32$1 = $112$hi;
   $475 = i64toi32_i32$0;
   i64toi32_i32$1 = $111$hi;
   i64toi32_i32$1 = $103$hi;
   i64toi32_i32$0 = $102$hi;
   i64toi32_i32$2 = $112$hi;
   i64toi32_i32$3 = $111$hi;
   __divtf3($10 + 48 | 0 | 0, $103 | 0, i64toi32_i32$1 | 0, $102 | 0, i64toi32_i32$0 | 0, $475 | 0, i64toi32_i32$2 | 0, $111 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$0 = ($10 + 48 | 0) + $107 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $118 = i64toi32_i32$3;
   $118$hi = i64toi32_i32$2;
   i64toi32_i32$0 = $10;
   i64toi32_i32$2 = HEAP32[($10 + 48 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[($10 + 52 | 0) >> 2] | 0;
   $119 = i64toi32_i32$2;
   $119$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $118$hi;
   i64toi32_i32$2 = $10;
   HEAP32[($10 + 200 | 0) >> 2] = $118;
   HEAP32[($10 + 204 | 0) >> 2] = i64toi32_i32$3;
   i64toi32_i32$3 = $119$hi;
   i64toi32_i32$2 = $10;
   HEAP32[($10 + 192 | 0) >> 2] = $119;
   HEAP32[($10 + 196 | 0) >> 2] = i64toi32_i32$3;
   $120 = HEAP32[($10 + 304 | 0) >> 2] | 0;
   $123 = $10 + 160 | 0;
   i64toi32_i32$0 = $120;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $500 = i64toi32_i32$3;
   i64toi32_i32$3 = $123;
   HEAP32[i64toi32_i32$3 >> 2] = $500;
   HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
   $125 = 24;
   i64toi32_i32$0 = i64toi32_i32$0 + $125 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $510 = i64toi32_i32$2;
   i64toi32_i32$2 = $123 + $125 | 0;
   HEAP32[i64toi32_i32$2 >> 2] = $510;
   HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
   $129 = 16;
   i64toi32_i32$0 = $120 + $129 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $520 = i64toi32_i32$3;
   i64toi32_i32$3 = $123 + $129 | 0;
   HEAP32[i64toi32_i32$3 >> 2] = $520;
   HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
   $133 = 8;
   i64toi32_i32$0 = $120 + $133 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $530 = i64toi32_i32$2;
   i64toi32_i32$2 = $123 + $133 | 0;
   HEAP32[i64toi32_i32$2 >> 2] = $530;
   HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
   Point3__subtract_28Point3_20const__29($10 + 160 | 0 | 0, HEAP32[($10 + 308 | 0) >> 2] | 0 | 0);
   Point3__unit_28_29($10 + 160 | 0 | 0);
   HEAP32[($10 + 140 | 0) >> 2] = HEAP32[($10 + 292 | 0) >> 2] | 0;
   label$8 : {
    label$9 : while (1) {
     if (!((HEAP32[($10 + 140 | 0) >> 2] | 0 | 0) <= (HEAP32[($10 + 288 | 0) >> 2] | 0 | 0) & 1 | 0)) {
      break label$8
     }
     i64toi32_i32$0 = $10;
     i64toi32_i32$3 = HEAP32[($10 + 200 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[($10 + 204 | 0) >> 2] | 0;
     $152 = i64toi32_i32$3;
     $152$hi = i64toi32_i32$2;
     i64toi32_i32$0 = $10;
     i64toi32_i32$2 = HEAP32[($10 + 192 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[($10 + 196 | 0) >> 2] | 0;
     $153 = i64toi32_i32$2;
     $153$hi = i64toi32_i32$3;
     __floatsitf($10 + 32 | 0 | 0, HEAP32[($10 + 140 | 0) >> 2] | 0 | 0);
     $157 = 8;
     i64toi32_i32$0 = ($10 + 32 | 0) + $157 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $161 = i64toi32_i32$3;
     $161$hi = i64toi32_i32$2;
     i64toi32_i32$0 = $10;
     i64toi32_i32$2 = HEAP32[($10 + 32 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[($10 + 36 | 0) >> 2] | 0;
     $162$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $153$hi;
     i64toi32_i32$3 = $152$hi;
     i64toi32_i32$3 = $162$hi;
     $589 = i64toi32_i32$2;
     i64toi32_i32$3 = $161$hi;
     i64toi32_i32$3 = $153$hi;
     i64toi32_i32$2 = $152$hi;
     i64toi32_i32$0 = $162$hi;
     i64toi32_i32$1 = $161$hi;
     __multf3($10 + 16 | 0 | 0, $153 | 0, i64toi32_i32$3 | 0, $152 | 0, i64toi32_i32$2 | 0, $589 | 0, i64toi32_i32$0 | 0, $161 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$2 = ($10 + 16 | 0) + $157 | 0;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $168 = i64toi32_i32$1;
     $168$hi = i64toi32_i32$0;
     i64toi32_i32$2 = $10;
     i64toi32_i32$0 = HEAP32[($10 + 16 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[($10 + 20 | 0) >> 2] | 0;
     $169 = i64toi32_i32$0;
     $169$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $168$hi;
     i64toi32_i32$0 = $10;
     HEAP32[($10 + 152 | 0) >> 2] = $168;
     HEAP32[($10 + 156 | 0) >> 2] = i64toi32_i32$1;
     i64toi32_i32$1 = $169$hi;
     i64toi32_i32$0 = $10;
     HEAP32[($10 + 144 | 0) >> 2] = $169;
     HEAP32[($10 + 148 | 0) >> 2] = i64toi32_i32$1;
     $170 = 24;
     i64toi32_i32$2 = ($10 + 160 | 0) + $170 | 0;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $620 = i64toi32_i32$1;
     i64toi32_i32$1 = ($10 + 104 | 0) + $170 | 0;
     HEAP32[i64toi32_i32$1 >> 2] = $620;
     HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
     $178 = 16;
     i64toi32_i32$2 = ($10 + 160 | 0) + $178 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $636 = i64toi32_i32$0;
     i64toi32_i32$0 = ($10 + 104 | 0) + $178 | 0;
     HEAP32[i64toi32_i32$0 >> 2] = $636;
     HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
     i64toi32_i32$2 = ($10 + 160 | 0) + $157 | 0;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $652 = i64toi32_i32$1;
     i64toi32_i32$1 = ($10 + 104 | 0) + $157 | 0;
     HEAP32[i64toi32_i32$1 >> 2] = $652;
     HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
     i64toi32_i32$2 = $10;
     i64toi32_i32$0 = HEAP32[($10 + 160 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[($10 + 164 | 0) >> 2] | 0;
     $656 = i64toi32_i32$0;
     i64toi32_i32$0 = $10;
     HEAP32[($10 + 104 | 0) >> 2] = $656;
     HEAP32[($10 + 108 | 0) >> 2] = i64toi32_i32$1;
     i64toi32_i32$2 = $10;
     i64toi32_i32$1 = HEAP32[($10 + 152 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[($10 + 156 | 0) >> 2] | 0;
     $194 = i64toi32_i32$1;
     $194$hi = i64toi32_i32$0;
     i64toi32_i32$2 = $10;
     i64toi32_i32$0 = HEAP32[($10 + 144 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[($10 + 148 | 0) >> 2] | 0;
     $669$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $194$hi;
     i64toi32_i32$1 = $669$hi;
     $74 = i64toi32_i32$0;
     i64toi32_i32$0 = $194$hi;
     Point3__mult_by_28long_20double_29($10 + 104 | 0 | 0, $74 | 0, i64toi32_i32$1 | 0, $194 | 0, i64toi32_i32$0 | 0);
     Point3__add_28Point3_20const__29($10 + 104 | 0 | 0, HEAP32[($10 + 308 | 0) >> 2] | 0 | 0);
     std____2__vector_Point3_2c_20std____2__allocator_Point3__20___push_back_28Point3_20const__29($10 + 232 | 0 | 0, $10 + 104 | 0 | 0);
     FUNCTION_TABLE[94 | 0]($10 + 104 | 0) | 0;
     HEAP32[($10 + 140 | 0) >> 2] = (HEAP32[($10 + 140 | 0) >> 2] | 0) + 1 | 0;
     continue label$9;
    };
   }
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($0 | 0, $10 + 232 | 0 | 0) | 0;
   HEAP32[($0 + 12 | 0) >> 2] = HEAP32[($10 + 292 | 0) >> 2] | 0;
   FUNCTION_TABLE[94 | 0]($10 + 160 | 0) | 0;
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($10 + 232 | 0 | 0) | 0;
  }
  __stack_pointer = $10 + 320 | 0;
  return;
 }
 
 function Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29($0, $1, $2, $3, $4, $5, $6) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $9 = 0, $82 = 0, $106 = 0, $130 = 0, $154 = 0, $170 = 0, $189 = 0, $228 = 0, $247 = 0, $79 = 0, $103 = 0, $127 = 0, $151 = 0, $173 = 0, $192 = 0, $231 = 0, $250 = 0, $59 = 0, $75 = 0, $84 = 0, $88 = 0, $92 = 0, $101 = 0, $108 = 0, $112 = 0, $116 = 0, $123 = 0, $132 = 0, $136 = 0, $140 = 0, $149 = 0, $156 = 0, $160 = 0, $164 = 0, $175 = 0, $179 = 0, $183 = 0, $194 = 0, $198 = 0, $202 = 0, $233 = 0, $237 = 0, $241 = 0, $252 = 0, $256 = 0, $260 = 0, $460 = 0, $492 = 0, $502 = 0, $512 = 0, $522 = 0, $545 = 0, $555 = 0, $565 = 0, $575 = 0, $598 = 0, $608 = 0, $618 = 0, $628 = 0, $651 = 0, $661 = 0, $671 = 0, $681 = 0, $693 = 0, $703 = 0, $713 = 0, $723 = 0, $735 = 0, $745 = 0, $755 = 0, $765 = 0, $811 = 0, $821 = 0, $831 = 0, $841 = 0, $853 = 0, $863 = 0, $873 = 0, $883 = 0;
  $9 = __stack_pointer - 384 | 0;
  __stack_pointer = $9;
  HEAP32[($9 + 380 | 0) >> 2] = $0;
  HEAP32[($9 + 376 | 0) >> 2] = $1;
  HEAP32[($9 + 372 | 0) >> 2] = $2;
  HEAP32[($9 + 368 | 0) >> 2] = $3;
  HEAP32[($9 + 364 | 0) >> 2] = $4;
  HEAP32[($9 + 360 | 0) >> 2] = $5;
  HEAP32[($9 + 356 | 0) >> 2] = $6;
  HEAP32[($9 + 352 | 0) >> 2] = hexmapf__num_divisions_28int_29(HEAP32[($9 + 368 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($9 + 360 | 0) >> 2] | 0 | 0) == (-1 | 0) & 1 | 0)) {
    break label$1
   }
   HEAP32[($9 + 360 | 0) >> 2] = (HEAP32[($9 + 372 | 0) >> 2] | 0) - (HEAP32[($9 + 364 | 0) >> 2] | 0) | 0;
  }
  label$2 : {
   if (!((HEAP32[($9 + 360 | 0) >> 2] | 0 | 0) < (0 | 0) & 1 | 0)) {
    break label$2
   }
   HEAP32[($9 + 360 | 0) >> 2] = 0;
  }
  label$3 : {
   if (!((HEAP32[($9 + 356 | 0) >> 2] | 0 | 0) == (-1 | 0) & 1 | 0)) {
    break label$3
   }
   HEAP32[($9 + 356 | 0) >> 2] = (HEAP32[($9 + 372 | 0) >> 2] | 0) + (HEAP32[($9 + 364 | 0) >> 2] | 0) | 0;
  }
  label$4 : {
   if (!((HEAP32[($9 + 356 | 0) >> 2] | 0 | 0) > (HEAP32[($9 + 352 | 0) >> 2] | 0 | 0) & 1 | 0)) {
    break label$4
   }
   HEAP32[($9 + 356 | 0) >> 2] = HEAP32[($9 + 352 | 0) >> 2] | 0;
  }
  HEAP32[($9 + 312 | 0) >> 2] = $9 + 352 | 0;
  HEAP32[($9 + 316 | 0) >> 2] = $9 + 360 | 0;
  HEAP32[($9 + 320 | 0) >> 2] = $9 + 356 | 0;
  $59 = 8;
  HEAP32[(($9 + 8 | 0) + $59 | 0) >> 2] = HEAP32[(($9 + 312 | 0) + $59 | 0) >> 2] | 0;
  i64toi32_i32$2 = $9;
  i64toi32_i32$0 = HEAP32[($9 + 312 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($9 + 316 | 0) >> 2] | 0;
  $460 = i64toi32_i32$0;
  i64toi32_i32$0 = $9;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $460;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___function_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20void__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_29(i64toi32_i32$0 + 328 | 0 | 0, i64toi32_i32$0 + 8 | 0 | 0) | 0;
  label$5 : {
   label$6 : {
    if (HEAP32[((HEAP32[(i64toi32_i32$0 + 376 | 0) >> 2] | 0) + 96 | 0) >> 2] | 0) {
     break label$6
    }
    $75 = HEAP32[($9 + 376 | 0) >> 2] | 0;
    break label$5;
   }
   $75 = (HEAP32[($9 + 376 | 0) >> 2] | 0) + 32 | 0;
  }
  $79 = $75;
  $82 = $9 + 280 | 0;
  i64toi32_i32$2 = $79;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $492 = i64toi32_i32$1;
  i64toi32_i32$1 = $82;
  HEAP32[i64toi32_i32$1 >> 2] = $492;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $84 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $84 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $502 = i64toi32_i32$0;
  i64toi32_i32$0 = $82 + $84 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $502;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $88 = 16;
  i64toi32_i32$2 = $79 + $88 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $512 = i64toi32_i32$1;
  i64toi32_i32$1 = $82 + $88 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $512;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $92 = 8;
  i64toi32_i32$2 = $79 + $92 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $522 = i64toi32_i32$0;
  i64toi32_i32$0 = $82 + $92 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $522;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  label$7 : {
   label$8 : {
    if (HEAP32[((HEAP32[($9 + 376 | 0) >> 2] | 0) + 96 | 0) >> 2] | 0) {
     break label$8
    }
    $101 = (HEAP32[($9 + 376 | 0) >> 2] | 0) + 64 | 0;
    break label$7;
   }
   $101 = HEAP32[($9 + 376 | 0) >> 2] | 0;
  }
  $103 = $101;
  $106 = $9 + 248 | 0;
  i64toi32_i32$2 = $103;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $545 = i64toi32_i32$1;
  i64toi32_i32$1 = $106;
  HEAP32[i64toi32_i32$1 >> 2] = $545;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $108 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $108 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $555 = i64toi32_i32$0;
  i64toi32_i32$0 = $106 + $108 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $555;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $112 = 16;
  i64toi32_i32$2 = $103 + $112 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $565 = i64toi32_i32$1;
  i64toi32_i32$1 = $106 + $112 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $565;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $116 = 8;
  i64toi32_i32$2 = $103 + $116 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $575 = i64toi32_i32$0;
  i64toi32_i32$0 = $106 + $116 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $575;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  label$9 : {
   label$10 : {
    if (HEAP32[((HEAP32[($9 + 376 | 0) >> 2] | 0) + 96 | 0) >> 2] | 0) {
     break label$10
    }
    $123 = HEAP32[($9 + 376 | 0) >> 2] | 0;
    break label$9;
   }
   $123 = (HEAP32[($9 + 376 | 0) >> 2] | 0) + 64 | 0;
  }
  $127 = $123;
  $130 = $9 + 216 | 0;
  i64toi32_i32$2 = $127;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $598 = i64toi32_i32$1;
  i64toi32_i32$1 = $130;
  HEAP32[i64toi32_i32$1 >> 2] = $598;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $132 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $132 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $608 = i64toi32_i32$0;
  i64toi32_i32$0 = $130 + $132 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $608;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $136 = 16;
  i64toi32_i32$2 = $127 + $136 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $618 = i64toi32_i32$1;
  i64toi32_i32$1 = $130 + $136 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $618;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $140 = 8;
  i64toi32_i32$2 = $127 + $140 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $628 = i64toi32_i32$0;
  i64toi32_i32$0 = $130 + $140 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $628;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  label$11 : {
   label$12 : {
    if (HEAP32[((HEAP32[($9 + 376 | 0) >> 2] | 0) + 96 | 0) >> 2] | 0) {
     break label$12
    }
    $149 = (HEAP32[($9 + 376 | 0) >> 2] | 0) + 32 | 0;
    break label$11;
   }
   $149 = HEAP32[($9 + 376 | 0) >> 2] | 0;
  }
  $151 = $149;
  $154 = $9 + 184 | 0;
  i64toi32_i32$2 = $151;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $651 = i64toi32_i32$1;
  i64toi32_i32$1 = $154;
  HEAP32[i64toi32_i32$1 >> 2] = $651;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $156 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $156 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $661 = i64toi32_i32$0;
  i64toi32_i32$0 = $154 + $156 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $661;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $160 = 16;
  i64toi32_i32$2 = $151 + $160 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $671 = i64toi32_i32$1;
  i64toi32_i32$1 = $154 + $160 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $671;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $164 = 8;
  i64toi32_i32$2 = $151 + $164 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $681 = i64toi32_i32$0;
  i64toi32_i32$0 = $154 + $164 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $681;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $170 = $9 + 136 | 0;
  $173 = $9 + 280 | 0;
  i64toi32_i32$2 = $173;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $693 = i64toi32_i32$1;
  i64toi32_i32$1 = $170;
  HEAP32[i64toi32_i32$1 >> 2] = $693;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $175 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $175 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $703 = i64toi32_i32$0;
  i64toi32_i32$0 = $170 + $175 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $703;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $179 = 16;
  i64toi32_i32$2 = $173 + $179 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $713 = i64toi32_i32$1;
  i64toi32_i32$1 = $170 + $179 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $713;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $183 = 8;
  i64toi32_i32$2 = $173 + $183 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $723 = i64toi32_i32$0;
  i64toi32_i32$0 = $170 + $183 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $723;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $189 = $9 + 104 | 0;
  $192 = $9 + 248 | 0;
  i64toi32_i32$2 = $192;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $735 = i64toi32_i32$1;
  i64toi32_i32$1 = $189;
  HEAP32[i64toi32_i32$1 >> 2] = $735;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $194 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $194 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $745 = i64toi32_i32$0;
  i64toi32_i32$0 = $189 + $194 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $745;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $198 = 16;
  i64toi32_i32$2 = $192 + $198 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $755 = i64toi32_i32$1;
  i64toi32_i32$1 = $189 + $198 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $755;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $202 = 8;
  i64toi32_i32$2 = $192 + $202 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $765 = i64toi32_i32$0;
  i64toi32_i32$0 = $189 + $202 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $765;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3_2c_20Point3_29_20const($9 + 168 | 0 | 0, $9 + 328 | 0 | 0, $9 + 136 | 0 | 0, $9 + 104 | 0 | 0);
  FUNCTION_TABLE[94 | 0]($9 + 104 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 136 | 0) | 0;
  $228 = $9 + 56 | 0;
  $231 = $9 + 216 | 0;
  i64toi32_i32$2 = $231;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $811 = i64toi32_i32$1;
  i64toi32_i32$1 = $228;
  HEAP32[i64toi32_i32$1 >> 2] = $811;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $233 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $233 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $821 = i64toi32_i32$0;
  i64toi32_i32$0 = $228 + $233 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $821;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $237 = 16;
  i64toi32_i32$2 = $231 + $237 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $831 = i64toi32_i32$1;
  i64toi32_i32$1 = $228 + $237 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $831;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $241 = 8;
  i64toi32_i32$2 = $231 + $241 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $841 = i64toi32_i32$0;
  i64toi32_i32$0 = $228 + $241 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $841;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $247 = $9 + 24 | 0;
  $250 = $9 + 184 | 0;
  i64toi32_i32$2 = $250;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $853 = i64toi32_i32$1;
  i64toi32_i32$1 = $247;
  HEAP32[i64toi32_i32$1 >> 2] = $853;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $252 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $252 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $863 = i64toi32_i32$0;
  i64toi32_i32$0 = $247 + $252 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $863;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $256 = 16;
  i64toi32_i32$2 = $250 + $256 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $873 = i64toi32_i32$1;
  i64toi32_i32$1 = $247 + $256 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $873;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $260 = 8;
  i64toi32_i32$2 = $250 + $260 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $883 = i64toi32_i32$0;
  i64toi32_i32$0 = $247 + $260 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $883;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3_2c_20Point3_29_20const($9 + 88 | 0 | 0, $9 + 328 | 0 | 0, $9 + 56 | 0 | 0, $9 + 24 | 0 | 0);
  FUNCTION_TABLE[94 | 0]($9 + 24 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 56 | 0) | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($0 | 0, $9 + 168 | 0 | 0) | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($0 + 12 | 0 | 0, $9 + 88 | 0 | 0) | 0;
  HEAP32[($0 + 24 | 0) >> 2] = HEAP32[($9 + 360 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($9 + 88 | 0 | 0) | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($9 + 168 | 0 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 184 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 216 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 248 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($9 + 280 | 0) | 0;
  std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____function_28_29($9 + 328 | 0 | 0) | 0;
  __stack_pointer = $9 + 384 | 0;
  return;
 }
 
 function std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___function_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20void__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____value_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20void__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($5 | 0, std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____type___20std____2__move_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__29($1 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3_2c_20Point3_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3___2c_20Point3___29_20const($0 | 0, HEAP32[($6 + 8 | 0) >> 2] | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29($2 | 0) | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29($3 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__function_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____function_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______value_func_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____type___20std____2__move_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____value_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20void__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  $7 = Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___allocator_28_29($4 | 0) | 0;
  std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____value_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($5 | 0, $7 | 0, $4 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3___2c_20Point3___29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0, $15 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  $7 = HEAP32[($6 + 8 | 0) >> 2] | 0;
  label$1 : {
   if (!((HEAP32[($7 + 16 | 0) >> 2] | 0 | 0) == (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____throw_bad_function_call_28_29();
   abort();
  }
  $15 = HEAP32[($7 + 16 | 0) >> 2] | 0;
  ((((wasm2js_i32$1 = $0, wasm2js_i32$2 = $15), wasm2js_i32$3 = Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0), wasm2js_i32$4 = Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[$6 >> 2] | 0 | 0) | 0), wasm2js_i32$0 = HEAP32[((HEAP32[$15 >> 2] | 0) + 24 | 0) >> 2] | 0 | 0), FUNCTION_TABLE[wasm2js_i32$0](wasm2js_i32$1 | 0, wasm2js_i32$2 | 0, wasm2js_i32$3 | 0, wasm2js_i32$4 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______value_func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $11 = 0, $21 = 0, $24 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 16 | 0) >> 2] | 0 | 0) == ($4 | 0) & 1 | 0)) {
     break label$2
    }
    $11 = HEAP32[($4 + 16 | 0) >> 2] | 0;
    FUNCTION_TABLE[HEAP32[((HEAP32[$11 >> 2] | 0) + 16 | 0) >> 2] | 0 | 0]($11);
    break label$1;
   }
   label$3 : {
    if (!((HEAP32[($4 + 16 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
     break label$3
    }
    $21 = HEAP32[($4 + 16 | 0) >> 2] | 0;
    FUNCTION_TABLE[HEAP32[((HEAP32[$21 >> 2] | 0) + 20 | 0) >> 2] | 0 | 0]($21);
   }
  }
  $24 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $24 | 0;
 }
 
 function Point3__lazy_row_points_quaternion_28int_2c_20Point3_20const__2c_20Point3_20const__2c_20int_2c_20int_2c_20int_2c_20int_29($0, $1, $2, $3, $4, $5, $6, $7) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  $7 = $7 | 0;
  var $10 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $20 = 0, $73 = 0, $130 = 0, $177 = 0, $21 = 0, $51 = 0, $127 = 0, $174 = 0, $23 = 0, $27 = 0, $31 = 0, $45 = 0, $48 = 0, $109$hi = 0, $110$hi = 0, $114 = 0, $118$hi = 0, $119$hi = 0, $132 = 0, $136 = 0, $140 = 0, $156$hi = 0, $157$hi = 0, $161 = 0, $165$hi = 0, $166$hi = 0, $179 = 0, $183 = 0, $187 = 0, $268 = 0, $278 = 0, $288 = 0, $298 = 0, $310 = 0, $107 = 0, $107$hi = 0, $450 = 0, $109 = 0, $110 = 0, $118 = 0, $480 = 0, $125 = 0, $125$hi = 0, $126 = 0, $126$hi = 0, $505 = 0, $515 = 0, $525 = 0, $535 = 0, $156 = 0, $157 = 0, $165 = 0, $589 = 0, $172 = 0, $172$hi = 0, $173 = 0, $173$hi = 0, $614 = 0, $624 = 0, $634 = 0, $644 = 0;
  $10 = __stack_pointer - 320 | 0;
  __stack_pointer = $10;
  HEAP32[($10 + 316 | 0) >> 2] = $0;
  HEAP32[($10 + 312 | 0) >> 2] = $1;
  HEAP32[($10 + 308 | 0) >> 2] = $2;
  HEAP32[($10 + 304 | 0) >> 2] = $3;
  HEAP32[($10 + 300 | 0) >> 2] = $4;
  HEAP32[($10 + 296 | 0) >> 2] = $5;
  HEAP32[($10 + 292 | 0) >> 2] = $6;
  HEAP32[($10 + 288 | 0) >> 2] = $7;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($10 + 300 | 0) >> 2] | 0 | 0) <= (0 | 0) & 1 | 0)) {
     break label$2
    }
    $20 = $10 + 248 | 0;
    HEAP32[($10 + 244 | 0) >> 2] = $20;
    $21 = HEAP32[($10 + 308 | 0) >> 2] | 0;
    i64toi32_i32$2 = $21;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $268 = i64toi32_i32$0;
    i64toi32_i32$0 = $20;
    HEAP32[i64toi32_i32$0 >> 2] = $268;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $23 = 21;
    i64toi32_i32$2 = i64toi32_i32$2 + $23 | 0;
    i64toi32_i32$1 = HEAPU8[i64toi32_i32$2 >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 1 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 2 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 3 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;
    i64toi32_i32$0 = HEAPU8[(i64toi32_i32$2 + 4 | 0) >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 5 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 6 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 7 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;
    $278 = i64toi32_i32$1;
    i64toi32_i32$1 = $20 + $23 | 0;
    $73 = $278;
    HEAP8[i64toi32_i32$1 >> 0] = $73;
    HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $73 >>> 8 | 0;
    HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $73 >>> 16 | 0;
    HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $73 >>> 24 | 0;
    HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;
    HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;
    HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;
    HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;
    $27 = 16;
    i64toi32_i32$2 = $21 + $27 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $288 = i64toi32_i32$0;
    i64toi32_i32$0 = $20 + $27 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $288;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $31 = 8;
    i64toi32_i32$2 = $21 + $31 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $298 = i64toi32_i32$1;
    i64toi32_i32$1 = $20 + $31 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $298;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    HEAP32[($10 + 280 | 0) >> 2] = $10 + 248 | 0;
    HEAP32[($10 + 284 | 0) >> 2] = 1;
    i64toi32_i32$2 = $10;
    i64toi32_i32$0 = HEAP32[($10 + 280 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[($10 + 284 | 0) >> 2] | 0;
    $310 = i64toi32_i32$0;
    i64toi32_i32$0 = $10;
    HEAP32[($10 + 8 | 0) >> 2] = $310;
    HEAP32[($10 + 12 | 0) >> 2] = i64toi32_i32$1;
    std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std__initializer_list_Point3__29($0 | 0, $10 + 8 | 0 | 0) | 0;
    HEAP32[($0 + 12 | 0) >> 2] = 0;
    $45 = $10 + 248 | 0;
    $48 = $45 + 32 | 0;
    label$3 : while (1) {
     $51 = $48 + -32 | 0;
     FUNCTION_TABLE[94 | 0]($51) | 0;
     $48 = $51;
     if (!(($51 | 0) == ($45 | 0) & 1 | 0)) {
      continue label$3
     }
     break label$3;
    };
    break label$1;
   }
   label$4 : {
    if (!((HEAP32[($10 + 292 | 0) >> 2] | 0 | 0) == (-1 | 0) & 1 | 0)) {
     break label$4
    }
    HEAP32[($10 + 292 | 0) >> 2] = (HEAP32[($10 + 312 | 0) >> 2] | 0) - (HEAP32[($10 + 296 | 0) >> 2] | 0) | 0;
   }
   label$5 : {
    if (!((HEAP32[($10 + 292 | 0) >> 2] | 0 | 0) < (0 | 0) & 1 | 0)) {
     break label$5
    }
    HEAP32[($10 + 292 | 0) >> 2] = 0;
   }
   label$6 : {
    if (!((HEAP32[($10 + 288 | 0) >> 2] | 0 | 0) == (-1 | 0) & 1 | 0)) {
     break label$6
    }
    HEAP32[($10 + 288 | 0) >> 2] = (HEAP32[($10 + 312 | 0) >> 2] | 0) + (HEAP32[($10 + 296 | 0) >> 2] | 0) | 0;
   }
   label$7 : {
    label$8 : {
     if ((HEAP32[($10 + 288 | 0) >> 2] | 0 | 0) > (HEAP32[($10 + 300 | 0) >> 2] | 0 | 0) & 1 | 0) {
      break label$8
     }
     if (!((HEAP32[($10 + 288 | 0) >> 2] | 0 | 0) < (0 | 0) & 1 | 0)) {
      break label$7
     }
    }
    HEAP32[($10 + 288 | 0) >> 2] = HEAP32[($10 + 300 | 0) >> 2] | 0;
   }
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28_29($10 + 232 | 0 | 0) | 0;
   Point3__angle_between_28Point3_20const__29_20const($10 + 80 | 0 | 0, HEAP32[($10 + 308 | 0) >> 2] | 0 | 0, HEAP32[($10 + 304 | 0) >> 2] | 0 | 0);
   i64toi32_i32$2 = $10;
   i64toi32_i32$1 = HEAP32[($10 + 80 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[($10 + 84 | 0) >> 2] | 0;
   $107 = i64toi32_i32$1;
   $107$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $10;
   i64toi32_i32$0 = HEAP32[($10 + 88 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[($10 + 92 | 0) >> 2] | 0;
   $450 = i64toi32_i32$0;
   i64toi32_i32$0 = $10;
   HEAP32[($10 + 216 | 0) >> 2] = $450;
   HEAP32[($10 + 220 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$1 = $107$hi;
   i64toi32_i32$0 = $10;
   HEAP32[($10 + 208 | 0) >> 2] = $107;
   HEAP32[($10 + 212 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$2 = $10;
   i64toi32_i32$1 = HEAP32[($10 + 216 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[($10 + 220 | 0) >> 2] | 0;
   $109 = i64toi32_i32$1;
   $109$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $10;
   i64toi32_i32$0 = HEAP32[($10 + 208 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[($10 + 212 | 0) >> 2] | 0;
   $110 = i64toi32_i32$0;
   $110$hi = i64toi32_i32$1;
   __floatsitf($10 + 64 | 0 | 0, HEAP32[($10 + 300 | 0) >> 2] | 0 | 0);
   $114 = 8;
   i64toi32_i32$2 = ($10 + 64 | 0) + $114 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $118 = i64toi32_i32$1;
   $118$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $10;
   i64toi32_i32$0 = HEAP32[($10 + 64 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[($10 + 68 | 0) >> 2] | 0;
   $119$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $110$hi;
   i64toi32_i32$1 = $109$hi;
   i64toi32_i32$1 = $119$hi;
   $480 = i64toi32_i32$0;
   i64toi32_i32$1 = $118$hi;
   i64toi32_i32$1 = $110$hi;
   i64toi32_i32$0 = $109$hi;
   i64toi32_i32$2 = $119$hi;
   i64toi32_i32$3 = $118$hi;
   __divtf3($10 + 48 | 0 | 0, $110 | 0, i64toi32_i32$1 | 0, $109 | 0, i64toi32_i32$0 | 0, $480 | 0, i64toi32_i32$2 | 0, $118 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$0 = ($10 + 48 | 0) + $114 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $125 = i64toi32_i32$3;
   $125$hi = i64toi32_i32$2;
   i64toi32_i32$0 = $10;
   i64toi32_i32$2 = HEAP32[($10 + 48 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[($10 + 52 | 0) >> 2] | 0;
   $126 = i64toi32_i32$2;
   $126$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $125$hi;
   i64toi32_i32$2 = $10;
   HEAP32[($10 + 200 | 0) >> 2] = $125;
   HEAP32[($10 + 204 | 0) >> 2] = i64toi32_i32$3;
   i64toi32_i32$3 = $126$hi;
   i64toi32_i32$2 = $10;
   HEAP32[($10 + 192 | 0) >> 2] = $126;
   HEAP32[($10 + 196 | 0) >> 2] = i64toi32_i32$3;
   $127 = HEAP32[($10 + 308 | 0) >> 2] | 0;
   $130 = $10 + 160 | 0;
   i64toi32_i32$0 = $127;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $505 = i64toi32_i32$3;
   i64toi32_i32$3 = $130;
   HEAP32[i64toi32_i32$3 >> 2] = $505;
   HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
   $132 = 24;
   i64toi32_i32$0 = i64toi32_i32$0 + $132 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $515 = i64toi32_i32$2;
   i64toi32_i32$2 = $130 + $132 | 0;
   HEAP32[i64toi32_i32$2 >> 2] = $515;
   HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
   $136 = 16;
   i64toi32_i32$0 = $127 + $136 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $525 = i64toi32_i32$3;
   i64toi32_i32$3 = $130 + $136 | 0;
   HEAP32[i64toi32_i32$3 >> 2] = $525;
   HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
   $140 = 8;
   i64toi32_i32$0 = $127 + $140 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $535 = i64toi32_i32$2;
   i64toi32_i32$2 = $130 + $140 | 0;
   HEAP32[i64toi32_i32$2 >> 2] = $535;
   HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
   Point3__cross_28Point3_20const__29($10 + 160 | 0 | 0, HEAP32[($10 + 304 | 0) >> 2] | 0 | 0);
   HEAP32[($10 + 140 | 0) >> 2] = HEAP32[($10 + 292 | 0) >> 2] | 0;
   label$9 : {
    label$10 : while (1) {
     if (!((HEAP32[($10 + 140 | 0) >> 2] | 0 | 0) <= (HEAP32[($10 + 288 | 0) >> 2] | 0 | 0) & 1 | 0)) {
      break label$9
     }
     i64toi32_i32$0 = $10;
     i64toi32_i32$3 = HEAP32[($10 + 200 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[($10 + 204 | 0) >> 2] | 0;
     $156 = i64toi32_i32$3;
     $156$hi = i64toi32_i32$2;
     i64toi32_i32$0 = $10;
     i64toi32_i32$2 = HEAP32[($10 + 192 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[($10 + 196 | 0) >> 2] | 0;
     $157 = i64toi32_i32$2;
     $157$hi = i64toi32_i32$3;
     __floatsitf($10 + 32 | 0 | 0, HEAP32[($10 + 140 | 0) >> 2] | 0 | 0);
     $161 = 8;
     i64toi32_i32$0 = ($10 + 32 | 0) + $161 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $165 = i64toi32_i32$3;
     $165$hi = i64toi32_i32$2;
     i64toi32_i32$0 = $10;
     i64toi32_i32$2 = HEAP32[($10 + 32 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[($10 + 36 | 0) >> 2] | 0;
     $166$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $157$hi;
     i64toi32_i32$3 = $156$hi;
     i64toi32_i32$3 = $166$hi;
     $589 = i64toi32_i32$2;
     i64toi32_i32$3 = $165$hi;
     i64toi32_i32$3 = $157$hi;
     i64toi32_i32$2 = $156$hi;
     i64toi32_i32$0 = $166$hi;
     i64toi32_i32$1 = $165$hi;
     __multf3($10 + 16 | 0 | 0, $157 | 0, i64toi32_i32$3 | 0, $156 | 0, i64toi32_i32$2 | 0, $589 | 0, i64toi32_i32$0 | 0, $165 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$2 = ($10 + 16 | 0) + $161 | 0;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $172 = i64toi32_i32$1;
     $172$hi = i64toi32_i32$0;
     i64toi32_i32$2 = $10;
     i64toi32_i32$0 = HEAP32[($10 + 16 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[($10 + 20 | 0) >> 2] | 0;
     $173 = i64toi32_i32$0;
     $173$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $172$hi;
     i64toi32_i32$0 = $10;
     HEAP32[($10 + 152 | 0) >> 2] = $172;
     HEAP32[($10 + 156 | 0) >> 2] = i64toi32_i32$1;
     i64toi32_i32$1 = $173$hi;
     i64toi32_i32$0 = $10;
     HEAP32[($10 + 144 | 0) >> 2] = $173;
     HEAP32[($10 + 148 | 0) >> 2] = i64toi32_i32$1;
     $174 = HEAP32[($10 + 308 | 0) >> 2] | 0;
     $177 = $10 + 104 | 0;
     i64toi32_i32$2 = $174;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $614 = i64toi32_i32$1;
     i64toi32_i32$1 = $177;
     HEAP32[i64toi32_i32$1 >> 2] = $614;
     HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
     $179 = 24;
     i64toi32_i32$2 = i64toi32_i32$2 + $179 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $624 = i64toi32_i32$0;
     i64toi32_i32$0 = $177 + $179 | 0;
     HEAP32[i64toi32_i32$0 >> 2] = $624;
     HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
     $183 = 16;
     i64toi32_i32$2 = $174 + $183 | 0;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $634 = i64toi32_i32$1;
     i64toi32_i32$1 = $177 + $183 | 0;
     HEAP32[i64toi32_i32$1 >> 2] = $634;
     HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
     $187 = 8;
     i64toi32_i32$2 = $174 + $187 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $644 = i64toi32_i32$0;
     i64toi32_i32$0 = $177 + $187 | 0;
     HEAP32[i64toi32_i32$0 >> 2] = $644;
     HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
     Point3__rotate_28Point3_20const__2c_20long_20double_20const__29($10 + 104 | 0 | 0, HEAP32[($10 + 308 | 0) >> 2] | 0 | 0, $10 + 144 | 0 | 0);
     std____2__vector_Point3_2c_20std____2__allocator_Point3__20___push_back_28Point3_20const__29($10 + 232 | 0 | 0, $10 + 104 | 0 | 0);
     FUNCTION_TABLE[94 | 0]($10 + 104 | 0) | 0;
     HEAP32[($10 + 140 | 0) >> 2] = (HEAP32[($10 + 140 | 0) >> 2] | 0) + 1 | 0;
     continue label$10;
    };
   }
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20const__29($0 | 0, $10 + 232 | 0 | 0) | 0;
   HEAP32[($0 + 12 | 0) >> 2] = HEAP32[($10 + 292 | 0) >> 2] | 0;
   FUNCTION_TABLE[94 | 0]($10 + 160 | 0) | 0;
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($10 + 232 | 0 | 0) | 0;
  }
  __stack_pointer = $10 + 320 | 0;
  return;
 }
 
 function std____2____wrap_iter_Point3____base_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_____base_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____wrap_iter_Point3______wrap_iter_28Point3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  return $5 | 0;
 }
 
 function __DOUBLE_BITS_28double_29($0) {
  $0 = +$0;
  var $3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAPF64[($3 + 8 | 0) >> 3] = $0;
  HEAPF64[$3 >> 3] = +HEAPF64[($3 + 8 | 0) >> 3];
  i64toi32_i32$0 = HEAP32[$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
  return i64toi32_i32$0 | 0;
 }
 
 function std____2____wrap_iter_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20_______wrap_iter_28std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[($4 + 8 | 0) >> 2] | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3__20_____compressed_pair_std__nullptr_t_2c_20std____2____default_init_tag__28std__nullptr_t___2c_20std____2____default_init_tag___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____default_init_tag___20std____2__forward_std____2____default_init_tag__28std____2__remove_reference_std____2____default_init_tag___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($6 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__2c_201_2c_20true_____compressed_pair_elem_28std____2____default_init_tag_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  std____2__allocator_Point3___allocator_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2__allocator_Point3___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20___construct_Point3_2c_20Point3_20const___28std____2__allocator_Point3___2c_20Point3__2c_20Point3_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_Point3_2c_20Point3_20const___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3___2c_20Point3__2c_20Point3_20const__29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____recommend_28unsigned_20long_29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $36 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 24 | 0) >> 2] = $0;
  HEAP32[($4 + 20 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___max_size_28_29_20const($5 | 0) | 0;
  label$1 : {
   if (!((HEAP32[($4 + 20 | 0) >> 2] | 0) >>> 0 > (HEAP32[($4 + 16 | 0) >> 2] | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____vector_base_common_true_____throw_length_error_28_29_20const($5 | 0);
   abort();
  }
  HEAP32[($4 + 12 | 0) >> 2] = std____2__vector_Point3_2c_20std____2__allocator_Point3__20___capacity_28_29_20const($5 | 0) | 0;
  label$2 : {
   label$3 : {
    if (!((HEAP32[($4 + 12 | 0) >> 2] | 0) >>> 0 >= ((HEAP32[($4 + 16 | 0) >> 2] | 0) >>> 1 | 0) >>> 0 & 1 | 0)) {
     break label$3
    }
    HEAP32[($4 + 28 | 0) >> 2] = HEAP32[($4 + 16 | 0) >> 2] | 0;
    break label$2;
   }
   HEAP32[($4 + 8 | 0) >> 2] = (HEAP32[($4 + 12 | 0) >> 2] | 0) << 1 | 0;
   HEAP32[($4 + 28 | 0) >> 2] = HEAP32[(unsigned_20long_20const__20std____2__max_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($4 + 8 | 0 | 0, $4 + 20 | 0 | 0) | 0) >> 2] | 0;
  }
  $36 = HEAP32[($4 + 28 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $36 | 0;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______split_buffer_28unsigned_20long_2c_20unsigned_20long_2c_20std____2__allocator_Point3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $7 = 0, $19 = 0, $26 = 0, $31 = 0, $33 = 0;
  $6 = __stack_pointer - 32 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 24 | 0) >> 2] = $0;
  HEAP32[($6 + 20 | 0) >> 2] = $1;
  HEAP32[($6 + 16 | 0) >> 2] = $2;
  HEAP32[($6 + 12 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 24 | 0) >> 2] | 0;
  HEAP32[($6 + 28 | 0) >> 2] = $7;
  HEAP32[($6 + 8 | 0) >> 2] = 0;
  std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3_______compressed_pair_std__nullptr_t_2c_20std____2__allocator_Point3____28std__nullptr_t___2c_20std____2__allocator_Point3___29($7 + 12 | 0 | 0, $6 + 8 | 0 | 0, HEAP32[($6 + 12 | 0) >> 2] | 0 | 0) | 0;
  label$1 : {
   label$2 : {
    if (!(HEAP32[($6 + 20 | 0) >> 2] | 0)) {
     break label$2
    }
    $19 = std____2__allocator_traits_std____2__allocator_Point3__20___allocate_28std____2__allocator_Point3___2c_20unsigned_20long_29(std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______alloc_28_29($7 | 0) | 0 | 0, HEAP32[($6 + 20 | 0) >> 2] | 0 | 0) | 0;
    break label$1;
   }
   $19 = 0;
  }
  HEAP32[$7 >> 2] = $19;
  $26 = (HEAP32[$7 >> 2] | 0) + ((HEAP32[($6 + 16 | 0) >> 2] | 0) << 5 | 0) | 0;
  HEAP32[($7 + 8 | 0) >> 2] = $26;
  HEAP32[($7 + 4 | 0) >> 2] = $26;
  $31 = (HEAP32[$7 >> 2] | 0) + ((HEAP32[($6 + 20 | 0) >> 2] | 0) << 5 | 0) | 0;
  HEAP32[(std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______end_cap_28_29($7 | 0) | 0) >> 2] = $31;
  $33 = HEAP32[($6 + 28 | 0) >> 2] | 0;
  __stack_pointer = $6 + 32 | 0;
  return $33 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____swap_out_circular_buffer_28std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_delete_28_29_20const($5 | 0);
  void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_backward_with_exception_guarantees_Point3___28std____2__allocator_Point3___2c_20Point3__2c_20Point3__2c_20Point3___29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____alloc_28_29($5 | 0) | 0 | 0, HEAP32[$5 >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  std____2__enable_if__28is_move_constructible_Point3____value_29_20___20_28is_move_assignable_Point3____value_29_2c_20void___type_20std____2__swap_Point3___28Point3___2c_20Point3___29($5 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0 | 0);
  std____2__enable_if__28is_move_constructible_Point3____value_29_20___20_28is_move_assignable_Point3____value_29_2c_20void___type_20std____2__swap_Point3___28Point3___2c_20Point3___29($5 + 4 | 0 | 0, (HEAP32[($4 + 8 | 0) >> 2] | 0) + 8 | 0 | 0);
  std____2__enable_if__28is_move_constructible_Point3____value_29_20___20_28is_move_assignable_Point3____value_29_2c_20void___type_20std____2__swap_Point3___28Point3___2c_20Point3___29(std____2____vector_base_Point3_2c_20std____2__allocator_Point3__20_____end_cap_28_29($5 | 0) | 0 | 0, std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______end_cap_28_29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0);
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = HEAP32[((HEAP32[($4 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____annotate_new_28unsigned_20long_29_20const($5 | 0, std____2__vector_Point3_2c_20std____2__allocator_Point3__20___size_28_29_20const($5 | 0) | 0 | 0);
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____invalidate_all_iterators_28_29($5 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3________split_buffer_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $15 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $4;
  std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_____clear_28_29($4 | 0);
  label$1 : {
   if (!((HEAP32[$4 >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_traits_std____2__allocator_Point3__20___deallocate_28std____2__allocator_Point3___2c_20Point3__2c_20unsigned_20long_29(std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______alloc_28_29($4 | 0) | 0 | 0, HEAP32[$4 >> 2] | 0 | 0, std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_____capacity_28_29_20const($4 | 0) | 0 | 0);
  }
  $15 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $15 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_Point3_2c_20Point3_20const___28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3___2c_20Point3__2c_20Point3_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_Point3___construct_Point3_2c_20Point3_20const___28Point3__2c_20Point3_20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function void_20std____2__allocator_Point3___construct_Point3_2c_20Point3_20const___28Point3__2c_20Point3_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0, $8 = 0, $10 = 0, $14 = 0, $18 = 0, $44 = 0, $54 = 0, $64 = 0, $74 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $8 = Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = $8;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $44 = i64toi32_i32$0;
  i64toi32_i32$0 = $6;
  HEAP32[i64toi32_i32$0 >> 2] = $44;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $10 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $10 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $54 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $10 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $54;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $14 = 16;
  i64toi32_i32$2 = $8 + $14 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $64 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $14 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $64;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $18 = 8;
  i64toi32_i32$2 = $8 + $18 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $18 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $74;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3_______compressed_pair_std__nullptr_t_2c_20std____2__allocator_Point3____28std__nullptr_t___2c_20std____2__allocator_Point3___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____compressed_pair_elem_std__nullptr_t_2c_20void__28std__nullptr_t___29($6 | 0, std__nullptr_t___20std____2__forward_std__nullptr_t__28std____2__remove_reference_std__nullptr_t___type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3___2c_201_2c_20false_____compressed_pair_elem_std____2__allocator_Point3___2c_20void__28std____2__allocator_Point3___29($6 + 4 | 0 | 0, std____2__allocator_Point3___20std____2__forward_std____2__allocator_Point3____28std____2__remove_reference_std____2__allocator_Point3_____type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______alloc_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3_____second_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______end_cap_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3_____first_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_backward_with_exception_guarantees_Point3___28std____2__allocator_Point3___2c_20Point3__2c_20Point3__2c_20Point3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0, $24 = 0, $14 = 0, $19 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $14 = HEAP32[($6 + 12 | 0) >> 2] | 0;
    $19 = Point3__20std____2____to_address_Point3__28Point3__29((HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0) + -32 | 0 | 0) | 0;
    $22 = (HEAP32[($6 + 4 | 0) >> 2] | 0) + -32 | 0;
    HEAP32[($6 + 4 | 0) >> 2] = $22;
    void_20std____2__allocator_traits_std____2__allocator_Point3__20___construct_Point3_2c_20Point3__28std____2__allocator_Point3___2c_20Point3__2c_20Point3___29($14 | 0, $19 | 0, std____2__conditional__28__28is_nothrow_move_constructible_Point3___value_29_29_20___20_28is_copy_constructible_Point3___value_29_2c_20Point3_20const__2c_20Point3_____type_20std____2__move_if_noexcept_Point3__28Point3__29($22 | 0) | 0 | 0);
    $24 = HEAP32[$6 >> 2] | 0;
    HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -32 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2__enable_if__28is_move_constructible_Point3____value_29_20___20_28is_move_assignable_Point3____value_29_2c_20void___type_20std____2__swap_Point3___28Point3___2c_20Point3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $10 = 0, $16 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2__remove_reference_Point3_____type___20std____2__move_Point3____28Point3___29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  $10 = HEAP32[(std____2__remove_reference_Point3_____type___20std____2__move_Point3____28Point3___29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[($4 + 12 | 0) >> 2] | 0) >> 2] = $10;
  $16 = HEAP32[(std____2__remove_reference_Point3_____type___20std____2__move_Point3____28Point3___29($4 + 4 | 0 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[($4 + 8 | 0) >> 2] | 0) >> 2] = $16;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20_____invalidate_all_iterators_28_29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_____clear_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______destruct_at_end_28Point3__29($4 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_____capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $10 = ((HEAP32[(std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______end_cap_28_29_20const($4 | 0) | 0) >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) >> 5 | 0;
  __stack_pointer = $3 + 16 | 0;
  return $10 | 0;
 }
 
 function std____2__allocator_Point3___20std____2__forward_std____2__allocator_Point3____28std____2__remove_reference_std____2__allocator_Point3_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3___2c_201_2c_20false_____compressed_pair_elem_std____2__allocator_Point3___2c_20void__28std____2__allocator_Point3___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Point3___20std____2__forward_std____2__allocator_Point3____28std____2__remove_reference_std____2__allocator_Point3_____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3_____second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2__allocator_Point3___2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3_____first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3___2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2__conditional__28__28is_nothrow_move_constructible_Point3___value_29_29_20___20_28is_copy_constructible_Point3___value_29_2c_20Point3_20const__2c_20Point3_____type_20std____2__move_if_noexcept_Point3__28Point3__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2__remove_reference_Point3____type___20std____2__move_Point3___28Point3__29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20___construct_Point3_2c_20Point3__28std____2__allocator_Point3___2c_20Point3__2c_20Point3___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_Point3_2c_20Point3__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3___2c_20Point3__2c_20Point3___29(HEAP32[($5 + 28 | 0) >> 2] | 0 | 0, HEAP32[($5 + 24 | 0) >> 2] | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__remove_reference_Point3_____type___20std____2__move_Point3____28Point3___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_Point3_2c_20Point3__28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_Point3___2c_20Point3__2c_20Point3___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 20 | 0) >> 2] = $0;
  HEAP32[($5 + 16 | 0) >> 2] = $1;
  HEAP32[($5 + 12 | 0) >> 2] = $2;
  void_20std____2__allocator_Point3___construct_Point3_2c_20Point3__28Point3__2c_20Point3___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $5 + 32 | 0;
  return;
 }
 
 function std____2__remove_reference_Point3____type___20std____2__move_Point3___28Point3__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function void_20std____2__allocator_Point3___construct_Point3_2c_20Point3__28Point3__2c_20Point3___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $5 = 0, $6 = 0, $8 = 0, $10 = 0, $14 = 0, $18 = 0, $44 = 0, $54 = 0, $64 = 0, $74 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 8 | 0) >> 2] | 0;
  $8 = Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = $8;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $44 = i64toi32_i32$0;
  i64toi32_i32$0 = $6;
  HEAP32[i64toi32_i32$0 >> 2] = $44;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $10 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $10 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $54 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $10 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $54;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $14 = 16;
  i64toi32_i32$2 = $8 + $14 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $64 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $14 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $64;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $18 = 8;
  i64toi32_i32$2 = $8 + $18 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $18 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $74;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______destruct_at_end_28Point3__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______destruct_at_end_28Point3__2c_20std____2__integral_constant_bool_2c_20false__29(HEAP32[($4 + 12 | 0) >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______end_cap_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3_____first_28_29_20const((HEAP32[($3 + 12 | 0) >> 2] | 0) + 12 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______destruct_at_end_28Point3__2c_20std____2__integral_constant_bool_2c_20false__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $16 = 0, $13 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  HEAP32[$4 >> 2] = $1;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[$4 >> 2] | 0 | 0) != (HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    $13 = std____2____split_buffer_Point3_2c_20std____2__allocator_Point3_______alloc_28_29($5 | 0) | 0;
    $16 = (HEAP32[($5 + 8 | 0) >> 2] | 0) + -32 | 0;
    HEAP32[($5 + 8 | 0) >> 2] = $16;
    void_20std____2__allocator_traits_std____2__allocator_Point3__20___destroy_Point3__28std____2__allocator_Point3___2c_20Point3__29($13 | 0, Point3__20std____2____to_address_Point3__28Point3__29($16 | 0) | 0 | 0);
    continue label$2;
   };
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_Point3__2c_20std____2__allocator_Point3_____first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Point3__2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____value_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $17 = 0, $23 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 24 | 0) >> 2] = $0;
  HEAP32[($5 + 20 | 0) >> 2] = $1;
  HEAP32[($5 + 16 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 24 | 0) >> 2] | 0;
  HEAP32[($5 + 28 | 0) >> 2] = $6;
  HEAP32[($6 + 16 | 0) >> 2] = 0;
  label$1 : {
   if (!((bool_20std____2____function____not_null_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($5 + 8 | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
   $17 = std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____type___20std____2__move_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
   std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__28std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20const__29($5 | 0, $5 + 8 | 0 | 0) | 0;
   std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($6 | 0, $17 | 0, $5 | 0) | 0;
   HEAP32[($6 + 16 | 0) >> 2] = $6;
  }
  $23 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  __stack_pointer = $5 + 32 | 0;
  return $23 | 0;
 }
 
 function bool_20std____2____function____not_null_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 1 & 1 | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__28std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 4520 + 8 | 0;
  std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____alloc_func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($6 + 4 | 0 | 0, std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____type___20std____2__move_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = 4808 + 8 | 0;
  return $4 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____alloc_func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_as_tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29(std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____type___20std____2__move_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29(std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20_____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_as_tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20false_2c_20false__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($3 + 8 | 0 | 0, Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20false_2c_20false__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($3 + 8 | 0 | 0, std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20_____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0________type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_______28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______func_28_29_1($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______func_28_29($4 | 0) | 0;
  operator_20delete_28void__29($4 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____clone_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $16 = 0, $33 = 0, $36 = 0, $49 = 0;
  $3 = __stack_pointer - 48 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 44 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 44 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($3 + 40 | 0 | 0, std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  $16 = std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___allocate_28unsigned_20long_2c_20void_20const__29($3 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
  std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___2c_20unsigned_20long_29($3 + 16 | 0 | 0, $3 + 40 | 0 | 0, 1 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20__2c_20true_____good_rval_ref_type_29($3 + 24 | 0 | 0, $16 | 0, $3 + 16 | 0 | 0) | 0;
  $33 = std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___get_28_29_20const($3 + 24 | 0 | 0) | 0;
  $36 = std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____target_28_29_20const($4 + 4 | 0 | 0) | 0;
  std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__28std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20const__29($3 + 8 | 0 | 0, $3 + 40 | 0 | 0) | 0;
  std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($33 | 0, $36 | 0, $3 + 8 | 0 | 0) | 0;
  $49 = std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___release_28_29($3 + 24 | 0 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20____unique_ptr_28_29($3 + 24 | 0 | 0) | 0;
  __stack_pointer = $3 + 48 | 0;
  return $49 | 0;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____get_allocator_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___second_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(4449 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29((HEAP32[($5 + 8 | 0) >> 2] | 0) << 4 | 0 | 0, 4 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20_____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20__28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____target_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 4520 + 8 | 0;
  std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____alloc_func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___reset_28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____clone_28std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____target_28_29_20const($5 + 4 | 0 | 0) | 0 | 0, std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____get_allocator_28_29_20const($5 + 4 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 4520 + 8 | 0;
  std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____alloc_func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___destroy_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___destroy_28_29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___destroy_deallocate_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($3 + 8 | 0 | 0, std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___destroy_28_29($4 + 4 | 0 | 0);
  std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___deallocate_28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20unsigned_20long_29($3 + 8 | 0 | 0, $4 | 0, 1 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___deallocate_28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, (HEAP32[($5 + 4 | 0) >> 2] | 0) << 4 | 0 | 0, 4 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29($0 | 0, (HEAP32[($6 + 8 | 0) >> 2] | 0) + 4 | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[$6 >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20std____2____invoke_void_return_wrapper_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____call_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20Point3_20const__2c_20Point3_20const___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20Point3_20const__2c_20Point3_20const__29($0 | 0, std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___first_28_29(HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[$6 >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___target_28std__type_info_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $12 = 0, $24 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  HEAP32[($4 + 4 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = 4912;
  $12 = HEAP32[((HEAP32[($4 + 16 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $12;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 28 | 0) >> 2] | 0 | 0) == (HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$2
    }
    HEAP32[($4 + 12 | 0) >> 2] = std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____target_28_29_20const($5 + 4 | 0 | 0) | 0;
    break label$1;
   }
   HEAP32[($4 + 12 | 0) >> 2] = 0;
  }
  $24 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $24 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___target_type_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 4912 | 0;
 }
 
 function std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______base_28_29_1($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  abort();
 }
 
 function std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20false_2c_20false__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_______tuple_impl_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($5 | 0, Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20false_2c_20false__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0________tuple_impl_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($5 | 0, std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $10 = 0, $12 = 0, i64toi32_i32$1 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  $10 = Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20___type__20std____2__get_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  i64toi32_i32$1 = HEAP32[($10 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$10 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = i64toi32_i32$1;
  $12 = 8;
  HEAP32[($5 + $12 | 0) >> 2] = HEAP32[($10 + $12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0________type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_______28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_______tuple_impl_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20false_____tuple_leaf_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20void__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($5 | 0, Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20false_____tuple_leaf_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20void__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0________tuple_impl_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20false_____tuple_leaf_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20void__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($5 | 0, std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20false_____tuple_leaf_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20void__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20___type__20std____2__get_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 268435455 | 0;
 }
 
 function std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20_____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20__28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____2c_20void__28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____29($6 | 0, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____20std____2__forward_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____28std____2__remove_reference_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____29($6 + 4 | 0 | 0, std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____alloc_func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___20std____2__forward_as_tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____29(std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20_____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___reset_28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20___operator_28_29_28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___29(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____20std____2__forward_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____28std____2__remove_reference_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____2c_20void__28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[(std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29____20std____2__forward_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____28std____2__remove_reference_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, i64toi32_i32$1 = 0, $29 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $29 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $29;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return i64toi32_i32$0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___20std____2__forward_as_tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____tuple_true_2c_20false__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29($3 + 8 | 0 | 0, Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20_____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const_____28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0________type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_______28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____tuple_true_2c_20false__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const______tuple_impl_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const_____28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $10 = 0, $12 = 0, i64toi32_i32$1 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  $10 = Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___20___type__20std____2__get_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  i64toi32_i32$1 = HEAP32[($10 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$10 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = i64toi32_i32$1;
  $12 = 8;
  HEAP32[($5 + $12 | 0) >> 2] = HEAP32[($10 + $12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const______tuple_impl_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20false_____tuple_leaf_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20void__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29($5 | 0, Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20false_____tuple_leaf_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20void__28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___20___type__20std____2__get_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20___operator_28_29_28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_traits_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20___deallocate_28std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___2c_20std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20unsigned_20long_29(HEAP32[$5 >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20__2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20__20___deallocate_28std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___2c_20std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29__20___deallocate_28std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____alloc_func_28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___20std____2__forward_as_tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20_____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____tuple_true_2c_20false__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($3 + 8 | 0 | 0, std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20_____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const_____28std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const_____28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____tuple_true_2c_20false__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const______tuple_impl_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const_____28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const______tuple_impl_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_20false_____tuple_leaf_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_20void__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($5 | 0, std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_20false_____tuple_leaf_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_20void__28std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const___28std____2__tuple_std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20std____2____invoke_void_return_wrapper_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____call_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20Point3_20const__2c_20Point3_20const___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20Point3_20const__2c_20Point3_20const__29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  decltype_28std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28fp_29_28std____2__forward_Point3_20const___28fp0_29_2c_20std____2__forward_Point3_20const___28fp0_29_29_29_20std____2____invoke_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20Point3_20const__2c_20Point3_20const___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20Point3_20const__2c_20Point3_20const__29($0 | 0, Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____type__29(HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[$6 >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function decltype_28std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28fp_29_28std____2__forward_Point3_20const___28fp0_29_2c_20std____2__forward_Point3_20const___28fp0_29_29_29_20std____2____invoke_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20Point3_20const__2c_20Point3_20const___28Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20Point3_20const__2c_20Point3_20const__29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__operator_28_29_28Point3_20const__2c_20Point3_20const__29_20const($0 | 0, Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__20std____2__forward_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0___28std____2__remove_reference_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0____type__29(HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, Point3_20const__20std____2__forward_Point3_20const___28std____2__remove_reference_Point3_20const____type__29(HEAP32[$6 >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__operator_28_29_28Point3_20const__2c_20Point3_20const__29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, $6 = 0, i64toi32_i32$3 = 0, $22 = 0, $10 = 0, $16 = 0, $9 = 0, $110 = 0, $134 = 0, $198 = 0, $7 = 0, $15 = 0, $21 = 0, $27 = 0, $34 = 0, $38 = 0, $42 = 0, $64$hi = 0, $65$hi = 0, $66$hi = 0, $67$hi = 0, $73$hi = 0, $95$hi = 0, $96$hi = 0, $97$hi = 0, $101$hi = 0, $102$hi = 0, $129$hi = 0, $133 = 0, $153$hi = 0, $165$hi = 0, $166$hi = 0, $174$hi = 0, $175$hi = 0, $193$hi = 0, $194$hi = 0, $202$hi = 0, $203$hi = 0, $207 = 0, $215 = 0, $231$hi = 0, $314 = 0, $327 = 0, $340 = 0, $344 = 0, $361 = 0, $371 = 0, $381 = 0, $385 = 0, $399 = 0, $409 = 0, $419 = 0, $423 = 0, $64 = 0, $115 = 0, $73 = 0, $460$hi = 0, $116 = 0, $86 = 0, $86$hi = 0, $486 = 0, $93 = 0, $93$hi = 0, $505 = 0, $95 = 0, $96 = 0, $97 = 0, $520$hi = 0, $117 = 0, $101 = 0, $532 = 0, $108 = 0, $108$hi = 0, $109 = 0, $109$hi = 0, $562 = 0, $575 = 0, $588 = 0, $592 = 0, $129 = 0, $605$hi = 0, $118 = 0, $623 = 0, $636 = 0, $649 = 0, $653 = 0, $153 = 0, $666$hi = 0, $119 = 0, $163 = 0, $163$hi = 0, $687 = 0, $165 = 0, $166 = 0, $174 = 0, $719 = 0, $181 = 0, $181$hi = 0, $182 = 0, $182$hi = 0, $193 = 0, $194 = 0, $202 = 0, $781 = 0, $205 = 0, $205$hi = 0, $206 = 0, $206$hi = 0, $809 = 0, $825 = 0, $841 = 0, $845 = 0, $231 = 0, $858$hi = 0, $120 = 0;
  $6 = __stack_pointer - 512 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 508 | 0) >> 2] = $0;
  HEAP32[($6 + 504 | 0) >> 2] = $1;
  HEAP32[($6 + 500 | 0) >> 2] = $2;
  HEAP32[($6 + 496 | 0) >> 2] = $3;
  $7 = HEAP32[($6 + 504 | 0) >> 2] | 0;
  HEAP8[($6 + 495 | 0) >> 0] = 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28_29($0 | 0) | 0;
  $9 = HEAP32[($6 + 496 | 0) >> 2] | 0;
  $10 = 24;
  i64toi32_i32$2 = $9 + $10 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $15 = ($6 + 456 | 0) + $10 | 0;
  $314 = i64toi32_i32$0;
  i64toi32_i32$0 = $15;
  HEAP32[i64toi32_i32$0 >> 2] = $314;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $16 = 16;
  i64toi32_i32$2 = $9 + $16 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $21 = ($6 + 456 | 0) + $16 | 0;
  $327 = i64toi32_i32$1;
  i64toi32_i32$1 = $21;
  HEAP32[i64toi32_i32$1 >> 2] = $327;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $22 = 8;
  i64toi32_i32$2 = $9 + $22 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $27 = ($6 + 456 | 0) + $22 | 0;
  $340 = i64toi32_i32$0;
  i64toi32_i32$0 = $27;
  HEAP32[i64toi32_i32$0 >> 2] = $340;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $9;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $344 = i64toi32_i32$1;
  i64toi32_i32$1 = $6;
  HEAP32[(i64toi32_i32$1 + 456 | 0) >> 2] = $344;
  HEAP32[(i64toi32_i32$1 + 460 | 0) >> 2] = i64toi32_i32$0;
  Point3__subtract_28Point3_20const__29(i64toi32_i32$1 + 456 | 0 | 0, HEAP32[(i64toi32_i32$1 + 500 | 0) >> 2] | 0 | 0);
  $34 = (i64toi32_i32$1 + 424 | 0) + $10 | 0;
  i64toi32_i32$2 = $15;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $361 = i64toi32_i32$0;
  i64toi32_i32$0 = $34;
  HEAP32[i64toi32_i32$0 >> 2] = $361;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $38 = ($6 + 424 | 0) + $16 | 0;
  i64toi32_i32$2 = $21;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $371 = i64toi32_i32$1;
  i64toi32_i32$1 = $38;
  HEAP32[i64toi32_i32$1 >> 2] = $371;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $42 = ($6 + 424 | 0) + $22 | 0;
  i64toi32_i32$2 = $27;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $381 = i64toi32_i32$0;
  i64toi32_i32$0 = $42;
  HEAP32[i64toi32_i32$0 >> 2] = $381;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[($6 + 456 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($6 + 460 | 0) >> 2] | 0;
  $385 = i64toi32_i32$1;
  i64toi32_i32$1 = $6;
  HEAP32[(i64toi32_i32$1 + 424 | 0) >> 2] = $385;
  HEAP32[(i64toi32_i32$1 + 428 | 0) >> 2] = i64toi32_i32$0;
  Point3__unit_28_29(i64toi32_i32$1 + 424 | 0 | 0);
  i64toi32_i32$2 = $34;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $399 = i64toi32_i32$0;
  i64toi32_i32$0 = ($6 + 392 | 0) + $10 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $399;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $38;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $409 = i64toi32_i32$1;
  i64toi32_i32$1 = ($6 + 392 | 0) + $16 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $409;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $42;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $419 = i64toi32_i32$0;
  i64toi32_i32$0 = ($6 + 392 | 0) + $22 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $419;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[($6 + 424 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($6 + 428 | 0) >> 2] | 0;
  $423 = i64toi32_i32$1;
  i64toi32_i32$1 = $6;
  HEAP32[(i64toi32_i32$1 + 392 | 0) >> 2] = $423;
  HEAP32[(i64toi32_i32$1 + 396 | 0) >> 2] = i64toi32_i32$0;
  Point3__distance_28Point3_20const__29_20const(i64toi32_i32$1 + 160 | 0 | 0, HEAP32[(i64toi32_i32$1 + 500 | 0) >> 2] | 0 | 0, HEAP32[(i64toi32_i32$1 + 496 | 0) >> 2] | 0 | 0);
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 168 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 172 | 0) >> 2] | 0;
  $64 = i64toi32_i32$0;
  $64$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[($6 + 160 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[($6 + 164 | 0) >> 2] | 0;
  $65$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 1073741824;
  $66$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $67$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $65$hi;
  i64toi32_i32$0 = $64$hi;
  i64toi32_i32$0 = $67$hi;
  i64toi32_i32$0 = $66$hi;
  i64toi32_i32$0 = $65$hi;
  $115 = i64toi32_i32$1;
  i64toi32_i32$1 = $64$hi;
  i64toi32_i32$2 = $67$hi;
  i64toi32_i32$3 = $66$hi;
  __divtf3($6 + 80 | 0 | 0, $115 | 0, i64toi32_i32$0 | 0, $64 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($6 + 80 | 0) + $22 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $73 = i64toi32_i32$3;
  $73$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] | 0;
  $460$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $73$hi;
  i64toi32_i32$3 = $460$hi;
  $116 = i64toi32_i32$2;
  i64toi32_i32$2 = $73$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$1 + 392 | 0 | 0, $116 | 0, i64toi32_i32$3 | 0, $73 | 0, i64toi32_i32$2 | 0);
  Point3__add_28Point3_20const__29(i64toi32_i32$1 + 392 | 0 | 0, HEAP32[(i64toi32_i32$1 + 500 | 0) >> 2] | 0 | 0);
  Point3__spheriphy_28_29(i64toi32_i32$1 + 392 | 0 | 0);
  Point3__mag_28_29_20const(i64toi32_i32$1 + 144 | 0 | 0, i64toi32_i32$1 + 392 | 0 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 144 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 148 | 0) >> 2] | 0;
  $86 = i64toi32_i32$2;
  $86$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 152 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 156 | 0) >> 2] | 0;
  $486 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 376 | 0) >> 2] = $486;
  HEAP32[(i64toi32_i32$1 + 380 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $86$hi;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 368 | 0) >> 2] = $86;
  HEAP32[(i64toi32_i32$1 + 372 | 0) >> 2] = i64toi32_i32$2;
  Point3__angle_between_28Point3_20const__29_20const(i64toi32_i32$1 + 128 | 0 | 0, HEAP32[(i64toi32_i32$1 + 500 | 0) >> 2] | 0 | 0, i64toi32_i32$1 + 392 | 0 | 0);
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 128 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 132 | 0) >> 2] | 0;
  $93 = i64toi32_i32$2;
  $93$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 136 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 140 | 0) >> 2] | 0;
  $505 = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 360 | 0) >> 2] = $505;
  HEAP32[(i64toi32_i32$1 + 364 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $93$hi;
  i64toi32_i32$3 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 352 | 0) >> 2] = $93;
  HEAP32[(i64toi32_i32$1 + 356 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 376 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 380 | 0) >> 2] | 0;
  $95 = i64toi32_i32$2;
  $95$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 368 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 372 | 0) >> 2] | 0;
  $96 = i64toi32_i32$3;
  $96$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 360 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 364 | 0) >> 2] | 0;
  $97 = i64toi32_i32$2;
  $97$hi = i64toi32_i32$3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 352 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 356 | 0) >> 2] | 0;
  $520$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $97$hi;
  i64toi32_i32$2 = $520$hi;
  $117 = i64toi32_i32$3;
  i64toi32_i32$3 = $97$hi;
  cos_28long_20double_29(i64toi32_i32$1 + 112 | 0 | 0, $117 | 0, i64toi32_i32$2 | 0, $97 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 120 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] | 0;
  $101 = i64toi32_i32$3;
  $101$hi = i64toi32_i32$2;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
  $102$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $96$hi;
  i64toi32_i32$3 = $95$hi;
  i64toi32_i32$3 = $102$hi;
  $532 = i64toi32_i32$2;
  i64toi32_i32$3 = $101$hi;
  i64toi32_i32$3 = $96$hi;
  i64toi32_i32$2 = $95$hi;
  i64toi32_i32$1 = $102$hi;
  i64toi32_i32$0 = $101$hi;
  __divtf3($6 + 64 | 0 | 0, $96 | 0, i64toi32_i32$3 | 0, $95 | 0, i64toi32_i32$2 | 0, $532 | 0, i64toi32_i32$1 | 0, $101 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($6 + 64 | 0) + $22 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $108 = i64toi32_i32$0;
  $108$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
  $109 = i64toi32_i32$1;
  $109$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $108$hi;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 344 | 0) >> 2] = $108;
  HEAP32[(i64toi32_i32$1 + 348 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $109$hi;
  HEAP32[(i64toi32_i32$1 + 336 | 0) >> 2] = $109;
  HEAP32[(i64toi32_i32$1 + 340 | 0) >> 2] = i64toi32_i32$0;
  $110 = HEAP32[(i64toi32_i32$1 + 500 | 0) >> 2] | 0;
  i64toi32_i32$2 = $110 + $10 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $562 = i64toi32_i32$0;
  i64toi32_i32$0 = ($6 + 304 | 0) + $10 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $562;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $110 + $16 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $575 = i64toi32_i32$1;
  i64toi32_i32$1 = ($6 + 304 | 0) + $16 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $575;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $110 + $22 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $588 = i64toi32_i32$0;
  i64toi32_i32$0 = ($6 + 304 | 0) + $22 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $588;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $110;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $592 = i64toi32_i32$1;
  i64toi32_i32$1 = $6;
  HEAP32[(i64toi32_i32$1 + 304 | 0) >> 2] = $592;
  HEAP32[(i64toi32_i32$1 + 308 | 0) >> 2] = i64toi32_i32$0;
  Point3__unit_28_29(i64toi32_i32$1 + 304 | 0 | 0);
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 344 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 348 | 0) >> 2] | 0;
  $129 = i64toi32_i32$0;
  $129$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 336 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 340 | 0) >> 2] | 0;
  $605$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $129$hi;
  i64toi32_i32$0 = $605$hi;
  $118 = i64toi32_i32$1;
  i64toi32_i32$1 = $129$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$2 + 304 | 0 | 0, $118 | 0, i64toi32_i32$0 | 0, $129 | 0, i64toi32_i32$1 | 0);
  $133 = 1;
  HEAP8[(i64toi32_i32$2 + 332 | 0) >> 0] = $133;
  $134 = HEAP32[(i64toi32_i32$2 + 496 | 0) >> 2] | 0;
  i64toi32_i32$2 = $134 + $10 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $623 = i64toi32_i32$1;
  i64toi32_i32$1 = ($6 + 272 | 0) + $10 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $623;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $134 + $16 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $636 = i64toi32_i32$0;
  i64toi32_i32$0 = ($6 + 272 | 0) + $16 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $636;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$2 = $134 + $22 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $649 = i64toi32_i32$1;
  i64toi32_i32$1 = ($6 + 272 | 0) + $22 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $649;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $134;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $653 = i64toi32_i32$0;
  i64toi32_i32$0 = $6;
  HEAP32[(i64toi32_i32$0 + 272 | 0) >> 2] = $653;
  HEAP32[(i64toi32_i32$0 + 276 | 0) >> 2] = i64toi32_i32$1;
  Point3__unit_28_29(i64toi32_i32$0 + 272 | 0 | 0);
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 344 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$0 + 348 | 0) >> 2] | 0;
  $153 = i64toi32_i32$1;
  $153$hi = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 336 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 340 | 0) >> 2] | 0;
  $666$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $153$hi;
  i64toi32_i32$1 = $666$hi;
  $119 = i64toi32_i32$0;
  i64toi32_i32$0 = $153$hi;
  Point3__mult_by_28long_20double_29(i64toi32_i32$2 + 272 | 0 | 0, $119 | 0, i64toi32_i32$1 | 0, $153 | 0, i64toi32_i32$0 | 0);
  HEAP8[(i64toi32_i32$2 + 300 | 0) >> 0] = $133;
  Point3__distance_28Point3_20const__29_20const(i64toi32_i32$2 + 96 | 0 | 0, i64toi32_i32$2 + 304 | 0 | 0, i64toi32_i32$2 + 272 | 0 | 0);
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $163 = i64toi32_i32$0;
  $163$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 104 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 108 | 0) >> 2] | 0;
  $687 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 264 | 0) >> 2] = $687;
  HEAP32[(i64toi32_i32$1 + 268 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $163$hi;
  HEAP32[(i64toi32_i32$1 + 256 | 0) >> 2] = $163;
  HEAP32[(i64toi32_i32$1 + 260 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 264 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 268 | 0) >> 2] | 0;
  $165 = i64toi32_i32$0;
  $165$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 256 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 260 | 0) >> 2] | 0;
  $166 = i64toi32_i32$1;
  $166$hi = i64toi32_i32$0;
  __floatsitf(i64toi32_i32$2 + 48 | 0 | 0, HEAP32[(HEAP32[$7 >> 2] | 0) >> 2] | 0 | 0);
  i64toi32_i32$2 = (i64toi32_i32$2 + 48 | 0) + $22 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $174 = i64toi32_i32$0;
  $174$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
  $175$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $166$hi;
  i64toi32_i32$0 = $165$hi;
  i64toi32_i32$0 = $175$hi;
  $719 = i64toi32_i32$1;
  i64toi32_i32$0 = $174$hi;
  i64toi32_i32$0 = $166$hi;
  i64toi32_i32$1 = $165$hi;
  i64toi32_i32$2 = $175$hi;
  i64toi32_i32$3 = $174$hi;
  __divtf3($6 + 32 | 0 | 0, $166 | 0, i64toi32_i32$0 | 0, $165 | 0, i64toi32_i32$1 | 0, $719 | 0, i64toi32_i32$2 | 0, $174 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($6 + 32 | 0) + $22 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $181 = i64toi32_i32$3;
  $181$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $182 = i64toi32_i32$2;
  $182$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $181$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 248 | 0) >> 2] = $181;
  HEAP32[(i64toi32_i32$1 + 252 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $182$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 240 | 0) >> 2] = $182;
  HEAP32[(i64toi32_i32$1 + 244 | 0) >> 2] = i64toi32_i32$3;
  HEAP32[(i64toi32_i32$1 + 220 | 0) >> 2] = HEAP32[(HEAP32[($7 + 4 | 0) >> 2] | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 220 | 0) >> 2] | 0 | 0) <= (HEAP32[(HEAP32[($7 + 8 | 0) >> 2] | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    i64toi32_i32$1 = $6;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 248 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 252 | 0) >> 2] | 0;
    $193 = i64toi32_i32$3;
    $193$hi = i64toi32_i32$2;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 240 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 244 | 0) >> 2] | 0;
    $194 = i64toi32_i32$2;
    $194$hi = i64toi32_i32$3;
    __floatsitf(i64toi32_i32$1 + 16 | 0 | 0, HEAP32[(i64toi32_i32$1 + 220 | 0) >> 2] | 0 | 0);
    $198 = 8;
    i64toi32_i32$1 = (i64toi32_i32$1 + 16 | 0) + $198 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $202 = i64toi32_i32$3;
    $202$hi = i64toi32_i32$2;
    i64toi32_i32$1 = $6;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
    $203$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $194$hi;
    i64toi32_i32$3 = $193$hi;
    i64toi32_i32$3 = $203$hi;
    $781 = i64toi32_i32$2;
    i64toi32_i32$3 = $202$hi;
    i64toi32_i32$3 = $194$hi;
    i64toi32_i32$2 = $193$hi;
    i64toi32_i32$1 = $203$hi;
    i64toi32_i32$0 = $202$hi;
    __multf3($6 | 0, $194 | 0, i64toi32_i32$3 | 0, $193 | 0, i64toi32_i32$2 | 0, $781 | 0, i64toi32_i32$1 | 0, $202 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$2 = $6 + $198 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $205 = i64toi32_i32$0;
    $205$hi = i64toi32_i32$1;
    i64toi32_i32$2 = $6;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $206 = i64toi32_i32$1;
    $206$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $205$hi;
    i64toi32_i32$1 = i64toi32_i32$2;
    HEAP32[(i64toi32_i32$1 + 232 | 0) >> 2] = $205;
    HEAP32[(i64toi32_i32$1 + 236 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$0 = $206$hi;
    HEAP32[(i64toi32_i32$1 + 224 | 0) >> 2] = $206;
    HEAP32[(i64toi32_i32$1 + 228 | 0) >> 2] = i64toi32_i32$0;
    $207 = 24;
    i64toi32_i32$2 = (i64toi32_i32$1 + 424 | 0) + $207 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $809 = i64toi32_i32$0;
    i64toi32_i32$0 = ($6 + 184 | 0) + $207 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $809;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $215 = 16;
    i64toi32_i32$2 = ($6 + 424 | 0) + $215 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $825 = i64toi32_i32$1;
    i64toi32_i32$1 = ($6 + 184 | 0) + $215 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $825;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$2 = ($6 + 424 | 0) + $198 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $841 = i64toi32_i32$0;
    i64toi32_i32$0 = ($6 + 184 | 0) + $198 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $841;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    i64toi32_i32$2 = $6;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 424 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 428 | 0) >> 2] | 0;
    $845 = i64toi32_i32$1;
    i64toi32_i32$1 = i64toi32_i32$2;
    HEAP32[(i64toi32_i32$1 + 184 | 0) >> 2] = $845;
    HEAP32[(i64toi32_i32$1 + 188 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$2 = i64toi32_i32$1;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 232 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 236 | 0) >> 2] | 0;
    $231 = i64toi32_i32$0;
    $231$hi = i64toi32_i32$1;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 224 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 228 | 0) >> 2] | 0;
    $858$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $231$hi;
    i64toi32_i32$0 = $858$hi;
    $120 = i64toi32_i32$1;
    i64toi32_i32$1 = $231$hi;
    Point3__mult_by_28long_20double_29(i64toi32_i32$2 + 184 | 0 | 0, $120 | 0, i64toi32_i32$0 | 0, $231 | 0, i64toi32_i32$1 | 0);
    Point3__add_28Point3_20const__29(i64toi32_i32$2 + 184 | 0 | 0, i64toi32_i32$2 + 304 | 0 | 0);
    std____2__vector_Point3_2c_20std____2__allocator_Point3__20___push_back_28Point3_20const__29($0 | 0, i64toi32_i32$2 + 184 | 0 | 0);
    FUNCTION_TABLE[94 | 0](i64toi32_i32$2 + 184 | 0) | 0;
    HEAP32[(i64toi32_i32$2 + 220 | 0) >> 2] = (HEAP32[(i64toi32_i32$2 + 220 | 0) >> 2] | 0) + 1 | 0;
    continue label$2;
   };
  }
  HEAP8[($6 + 495 | 0) >> 0] = 1 & 1 | 0;
  FUNCTION_TABLE[94 | 0]($6 + 272 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($6 + 304 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($6 + 392 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($6 + 424 | 0) | 0;
  FUNCTION_TABLE[94 | 0]($6 + 456 | 0) | 0;
  label$3 : {
   if ((HEAPU8[($6 + 495 | 0) >> 0] | 0) & 1 | 0) {
    break label$3
   }
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($0 | 0) | 0;
  }
  __stack_pointer = $6 + 512 | 0;
  return;
 }
 
 function void_20std____2__allocator_traits_std____2__allocator_Point3__20_____construct_range_forward_Point3_20const__2c_20Point3___28std____2__allocator_Point3___2c_20Point3_20const__2c_20Point3_20const__2c_20Point3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $22 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) != (HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    void_20std____2__allocator_traits_std____2__allocator_Point3__20___construct_Point3_2c_20Point3_20const___28std____2__allocator_Point3___2c_20Point3__2c_20Point3_20const__29(HEAP32[($6 + 12 | 0) >> 2] | 0 | 0, Point3__20std____2____to_address_Point3__28Point3__29(HEAP32[(HEAP32[$6 >> 2] | 0) >> 2] | 0 | 0) | 0 | 0, HEAP32[($6 + 8 | 0) >> 2] | 0 | 0);
    HEAP32[($6 + 8 | 0) >> 2] = (HEAP32[($6 + 8 | 0) >> 2] | 0) + 32 | 0;
    $22 = HEAP32[$6 >> 2] | 0;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 32 | 0;
    continue label$2;
   };
  }
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___allocator_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____value_func_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____value_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0, $17 = 0, $23 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 24 | 0) >> 2] = $0;
  HEAP32[($5 + 20 | 0) >> 2] = $1;
  HEAP32[($5 + 16 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 24 | 0) >> 2] | 0;
  HEAP32[($5 + 28 | 0) >> 2] = $6;
  HEAP32[($6 + 16 | 0) >> 2] = 0;
  label$1 : {
   if (!((bool_20std____2____function____not_null_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0) & 1 | 0)) {
    break label$1
   }
   std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($5 + 8 | 0 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
   $17 = std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____type___20std____2__move_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
   std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__28std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20const__29($5 | 0, $5 + 8 | 0 | 0) | 0;
   std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($6 | 0, $17 | 0, $5 | 0) | 0;
   HEAP32[($6 + 16 | 0) >> 2] = $6;
  }
  $23 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  __stack_pointer = $5 + 32 | 0;
  return $23 | 0;
 }
 
 function bool_20std____2____function____not_null_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 1 & 1 | 0 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__28std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  return HEAP32[($4 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 4920 + 8 | 0;
  std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____alloc_func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($6 + 4 | 0 | 0, std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____type___20std____2__move_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[$4 >> 2] = 5204 + 8 | 0;
  return $4 | 0;
 }
 
 function std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____alloc_func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_as_tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29(std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____type___20std____2__move_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29(std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20_____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_as_tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20false_2c_20false__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($3 + 8 | 0 | 0, Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20false_2c_20false__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($3 + 8 | 0 | 0, std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20_____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1________type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_______28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______func_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______base_28_29($4 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______base_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______func_28_29_1($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______func_28_29($4 | 0) | 0;
  operator_20delete_28void__29($4 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____clone_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $16 = 0, $33 = 0, $36 = 0, $49 = 0;
  $3 = __stack_pointer - 48 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 44 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 44 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($3 + 40 | 0 | 0, std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  $16 = std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___allocate_28unsigned_20long_2c_20void_20const__29($3 + 40 | 0 | 0, 1 | 0, 0 | 0) | 0;
  std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___2c_20unsigned_20long_29($3 + 16 | 0 | 0, $3 + 40 | 0 | 0, 1 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20__2c_20true_____good_rval_ref_type_29($3 + 24 | 0 | 0, $16 | 0, $3 + 16 | 0 | 0) | 0;
  $33 = std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___get_28_29_20const($3 + 24 | 0 | 0) | 0;
  $36 = std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____target_28_29_20const($4 + 4 | 0 | 0) | 0;
  std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__28std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20const__29($3 + 8 | 0 | 0, $3 + 40 | 0 | 0) | 0;
  std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($33 | 0, $36 | 0, $3 + 8 | 0 | 0) | 0;
  $49 = std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___release_28_29($3 + 24 | 0 | 0) | 0;
  std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20____unique_ptr_28_29($3 + 24 | 0 | 0) | 0;
  __stack_pointer = $3 + 48 | 0;
  return $49 | 0;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____get_allocator_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___second_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $19 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  label$1 : {
   if (!((HEAP32[($5 + 8 | 0) >> 2] | 0) >>> 0 > (std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___max_size_28_29_20const(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0) | 0) >>> 0 & 1 | 0)) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(4449 | 0);
   abort();
  }
  $19 = std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29((HEAP32[($5 + 8 | 0) >> 2] | 0) << 4 | 0 | 0, 4 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $19 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20_____allocator_destructor_28std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[($5 + 8 | 0) >> 2] | 0;
  HEAP32[($6 + 4 | 0) >> 2] = HEAP32[($5 + 4 | 0) >> 2] | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___unique_ptr_true_2c_20void__28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____dependent_type_std____2____unique_ptr_deleter_sfinae_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20__2c_20true_____good_rval_ref_type_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20_____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20__28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____29($6 | 0, $5 + 8 | 0 | 0, std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____target_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___first_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 4920 + 8 | 0;
  std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____alloc_func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___release_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  HEAP32[($3 + 8 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___first_28_29($4 | 0) | 0) >> 2] = 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20____unique_ptr_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___reset_28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___29($4 | 0, 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____clone_28std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0 | 0, std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____get_allocator_28_29_20const($5 + 4 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____base_28_29($6 | 0) | 0;
  HEAP32[$6 >> 2] = 4920 + 8 | 0;
  std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____alloc_func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($6 + 4 | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___destroy_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___destroy_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___destroy_28_29($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___destroy_deallocate_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($3 + 8 | 0 | 0, std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____get_allocator_28_29_20const($4 + 4 | 0 | 0) | 0 | 0) | 0;
  std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___destroy_28_29($4 + 4 | 0 | 0);
  std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___deallocate_28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20unsigned_20long_29($3 + 8 | 0 | 0, $4 | 0, 1 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___deallocate_28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, (HEAP32[($5 + 4 | 0) >> 2] | 0) << 4 | 0 | 0, 4 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3___2c_20Point3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3___2c_20Point3___29($0 | 0, (HEAP32[($6 + 8 | 0) >> 2] | 0) + 4 | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[$6 >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3___2c_20Point3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20std____2____invoke_void_return_wrapper_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____call_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20Point3_2c_20Point3__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20Point3___2c_20Point3___29($0 | 0, std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___first_28_29(HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[$6 >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___target_28std__type_info_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $12 = 0, $24 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 8 | 0) >> 2] = $0;
  HEAP32[($4 + 4 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 16 | 0) >> 2] = 5312;
  $12 = HEAP32[((HEAP32[($4 + 16 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 28 | 0) >> 2] = HEAP32[((HEAP32[($4 + 20 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  HEAP32[($4 + 24 | 0) >> 2] = $12;
  label$1 : {
   label$2 : {
    if (!((HEAP32[($4 + 28 | 0) >> 2] | 0 | 0) == (HEAP32[($4 + 24 | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$2
    }
    HEAP32[($4 + 12 | 0) >> 2] = std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____target_28_29_20const($5 + 4 | 0 | 0) | 0;
    break label$1;
   }
   HEAP32[($4 + 12 | 0) >> 2] = 0;
  }
  $24 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $24 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___target_type_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 5312 | 0;
 }
 
 function std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______base_28_29_1($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  abort();
 }
 
 function std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20false_2c_20false__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_______tuple_impl_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($5 | 0, Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20false_2c_20false__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1________tuple_impl_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($5 | 0, std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___type__29(HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $10 = 0, $12 = 0, i64toi32_i32$1 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  $10 = Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20___type__20std____2__get_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  i64toi32_i32$1 = HEAP32[($10 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$10 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = i64toi32_i32$1;
  $12 = 8;
  HEAP32[($5 + $12 | 0) >> 2] = HEAP32[($10 + $12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1________type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_______28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_______tuple_impl_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20false_____tuple_leaf_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20void__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($5 | 0, Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20false_____tuple_leaf_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20void__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1________tuple_impl_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20false_____tuple_leaf_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20void__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($5 | 0, std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20false_____tuple_leaf_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20void__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20___type__20std____2__get_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____20___type__20std____2__get_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_201_2c_20true_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  HEAP32[((__stack_pointer - 16 | 0) + 12 | 0) >> 2] = $0;
  return 268435455 | 0;
 }
 
 function std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20_____type___20std____2__move_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20___29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20_____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20__28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 12 | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____2c_20void__28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____29($6 | 0, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____20std____2__forward_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____28std____2__remove_reference_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______type__29(HEAP32[($5 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____29($6 + 4 | 0 | 0, std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___type__29(HEAP32[($5 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $5 + 16 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___first_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____get_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____alloc_func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___20std____2__forward_as_tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____29(std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____type___20std____2__move_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20_____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__unique_ptr_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___reset_28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $8 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[($4 + 4 | 0) >> 2] = HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] | 0;
  $8 = HEAP32[($4 + 8 | 0) >> 2] | 0;
  HEAP32[(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___first_28_29($5 | 0) | 0) >> 2] = $8;
  label$1 : {
   if (!((HEAP32[($4 + 4 | 0) >> 2] | 0 | 0) != (0 | 0) & 1 | 0)) {
    break label$1
   }
   std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20___operator_28_29_28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___29(std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___second_28_29($5 | 0) | 0 | 0, HEAP32[($4 + 4 | 0) >> 2] | 0 | 0);
  }
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____20std____2__forward_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____28std____2__remove_reference_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_200_2c_20false_____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____2c_20void__28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[(std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29____20std____2__forward_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____28std____2__remove_reference_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0) >> 2] | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__2c_201_2c_20false_____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__2c_20void__28std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $5 = 0, i64toi32_i32$1 = 0, $29 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  i64toi32_i32$2 = std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20____20std____2__forward_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20__28std____2__remove_reference_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $29 = i64toi32_i32$0;
  i64toi32_i32$0 = $5;
  HEAP32[i64toi32_i32$0 >> 2] = $29;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $4 + 16 | 0;
  return i64toi32_i32$0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____get_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___20std____2__forward_as_tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____tuple_true_2c_20false__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29($3 + 8 | 0 | 0, Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20_____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const_____28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1________type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_______28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1______29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_____2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____tuple_true_2c_20false__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const______tuple_impl_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const_____28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0, $10 = 0, $12 = 0, i64toi32_i32$1 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  $10 = Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___20___type__20std____2__get_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  i64toi32_i32$1 = HEAP32[($10 + 4 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$10 >> 2] | 0;
  HEAP32[($5 + 4 | 0) >> 2] = i64toi32_i32$1;
  $12 = 8;
  HEAP32[($5 + $12 | 0) >> 2] = HEAP32[($10 + $12 | 0) >> 2] | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const______tuple_impl_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20false_____tuple_leaf_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20void__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29($5 | 0, Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20false_____tuple_leaf_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20void__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___20___type__20std____2__get_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__20___second_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $7 = std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__2c_201_2c_20false_____get_28_29((HEAP32[($3 + 12 | 0) >> 2] | 0) + 4 | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $7 | 0;
 }
 
 function std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20___operator_28_29_28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2__allocator_traits_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___2c_20std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20unsigned_20long_29(HEAP32[$5 >> 2] | 0 | 0, HEAP32[($4 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $4 + 16 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_std____2____allocator_destructor_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20__2c_201_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20__20___deallocate_28std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___2c_20std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 12 | 0) >> 2] = $0;
  HEAP32[($5 + 8 | 0) >> 2] = $1;
  HEAP32[($5 + 4 | 0) >> 2] = $2;
  std____2__allocator_std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29__20___deallocate_28std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___2c_20unsigned_20long_29(HEAP32[($5 + 12 | 0) >> 2] | 0 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[($5 + 4 | 0) >> 2] | 0 | 0);
  __stack_pointer = $5 + 16 | 0;
  return;
 }
 
 function std____2____function____alloc_func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____alloc_func_28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 32 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 28 | 0) >> 2] = $0;
  HEAP32[($5 + 24 | 0) >> 2] = $1;
  HEAP32[($5 + 20 | 0) >> 2] = $2;
  $6 = HEAP32[($5 + 28 | 0) >> 2] | 0;
  HEAP32[($5 + 8 | 0) >> 2] = std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___20std____2__forward_as_tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__29(HEAP32[($5 + 24 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[$5 >> 2] = std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29(HEAP32[($5 + 20 | 0) >> 2] | 0 | 0) | 0;
  std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20_____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___29($6 | 0, HEAP32[($5 + 8 | 0) >> 2] | 0 | 0, HEAP32[$5 >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 32 | 0;
  return $6 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___20std____2__forward_as_tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $9 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 4 | 0) >> 2] = $0;
  std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____tuple_true_2c_20false__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($3 + 8 | 0 | 0, std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____type__29(HEAP32[($3 + 4 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  $9 = HEAP32[($3 + 8 | 0) >> 2] | 0;
  __stack_pointer = $3 + 16 | 0;
  return $9 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20_____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $6 = 0;
  $5 = __stack_pointer - 80 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 64 | 0) >> 2] = $1;
  HEAP32[($5 + 56 | 0) >> 2] = $2;
  HEAP32[($5 + 52 | 0) >> 2] = $0;
  $6 = HEAP32[($5 + 52 | 0) >> 2] | 0;
  HEAP32[($5 + 40 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const______type___20std____2__move_std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const_____28std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const____29($5 + 64 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 40 | 0) >> 2] | 0 | 0) | 0;
  HEAP32[($5 + 16 | 0) >> 2] = HEAP32[(std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const_____28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____29($5 + 56 | 0 | 0) | 0) >> 2] | 0;
  std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___2c_20std____2____tuple_indices_0ul__29($6 | 0, HEAP32[($5 + 16 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $5 + 80 | 0;
  return $6 | 0;
 }
 
 function std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____tuple_true_2c_20false__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 44 | 0) >> 2] = $0;
  HEAP32[($4 + 40 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 44 | 0) >> 2] | 0;
  std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const______tuple_impl_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($5 | 0, HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2__remove_reference_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const______type___20std____2__move_std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const_____28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_201_2c_20true_____compressed_pair_elem_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_200ul__28std____2__piecewise_construct_t_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___2c_20std____2____tuple_indices_0ul__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 32 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 4 | 0) >> 2] = $0;
  $5 = HEAP32[($4 + 4 | 0) >> 2] | 0;
  std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____type__29(std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____29($4 + 16 | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 32 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_impl_std____2____tuple_indices_0ul__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const______tuple_impl_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2____tuple_indices_0ul__2c_20std____2____tuple_types_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___2c_20std____2____tuple_indices___2c_20std____2____tuple_types___2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 48 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_20false_____tuple_leaf_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_20void__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($5 | 0, std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $4 + 48 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_20false_____tuple_leaf_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_20void__28std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $1;
  $5 = HEAP32[($4 + 12 | 0) >> 2] | 0;
  HEAP32[$5 >> 2] = std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__20std____2__forward_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__remove_reference_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____type__29(HEAP32[($4 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__tuple_element_0ul_2c_20std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___20___type__20std____2__get_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const___28std____2__tuple_std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const____29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_20false___get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2____tuple_leaf_0ul_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20const__2c_20false___get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[(HEAP32[($3 + 12 | 0) >> 2] | 0) >> 2] | 0 | 0;
 }
 
 function std____2____compressed_pair_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20___first_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $5 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $5 = std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____get_28_29(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $5 | 0;
 }
 
 function std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20std____2____invoke_void_return_wrapper_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_____call_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20Point3_2c_20Point3__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20Point3___2c_20Point3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0;
  $6 = __stack_pointer - 16 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 12 | 0) >> 2] = $0;
  HEAP32[($6 + 8 | 0) >> 2] = $1;
  HEAP32[($6 + 4 | 0) >> 2] = $2;
  HEAP32[$6 >> 2] = $3;
  decltype_28std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28fp_29_28std____2__forward_Point3__28fp0_29_2c_20std____2__forward_Point3__28fp0_29_29_29_20std____2____invoke_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20Point3_2c_20Point3__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20Point3___2c_20Point3___29($0 | 0, Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____type__29(HEAP32[($6 + 8 | 0) >> 2] | 0 | 0) | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($6 + 4 | 0) >> 2] | 0 | 0) | 0 | 0, Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[$6 >> 2] | 0 | 0) | 0 | 0);
  __stack_pointer = $6 + 16 | 0;
  return;
 }
 
 function Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____type__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function decltype_28std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28fp_29_28std____2__forward_Point3__28fp0_29_2c_20std____2__forward_Point3__28fp0_29_29_29_20std____2____invoke_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20Point3_2c_20Point3__28Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20Point3___2c_20Point3___29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $6 = 0, $13 = 0, $10 = 0, $28 = 0, $15 = 0, $19 = 0, $23 = 0, $31 = 0, $35 = 0, $39 = 0, $8 = 0, $83 = 0, $93 = 0, $103 = 0, $113 = 0, $122 = 0, $132 = 0, $142 = 0, $152 = 0;
  $6 = __stack_pointer - 80 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 76 | 0) >> 2] = $0;
  HEAP32[($6 + 72 | 0) >> 2] = $1;
  HEAP32[($6 + 68 | 0) >> 2] = $2;
  HEAP32[($6 + 64 | 0) >> 2] = $3;
  $8 = Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__20std____2__forward_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1___28std____2__remove_reference_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1____type__29(HEAP32[($6 + 72 | 0) >> 2] | 0 | 0) | 0;
  $10 = Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($6 + 68 | 0) >> 2] | 0 | 0) | 0;
  $13 = $6 + 32 | 0;
  i64toi32_i32$2 = $10;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $83 = i64toi32_i32$0;
  i64toi32_i32$0 = $13;
  HEAP32[i64toi32_i32$0 >> 2] = $83;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $15 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $15 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $93 = i64toi32_i32$1;
  i64toi32_i32$1 = $13 + $15 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $93;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $19 = 16;
  i64toi32_i32$2 = $10 + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $103 = i64toi32_i32$0;
  i64toi32_i32$0 = $13 + $19 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $103;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $23 = 8;
  i64toi32_i32$2 = $10 + $23 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $113 = i64toi32_i32$1;
  i64toi32_i32$1 = $13 + $23 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $113;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $28 = Point3___20std____2__forward_Point3__28std____2__remove_reference_Point3___type__29(HEAP32[($6 + 64 | 0) >> 2] | 0 | 0) | 0;
  i64toi32_i32$2 = $28;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $122 = i64toi32_i32$0;
  i64toi32_i32$0 = $6;
  HEAP32[i64toi32_i32$0 >> 2] = $122;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $31 = 24;
  i64toi32_i32$2 = i64toi32_i32$2 + $31 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $132 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $31 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $132;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  $35 = 16;
  i64toi32_i32$2 = $28 + $35 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $142 = i64toi32_i32$0;
  i64toi32_i32$0 = $6 + $35 | 0;
  HEAP32[i64toi32_i32$0 >> 2] = $142;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  $39 = 8;
  i64toi32_i32$2 = $28 + $39 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $152 = i64toi32_i32$1;
  i64toi32_i32$1 = $6 + $39 | 0;
  HEAP32[i64toi32_i32$1 >> 2] = $152;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__operator_28_29_28Point3_2c_20Point3_29_20const($0 | 0, $8 | 0, $6 + 32 | 0 | 0, $6 | 0);
  FUNCTION_TABLE[94 | 0]($6) | 0;
  FUNCTION_TABLE[94 | 0]($6 + 32 | 0) | 0;
  __stack_pointer = $6 + 80 | 0;
  return;
 }
 
 function std____2____compressed_pair_elem_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_200_2c_20false_____get_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__operator_28_29_28Point3_2c_20Point3_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, $6 = 0, $34 = 0, $77 = 0, $7 = 0, $13$hi = 0, $14$hi = 0, $19 = 0, $23$hi = 0, $24$hi = 0, $36 = 0, $40 = 0, $44 = 0, $61$hi = 0, $62$hi = 0, $66 = 0, $70$hi = 0, $71$hi = 0, $79 = 0, $83 = 0, $87 = 0, $11 = 0, $11$hi = 0, $148 = 0, $13 = 0, $14 = 0, $23 = 0, $180 = 0, $30 = 0, $30$hi = 0, $31 = 0, $31$hi = 0, $203 = 0, $213 = 0, $223 = 0, $233 = 0, $61 = 0, $62 = 0, $70 = 0, $286 = 0, $73 = 0, $73$hi = 0, $74 = 0, $74$hi = 0, $306 = 0, $316 = 0, $326 = 0, $336 = 0;
  $6 = __stack_pointer - 224 | 0;
  __stack_pointer = $6;
  HEAP32[($6 + 220 | 0) >> 2] = $0;
  HEAP32[($6 + 216 | 0) >> 2] = $1;
  $7 = HEAP32[($6 + 216 | 0) >> 2] | 0;
  HEAP8[($6 + 215 | 0) >> 0] = 0;
  std____2__vector_Point3_2c_20std____2__allocator_Point3__20___vector_28_29($0 | 0) | 0;
  Point3__angle_between_28Point3_20const__29_20const($6 + 64 | 0 | 0, $2 | 0, $3 | 0);
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
  $11 = i64toi32_i32$0;
  $11$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 72 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 76 | 0) >> 2] | 0;
  $148 = i64toi32_i32$1;
  i64toi32_i32$1 = i64toi32_i32$2;
  HEAP32[(i64toi32_i32$1 + 200 | 0) >> 2] = $148;
  HEAP32[(i64toi32_i32$1 + 204 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $11$hi;
  HEAP32[(i64toi32_i32$1 + 192 | 0) >> 2] = $11;
  HEAP32[(i64toi32_i32$1 + 196 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 200 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$1 + 204 | 0) >> 2] | 0;
  $13 = i64toi32_i32$0;
  $13$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 192 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 196 | 0) >> 2] | 0;
  $14 = i64toi32_i32$1;
  $14$hi = i64toi32_i32$0;
  __floatsitf(i64toi32_i32$2 + 48 | 0 | 0, HEAP32[(HEAP32[$7 >> 2] | 0) >> 2] | 0 | 0);
  $19 = 8;
  i64toi32_i32$2 = (i64toi32_i32$2 + 48 | 0) + $19 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $23 = i64toi32_i32$0;
  $23$hi = i64toi32_i32$1;
  i64toi32_i32$2 = $6;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
  $24$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $14$hi;
  i64toi32_i32$0 = $13$hi;
  i64toi32_i32$0 = $24$hi;
  $180 = i64toi32_i32$1;
  i64toi32_i32$0 = $23$hi;
  i64toi32_i32$0 = $14$hi;
  i64toi32_i32$1 = $13$hi;
  i64toi32_i32$2 = $24$hi;
  i64toi32_i32$3 = $23$hi;
  __divtf3($6 + 32 | 0 | 0, $14 | 0, i64toi32_i32$0 | 0, $13 | 0, i64toi32_i32$1 | 0, $180 | 0, i64toi32_i32$2 | 0, $23 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = ($6 + 32 | 0) + $19 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $30 = i64toi32_i32$3;
  $30$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $6;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $31 = i64toi32_i32$2;
  $31$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $30$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 184 | 0) >> 2] = $30;
  HEAP32[(i64toi32_i32$1 + 188 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $31$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  HEAP32[(i64toi32_i32$1 + 176 | 0) >> 2] = $31;
  HEAP32[(i64toi32_i32$1 + 180 | 0) >> 2] = i64toi32_i32$3;
  $34 = i64toi32_i32$1 + 144 | 0;
  i64toi32_i32$1 = $2;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $203 = i64toi32_i32$3;
  i64toi32_i32$3 = $34;
  HEAP32[i64toi32_i32$3 >> 2] = $203;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $36 = 24;
  i64toi32_i32$1 = i64toi32_i32$1 + $36 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $213 = i64toi32_i32$2;
  i64toi32_i32$2 = $34 + $36 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $213;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  $40 = 16;
  i64toi32_i32$1 = $2 + $40 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $223 = i64toi32_i32$3;
  i64toi32_i32$3 = $34 + $40 | 0;
  HEAP32[i64toi32_i32$3 >> 2] = $223;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
  $44 = 8;
  i64toi32_i32$1 = $2 + $44 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $233 = i64toi32_i32$2;
  i64toi32_i32$2 = $34 + $44 | 0;
  HEAP32[i64toi32_i32$2 >> 2] = $233;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  Point3__cross_28Point3_20const__29($6 + 144 | 0 | 0, $3 | 0);
  HEAP32[($6 + 124 | 0) >> 2] = HEAP32[(HEAP32[($7 + 4 | 0) >> 2] | 0) >> 2] | 0;
  label$1 : {
   label$2 : while (1) {
    if (!((HEAP32[($6 + 124 | 0) >> 2] | 0 | 0) <= (HEAP32[(HEAP32[($7 + 8 | 0) >> 2] | 0) >> 2] | 0 | 0) & 1 | 0)) {
     break label$1
    }
    i64toi32_i32$1 = $6;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 184 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 188 | 0) >> 2] | 0;
    $61 = i64toi32_i32$3;
    $61$hi = i64toi32_i32$2;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 176 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 180 | 0) >> 2] | 0;
    $62 = i64toi32_i32$2;
    $62$hi = i64toi32_i32$3;
    __floatsitf(i64toi32_i32$1 + 16 | 0 | 0, HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] | 0 | 0);
    $66 = 8;
    i64toi32_i32$1 = (i64toi32_i32$1 + 16 | 0) + $66 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $70 = i64toi32_i32$3;
    $70$hi = i64toi32_i32$2;
    i64toi32_i32$1 = $6;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
    $71$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $62$hi;
    i64toi32_i32$3 = $61$hi;
    i64toi32_i32$3 = $71$hi;
    $286 = i64toi32_i32$2;
    i64toi32_i32$3 = $70$hi;
    i64toi32_i32$3 = $62$hi;
    i64toi32_i32$2 = $61$hi;
    i64toi32_i32$1 = $71$hi;
    i64toi32_i32$0 = $70$hi;
    __multf3($6 | 0, $62 | 0, i64toi32_i32$3 | 0, $61 | 0, i64toi32_i32$2 | 0, $286 | 0, i64toi32_i32$1 | 0, $70 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$2 = $6 + $66 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $73 = i64toi32_i32$0;
    $73$hi = i64toi32_i32$1;
    i64toi32_i32$2 = $6;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $74 = i64toi32_i32$1;
    $74$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $73$hi;
    i64toi32_i32$1 = i64toi32_i32$2;
    HEAP32[(i64toi32_i32$1 + 136 | 0) >> 2] = $73;
    HEAP32[(i64toi32_i32$1 + 140 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$0 = $74$hi;
    HEAP32[(i64toi32_i32$1 + 128 | 0) >> 2] = $74;
    HEAP32[(i64toi32_i32$1 + 132 | 0) >> 2] = i64toi32_i32$0;
    $77 = i64toi32_i32$1 + 88 | 0;
    i64toi32_i32$2 = $2;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $306 = i64toi32_i32$0;
    i64toi32_i32$0 = $77;
    HEAP32[i64toi32_i32$0 >> 2] = $306;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $79 = 24;
    i64toi32_i32$2 = i64toi32_i32$2 + $79 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $316 = i64toi32_i32$1;
    i64toi32_i32$1 = $77 + $79 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $316;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    $83 = 16;
    i64toi32_i32$2 = $2 + $83 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $326 = i64toi32_i32$0;
    i64toi32_i32$0 = $77 + $83 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $326;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
    $87 = 8;
    i64toi32_i32$2 = $2 + $87 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $336 = i64toi32_i32$1;
    i64toi32_i32$1 = $77 + $87 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $336;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
    Point3__rotate_28Point3_20const__2c_20long_20double_20const__29($6 + 88 | 0 | 0, $6 + 144 | 0 | 0, $6 + 128 | 0 | 0);
    std____2__vector_Point3_2c_20std____2__allocator_Point3__20___push_back_28Point3_20const__29($0 | 0, $6 + 88 | 0 | 0);
    FUNCTION_TABLE[94 | 0]($6 + 88 | 0) | 0;
    HEAP32[($6 + 124 | 0) >> 2] = (HEAP32[($6 + 124 | 0) >> 2] | 0) + 1 | 0;
    continue label$2;
   };
  }
  HEAP8[($6 + 215 | 0) >> 0] = 1 & 1 | 0;
  FUNCTION_TABLE[94 | 0]($6 + 144 | 0) | 0;
  label$3 : {
   if ((HEAPU8[($6 + 215 | 0) >> 0] | 0) & 1 | 0) {
    break label$3
   }
   std____2__vector_Point3_2c_20std____2__allocator_Point3__20____vector_28_29($0 | 0) | 0;
  }
  __stack_pointer = $6 + 224 | 0;
  return;
 }
 
 function __getTypeName($0) {
  $0 = $0 | 0;
  var $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $6 = __strdup(std__type_info__name_28_29_20const(HEAP32[($3 + 12 | 0) >> 2] | 0 | 0) | 0 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
  return $6 | 0;
 }
 
 function std__type_info__name_28_29_20const($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  HEAP32[($3 + 8 | 0) >> 2] = $0;
  HEAP32[($3 + 12 | 0) >> 2] = HEAP32[((HEAP32[($3 + 8 | 0) >> 2] | 0) + 4 | 0) >> 2] | 0;
  return HEAP32[($3 + 12 | 0) >> 2] | 0 | 0;
 }
 
 function __embind_register_native_and_builtin_types() {
  _embind_register_void(emscripten__internal__TypeID_void_2c_20void___get_28_29() | 0 | 0, 5320 | 0);
  _embind_register_bool(emscripten__internal__TypeID_bool_2c_20void___get_28_29() | 0 | 0, 5325 | 0, 1 | 0, 1 & 1 | 0 | 0, 0 & 1 | 0 | 0);
  void_20_28anonymous_20namespace_29__register_integer_char__28char_20const__29(5330 | 0);
  void_20_28anonymous_20namespace_29__register_integer_signed_20char__28char_20const__29(5335 | 0);
  void_20_28anonymous_20namespace_29__register_integer_unsigned_20char__28char_20const__29(5347 | 0);
  void_20_28anonymous_20namespace_29__register_integer_short__28char_20const__29(5361 | 0);
  void_20_28anonymous_20namespace_29__register_integer_unsigned_20short__28char_20const__29(5367 | 0);
  void_20_28anonymous_20namespace_29__register_integer_int__28char_20const__29(5382 | 0);
  void_20_28anonymous_20namespace_29__register_integer_unsigned_20int__28char_20const__29(5386 | 0);
  void_20_28anonymous_20namespace_29__register_integer_long__28char_20const__29(5399 | 0);
  void_20_28anonymous_20namespace_29__register_integer_unsigned_20long__28char_20const__29(5404 | 0);
  void_20_28anonymous_20namespace_29__register_float_float__28char_20const__29(5418 | 0);
  void_20_28anonymous_20namespace_29__register_float_double__28char_20const__29(5424 | 0);
  _embind_register_std_string(emscripten__internal__TypeID_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20void___get_28_29() | 0 | 0, 5431 | 0);
  _embind_register_std_string(emscripten__internal__TypeID_std____2__basic_string_unsigned_20char_2c_20std____2__char_traits_unsigned_20char__2c_20std____2__allocator_unsigned_20char__20__2c_20void___get_28_29() | 0 | 0, 5443 | 0);
  _embind_register_std_wstring(emscripten__internal__TypeID_std____2__basic_string_wchar_t_2c_20std____2__char_traits_wchar_t__2c_20std____2__allocator_wchar_t__20__2c_20void___get_28_29() | 0 | 0, 4 | 0, 5476 | 0);
  _embind_register_std_wstring(emscripten__internal__TypeID_std____2__basic_string_char16_t_2c_20std____2__char_traits_char16_t__2c_20std____2__allocator_char16_t__20__2c_20void___get_28_29() | 0 | 0, 2 | 0, 5489 | 0);
  _embind_register_std_wstring(emscripten__internal__TypeID_std____2__basic_string_char32_t_2c_20std____2__char_traits_char32_t__2c_20std____2__allocator_char32_t__20__2c_20void___get_28_29() | 0 | 0, 4 | 0, 5504 | 0);
  _embind_register_emval(emscripten__internal__TypeID_emscripten__val_2c_20void___get_28_29() | 0 | 0, 5519 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_char__28char_20const__29(5535 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_signed_20char__28char_20const__29(5565 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20char__28char_20const__29(5602 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_short__28char_20const__29(5641 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20short__28char_20const__29(5672 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_int__28char_20const__29(5712 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20int__28char_20const__29(5741 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_long__28char_20const__29(5779 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20long__28char_20const__29(5809 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_signed_20char__28char_20const__29(5848 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20char__28char_20const__29(5880 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_short__28char_20const__29(5913 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20short__28char_20const__29(5946 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_int__28char_20const__29(5980 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20int__28char_20const__29(6013 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_float__28char_20const__29(6047 | 0);
  void_20_28anonymous_20namespace_29__register_memory_view_double__28char_20const__29(6078 | 0);
  return;
 }
 
 function emscripten__internal__TypeID_void_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_void___get_28_29() | 0 | 0;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_char__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__TypeID_char_2c_20void___get_28_29() | 0;
  $5 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $6 = std____2__numeric_limits_char___min_28_29() | 0;
  $7 = 24;
  $9 = ($6 << $7 | 0) >> $7 | 0;
  $10 = std____2__numeric_limits_char___max_28_29() | 0;
  $11 = 24;
  _embind_register_integer($4 | 0, $5 | 0, 1 | 0, $9 | 0, ($10 << $11 | 0) >> $11 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_signed_20char__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__TypeID_signed_20char_2c_20void___get_28_29() | 0;
  $5 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $6 = std____2__numeric_limits_signed_20char___min_28_29() | 0;
  $7 = 24;
  $9 = ($6 << $7 | 0) >> $7 | 0;
  $10 = std____2__numeric_limits_signed_20char___max_28_29() | 0;
  $11 = 24;
  _embind_register_integer($4 | 0, $5 | 0, 1 | 0, $9 | 0, ($10 << $11 | 0) >> $11 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_unsigned_20char__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_integer(emscripten__internal__TypeID_unsigned_20char_2c_20void___get_28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, 1 | 0, (std____2__numeric_limits_unsigned_20char___min_28_29() | 0) & 255 | 0 | 0, (std____2__numeric_limits_unsigned_20char___max_28_29() | 0) & 255 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_short__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0, $7 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $10 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = emscripten__internal__TypeID_short_2c_20void___get_28_29() | 0;
  $5 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  $6 = std____2__numeric_limits_short___min_28_29() | 0;
  $7 = 16;
  $9 = ($6 << $7 | 0) >> $7 | 0;
  $10 = std____2__numeric_limits_short___max_28_29() | 0;
  $11 = 16;
  _embind_register_integer($4 | 0, $5 | 0, 2 | 0, $9 | 0, ($10 << $11 | 0) >> $11 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_unsigned_20short__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_integer(emscripten__internal__TypeID_unsigned_20short_2c_20void___get_28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, 2 | 0, (std____2__numeric_limits_unsigned_20short___min_28_29() | 0) & 65535 | 0 | 0, (std____2__numeric_limits_unsigned_20short___max_28_29() | 0) & 65535 | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_int__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_integer(emscripten__internal__TypeID_int_2c_20void___get_28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, 4 | 0, std____2__numeric_limits_int___min_28_29() | 0 | 0, std____2__numeric_limits_int___max_28_29() | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_unsigned_20int__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_integer(emscripten__internal__TypeID_unsigned_20int_2c_20void___get_28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, 4 | 0, std____2__numeric_limits_unsigned_20int___min_28_29() | 0 | 0, std____2__numeric_limits_unsigned_20int___max_28_29() | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_long__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_integer(emscripten__internal__TypeID_long_2c_20void___get_28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, 4 | 0, std____2__numeric_limits_long___min_28_29() | 0 | 0, std____2__numeric_limits_long___max_28_29() | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_integer_unsigned_20long__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_integer(emscripten__internal__TypeID_unsigned_20long_2c_20void___get_28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, 4 | 0, std____2__numeric_limits_unsigned_20long___min_28_29() | 0 | 0, std____2__numeric_limits_unsigned_20long___max_28_29() | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_float_float__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_float(emscripten__internal__TypeID_float_2c_20void___get_28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, 4 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_float_double__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_float(emscripten__internal__TypeID_double_2c_20void___get_28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0, 8 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function emscripten__internal__TypeID_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_std____2__basic_string_unsigned_20char_2c_20std____2__char_traits_unsigned_20char__2c_20std____2__allocator_unsigned_20char__20__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_std____2__basic_string_unsigned_20char_2c_20std____2__char_traits_unsigned_20char__2c_20std____2__allocator_unsigned_20char__20__20___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_std____2__basic_string_wchar_t_2c_20std____2__char_traits_wchar_t__2c_20std____2__allocator_wchar_t__20__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_std____2__basic_string_wchar_t_2c_20std____2__char_traits_wchar_t__2c_20std____2__allocator_wchar_t__20__20___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_std____2__basic_string_char16_t_2c_20std____2__char_traits_char16_t__2c_20std____2__allocator_char16_t__20__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_std____2__basic_string_char16_t_2c_20std____2__char_traits_char16_t__2c_20std____2__allocator_char16_t__20__20___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_std____2__basic_string_char32_t_2c_20std____2__char_traits_char32_t__2c_20std____2__allocator_char32_t__20__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_std____2__basic_string_char32_t_2c_20std____2__char_traits_char32_t__2c_20std____2__allocator_char32_t__20__20___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__val_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__val___get_28_29() | 0 | 0;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_char__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_char__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_char__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_signed_20char__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_signed_20char__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_signed_20char__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20char__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_unsigned_20char__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_unsigned_20char__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_short__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_short__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_short__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20short__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_unsigned_20short__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_unsigned_20short__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_int__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_int__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_int__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20int__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_unsigned_20int__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_unsigned_20int__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_long__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_long__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_long__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_unsigned_20long__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_unsigned_20long__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_unsigned_20long__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_float__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_float__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_float__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function void_20_28anonymous_20namespace_29__register_memory_view_double__28char_20const__29($0) {
  $0 = $0 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  _embind_register_memory_view(emscripten__internal__TypeID_emscripten__memory_view_double__2c_20void___get_28_29() | 0 | 0, $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_double__28_29() | 0 | 0, HEAP32[($3 + 12 | 0) >> 2] | 0 | 0);
  __stack_pointer = $3 + 16 | 0;
  return;
 }
 
 function emscripten__internal__LightTypeID_void___get_28_29() {
  return 12004 | 0;
 }
 
 function emscripten__internal__TypeID_char_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_char___get_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_char___min_28_29() {
  var $1 = 0, $0 = 0;
  $0 = std____2____libcpp_numeric_limits_char_2c_20true___min_28_29() | 0;
  $1 = 24;
  return ($0 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function std____2__numeric_limits_char___max_28_29() {
  var $1 = 0, $0 = 0;
  $0 = std____2____libcpp_numeric_limits_char_2c_20true___max_28_29() | 0;
  $1 = 24;
  return ($0 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function emscripten__internal__TypeID_signed_20char_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_signed_20char___get_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_signed_20char___min_28_29() {
  var $1 = 0, $0 = 0;
  $0 = std____2____libcpp_numeric_limits_signed_20char_2c_20true___min_28_29() | 0;
  $1 = 24;
  return ($0 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function std____2__numeric_limits_signed_20char___max_28_29() {
  var $1 = 0, $0 = 0;
  $0 = std____2____libcpp_numeric_limits_signed_20char_2c_20true___max_28_29() | 0;
  $1 = 24;
  return ($0 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function emscripten__internal__TypeID_unsigned_20char_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_unsigned_20char___get_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_unsigned_20char___min_28_29() {
  return (std____2____libcpp_numeric_limits_unsigned_20char_2c_20true___min_28_29() | 0) & 255 | 0 | 0;
 }
 
 function std____2__numeric_limits_unsigned_20char___max_28_29() {
  return (std____2____libcpp_numeric_limits_unsigned_20char_2c_20true___max_28_29() | 0) & 255 | 0 | 0;
 }
 
 function emscripten__internal__TypeID_short_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_short___get_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_short___min_28_29() {
  var $1 = 0, $0 = 0;
  $0 = std____2____libcpp_numeric_limits_short_2c_20true___min_28_29() | 0;
  $1 = 16;
  return ($0 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function std____2__numeric_limits_short___max_28_29() {
  var $1 = 0, $0 = 0;
  $0 = std____2____libcpp_numeric_limits_short_2c_20true___max_28_29() | 0;
  $1 = 16;
  return ($0 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function emscripten__internal__TypeID_unsigned_20short_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_unsigned_20short___get_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_unsigned_20short___min_28_29() {
  return (std____2____libcpp_numeric_limits_unsigned_20short_2c_20true___min_28_29() | 0) & 65535 | 0 | 0;
 }
 
 function std____2__numeric_limits_unsigned_20short___max_28_29() {
  return (std____2____libcpp_numeric_limits_unsigned_20short_2c_20true___max_28_29() | 0) & 65535 | 0 | 0;
 }
 
 function std____2__numeric_limits_int___min_28_29() {
  return std____2____libcpp_numeric_limits_int_2c_20true___min_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_int___max_28_29() {
  return std____2____libcpp_numeric_limits_int_2c_20true___max_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_unsigned_20int_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_unsigned_20int___get_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_unsigned_20int___min_28_29() {
  return std____2____libcpp_numeric_limits_unsigned_20int_2c_20true___min_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_unsigned_20int___max_28_29() {
  return std____2____libcpp_numeric_limits_unsigned_20int_2c_20true___max_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_long_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_long___get_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_long___min_28_29() {
  return std____2____libcpp_numeric_limits_long_2c_20true___min_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_unsigned_20long_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_unsigned_20long___get_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_unsigned_20long___min_28_29() {
  return std____2____libcpp_numeric_limits_unsigned_20long_2c_20true___min_28_29() | 0 | 0;
 }
 
 function std____2__numeric_limits_unsigned_20long___max_28_29() {
  return std____2____libcpp_numeric_limits_unsigned_20long_2c_20true___max_28_29() | 0 | 0;
 }
 
 function emscripten__internal__TypeID_float_2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_float___get_28_29() | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20___get_28_29() {
  return 3212 | 0;
 }
 
 function emscripten__internal__LightTypeID_std____2__basic_string_unsigned_20char_2c_20std____2__char_traits_unsigned_20char__2c_20std____2__allocator_unsigned_20char__20__20___get_28_29() {
  return 6176 | 0;
 }
 
 function emscripten__internal__LightTypeID_std____2__basic_string_wchar_t_2c_20std____2__char_traits_wchar_t__2c_20std____2__allocator_wchar_t__20__20___get_28_29() {
  return 6264 | 0;
 }
 
 function emscripten__internal__LightTypeID_std____2__basic_string_char16_t_2c_20std____2__char_traits_char16_t__2c_20std____2__allocator_char16_t__20__20___get_28_29() {
  return 6356 | 0;
 }
 
 function emscripten__internal__LightTypeID_std____2__basic_string_char32_t_2c_20std____2__char_traits_char32_t__2c_20std____2__allocator_char32_t__20__20___get_28_29() {
  return 6448 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__val___get_28_29() {
  return 6492 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_char__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_char__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_char__28_29() {
  return 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_signed_20char__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_signed_20char__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_signed_20char__28_29() {
  return 0 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_unsigned_20char__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_unsigned_20char__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_unsigned_20char__28_29() {
  return 1 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_short__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_short__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_short__28_29() {
  return 2 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_unsigned_20short__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_unsigned_20short__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_unsigned_20short__28_29() {
  return 3 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_int__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_int__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_int__28_29() {
  return 4 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_unsigned_20int__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_unsigned_20int__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_unsigned_20int__28_29() {
  return 5 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_long__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_long__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_long__28_29() {
  return 4 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_unsigned_20long__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_unsigned_20long__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_unsigned_20long__28_29() {
  return 5 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_float__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_float__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_float__28_29() {
  return 6 | 0;
 }
 
 function emscripten__internal__TypeID_emscripten__memory_view_double__2c_20void___get_28_29() {
  return emscripten__internal__LightTypeID_emscripten__memory_view_double__20___get_28_29() | 0 | 0;
 }
 
 function $28anonymous_20namespace_29__TypedArrayIndex_20_28anonymous_20namespace_29__getTypedArrayIndex_double__28_29() {
  return 7 | 0;
 }
 
 function __cxx_global_var_init_1() {
  FUNCTION_TABLE[117 | 0](12961) | 0;
  return;
 }
 
 function EmscriptenBindingInitializer_native_and_builtin_types__EmscriptenBindingInitializer_native_and_builtin_types_28_29($0) {
  $0 = $0 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = $0;
  $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
  __embind_register_native_and_builtin_types();
  __stack_pointer = $3 + 16 | 0;
  return $4 | 0;
 }
 
 function emscripten__internal__LightTypeID_char___get_28_29() {
  return 12040 | 0;
 }
 
 function std____2____libcpp_numeric_limits_char_2c_20true___min_28_29() {
  var $1 = 0;
  $1 = 24;
  return (128 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function std____2____libcpp_numeric_limits_char_2c_20true___max_28_29() {
  var $1 = 0;
  $1 = 24;
  return (127 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_signed_20char___get_28_29() {
  return 12064 | 0;
 }
 
 function std____2____libcpp_numeric_limits_signed_20char_2c_20true___min_28_29() {
  var $1 = 0;
  $1 = 24;
  return (128 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function std____2____libcpp_numeric_limits_signed_20char_2c_20true___max_28_29() {
  var $1 = 0;
  $1 = 24;
  return (127 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_unsigned_20char___get_28_29() {
  return 12052 | 0;
 }
 
 function std____2____libcpp_numeric_limits_unsigned_20char_2c_20true___min_28_29() {
  return 0 & 255 | 0 | 0;
 }
 
 function std____2____libcpp_numeric_limits_unsigned_20char_2c_20true___max_28_29() {
  return 255 & 255 | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_short___get_28_29() {
  return 12076 | 0;
 }
 
 function std____2____libcpp_numeric_limits_short_2c_20true___min_28_29() {
  var $1 = 0;
  $1 = 16;
  return (32768 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function std____2____libcpp_numeric_limits_short_2c_20true___max_28_29() {
  var $1 = 0;
  $1 = 16;
  return (32767 << $1 | 0) >> $1 | 0 | 0;
 }
 
 function emscripten__internal__LightTypeID_unsigned_20short___get_28_29() {
  return 12088 | 0;
 }
 
 function std____2____libcpp_numeric_limits_unsigned_20short_2c_20true___min_28_29() {
  return 0 & 65535 | 0 | 0;
 }
 
 function std____2____libcpp_numeric_limits_unsigned_20short_2c_20true___max_28_29() {
  return 65535 & 65535 | 0 | 0;
 }
 
 function std____2____libcpp_numeric_limits_int_2c_20true___min_28_29() {
  return -2147483648 | 0;
 }
 
 function std____2____libcpp_numeric_limits_int_2c_20true___max_28_29() {
  return 2147483647 | 0;
 }
 
 function emscripten__internal__LightTypeID_unsigned_20int___get_28_29() {
  return 12112 | 0;
 }
 
 function std____2____libcpp_numeric_limits_unsigned_20int_2c_20true___min_28_29() {
  return 0 | 0;
 }
 
 function std____2____libcpp_numeric_limits_unsigned_20int_2c_20true___max_28_29() {
  return -1 | 0;
 }
 
 function emscripten__internal__LightTypeID_long___get_28_29() {
  return 12124 | 0;
 }
 
 function std____2____libcpp_numeric_limits_long_2c_20true___min_28_29() {
  return -2147483648 | 0;
 }
 
 function emscripten__internal__LightTypeID_unsigned_20long___get_28_29() {
  return 12136 | 0;
 }
 
 function std____2____libcpp_numeric_limits_unsigned_20long_2c_20true___min_28_29() {
  return 0 | 0;
 }
 
 function std____2____libcpp_numeric_limits_unsigned_20long_2c_20true___max_28_29() {
  return -1 | 0;
 }
 
 function emscripten__internal__LightTypeID_float___get_28_29() {
  return 12148 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_char__20___get_28_29() {
  return 6532 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_signed_20char__20___get_28_29() {
  return 6572 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_unsigned_20char__20___get_28_29() {
  return 6612 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_short__20___get_28_29() {
  return 6652 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_unsigned_20short__20___get_28_29() {
  return 6692 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_int__20___get_28_29() {
  return 6732 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_unsigned_20int__20___get_28_29() {
  return 6772 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_long__20___get_28_29() {
  return 6812 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_unsigned_20long__20___get_28_29() {
  return 6852 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_float__20___get_28_29() {
  return 6892 | 0;
 }
 
 function emscripten__internal__LightTypeID_emscripten__memory_view_double__20___get_28_29() {
  return 6932 | 0;
 }
 
 function _GLOBAL__sub_I_bind_cpp() {
  __cxx_global_var_init_1();
  return;
 }
 
 function roundl($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $3 = 0, i64toi32_i32$0 = 0, $5$hi = 0, $5 = 0, $7$hi = 0, $6$hi = 0, $4 = 0, $6 = 0, $7 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $49 = 0, $28 = 0, $29 = 0, $29$hi = 0, $30 = 0, $30$hi = 0, $32 = 0, $32$hi = 0, $40 = 0, $40$hi = 0, $44 = 0, $44$hi = 0, $48 = 0, $48$hi = 0, $52 = 0, $52$hi = 0, $74 = 0, $74$hi = 0, $78 = 0, $78$hi = 0, $111 = 0, $111$hi = 0, $113 = 0, $113$hi = 0;
  $3 = __stack_pointer - 128 | 0;
  __stack_pointer = $3;
  label$1 : {
   i64toi32_i32$0 = $2$hi;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 48;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $41 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    $41 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
   }
   $4 = $41 & 32767 | 0;
   if ($4 >>> 0 > 16494 >>> 0) {
    break label$1
   }
   label$2 : {
    if ($4 >>> 0 > 16381 >>> 0) {
     break label$2
    }
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $2$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$0 = 0;
    i64toi32_i32$3 = 0;
    __multf3($3 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$2 = $3 + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $2 = i64toi32_i32$3;
    $2$hi = i64toi32_i32$0;
    i64toi32_i32$2 = $3;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $1 = i64toi32_i32$0;
    $1$hi = i64toi32_i32$3;
    break label$1;
   }
   $28 = $3 + 112 | 0;
   i64toi32_i32$3 = $1$hi;
   $29 = $1;
   $29$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $2$hi;
   $30 = $2;
   $30$hi = i64toi32_i32$3;
   i64toi32_i32$2 = $2;
   i64toi32_i32$0 = -2147483648;
   i64toi32_i32$1 = 0;
   i64toi32_i32$0 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
   $32 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
   $32$hi = i64toi32_i32$0;
   i64toi32_i32$0 = i64toi32_i32$3;
   i64toi32_i32$0 = i64toi32_i32$3;
   i64toi32_i32$3 = i64toi32_i32$2;
   i64toi32_i32$2 = -1;
   i64toi32_i32$1 = -1;
   if ((i64toi32_i32$0 | 0) > (i64toi32_i32$2 | 0)) {
    $42 = 1
   } else {
    if ((i64toi32_i32$0 | 0) >= (i64toi32_i32$2 | 0)) {
     if (i64toi32_i32$3 >>> 0 <= i64toi32_i32$1 >>> 0) {
      $43 = 0
     } else {
      $43 = 1
     }
     $45 = $43;
    } else {
     $45 = 0
    }
    $42 = $45;
   }
   i64toi32_i32$4 = $42;
   i64toi32_i32$3 = $30$hi;
   i64toi32_i32$0 = $32$hi;
   i64toi32_i32$2 = i64toi32_i32$4 ? $30 : $32;
   i64toi32_i32$1 = i64toi32_i32$4 ? i64toi32_i32$3 : i64toi32_i32$0;
   $5 = i64toi32_i32$2;
   $5$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $29$hi;
   i64toi32_i32$2 = $5$hi;
   i64toi32_i32$4 = 0;
   i64toi32_i32$3 = 1081016320;
   __addtf3($28 | 0, $29 | 0, i64toi32_i32$1 | 0, $5 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$4 | 0, 0 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$2 = $3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 112 | 0) >> 2] | 0;
   i64toi32_i32$4 = HEAP32[(i64toi32_i32$2 + 116 | 0) >> 2] | 0;
   $40 = i64toi32_i32$3;
   $40$hi = i64toi32_i32$4;
   i64toi32_i32$2 = (i64toi32_i32$2 + 112 | 0) + 8 | 0;
   i64toi32_i32$4 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $44 = i64toi32_i32$4;
   $44$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $40$hi;
   i64toi32_i32$4 = $44$hi;
   i64toi32_i32$2 = 0;
   i64toi32_i32$1 = -1066467328;
   __addtf3($3 + 96 | 0 | 0, $40 | 0, i64toi32_i32$3 | 0, $44 | 0, i64toi32_i32$4 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$4 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$4 + 96 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$4 + 100 | 0) >> 2] | 0;
   $48 = i64toi32_i32$1;
   $48$hi = i64toi32_i32$2;
   i64toi32_i32$4 = (i64toi32_i32$4 + 96 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$4 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
   $52 = i64toi32_i32$2;
   $52$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$1 = $5$hi;
   i64toi32_i32$1 = $48$hi;
   i64toi32_i32$2 = $52$hi;
   i64toi32_i32$4 = $1$hi;
   i64toi32_i32$3 = $5$hi;
   __subtf3($3 + 80 | 0 | 0, $48 | 0, i64toi32_i32$1 | 0, $52 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$4 | 0, $5 | 0, i64toi32_i32$3 | 0);
   label$3 : {
    label$4 : {
     i64toi32_i32$2 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
     i64toi32_i32$4 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
     $6 = i64toi32_i32$3;
     $6$hi = i64toi32_i32$4;
     i64toi32_i32$2 = (i64toi32_i32$2 + 80 | 0) + 8 | 0;
     i64toi32_i32$4 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $7 = i64toi32_i32$4;
     $7$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $6$hi;
     i64toi32_i32$4 = $7$hi;
     i64toi32_i32$2 = 0;
     i64toi32_i32$1 = 1073610752;
     if ((__getf2($6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$4 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0) | 0 | 0) < (1 | 0)) {
      break label$4
     }
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$1 = $5$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = $7$hi;
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$2 = $5$hi;
     i64toi32_i32$4 = $6$hi;
     i64toi32_i32$3 = $7$hi;
     __addtf3($3 + 32 | 0 | 0, $1 | 0, i64toi32_i32$1 | 0, $5 | 0, i64toi32_i32$2 | 0, $6 | 0, i64toi32_i32$4 | 0, $7 | 0, i64toi32_i32$3 | 0);
     i64toi32_i32$2 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
     i64toi32_i32$4 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
     $74 = i64toi32_i32$3;
     $74$hi = i64toi32_i32$4;
     i64toi32_i32$2 = (i64toi32_i32$2 + 32 | 0) + 8 | 0;
     i64toi32_i32$4 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $78 = i64toi32_i32$4;
     $78$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $74$hi;
     i64toi32_i32$4 = $78$hi;
     i64toi32_i32$2 = 0;
     i64toi32_i32$1 = -1073807360;
     __addtf3($3 + 16 | 0 | 0, $74 | 0, i64toi32_i32$3 | 0, $78 | 0, i64toi32_i32$4 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$4 = ($3 + 16 | 0) + 8 | 0;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$4 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
     $5 = i64toi32_i32$1;
     $5$hi = i64toi32_i32$2;
     i64toi32_i32$4 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$4 + 16 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$4 + 20 | 0) >> 2] | 0;
     $1 = i64toi32_i32$2;
     $1$hi = i64toi32_i32$1;
     break label$3;
    }
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $5$hi;
    i64toi32_i32$1 = $6$hi;
    i64toi32_i32$1 = $7$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$2 = $5$hi;
    i64toi32_i32$4 = $6$hi;
    i64toi32_i32$3 = $7$hi;
    __addtf3($3 + 64 | 0 | 0, $1 | 0, i64toi32_i32$1 | 0, $5 | 0, i64toi32_i32$2 | 0, $6 | 0, i64toi32_i32$4 | 0, $7 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$3 = i64toi32_i32$4;
    i64toi32_i32$3 = $7$hi;
    i64toi32_i32$3 = i64toi32_i32$4;
    i64toi32_i32$4 = $7$hi;
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = -1073872896;
    $4 = __letf2($6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$4 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0) | 0;
    i64toi32_i32$4 = ($3 + 64 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$4 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
    $5 = i64toi32_i32$1;
    $5$hi = i64toi32_i32$2;
    i64toi32_i32$4 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$4 + 64 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$4 + 68 | 0) >> 2] | 0;
    $1 = i64toi32_i32$2;
    $1$hi = i64toi32_i32$1;
    if (($4 | 0) > (0 | 0)) {
     break label$3
    }
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $5$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$2 = $5$hi;
    i64toi32_i32$4 = 0;
    i64toi32_i32$3 = 1073676288;
    __addtf3($3 + 48 | 0 | 0, $1 | 0, i64toi32_i32$1 | 0, $5 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$4 | 0, 0 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$2 = $3 + 56 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $5 = i64toi32_i32$3;
    $5$hi = i64toi32_i32$4;
    i64toi32_i32$2 = $3;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
    $1 = i64toi32_i32$4;
    $1$hi = i64toi32_i32$3;
   }
   i64toi32_i32$3 = $5$hi;
   $111 = $5;
   $111$hi = i64toi32_i32$3;
   i64toi32_i32$2 = $5;
   i64toi32_i32$4 = -2147483648;
   i64toi32_i32$1 = 0;
   i64toi32_i32$4 = i64toi32_i32$3 ^ i64toi32_i32$4 | 0;
   $113 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
   $113$hi = i64toi32_i32$4;
   i64toi32_i32$4 = $2$hi;
   i64toi32_i32$3 = $2;
   i64toi32_i32$2 = -1;
   i64toi32_i32$1 = -1;
   if ((i64toi32_i32$4 | 0) > (i64toi32_i32$2 | 0)) {
    $46 = 1
   } else {
    if ((i64toi32_i32$4 | 0) >= (i64toi32_i32$2 | 0)) {
     if (i64toi32_i32$3 >>> 0 <= i64toi32_i32$1 >>> 0) {
      $47 = 0
     } else {
      $47 = 1
     }
     $49 = $47;
    } else {
     $49 = 0
    }
    $46 = $49;
   }
   i64toi32_i32$0 = $46;
   i64toi32_i32$3 = $111$hi;
   i64toi32_i32$4 = $113$hi;
   i64toi32_i32$2 = i64toi32_i32$0 ? $111 : $113;
   i64toi32_i32$1 = i64toi32_i32$0 ? i64toi32_i32$3 : i64toi32_i32$4;
   $2 = i64toi32_i32$2;
   $2$hi = i64toi32_i32$1;
  }
  i64toi32_i32$1 = $1$hi;
  i64toi32_i32$2 = $0;
  HEAP32[i64toi32_i32$2 >> 2] = $1;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $2$hi;
  HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $3 + 128 | 0;
 }
 
 function acosl($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3 = 0, $5$hi = 0, $6$hi = 0, $5 = 0, $6 = 0, i64toi32_i32$4 = 0, $4 = 0, $108 = 0, $109 = 0, $112 = 0, $114 = 0, $34 = 0, $34$hi = 0, $38 = 0, $38$hi = 0, $53 = 0, $53$hi = 0, $57 = 0, $57$hi = 0, $90 = 0, $90$hi = 0, $94 = 0, $94$hi = 0, $98 = 0, $98$hi = 0, $100 = 0, $100$hi = 0, $106 = 0, $106$hi = 0, $110 = 0, $110$hi = 0, $111 = 0, $111$hi = 0, $113 = 0, $113$hi = 0, $117 = 0, $117$hi = 0, $121 = 0, $121$hi = 0, $129 = 0, $129$hi = 0, $133 = 0, $133$hi = 0, $149 = 0, $149$hi = 0, $153 = 0, $153$hi = 0, $177 = 0, $177$hi = 0, $179 = 0, $179$hi = 0, $183 = 0, $183$hi = 0, $187 = 0, $187$hi = 0, $188 = 0, $188$hi = 0, $190 = 0, $190$hi = 0, $196 = 0, $196$hi = 0, $200 = 0, $200$hi = 0, $203 = 0, $203$hi = 0, $205 = 0, $205$hi = 0, $207 = 0, $207$hi = 0, $211 = 0, $211$hi = 0, $237 = 0, $237$hi = 0, $241 = 0, $241$hi = 0, $263 = 0, $263$hi = 0, $267 = 0, $267$hi = 0, $278 = 0, $278$hi = 0, $282 = 0, $282$hi = 0, $284 = 0, $284$hi = 0, $288 = 0, $288$hi = 0, $298 = 0, $298$hi = 0, $300 = 0, $300$hi = 0, $304 = 0, $304$hi = 0, $308 = 0, $308$hi = 0, $310 = 0, $310$hi = 0, $314 = 0, $314$hi = 0, $318 = 0, $318$hi = 0, $322 = 0, $322$hi = 0;
  $3 = __stack_pointer - 512 | 0;
  __stack_pointer = $3;
  label$1 : {
   label$2 : {
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$2 = $2;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = 48;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $108 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     $108 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
    }
    $4 = $108 & 32767 | 0;
    if ($4 >>> 0 < 16383 >>> 0) {
     break label$2
    }
    i64toi32_i32$1 = 0;
    $5 = 0;
    $5$hi = i64toi32_i32$1;
    i64toi32_i32$1 = 0;
    $6 = 0;
    $6$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $2$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$0 = 0;
    i64toi32_i32$3 = 1073676288;
    if (!(__letf2($1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$3 | 0) | 0)) {
     break label$1
    }
    label$3 : {
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$3 = $2$hi;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$0 = $2$hi;
     i64toi32_i32$2 = 0;
     i64toi32_i32$1 = -1073807360;
     if (__letf2($1 | 0, i64toi32_i32$3 | 0, $2 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0) | 0) {
      break label$3
     }
     i64toi32_i32$0 = 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 6992 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 6996 | 0) >> 2] | 0;
     $2 = i64toi32_i32$1;
     $2$hi = i64toi32_i32$2;
     i64toi32_i32$0 = 6992 + 8 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $1 = i64toi32_i32$2;
     $1$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$0 = i64toi32_i32$1;
     i64toi32_i32$3 = i64toi32_i32$2;
     __addtf3($3 + 16 | 0 | 0, $2 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0);
     i64toi32_i32$2 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
     $34 = i64toi32_i32$3;
     $34$hi = i64toi32_i32$0;
     i64toi32_i32$2 = (i64toi32_i32$2 + 16 | 0) + 8 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $38 = i64toi32_i32$0;
     $38$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $34$hi;
     i64toi32_i32$0 = $38$hi;
     i64toi32_i32$2 = 0;
     i64toi32_i32$1 = 1065811968;
     __addtf3($3 | 0, $34 | 0, i64toi32_i32$3 | 0, $38 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$0 = $3 + 8 | 0;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $6 = i64toi32_i32$1;
     $6$hi = i64toi32_i32$2;
     i64toi32_i32$0 = $3;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $5 = i64toi32_i32$2;
     $5$hi = i64toi32_i32$1;
     break label$1;
    }
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $2$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $2$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$0 = i64toi32_i32$1;
    i64toi32_i32$3 = i64toi32_i32$2;
    __subtf3($3 + 48 | 0 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$2 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
    $53 = i64toi32_i32$3;
    $53$hi = i64toi32_i32$0;
    i64toi32_i32$2 = (i64toi32_i32$2 + 48 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $57 = i64toi32_i32$0;
    $57$hi = i64toi32_i32$3;
    i64toi32_i32$3 = 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = $53$hi;
    i64toi32_i32$1 = $57$hi;
    __divtf3($3 + 32 | 0 | 0, 0 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$0 | 0, $53 | 0, i64toi32_i32$2 | 0, $57 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$0 = ($3 + 32 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $6 = i64toi32_i32$1;
    $6$hi = i64toi32_i32$2;
    i64toi32_i32$0 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] | 0;
    $5 = i64toi32_i32$2;
    $5$hi = i64toi32_i32$1;
    break label$1;
   }
   label$4 : {
    if (($4 | 0) == (16382 | 0)) {
     break label$4
    }
    i64toi32_i32$0 = 6992 + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $5 = i64toi32_i32$1;
    $5$hi = i64toi32_i32$2;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 6992 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 6996 | 0) >> 2] | 0;
    $6 = i64toi32_i32$2;
    $6$hi = i64toi32_i32$1;
    label$5 : {
     if ($4 >>> 0 > 16268 >>> 0) {
      break label$5
     }
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = $5$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$2 = $5$hi;
     i64toi32_i32$0 = 0;
     i64toi32_i32$3 = 1065811968;
     __addtf3($3 + 400 | 0 | 0, $6 | 0, i64toi32_i32$1 | 0, $5 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$3 | 0);
     i64toi32_i32$2 = ($3 + 400 | 0) + 8 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $6 = i64toi32_i32$3;
     $6$hi = i64toi32_i32$0;
     i64toi32_i32$2 = $3;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 400 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 404 | 0) >> 2] | 0;
     $5 = i64toi32_i32$0;
     $5$hi = i64toi32_i32$3;
     break label$1;
    }
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$2 = i64toi32_i32$3;
    i64toi32_i32$1 = i64toi32_i32$0;
    __multf3($3 + 480 | 0 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 480 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 484 | 0) >> 2] | 0;
    $90 = i64toi32_i32$1;
    $90$hi = i64toi32_i32$2;
    i64toi32_i32$0 = (i64toi32_i32$0 + 480 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $94 = i64toi32_i32$2;
    $94$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $90$hi;
    i64toi32_i32$2 = $94$hi;
    __invtrigl_R($3 + 496 | 0 | 0, $90 | 0, i64toi32_i32$1 | 0, $94 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$0 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 496 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 500 | 0) >> 2] | 0;
    $98 = i64toi32_i32$2;
    $98$hi = i64toi32_i32$1;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 504 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 508 | 0) >> 2] | 0;
    $100 = i64toi32_i32$1;
    $100$hi = i64toi32_i32$2;
    i64toi32_i32$2 = i64toi32_i32$3;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $98$hi;
    i64toi32_i32$1 = $100$hi;
    i64toi32_i32$0 = i64toi32_i32$3;
    i64toi32_i32$3 = $2$hi;
    __multf3($3 + 464 | 0 | 0, $98 | 0, i64toi32_i32$2 | 0, $100 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$1 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 464 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 468 | 0) >> 2] | 0;
    $106 = i64toi32_i32$3;
    $106$hi = i64toi32_i32$0;
    i64toi32_i32$1 = (i64toi32_i32$1 + 464 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $110 = i64toi32_i32$0;
    $110$hi = i64toi32_i32$3;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 7008 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 7012 | 0) >> 2] | 0;
    $111 = i64toi32_i32$3;
    $111$hi = i64toi32_i32$0;
    i64toi32_i32$1 = 7008 + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $113 = i64toi32_i32$0;
    $113$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $106$hi;
    i64toi32_i32$0 = $110$hi;
    i64toi32_i32$1 = $111$hi;
    i64toi32_i32$2 = $113$hi;
    __subtf3($3 + 448 | 0 | 0, $106 | 0, i64toi32_i32$3 | 0, $110 | 0, i64toi32_i32$0 | 0, $111 | 0, i64toi32_i32$1 | 0, $113 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$0 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 448 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 452 | 0) >> 2] | 0;
    $117 = i64toi32_i32$2;
    $117$hi = i64toi32_i32$1;
    i64toi32_i32$0 = (i64toi32_i32$0 + 448 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $121 = i64toi32_i32$1;
    $121$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $117$hi;
    i64toi32_i32$1 = $121$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$3 = $2$hi;
    __addtf3($3 + 432 | 0 | 0, $117 | 0, i64toi32_i32$2 | 0, $121 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$3 = $6$hi;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$1 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 432 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 436 | 0) >> 2] | 0;
    $129 = i64toi32_i32$3;
    $129$hi = i64toi32_i32$0;
    i64toi32_i32$1 = (i64toi32_i32$1 + 432 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $133 = i64toi32_i32$0;
    $133$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $6$hi;
    i64toi32_i32$0 = $5$hi;
    i64toi32_i32$1 = $129$hi;
    i64toi32_i32$2 = $133$hi;
    __subtf3($3 + 416 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $5 | 0, i64toi32_i32$0 | 0, $129 | 0, i64toi32_i32$1 | 0, $133 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$0 = ($3 + 416 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $6 = i64toi32_i32$2;
    $6$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 416 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 420 | 0) >> 2] | 0;
    $5 = i64toi32_i32$1;
    $5$hi = i64toi32_i32$2;
    break label$1;
   }
   label$6 : {
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$0 = $2;
    i64toi32_i32$1 = -1;
    i64toi32_i32$3 = -1;
    if ((i64toi32_i32$2 | 0) > (i64toi32_i32$1 | 0)) {
     $109 = 1
    } else {
     if ((i64toi32_i32$2 | 0) >= (i64toi32_i32$1 | 0)) {
      if (i64toi32_i32$0 >>> 0 <= i64toi32_i32$3 >>> 0) {
       $112 = 0
      } else {
       $112 = 1
      }
      $114 = $112;
     } else {
      $114 = 0
     }
     $109 = $114;
    }
    if ($109) {
     break label$6
    }
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$3 = 0;
    i64toi32_i32$1 = 1073676288;
    __addtf3($3 + 352 | 0 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 352 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 356 | 0) >> 2] | 0;
    $149 = i64toi32_i32$1;
    $149$hi = i64toi32_i32$3;
    i64toi32_i32$2 = (i64toi32_i32$2 + 352 | 0) + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $153 = i64toi32_i32$3;
    $153$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $149$hi;
    i64toi32_i32$3 = $153$hi;
    i64toi32_i32$2 = 0;
    i64toi32_i32$0 = 1073610752;
    __multf3($3 + 336 | 0 | 0, $149 | 0, i64toi32_i32$1 | 0, $153 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$3 = $3;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 336 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 340 | 0) >> 2] | 0;
    $5 = i64toi32_i32$0;
    $5$hi = i64toi32_i32$2;
    i64toi32_i32$3 = (i64toi32_i32$3 + 336 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
    $6 = i64toi32_i32$2;
    $6$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $5$hi;
    i64toi32_i32$2 = $6$hi;
    sqrtl($3 + 384 | 0 | 0, $5 | 0, i64toi32_i32$0 | 0, $6 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$3 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 392 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 396 | 0) >> 2] | 0;
    $2 = i64toi32_i32$2;
    $2$hi = i64toi32_i32$0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 384 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 388 | 0) >> 2] | 0;
    $1 = i64toi32_i32$0;
    $1$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $5$hi;
    i64toi32_i32$2 = $6$hi;
    i64toi32_i32$2 = $5$hi;
    i64toi32_i32$0 = $6$hi;
    __invtrigl_R(i64toi32_i32$3 + 368 | 0 | 0, $5 | 0, i64toi32_i32$2 | 0, $6 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 368 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 372 | 0) >> 2] | 0;
    $177 = i64toi32_i32$0;
    $177$hi = i64toi32_i32$2;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 376 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 380 | 0) >> 2] | 0;
    $179 = i64toi32_i32$2;
    $179$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$3 = $177$hi;
    i64toi32_i32$1 = $179$hi;
    __multf3($3 + 320 | 0 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$2 | 0, $177 | 0, i64toi32_i32$3 | 0, $179 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 320 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 324 | 0) >> 2] | 0;
    $183 = i64toi32_i32$1;
    $183$hi = i64toi32_i32$3;
    i64toi32_i32$2 = (i64toi32_i32$2 + 320 | 0) + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $187 = i64toi32_i32$3;
    $187$hi = i64toi32_i32$1;
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 7008 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 7012 | 0) >> 2] | 0;
    $188 = i64toi32_i32$1;
    $188$hi = i64toi32_i32$3;
    i64toi32_i32$2 = 7008 + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $190 = i64toi32_i32$3;
    $190$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $183$hi;
    i64toi32_i32$3 = $187$hi;
    i64toi32_i32$2 = $188$hi;
    i64toi32_i32$0 = $190$hi;
    __subtf3($3 + 304 | 0 | 0, $183 | 0, i64toi32_i32$1 | 0, $187 | 0, i64toi32_i32$3 | 0, $188 | 0, i64toi32_i32$2 | 0, $190 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$3 = $3;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 304 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 308 | 0) >> 2] | 0;
    $196 = i64toi32_i32$0;
    $196$hi = i64toi32_i32$2;
    i64toi32_i32$3 = (i64toi32_i32$3 + 304 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
    $200 = i64toi32_i32$2;
    $200$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$3 = $196$hi;
    i64toi32_i32$1 = $200$hi;
    __addtf3($3 + 288 | 0 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$2 | 0, $196 | 0, i64toi32_i32$3 | 0, $200 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 6992 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 6996 | 0) >> 2] | 0;
    $203 = i64toi32_i32$1;
    $203$hi = i64toi32_i32$3;
    i64toi32_i32$2 = 6992 + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $205 = i64toi32_i32$3;
    $205$hi = i64toi32_i32$1;
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 288 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 292 | 0) >> 2] | 0;
    $207 = i64toi32_i32$1;
    $207$hi = i64toi32_i32$3;
    i64toi32_i32$2 = (i64toi32_i32$2 + 288 | 0) + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $211 = i64toi32_i32$3;
    $211$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $203$hi;
    i64toi32_i32$3 = $205$hi;
    i64toi32_i32$2 = $207$hi;
    i64toi32_i32$0 = $211$hi;
    __subtf3($3 + 272 | 0 | 0, $203 | 0, i64toi32_i32$1 | 0, $205 | 0, i64toi32_i32$3 | 0, $207 | 0, i64toi32_i32$2 | 0, $211 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$3 = $3;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 272 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 276 | 0) >> 2] | 0;
    $2 = i64toi32_i32$0;
    $2$hi = i64toi32_i32$2;
    i64toi32_i32$3 = (i64toi32_i32$3 + 272 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
    $1 = i64toi32_i32$2;
    $1$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$3 = i64toi32_i32$0;
    i64toi32_i32$1 = i64toi32_i32$2;
    __addtf3($3 + 256 | 0 | 0, $2 | 0, i64toi32_i32$3 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0, $1 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$2 = ($3 + 256 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $6 = i64toi32_i32$1;
    $6$hi = i64toi32_i32$3;
    i64toi32_i32$2 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 256 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 260 | 0) >> 2] | 0;
    $5 = i64toi32_i32$3;
    $5$hi = i64toi32_i32$1;
    break label$1;
   }
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 1073676288;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$0 = $2$hi;
   __subtf3($3 + 208 | 0 | 0, 0 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$3 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$3 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 208 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 212 | 0) >> 2] | 0;
   $237 = i64toi32_i32$0;
   $237$hi = i64toi32_i32$2;
   i64toi32_i32$3 = (i64toi32_i32$3 + 208 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $241 = i64toi32_i32$2;
   $241$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $237$hi;
   i64toi32_i32$2 = $241$hi;
   i64toi32_i32$3 = 0;
   i64toi32_i32$1 = 1073610752;
   __multf3($3 + 192 | 0 | 0, $237 | 0, i64toi32_i32$0 | 0, $241 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 192 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 196 | 0) >> 2] | 0;
   $1 = i64toi32_i32$1;
   $1$hi = i64toi32_i32$3;
   i64toi32_i32$2 = (i64toi32_i32$2 + 192 | 0) + 8 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $5 = i64toi32_i32$3;
   $5$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$3 = $5$hi;
   sqrtl($3 + 240 | 0 | 0, $1 | 0, i64toi32_i32$1 | 0, $5 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$2 = $3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 248 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 252 | 0) >> 2] | 0;
   $2 = i64toi32_i32$3;
   $2$hi = i64toi32_i32$1;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$2 = 0;
   i64toi32_i32$0 = i64toi32_i32$3;
   __multf3($3 + 176 | 0 | 0, 0 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$0 = $5$hi;
   i64toi32_i32$3 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 176 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 180 | 0) >> 2] | 0;
   $263 = i64toi32_i32$0;
   $263$hi = i64toi32_i32$2;
   i64toi32_i32$3 = (i64toi32_i32$3 + 176 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $267 = i64toi32_i32$2;
   $267$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$2 = $5$hi;
   i64toi32_i32$3 = $263$hi;
   i64toi32_i32$1 = $267$hi;
   __subtf3($3 + 160 | 0 | 0, $1 | 0, i64toi32_i32$0 | 0, $5 | 0, i64toi32_i32$2 | 0, $263 | 0, i64toi32_i32$3 | 0, $267 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 240 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 244 | 0) >> 2] | 0;
   $6 = i64toi32_i32$1;
   $6$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$3 = $6$hi;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$2 = 0;
   i64toi32_i32$0 = i64toi32_i32$1;
   __addtf3($3 + 144 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $2 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$1 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 160 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 164 | 0) >> 2] | 0;
   $278 = i64toi32_i32$0;
   $278$hi = i64toi32_i32$2;
   i64toi32_i32$1 = (i64toi32_i32$1 + 160 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $282 = i64toi32_i32$2;
   $282$hi = i64toi32_i32$0;
   i64toi32_i32$1 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 144 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 148 | 0) >> 2] | 0;
   $284 = i64toi32_i32$0;
   $284$hi = i64toi32_i32$2;
   i64toi32_i32$1 = (i64toi32_i32$1 + 144 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $288 = i64toi32_i32$2;
   $288$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $278$hi;
   i64toi32_i32$2 = $282$hi;
   i64toi32_i32$1 = $284$hi;
   i64toi32_i32$3 = $288$hi;
   __divtf3($3 + 128 | 0 | 0, $278 | 0, i64toi32_i32$0 | 0, $282 | 0, i64toi32_i32$2 | 0, $284 | 0, i64toi32_i32$1 | 0, $288 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$3 = $5$hi;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$1 = $5$hi;
   __invtrigl_R($3 + 224 | 0 | 0, $1 | 0, i64toi32_i32$3 | 0, $5 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$1 = $6$hi;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 224 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 228 | 0) >> 2] | 0;
   $298 = i64toi32_i32$1;
   $298$hi = i64toi32_i32$3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 232 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 236 | 0) >> 2] | 0;
   $300 = i64toi32_i32$3;
   $300$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $6$hi;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$2 = $298$hi;
   i64toi32_i32$0 = $300$hi;
   __multf3($3 + 112 | 0 | 0, $6 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$3 | 0, $298 | 0, i64toi32_i32$2 | 0, $300 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$3 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 112 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 116 | 0) >> 2] | 0;
   $304 = i64toi32_i32$0;
   $304$hi = i64toi32_i32$2;
   i64toi32_i32$3 = (i64toi32_i32$3 + 112 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $308 = i64toi32_i32$2;
   $308$hi = i64toi32_i32$0;
   i64toi32_i32$3 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 128 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 132 | 0) >> 2] | 0;
   $310 = i64toi32_i32$0;
   $310$hi = i64toi32_i32$2;
   i64toi32_i32$3 = (i64toi32_i32$3 + 128 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $314 = i64toi32_i32$2;
   $314$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $304$hi;
   i64toi32_i32$2 = $308$hi;
   i64toi32_i32$3 = $310$hi;
   i64toi32_i32$1 = $314$hi;
   __addtf3($3 + 96 | 0 | 0, $304 | 0, i64toi32_i32$0 | 0, $308 | 0, i64toi32_i32$2 | 0, $310 | 0, i64toi32_i32$3 | 0, $314 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
   $318 = i64toi32_i32$1;
   $318$hi = i64toi32_i32$3;
   i64toi32_i32$2 = (i64toi32_i32$2 + 96 | 0) + 8 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $322 = i64toi32_i32$3;
   $322$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$1 = $318$hi;
   i64toi32_i32$3 = $322$hi;
   i64toi32_i32$2 = 0;
   i64toi32_i32$0 = $2$hi;
   __addtf3($3 + 80 | 0 | 0, $318 | 0, i64toi32_i32$1 | 0, $322 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$3 = $3;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 80 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 84 | 0) >> 2] | 0;
   $2 = i64toi32_i32$0;
   $2$hi = i64toi32_i32$2;
   i64toi32_i32$3 = (i64toi32_i32$3 + 80 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $1 = i64toi32_i32$2;
   $1$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $2$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$0 = $2$hi;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$3 = i64toi32_i32$0;
   i64toi32_i32$1 = i64toi32_i32$2;
   __addtf3($3 + 64 | 0 | 0, $2 | 0, i64toi32_i32$3 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0, $1 | 0, i64toi32_i32$2 | 0);
   i64toi32_i32$2 = ($3 + 64 | 0) + 8 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $6 = i64toi32_i32$1;
   $6$hi = i64toi32_i32$3;
   i64toi32_i32$2 = $3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
   $5 = i64toi32_i32$3;
   $5$hi = i64toi32_i32$1;
  }
  i64toi32_i32$1 = $5$hi;
  i64toi32_i32$3 = $0;
  HEAP32[i64toi32_i32$3 >> 2] = $5;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $6$hi;
  HEAP32[(i64toi32_i32$3 + 8 | 0) >> 2] = $6;
  HEAP32[(i64toi32_i32$3 + 12 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $3 + 512 | 0;
 }
 
 function sin($0) {
  $0 = +$0;
  var $1 = 0, i64toi32_i32$4 = 0, $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, $7 = 0, i64toi32_i32$2 = 0;
  $1 = __stack_pointer - 16 | 0;
  __stack_pointer = $1;
  label$1 : {
   label$2 : {
    wasm2js_scratch_store_f64(+$0);
    i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$2 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     $7 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0
    } else {
     $7 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0
    }
    $2 = $7 & 2147483647 | 0;
    if ($2 >>> 0 > 1072243195 >>> 0) {
     break label$2
    }
    if ($2 >>> 0 < 1045430272 >>> 0) {
     break label$1
    }
    $0 = +__sin(+$0, +(0.0), 0 | 0);
    break label$1;
   }
   label$3 : {
    if ($2 >>> 0 < 2146435072 >>> 0) {
     break label$3
    }
    $0 = $0 - $0;
    break label$1;
   }
   label$4 : {
    switch ((__rem_pio2(+$0, $1 | 0) | 0) & 3 | 0 | 0) {
    case 0:
     $0 = +__sin(+(+HEAPF64[$1 >> 3]), +(+HEAPF64[($1 + 8 | 0) >> 3]), 1 | 0);
     break label$1;
    case 1:
     $0 = +__cos(+(+HEAPF64[$1 >> 3]), +(+HEAPF64[($1 + 8 | 0) >> 3]));
     break label$1;
    case 2:
     $0 = -+__sin(+(+HEAPF64[$1 >> 3]), +(+HEAPF64[($1 + 8 | 0) >> 3]), 1 | 0);
     break label$1;
    default:
     break label$4;
    };
   }
   $0 = -+__cos(+(+HEAPF64[$1 >> 3]), +(+HEAPF64[($1 + 8 | 0) >> 3]));
  }
  __stack_pointer = $1 + 16 | 0;
  return +$0;
 }
 
 function sinl($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $3 = 0, $4$hi = 0, $6$hi = 0, $4 = 0, i64toi32_i32$4 = 0, $5 = 0, $6 = 0, $16 = 0;
  $3 = __stack_pointer - 128 | 0;
  __stack_pointer = $3;
  label$1 : {
   label$2 : {
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$2 = $2;
    i64toi32_i32$1 = 2147483647;
    i64toi32_i32$3 = -1;
    i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
    $4 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    $4$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $4;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 48;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = 0;
     $16 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     $16 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
    }
    $5 = $16;
    if (($5 | 0) != (32767 | 0)) {
     break label$2
    }
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$1 = i64toi32_i32$2;
    i64toi32_i32$3 = i64toi32_i32$0;
    __subtf3($3 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$3 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$0 = $3 + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $2 = i64toi32_i32$3;
    $2$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $1 = i64toi32_i32$1;
    $1$hi = i64toi32_i32$3;
    break label$1;
   }
   label$3 : {
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$3 = $4$hi;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$0 = -2147483648;
    i64toi32_i32$2 = 1073648159;
    if ((__letf2($1 | 0, i64toi32_i32$3 | 0, $4 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$0 | 0, -1253817647 | 0, i64toi32_i32$2 | 0) | 0 | 0) > (-1 | 0)) {
     break label$3
    }
    if ($5 >>> 0 < 16327 >>> 0) {
     break label$1
    }
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = 0;
    __sinl($3 + 16 | 0 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$3 | 0, 0 | 0);
    i64toi32_i32$0 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 24 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 28 | 0) >> 2] | 0;
    $2 = i64toi32_i32$3;
    $2$hi = i64toi32_i32$1;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] | 0;
    $1 = i64toi32_i32$1;
    $1$hi = i64toi32_i32$3;
    break label$1;
   }
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$1 = $2$hi;
   $5 = __rem_pio2l($1 | 0, i64toi32_i32$3 | 0, $2 | 0, i64toi32_i32$1 | 0, $3 + 96 | 0 | 0) | 0;
   i64toi32_i32$0 = $3 + 120 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $2 = i64toi32_i32$1;
   $2$hi = i64toi32_i32$3;
   i64toi32_i32$0 = $3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 112 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 116 | 0) >> 2] | 0;
   $1 = i64toi32_i32$3;
   $1$hi = i64toi32_i32$1;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 104 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 108 | 0) >> 2] | 0;
   $4 = i64toi32_i32$1;
   $4$hi = i64toi32_i32$3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 96 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 100 | 0) >> 2] | 0;
   $6 = i64toi32_i32$3;
   $6$hi = i64toi32_i32$1;
   label$4 : {
    switch ($5 & 3 | 0 | 0) {
    default:
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = $4$hi;
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$3 = $4$hi;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$2 = $2$hi;
     __sinl($3 + 32 | 0 | 0, $6 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$3 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$2 | 0, 1 | 0);
     i64toi32_i32$3 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 40 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 44 | 0) >> 2] | 0;
     $2 = i64toi32_i32$2;
     $2$hi = i64toi32_i32$0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 32 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 36 | 0) >> 2] | 0;
     $1 = i64toi32_i32$0;
     $1$hi = i64toi32_i32$2;
     break label$1;
    case 1:
     i64toi32_i32$2 = $6$hi;
     i64toi32_i32$2 = $4$hi;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$2 = $6$hi;
     i64toi32_i32$0 = $4$hi;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$1 = $2$hi;
     __cosl($3 + 48 | 0 | 0, $6 | 0, i64toi32_i32$2 | 0, $4 | 0, i64toi32_i32$0 | 0, $1 | 0, i64toi32_i32$3 | 0, $2 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 56 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 60 | 0) >> 2] | 0;
     $2 = i64toi32_i32$1;
     $2$hi = i64toi32_i32$3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 48 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 52 | 0) >> 2] | 0;
     $1 = i64toi32_i32$3;
     $1$hi = i64toi32_i32$1;
     break label$1;
    case 2:
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = $4$hi;
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$3 = $4$hi;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$2 = $2$hi;
     __sinl($3 + 64 | 0 | 0, $6 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$3 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$2 | 0, 1 | 0);
     i64toi32_i32$3 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 72 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 76 | 0) >> 2] | 0;
     i64toi32_i32$3 = i64toi32_i32$2;
     i64toi32_i32$2 = -2147483648;
     i64toi32_i32$1 = 0;
     i64toi32_i32$2 = i64toi32_i32$0 ^ i64toi32_i32$2 | 0;
     $2 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
     $2$hi = i64toi32_i32$2;
     i64toi32_i32$0 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 64 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 68 | 0) >> 2] | 0;
     $1 = i64toi32_i32$2;
     $1$hi = i64toi32_i32$3;
     break label$1;
    case 3:
     break label$4;
    };
   }
   i64toi32_i32$3 = $6$hi;
   i64toi32_i32$3 = $4$hi;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$3 = $6$hi;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$1 = $2$hi;
   __cosl($3 + 80 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $4 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 88 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 92 | 0) >> 2] | 0;
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$1 = -2147483648;
   i64toi32_i32$3 = 0;
   i64toi32_i32$1 = i64toi32_i32$0 ^ i64toi32_i32$1 | 0;
   $2 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
   $2$hi = i64toi32_i32$1;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 80 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 84 | 0) >> 2] | 0;
   $1 = i64toi32_i32$1;
   $1$hi = i64toi32_i32$2;
  }
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$1 = $0;
  HEAP32[i64toi32_i32$1 >> 2] = $1;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $2$hi;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$2;
  __stack_pointer = $3 + 128 | 0;
 }
 
 function cos($0) {
  $0 = +$0;
  var $1 = 0, $3 = 0.0, i64toi32_i32$4 = 0, $2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, $8 = 0, i64toi32_i32$2 = 0;
  $1 = __stack_pointer - 16 | 0;
  __stack_pointer = $1;
  label$1 : {
   label$2 : {
    wasm2js_scratch_store_f64(+$0);
    i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$2 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     $8 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0
    } else {
     $8 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0
    }
    $2 = $8 & 2147483647 | 0;
    if ($2 >>> 0 > 1072243195 >>> 0) {
     break label$2
    }
    $3 = 1.0;
    if ($2 >>> 0 < 1044816030 >>> 0) {
     break label$1
    }
    $3 = +__cos(+$0, +(0.0));
    break label$1;
   }
   label$3 : {
    if ($2 >>> 0 < 2146435072 >>> 0) {
     break label$3
    }
    $3 = $0 - $0;
    break label$1;
   }
   label$4 : {
    switch ((__rem_pio2(+$0, $1 | 0) | 0) & 3 | 0 | 0) {
    case 0:
     $3 = +__cos(+(+HEAPF64[$1 >> 3]), +(+HEAPF64[($1 + 8 | 0) >> 3]));
     break label$1;
    case 1:
     $3 = -+__sin(+(+HEAPF64[$1 >> 3]), +(+HEAPF64[($1 + 8 | 0) >> 3]), 1 | 0);
     break label$1;
    case 2:
     $3 = -+__cos(+(+HEAPF64[$1 >> 3]), +(+HEAPF64[($1 + 8 | 0) >> 3]));
     break label$1;
    default:
     break label$4;
    };
   }
   $3 = +__sin(+(+HEAPF64[$1 >> 3]), +(+HEAPF64[($1 + 8 | 0) >> 3]), 1 | 0);
  }
  __stack_pointer = $1 + 16 | 0;
  return +$3;
 }
 
 function fabs($0) {
  $0 = +$0;
  return +Math_abs($0);
 }
 
 function __sinl($0, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4, $4$hi, $5) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  $4$hi = $4$hi | 0;
  $5 = $5 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, $6 = 0, $7$hi = 0, $8$hi = 0, $7 = 0, $8 = 0, $9$hi = 0, $11$hi = 0, $10$hi = 0, $12$hi = 0, $9 = 0, $11 = 0, $10 = 0, $12 = 0, $41 = 0, $41$hi = 0, $45 = 0, $45$hi = 0, $51 = 0, $51$hi = 0, $55 = 0, $55$hi = 0, $59 = 0, $59$hi = 0, $63 = 0, $63$hi = 0, $69 = 0, $69$hi = 0, $73 = 0, $73$hi = 0, $77 = 0, $77$hi = 0, $81 = 0, $81$hi = 0, $87 = 0, $87$hi = 0, $91 = 0, $91$hi = 0, $95 = 0, $95$hi = 0, $99 = 0, $99$hi = 0, $105 = 0, $105$hi = 0, $109 = 0, $109$hi = 0, $113 = 0, $113$hi = 0, $117 = 0, $117$hi = 0, $123 = 0, $123$hi = 0, $127 = 0, $127$hi = 0, $131 = 0, $131$hi = 0, $135 = 0, $135$hi = 0, $141 = 0, $141$hi = 0, $145 = 0, $145$hi = 0, $149 = 0, $149$hi = 0, $153 = 0, $153$hi = 0, $159 = 0, $159$hi = 0, $163 = 0, $163$hi = 0, $167 = 0, $167$hi = 0, $171 = 0, $171$hi = 0, $177 = 0, $177$hi = 0, $181 = 0, $181$hi = 0, $185 = 0, $185$hi = 0, $189 = 0, $189$hi = 0, $195 = 0, $195$hi = 0, $199 = 0, $199$hi = 0, $203 = 0, $203$hi = 0, $207 = 0, $207$hi = 0, $230 = 0, $230$hi = 0, $234 = 0, $234$hi = 0, $240 = 0, $240$hi = 0, $244 = 0, $244$hi = 0, $247 = 0, $247$hi = 0, $251 = 0, $251$hi = 0, $272 = 0, $272$hi = 0, $276 = 0, $276$hi = 0, $278 = 0, $278$hi = 0, $282 = 0, $282$hi = 0, $288 = 0, $288$hi = 0, $292 = 0, $292$hi = 0, $296 = 0, $296$hi = 0, $300 = 0, $300$hi = 0, $310 = 0, $310$hi = 0, $314 = 0, $314$hi = 0, $316 = 0, $316$hi = 0, $320 = 0, $320$hi = 0, $326 = 0, $326$hi = 0, $330 = 0, $330$hi = 0;
  $6 = __stack_pointer - 544 | 0;
  __stack_pointer = $6;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $2$hi;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$3 = i64toi32_i32$1;
  __multf3($6 + 528 | 0 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 528 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 532 | 0) >> 2] | 0;
  $7 = i64toi32_i32$3;
  $7$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 528 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $8 = i64toi32_i32$2;
  $8$hi = i64toi32_i32$3;
  i64toi32_i32$3 = i64toi32_i32$0;
  i64toi32_i32$3 = $2$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$2 = $8$hi;
  i64toi32_i32$1 = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  __multf3($6 + 512 | 0 | 0, $7 | 0, i64toi32_i32$3 | 0, $8 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = i64toi32_i32$3;
  i64toi32_i32$0 = i64toi32_i32$2;
  i64toi32_i32$0 = i64toi32_i32$3;
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$2 = -268435456;
  i64toi32_i32$3 = 1068186905;
  __multf3($6 + 496 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, -2642549 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 496 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 500 | 0) >> 2] | 0;
  $41 = i64toi32_i32$3;
  $41$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 496 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $45 = i64toi32_i32$2;
  $45$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $41$hi;
  i64toi32_i32$2 = $45$hi;
  i64toi32_i32$1 = -805306368;
  i64toi32_i32$0 = -1078692327;
  __addtf3($6 + 480 | 0 | 0, $41 | 0, i64toi32_i32$3 | 0, $45 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0, 237381628 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 480 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 484 | 0) >> 2] | 0;
  $51 = i64toi32_i32$0;
  $51$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 480 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $55 = i64toi32_i32$1;
  $55$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $51$hi;
  i64toi32_i32$3 = $55$hi;
  __multf3($6 + 464 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $51 | 0, i64toi32_i32$2 | 0, $55 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 464 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 468 | 0) >> 2] | 0;
  $59 = i64toi32_i32$3;
  $59$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 464 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $63 = i64toi32_i32$2;
  $63$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $59$hi;
  i64toi32_i32$2 = $63$hi;
  i64toi32_i32$1 = -536870912;
  i64toi32_i32$0 = 1069380024;
  __addtf3($6 + 448 | 0 | 0, $59 | 0, i64toi32_i32$3 | 0, $63 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0, -299854662 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 448 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 452 | 0) >> 2] | 0;
  $69 = i64toi32_i32$0;
  $69$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 448 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $73 = i64toi32_i32$1;
  $73$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $69$hi;
  i64toi32_i32$3 = $73$hi;
  __multf3($6 + 432 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $69 | 0, i64toi32_i32$2 | 0, $73 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 432 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 436 | 0) >> 2] | 0;
  $77 = i64toi32_i32$3;
  $77$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 432 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $81 = i64toi32_i32$2;
  $81$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $77$hi;
  i64toi32_i32$2 = $81$hi;
  i64toi32_i32$1 = 805306368;
  i64toi32_i32$0 = -1077530807;
  __addtf3($6 + 416 | 0 | 0, $77 | 0, i64toi32_i32$3 | 0, $81 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0, -1268279554 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 416 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 420 | 0) >> 2] | 0;
  $87 = i64toi32_i32$0;
  $87$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 416 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $91 = i64toi32_i32$1;
  $91$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $87$hi;
  i64toi32_i32$3 = $91$hi;
  __multf3($6 + 400 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $87 | 0, i64toi32_i32$2 | 0, $91 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 400 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 404 | 0) >> 2] | 0;
  $95 = i64toi32_i32$3;
  $95$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 400 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $99 = i64toi32_i32$2;
  $99$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $95$hi;
  i64toi32_i32$2 = $99$hi;
  i64toi32_i32$1 = -1651854301;
  i64toi32_i32$0 = 1070503212;
  __addtf3($6 + 384 | 0 | 0, $95 | 0, i64toi32_i32$3 | 0, $99 | 0, i64toi32_i32$2 | 0, -171673488 | 0, i64toi32_i32$1 | 0, 1996688022 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 384 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 388 | 0) >> 2] | 0;
  $105 = i64toi32_i32$0;
  $105$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 384 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $109 = i64toi32_i32$1;
  $109$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $105$hi;
  i64toi32_i32$3 = $109$hi;
  __multf3($6 + 368 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $105 | 0, i64toi32_i32$2 | 0, $109 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 368 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 372 | 0) >> 2] | 0;
  $113 = i64toi32_i32$3;
  $113$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 368 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $117 = i64toi32_i32$2;
  $117$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $113$hi;
  i64toi32_i32$2 = $117$hi;
  i64toi32_i32$1 = -594045142;
  i64toi32_i32$0 = -1076449665;
  __addtf3($6 + 352 | 0 | 0, $113 | 0, i64toi32_i32$3 | 0, $117 | 0, i64toi32_i32$2 | 0, -556364403 | 0, i64toi32_i32$1 | 0, 1047739265 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 352 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 356 | 0) >> 2] | 0;
  $123 = i64toi32_i32$0;
  $123$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 352 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $127 = i64toi32_i32$1;
  $127$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $123$hi;
  i64toi32_i32$3 = $127$hi;
  __multf3($6 + 336 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $123 | 0, i64toi32_i32$2 | 0, $127 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 336 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 340 | 0) >> 2] | 0;
  $131 = i64toi32_i32$3;
  $131$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 336 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $135 = i64toi32_i32$2;
  $135$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $131$hi;
  i64toi32_i32$2 = $135$hi;
  i64toi32_i32$1 = -1748647924;
  i64toi32_i32$0 = 1071538468;
  __addtf3($6 + 320 | 0 | 0, $131 | 0, i64toi32_i32$3 | 0, $135 | 0, i64toi32_i32$2 | 0, -96639735 | 0, i64toi32_i32$1 | 0, 1631225552 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 320 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 324 | 0) >> 2] | 0;
  $141 = i64toi32_i32$0;
  $141$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 320 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $145 = i64toi32_i32$1;
  $145$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $141$hi;
  i64toi32_i32$3 = $145$hi;
  __multf3($6 + 304 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $141 | 0, i64toi32_i32$2 | 0, $145 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 304 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 308 | 0) >> 2] | 0;
  $149 = i64toi32_i32$3;
  $149$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 304 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $153 = i64toi32_i32$2;
  $153$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $149$hi;
  i64toi32_i32$2 = $153$hi;
  i64toi32_i32$1 = 956199746;
  i64toi32_i32$0 = -1075466652;
  __addtf3($6 + 288 | 0 | 0, $149 | 0, i64toi32_i32$3 | 0, $153 | 0, i64toi32_i32$2 | 0, 1769254547 | 0, i64toi32_i32$1 | 0, 1451185230 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 288 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 292 | 0) >> 2] | 0;
  $159 = i64toi32_i32$0;
  $159$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 288 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $163 = i64toi32_i32$1;
  $163$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $159$hi;
  i64toi32_i32$3 = $163$hi;
  __multf3($6 + 272 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $159 | 0, i64toi32_i32$2 | 0, $163 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 272 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 276 | 0) >> 2] | 0;
  $167 = i64toi32_i32$3;
  $167$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 272 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $171 = i64toi32_i32$2;
  $171$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $167$hi;
  i64toi32_i32$2 = $171$hi;
  i64toi32_i32$1 = 955952156;
  i64toi32_i32$0 = 1072460254;
  __addtf3($6 + 256 | 0 | 0, $167 | 0, i64toi32_i32$3 | 0, $171 | 0, i64toi32_i32$2 | 0, 1433495550 | 0, i64toi32_i32$1 | 0, 978676851 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 256 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 260 | 0) >> 2] | 0;
  $177 = i64toi32_i32$0;
  $177$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 256 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $181 = i64toi32_i32$1;
  $181$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $177$hi;
  i64toi32_i32$3 = $181$hi;
  __multf3($6 + 240 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $177 | 0, i64toi32_i32$2 | 0, $181 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 240 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 244 | 0) >> 2] | 0;
  $185 = i64toi32_i32$3;
  $185$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 240 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $189 = i64toi32_i32$2;
  $189$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $185$hi;
  i64toi32_i32$2 = $189$hi;
  i64toi32_i32$1 = -1608908384;
  i64toi32_i32$0 = -1074618342;
  __addtf3($6 + 224 | 0 | 0, $185 | 0, i64toi32_i32$3 | 0, $189 | 0, i64toi32_i32$2 | 0, 435746693 | 0, i64toi32_i32$1 | 0, 27269633 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 224 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 228 | 0) >> 2] | 0;
  $195 = i64toi32_i32$0;
  $195$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 224 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $199 = i64toi32_i32$1;
  $199$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$2 = $195$hi;
  i64toi32_i32$3 = $199$hi;
  __multf3($6 + 208 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $195 | 0, i64toi32_i32$2 | 0, $199 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $6;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 208 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 212 | 0) >> 2] | 0;
  $203 = i64toi32_i32$3;
  $203$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 208 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $207 = i64toi32_i32$2;
  $207$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $203$hi;
  i64toi32_i32$2 = $207$hi;
  i64toi32_i32$1 = 286331153;
  i64toi32_i32$0 = 1073221905;
  __addtf3($6 + 192 | 0 | 0, $203 | 0, i64toi32_i32$3 | 0, $207 | 0, i64toi32_i32$2 | 0, 286331007 | 0, i64toi32_i32$1 | 0, 286331153 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = ($6 + 512 | 0) + 8 | 0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $9 = i64toi32_i32$0;
  $9$hi = i64toi32_i32$1;
  i64toi32_i32$2 = ($6 + 192 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $10 = i64toi32_i32$1;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $6;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 512 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 516 | 0) >> 2] | 0;
  $11 = i64toi32_i32$0;
  $11$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 192 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 196 | 0) >> 2] | 0;
  $12 = i64toi32_i32$1;
  $12$hi = i64toi32_i32$0;
  label$1 : {
   label$2 : {
    if ($5) {
     break label$2
    }
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$0 = $8$hi;
    i64toi32_i32$0 = $12$hi;
    i64toi32_i32$0 = $10$hi;
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$1 = $8$hi;
    i64toi32_i32$2 = $12$hi;
    i64toi32_i32$3 = $10$hi;
    __multf3($6 + 48 | 0 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $12 | 0, i64toi32_i32$2 | 0, $10 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$1 = $6;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 48 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 52 | 0) >> 2] | 0;
    $230 = i64toi32_i32$3;
    $230$hi = i64toi32_i32$2;
    i64toi32_i32$1 = (i64toi32_i32$1 + 48 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $234 = i64toi32_i32$2;
    $234$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $230$hi;
    i64toi32_i32$2 = $234$hi;
    i64toi32_i32$1 = 1431655765;
    i64toi32_i32$0 = -1073982123;
    __addtf3($6 + 32 | 0 | 0, $230 | 0, i64toi32_i32$3 | 0, $234 | 0, i64toi32_i32$2 | 0, 1431655765 | 0, i64toi32_i32$1 | 0, 1431655765 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$0 = $11$hi;
    i64toi32_i32$0 = $9$hi;
    i64toi32_i32$2 = $6;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 32 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 36 | 0) >> 2] | 0;
    $240 = i64toi32_i32$0;
    $240$hi = i64toi32_i32$1;
    i64toi32_i32$2 = (i64toi32_i32$2 + 32 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $244 = i64toi32_i32$1;
    $244$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $11$hi;
    i64toi32_i32$1 = $9$hi;
    i64toi32_i32$2 = $240$hi;
    i64toi32_i32$3 = $244$hi;
    __multf3($6 + 16 | 0 | 0, $11 | 0, i64toi32_i32$0 | 0, $9 | 0, i64toi32_i32$1 | 0, $240 | 0, i64toi32_i32$2 | 0, $244 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$1 = $6;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 20 | 0) >> 2] | 0;
    $247 = i64toi32_i32$3;
    $247$hi = i64toi32_i32$2;
    i64toi32_i32$1 = (i64toi32_i32$1 + 16 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $251 = i64toi32_i32$2;
    $251$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$3 = $247$hi;
    i64toi32_i32$2 = $251$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    __addtf3($6 | 0, $247 | 0, i64toi32_i32$3 | 0, $251 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$2 = $6 + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $7 = i64toi32_i32$0;
    $7$hi = i64toi32_i32$1;
    i64toi32_i32$2 = $6;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $8 = i64toi32_i32$1;
    $8$hi = i64toi32_i32$0;
    break label$1;
   }
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = $4$hi;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$1 = $4$hi;
   i64toi32_i32$2 = 0;
   i64toi32_i32$3 = 1073610752;
   __multf3($6 + 176 | 0 | 0, $3 | 0, i64toi32_i32$0 | 0, $4 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$3 = $11$hi;
   i64toi32_i32$3 = $9$hi;
   i64toi32_i32$3 = $12$hi;
   i64toi32_i32$3 = $10$hi;
   i64toi32_i32$3 = $11$hi;
   i64toi32_i32$2 = $9$hi;
   i64toi32_i32$1 = $12$hi;
   i64toi32_i32$0 = $10$hi;
   __multf3($6 + 144 | 0 | 0, $11 | 0, i64toi32_i32$3 | 0, $9 | 0, i64toi32_i32$2 | 0, $12 | 0, i64toi32_i32$1 | 0, $10 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$2 = $6;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 176 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 180 | 0) >> 2] | 0;
   $272 = i64toi32_i32$0;
   $272$hi = i64toi32_i32$1;
   i64toi32_i32$2 = (i64toi32_i32$2 + 176 | 0) + 8 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $276 = i64toi32_i32$1;
   $276$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $6;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 144 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 148 | 0) >> 2] | 0;
   $278 = i64toi32_i32$0;
   $278$hi = i64toi32_i32$1;
   i64toi32_i32$2 = (i64toi32_i32$2 + 144 | 0) + 8 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $282 = i64toi32_i32$1;
   $282$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $272$hi;
   i64toi32_i32$1 = $276$hi;
   i64toi32_i32$2 = $278$hi;
   i64toi32_i32$3 = $282$hi;
   __subtf3($6 + 128 | 0 | 0, $272 | 0, i64toi32_i32$0 | 0, $276 | 0, i64toi32_i32$1 | 0, $278 | 0, i64toi32_i32$2 | 0, $282 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$3 = $7$hi;
   i64toi32_i32$3 = $8$hi;
   i64toi32_i32$1 = $6;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 128 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 132 | 0) >> 2] | 0;
   $288 = i64toi32_i32$3;
   $288$hi = i64toi32_i32$2;
   i64toi32_i32$1 = (i64toi32_i32$1 + 128 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $292 = i64toi32_i32$2;
   $292$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $7$hi;
   i64toi32_i32$2 = $8$hi;
   i64toi32_i32$1 = $288$hi;
   i64toi32_i32$0 = $292$hi;
   __multf3($6 + 112 | 0 | 0, $7 | 0, i64toi32_i32$3 | 0, $8 | 0, i64toi32_i32$2 | 0, $288 | 0, i64toi32_i32$1 | 0, $292 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$2 = $6;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 112 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 116 | 0) >> 2] | 0;
   $296 = i64toi32_i32$0;
   $296$hi = i64toi32_i32$1;
   i64toi32_i32$2 = (i64toi32_i32$2 + 112 | 0) + 8 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $300 = i64toi32_i32$1;
   $300$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = $4$hi;
   i64toi32_i32$0 = $296$hi;
   i64toi32_i32$1 = $300$hi;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$3 = $4$hi;
   __subtf3($6 + 96 | 0 | 0, $296 | 0, i64toi32_i32$0 | 0, $300 | 0, i64toi32_i32$1 | 0, $3 | 0, i64toi32_i32$2 | 0, $4 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$3 = $11$hi;
   i64toi32_i32$3 = $9$hi;
   i64toi32_i32$3 = $11$hi;
   i64toi32_i32$2 = $9$hi;
   i64toi32_i32$1 = 1431655765;
   i64toi32_i32$0 = 1073501525;
   __multf3($6 + 160 | 0 | 0, $11 | 0, i64toi32_i32$3 | 0, $9 | 0, i64toi32_i32$2 | 0, 1431655765 | 0, i64toi32_i32$1 | 0, 1431655765 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$2 = $6;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
   $310 = i64toi32_i32$0;
   $310$hi = i64toi32_i32$1;
   i64toi32_i32$2 = (i64toi32_i32$2 + 96 | 0) + 8 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $314 = i64toi32_i32$1;
   $314$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $6;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 160 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 164 | 0) >> 2] | 0;
   $316 = i64toi32_i32$0;
   $316$hi = i64toi32_i32$1;
   i64toi32_i32$2 = (i64toi32_i32$2 + 160 | 0) + 8 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $320 = i64toi32_i32$1;
   $320$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $310$hi;
   i64toi32_i32$1 = $314$hi;
   i64toi32_i32$2 = $316$hi;
   i64toi32_i32$3 = $320$hi;
   __addtf3($6 + 80 | 0 | 0, $310 | 0, i64toi32_i32$0 | 0, $314 | 0, i64toi32_i32$1 | 0, $316 | 0, i64toi32_i32$2 | 0, $320 | 0, i64toi32_i32$3 | 0);
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$1 = $6;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] | 0;
   $326 = i64toi32_i32$3;
   $326$hi = i64toi32_i32$2;
   i64toi32_i32$1 = (i64toi32_i32$1 + 80 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $330 = i64toi32_i32$2;
   $330$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$1 = $326$hi;
   i64toi32_i32$0 = $330$hi;
   __subtf3($6 + 64 | 0 | 0, $1 | 0, i64toi32_i32$3 | 0, $2 | 0, i64toi32_i32$2 | 0, $326 | 0, i64toi32_i32$1 | 0, $330 | 0, i64toi32_i32$0 | 0);
   i64toi32_i32$2 = ($6 + 64 | 0) + 8 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $7 = i64toi32_i32$0;
   $7$hi = i64toi32_i32$1;
   i64toi32_i32$2 = $6;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
   $8 = i64toi32_i32$1;
   $8$hi = i64toi32_i32$0;
  }
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$1 = $0;
  HEAP32[i64toi32_i32$1 >> 2] = $8;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $7$hi;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $7;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $6 + 544 | 0;
 }
 
 function __rem_pio2($0, $1) {
  $0 = +$0;
  $1 = $1 | 0;
  var $6 = 0.0, i64toi32_i32$2 = 0, $4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, i64toi32_i32$4 = 0, $2 = 0, $5 = 0, $7 = 0.0, $3 = 0, $9 = 0, $10 = 0, $3$hi = 0, $8 = 0.0, $11 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $152 = 0, $185 = 0;
  $2 = __stack_pointer - 48 | 0;
  __stack_pointer = $2;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      wasm2js_scratch_store_f64(+$0);
      i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
      $3 = wasm2js_scratch_load_i32(0 | 0) | 0;
      $3$hi = i64toi32_i32$0;
      i64toi32_i32$2 = $3;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = 0;
       $20 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
       $20 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
      }
      $4 = $20;
      $5 = $4 & 2147483647 | 0;
      if ($5 >>> 0 > 1074752122 >>> 0) {
       break label$4
      }
      if (($4 & 1048575 | 0 | 0) == (598523 | 0)) {
       break label$3
      }
      label$5 : {
       if ($5 >>> 0 > 1073928572 >>> 0) {
        break label$5
       }
       label$6 : {
        i64toi32_i32$1 = $3$hi;
        i64toi32_i32$0 = $3;
        i64toi32_i32$2 = 0;
        i64toi32_i32$3 = 0;
        if ((i64toi32_i32$1 | 0) < (i64toi32_i32$2 | 0)) {
         $21 = 1
        } else {
         if ((i64toi32_i32$1 | 0) <= (i64toi32_i32$2 | 0)) {
          if (i64toi32_i32$0 >>> 0 >= i64toi32_i32$3 >>> 0) {
           $22 = 0
          } else {
           $22 = 1
          }
          $23 = $22;
         } else {
          $23 = 0
         }
         $21 = $23;
        }
        if ($21) {
         break label$6
        }
        $0 = $0 + -1.5707963267341256;
        $6 = $0 + -6.077100506506192e-11;
        HEAPF64[$1 >> 3] = $6;
        HEAPF64[($1 + 8 | 0) >> 3] = $0 - $6 + -6.077100506506192e-11;
        $4 = 1;
        break label$1;
       }
       $0 = $0 + 1.5707963267341256;
       $6 = $0 + 6.077100506506192e-11;
       HEAPF64[$1 >> 3] = $6;
       HEAPF64[($1 + 8 | 0) >> 3] = $0 - $6 + 6.077100506506192e-11;
       $4 = -1;
       break label$1;
      }
      label$7 : {
       i64toi32_i32$0 = $3$hi;
       i64toi32_i32$3 = $3;
       i64toi32_i32$1 = 0;
       i64toi32_i32$2 = 0;
       if ((i64toi32_i32$0 | 0) < (i64toi32_i32$1 | 0)) {
        $24 = 1
       } else {
        if ((i64toi32_i32$0 | 0) <= (i64toi32_i32$1 | 0)) {
         if (i64toi32_i32$3 >>> 0 >= i64toi32_i32$2 >>> 0) {
          $25 = 0
         } else {
          $25 = 1
         }
         $26 = $25;
        } else {
         $26 = 0
        }
        $24 = $26;
       }
       if ($24) {
        break label$7
       }
       $0 = $0 + -3.1415926534682512;
       $6 = $0 + -1.2154201013012384e-10;
       HEAPF64[$1 >> 3] = $6;
       HEAPF64[($1 + 8 | 0) >> 3] = $0 - $6 + -1.2154201013012384e-10;
       $4 = 2;
       break label$1;
      }
      $0 = $0 + 3.1415926534682512;
      $6 = $0 + 1.2154201013012384e-10;
      HEAPF64[$1 >> 3] = $6;
      HEAPF64[($1 + 8 | 0) >> 3] = $0 - $6 + 1.2154201013012384e-10;
      $4 = -2;
      break label$1;
     }
     label$8 : {
      if ($5 >>> 0 > 1075594811 >>> 0) {
       break label$8
      }
      label$9 : {
       if ($5 >>> 0 > 1075183036 >>> 0) {
        break label$9
       }
       if (($5 | 0) == (1074977148 | 0)) {
        break label$3
       }
       label$10 : {
        i64toi32_i32$3 = $3$hi;
        i64toi32_i32$2 = $3;
        i64toi32_i32$0 = 0;
        i64toi32_i32$1 = 0;
        if ((i64toi32_i32$3 | 0) < (i64toi32_i32$0 | 0)) {
         $27 = 1
        } else {
         if ((i64toi32_i32$3 | 0) <= (i64toi32_i32$0 | 0)) {
          if (i64toi32_i32$2 >>> 0 >= i64toi32_i32$1 >>> 0) {
           $28 = 0
          } else {
           $28 = 1
          }
          $29 = $28;
         } else {
          $29 = 0
         }
         $27 = $29;
        }
        if ($27) {
         break label$10
        }
        $0 = $0 + -4.712388980202377;
        $6 = $0 + -1.8231301519518578e-10;
        HEAPF64[$1 >> 3] = $6;
        HEAPF64[($1 + 8 | 0) >> 3] = $0 - $6 + -1.8231301519518578e-10;
        $4 = 3;
        break label$1;
       }
       $0 = $0 + 4.712388980202377;
       $6 = $0 + 1.8231301519518578e-10;
       HEAPF64[$1 >> 3] = $6;
       HEAPF64[($1 + 8 | 0) >> 3] = $0 - $6 + 1.8231301519518578e-10;
       $4 = -3;
       break label$1;
      }
      if (($5 | 0) == (1075388923 | 0)) {
       break label$3
      }
      label$11 : {
       i64toi32_i32$2 = $3$hi;
       i64toi32_i32$1 = $3;
       i64toi32_i32$3 = 0;
       i64toi32_i32$0 = 0;
       if ((i64toi32_i32$2 | 0) < (i64toi32_i32$3 | 0)) {
        $30 = 1
       } else {
        if ((i64toi32_i32$2 | 0) <= (i64toi32_i32$3 | 0)) {
         if (i64toi32_i32$1 >>> 0 >= i64toi32_i32$0 >>> 0) {
          $31 = 0
         } else {
          $31 = 1
         }
         $32 = $31;
        } else {
         $32 = 0
        }
        $30 = $32;
       }
       if ($30) {
        break label$11
       }
       $0 = $0 + -6.2831853069365025;
       $6 = $0 + -2.430840202602477e-10;
       HEAPF64[$1 >> 3] = $6;
       HEAPF64[($1 + 8 | 0) >> 3] = $0 - $6 + -2.430840202602477e-10;
       $4 = 4;
       break label$1;
      }
      $0 = $0 + 6.2831853069365025;
      $6 = $0 + 2.430840202602477e-10;
      HEAPF64[$1 >> 3] = $6;
      HEAPF64[($1 + 8 | 0) >> 3] = $0 - $6 + 2.430840202602477e-10;
      $4 = -4;
      break label$1;
     }
     if ($5 >>> 0 > 1094263290 >>> 0) {
      break label$2
     }
    }
    $6 = $0 * .6366197723675814 + 6755399441055744.0 + -6755399441055744.0;
    $7 = $0 + $6 * -1.5707963267341256;
    $8 = $6 * 6.077100506506192e-11;
    $0 = $7 - $8;
    HEAPF64[$1 >> 3] = $0;
    $9 = $5 >>> 20 | 0;
    $152 = $9;
    wasm2js_scratch_store_f64(+$0);
    i64toi32_i32$1 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$0 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 52;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = 0;
     $33 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     $33 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
    }
    $10 = ($152 - ($33 & 2047 | 0) | 0 | 0) < (17 | 0);
    label$12 : {
     label$13 : {
      if (!(Math_abs($6) < 2147483648.0)) {
       break label$13
      }
      $4 = ~~$6;
      break label$12;
     }
     $4 = -2147483648;
    }
    label$14 : {
     if ($10) {
      break label$14
     }
     $0 = $6 * 6.077100506303966e-11;
     $11 = $7 - $0;
     $8 = $6 * 2.0222662487959506e-21 - ($7 - $11 - $0);
     $0 = $11 - $8;
     HEAPF64[$1 >> 3] = $0;
     label$15 : {
      $185 = $9;
      wasm2js_scratch_store_f64(+$0);
      i64toi32_i32$2 = wasm2js_scratch_load_i32(1 | 0) | 0;
      i64toi32_i32$1 = wasm2js_scratch_load_i32(0 | 0) | 0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = 52;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = 0;
       $34 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
       $34 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
      }
      if (($185 - ($34 & 2047 | 0) | 0 | 0) >= (50 | 0)) {
       break label$15
      }
      $7 = $11;
      break label$14;
     }
     $0 = $6 * 2.0222662487111665e-21;
     $7 = $11 - $0;
     $8 = $6 * 8.4784276603689e-32 - ($11 - $7 - $0);
     $0 = $7 - $8;
     HEAPF64[$1 >> 3] = $0;
    }
    HEAPF64[($1 + 8 | 0) >> 3] = $7 - $0 - $8;
    break label$1;
   }
   label$16 : {
    if ($5 >>> 0 < 2146435072 >>> 0) {
     break label$16
    }
    $0 = $0 - $0;
    HEAPF64[$1 >> 3] = $0;
    HEAPF64[($1 + 8 | 0) >> 3] = $0;
    $4 = 0;
    break label$1;
   }
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = 1048575;
   i64toi32_i32$3 = -1;
   i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
   i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
   i64toi32_i32$2 = 1096810496;
   i64toi32_i32$3 = 0;
   i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
   wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$0 | i64toi32_i32$3 | 0 | 0);
   wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$2 | 0);
   $0 = +wasm2js_scratch_load_f64();
   $4 = 0;
   $10 = 1;
   label$17 : while (1) {
    $4 = ($2 + 16 | 0) + ($4 << 3 | 0) | 0;
    label$18 : {
     label$19 : {
      if (!(Math_abs($0) < 2147483648.0)) {
       break label$19
      }
      $9 = ~~$0;
      break label$18;
     }
     $9 = -2147483648;
    }
    $6 = +($9 | 0);
    HEAPF64[$4 >> 3] = $6;
    $0 = ($0 - $6) * 16777216.0;
    $4 = 1;
    $9 = $10 & 1 | 0;
    $10 = 0;
    if ($9) {
     continue label$17
    }
    break label$17;
   };
   HEAPF64[($2 + 32 | 0) >> 3] = $0;
   label$20 : {
    label$21 : {
     if ($0 == 0.0) {
      break label$21
     }
     $4 = 2;
     break label$20;
    }
    $10 = 1;
    label$22 : while (1) {
     $4 = $10;
     $10 = $4 + -1 | 0;
     if (+HEAPF64[(($2 + 16 | 0) + ($4 << 3 | 0) | 0) >> 3] == 0.0) {
      continue label$22
     }
     break label$22;
    };
   }
   $4 = __rem_pio2_large($2 + 16 | 0 | 0, $2 | 0, ($5 >>> 20 | 0) + -1046 | 0 | 0, $4 + 1 | 0 | 0, 1 | 0) | 0;
   $0 = +HEAPF64[$2 >> 3];
   label$23 : {
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$1 = $3;
    i64toi32_i32$0 = -1;
    i64toi32_i32$3 = -1;
    if ((i64toi32_i32$2 | 0) > (i64toi32_i32$0 | 0)) {
     $35 = 1
    } else {
     if ((i64toi32_i32$2 | 0) >= (i64toi32_i32$0 | 0)) {
      if (i64toi32_i32$1 >>> 0 <= i64toi32_i32$3 >>> 0) {
       $36 = 0
      } else {
       $36 = 1
      }
      $37 = $36;
     } else {
      $37 = 0
     }
     $35 = $37;
    }
    if ($35) {
     break label$23
    }
    HEAPF64[$1 >> 3] = -$0;
    HEAPF64[($1 + 8 | 0) >> 3] = -+HEAPF64[($2 + 8 | 0) >> 3];
    $4 = 0 - $4 | 0;
    break label$1;
   }
   HEAPF64[$1 >> 3] = $0;
   HEAPF64[($1 + 8 | 0) >> 3] = +HEAPF64[($2 + 8 | 0) >> 3];
  }
  __stack_pointer = $2 + 48 | 0;
  return $4 | 0;
 }
 
 function pow($0, $1) {
  $0 = +$0;
  $1 = +$1;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, $2 = 0.0, $5 = 0, $6 = 0, $8 = 0, $4 = 0, $15 = 0.0, $16 = 0.0, $10 = 0, $3 = 0, $14 = 0.0, $11 = 0, $12 = 0, $3$hi = 0, $17 = 0.0, $18 = 0.0, $9 = 0, $46 = 0, $7 = 0, $47 = 0, $13 = 0, $48 = 0, $49 = 0, $19 = 0.0, $20 = 0.0, $50 = 0, $21 = 0.0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $7$hi = 0, $275 = 0.0, $278$hi = 0, $281 = 0, $281$hi = 0, $301 = 0.0, $306 = 0.0, $309 = 0.0, $310 = 0.0, $311 = 0.0, $312 = 0.0, $510 = 0.0, $511 = 0.0, $525 = 0, $568 = 0.0, $595$hi = 0, $597 = 0, $597$hi = 0;
  $2 = 1.0;
  label$1 : {
   wasm2js_scratch_store_f64(+$1);
   i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
   $3 = wasm2js_scratch_load_i32(0 | 0) | 0;
   $3$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 32;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $46 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    $46 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
   }
   $4 = $46;
   $5 = $4 & 2147483647 | 0;
   i64toi32_i32$1 = $3$hi;
   $6 = $3;
   if (!($5 | $6 | 0)) {
    break label$1
   }
   wasm2js_scratch_store_f64(+$0);
   i64toi32_i32$1 = wasm2js_scratch_load_i32(1 | 0) | 0;
   $7 = wasm2js_scratch_load_i32(0 | 0) | 0;
   $7$hi = i64toi32_i32$1;
   i64toi32_i32$0 = $7;
   i64toi32_i32$2 = 0;
   i64toi32_i32$3 = 32;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$2 = 0;
    $47 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    $47 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
   }
   $8 = $47;
   label$2 : {
    i64toi32_i32$2 = $7$hi;
    $9 = $7;
    if ($9) {
     break label$2
    }
    if (($8 | 0) == (1072693248 | 0)) {
     break label$1
    }
   }
   label$3 : {
    label$4 : {
     $10 = $8 & 2147483647 | 0;
     if ($10 >>> 0 > 2146435072 >>> 0) {
      break label$4
     }
     if (($9 | 0) != (0 | 0) & ($10 | 0) == (2146435072 | 0) | 0) {
      break label$4
     }
     if ($5 >>> 0 > 2146435072 >>> 0) {
      break label$4
     }
     if (!$6) {
      break label$3
     }
     if (($5 | 0) != (2146435072 | 0)) {
      break label$3
     }
    }
    return +($0 + $1);
   }
   label$5 : {
    label$6 : {
     label$7 : {
      label$8 : {
       if (($8 | 0) > (-1 | 0)) {
        break label$8
       }
       $11 = 2;
       if ($5 >>> 0 > 1128267775 >>> 0) {
        break label$7
       }
       if ($5 >>> 0 < 1072693248 >>> 0) {
        break label$8
       }
       $12 = $5 >>> 20 | 0;
       label$9 : {
        if ($5 >>> 0 < 1094713344 >>> 0) {
         break label$9
        }
        $11 = 0;
        $12 = 1075 - $12 | 0;
        $13 = $6 >>> $12 | 0;
        if (($13 << $12 | 0 | 0) != ($6 | 0)) {
         break label$7
        }
        $11 = 2 - ($13 & 1 | 0) | 0;
        break label$7;
       }
       $11 = 0;
       if ($6) {
        break label$5
       }
       $11 = 0;
       $6 = 1043 - $12 | 0;
       $12 = $5 >>> $6 | 0;
       if (($12 << $6 | 0 | 0) != ($5 | 0)) {
        break label$6
       }
       $11 = 2 - ($12 & 1 | 0) | 0;
       break label$6;
      }
      $11 = 0;
     }
     if ($6) {
      break label$5
     }
    }
    label$10 : {
     if (($5 | 0) != (2146435072 | 0)) {
      break label$10
     }
     if (!($10 + -1072693248 | 0 | $9 | 0)) {
      break label$1
     }
     label$11 : {
      if ($10 >>> 0 < 1072693248 >>> 0) {
       break label$11
      }
      return +(($4 | 0) > (-1 | 0) ? $1 : 0.0);
     }
     return +(($4 | 0) > (-1 | 0) ? 0.0 : -$1);
    }
    label$12 : {
     if (($5 | 0) != (1072693248 | 0)) {
      break label$12
     }
     label$13 : {
      if (($4 | 0) <= (-1 | 0)) {
       break label$13
      }
      return +$0;
     }
     return +(1.0 / $0);
    }
    label$14 : {
     if (($4 | 0) != (1073741824 | 0)) {
      break label$14
     }
     return +($0 * $0);
    }
    if (($8 | 0) < (0 | 0)) {
     break label$5
    }
    if (($4 | 0) != (1071644672 | 0)) {
     break label$5
    }
    return +(+sqrt(+$0));
   }
   $2 = +fabs(+$0);
   label$15 : {
    if ($9) {
     break label$15
    }
    label$16 : {
     if (($8 & 1073741823 | 0 | 0) == (1072693248 | 0)) {
      break label$16
     }
     if ($10) {
      break label$15
     }
    }
    $2 = ($4 | 0) < (0 | 0) ? 1.0 / $2 : $2;
    if (($8 | 0) > (-1 | 0)) {
     break label$1
    }
    label$17 : {
     if ($11 | ($10 + -1072693248 | 0) | 0) {
      break label$17
     }
     $1 = $2 - $2;
     return +($1 / $1);
    }
    return +(($11 | 0) == (1 | 0) ? -$2 : $2);
   }
   $14 = 1.0;
   label$18 : {
    if (($8 | 0) > (-1 | 0)) {
     break label$18
    }
    label$19 : {
     switch ($11 | 0) {
     case 0:
      $1 = $0 - $0;
      return +($1 / $1);
     case 1:
      break label$19;
     default:
      break label$18;
     };
    }
    $14 = -1.0;
   }
   label$21 : {
    label$22 : {
     if ($5 >>> 0 < 1105199105 >>> 0) {
      break label$22
     }
     label$23 : {
      if ($5 >>> 0 < 1139802113 >>> 0) {
       break label$23
      }
      label$24 : {
       if ($10 >>> 0 > 1072693247 >>> 0) {
        break label$24
       }
       return +(($4 | 0) < (0 | 0) ? infinity : 0.0);
      }
      return +(($4 | 0) > (0 | 0) ? infinity : 0.0);
     }
     label$25 : {
      if ($10 >>> 0 > 1072693246 >>> 0) {
       break label$25
      }
      return +(($4 | 0) < (0 | 0) ? $14 * 1.e+300 * 1.e+300 : $14 * 1.0e-300 * 1.0e-300);
     }
     label$26 : {
      if ($10 >>> 0 < 1072693249 >>> 0) {
       break label$26
      }
      return +(($4 | 0) > (0 | 0) ? $14 * 1.e+300 * 1.e+300 : $14 * 1.0e-300 * 1.0e-300);
     }
     $0 = $2 + -1.0;
     $2 = $0 * 1.4426950216293335;
     $15 = $0 * 1.9259629911266175e-08 + $0 * $0 * (.5 - $0 * ($0 * -.25 + .3333333333333333)) * -1.4426950408889634;
     wasm2js_scratch_store_f64(+($2 + $15));
     i64toi32_i32$2 = wasm2js_scratch_load_i32(1 | 0) | 0;
     i64toi32_i32$1 = wasm2js_scratch_load_i32(0 | 0) | 0;
     i64toi32_i32$0 = -1;
     i64toi32_i32$3 = 0;
     i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
     wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$1 & i64toi32_i32$3 | 0 | 0);
     wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$0 | 0);
     $0 = +wasm2js_scratch_load_f64();
     $16 = $0 - $2;
     break label$21;
    }
    $0 = $2 * 9007199254740992.0;
    $5 = $10 >>> 0 < 1048576 >>> 0;
    $2 = $5 ? $0 : $2;
    wasm2js_scratch_store_f64(+$0);
    i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$2 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $48 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     $48 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
    }
    $4 = $5 ? $48 : $10;
    $6 = $4 & 1048575 | 0;
    $8 = $6 | 1072693248 | 0;
    $4 = ($5 ? -1076 : -1023) + ($4 >> 20 | 0) | 0;
    $5 = 0;
    label$27 : {
     if ($6 >>> 0 < 235663 >>> 0) {
      break label$27
     }
     label$28 : {
      if ($6 >>> 0 >= 767610 >>> 0) {
       break label$28
      }
      $5 = 1;
      break label$27;
     }
     $8 = $8 + -1048576 | 0;
     $4 = $4 + 1 | 0;
    }
    $6 = $5 << 3 | 0;
    $17 = +HEAPF64[($6 + 6976 | 0) >> 3];
    $275 = $17;
    i64toi32_i32$1 = 0;
    i64toi32_i32$0 = $8;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
     $49 = 0;
    } else {
     i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
     $49 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
    }
    $278$hi = i64toi32_i32$2;
    wasm2js_scratch_store_f64(+$2);
    i64toi32_i32$2 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$1 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$3 = -1;
    i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
    $281 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
    $281$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $278$hi;
    i64toi32_i32$2 = $49;
    i64toi32_i32$1 = $281$hi;
    i64toi32_i32$3 = $281;
    i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
    wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$2 | i64toi32_i32$3 | 0 | 0);
    wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$1 | 0);
    $15 = +wasm2js_scratch_load_f64();
    $16 = +HEAPF64[($6 + 6944 | 0) >> 3];
    $18 = $15 - $16;
    $19 = 1.0 / ($16 + $15);
    $2 = $18 * $19;
    wasm2js_scratch_store_f64(+$2);
    i64toi32_i32$1 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$0 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$2 = -1;
    i64toi32_i32$3 = 0;
    i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
    wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$0 & i64toi32_i32$3 | 0 | 0);
    wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$2 | 0);
    $0 = +wasm2js_scratch_load_f64();
    $301 = $0;
    $20 = $0 * $0;
    $306 = $20 + 3.0;
    $309 = $2 + $0;
    $310 = $19;
    $311 = $18;
    $312 = $0;
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = (($8 >> 1 | 0 | 536870912 | 0) + ($5 << 18 | 0) | 0) + 524288 | 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
     $50 = 0;
    } else {
     i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
     $50 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
    }
    wasm2js_scratch_store_i32(0 | 0, $50 | 0);
    wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$0 | 0);
    $21 = +wasm2js_scratch_load_f64();
    $15 = $310 * ($311 - $312 * $21 - $0 * ($15 - ($21 - $16)));
    $0 = $2 * $2;
    $16 = $309 * $15 + $0 * $0 * ($0 * ($0 * ($0 * ($0 * ($0 * .20697501780033842 + .23066074577556175) + .272728123808534) + .33333332981837743) + .4285714285785502) + .5999999999999946);
    wasm2js_scratch_store_f64(+($306 + $16));
    i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$2 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$1 = -1;
    i64toi32_i32$3 = 0;
    i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
    wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$2 & i64toi32_i32$3 | 0 | 0);
    wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$1 | 0);
    $0 = +wasm2js_scratch_load_f64();
    $18 = $301 * $0;
    $2 = $15 * $0 + $2 * ($16 - ($0 + -3.0 - $20));
    wasm2js_scratch_store_f64(+($18 + $2));
    i64toi32_i32$1 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$0 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$2 = -1;
    i64toi32_i32$3 = 0;
    i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
    wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$0 & i64toi32_i32$3 | 0 | 0);
    wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$2 | 0);
    $0 = +wasm2js_scratch_load_f64();
    $16 = $0 * .9617967009544373;
    $15 = +HEAPF64[($6 + 6960 | 0) >> 3] + (($2 - ($0 - $18)) * .9617966939259756 + $0 * -7.028461650952758e-09);
    $2 = +($4 | 0);
    wasm2js_scratch_store_f64(+($275 + ($16 + $15) + $2));
    i64toi32_i32$2 = wasm2js_scratch_load_i32(1 | 0) | 0;
    i64toi32_i32$1 = wasm2js_scratch_load_i32(0 | 0) | 0;
    i64toi32_i32$0 = -1;
    i64toi32_i32$3 = 0;
    i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
    wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$1 & i64toi32_i32$3 | 0 | 0);
    wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$0 | 0);
    $0 = +wasm2js_scratch_load_f64();
    $16 = $0 - $2 - $17 - $16;
   }
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$2 = $3;
   i64toi32_i32$1 = -1;
   i64toi32_i32$3 = 0;
   i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
   wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$2 & i64toi32_i32$3 | 0 | 0);
   wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$1 | 0);
   $17 = +wasm2js_scratch_load_f64();
   $2 = $0 * $17;
   $1 = ($15 - $16) * $1 + ($1 - $17) * $0;
   $0 = $2 + $1;
   wasm2js_scratch_store_f64(+$0);
   i64toi32_i32$1 = wasm2js_scratch_load_i32(1 | 0) | 0;
   $3 = wasm2js_scratch_load_i32(0 | 0) | 0;
   $3$hi = i64toi32_i32$1;
   $5 = $3;
   label$29 : {
    label$30 : {
     i64toi32_i32$0 = $5;
     i64toi32_i32$2 = 0;
     i64toi32_i32$3 = 32;
     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$2 = 0;
      $51 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     } else {
      i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
      $51 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
     }
     $8 = $51;
     if (($8 | 0) < (1083179008 | 0)) {
      break label$30
     }
     label$31 : {
      if (!($8 + -1083179008 | 0 | $5 | 0)) {
       break label$31
      }
      return +($14 * 1.e+300 * 1.e+300);
     }
     if ($1 + 8.008566259537294e-17 > $0 - $2 ^ 1 | 0) {
      break label$29
     }
     return +($14 * 1.e+300 * 1.e+300);
    }
    if (($8 & 2147482624 | 0) >>> 0 < 1083231232 >>> 0) {
     break label$29
    }
    label$32 : {
     if (!($8 + 1064252416 | 0 | $5 | 0)) {
      break label$32
     }
     return +($14 * 1.0e-300 * 1.0e-300);
    }
    if ($1 <= $0 - $2 ^ 1 | 0) {
     break label$29
    }
    return +($14 * 1.0e-300 * 1.0e-300);
   }
   $5 = 0;
   label$33 : {
    $6 = $8 & 2147483647 | 0;
    if ($6 >>> 0 < 1071644673 >>> 0) {
     break label$33
    }
    $6 = (1048576 >>> (($6 >>> 20 | 0) + -1022 | 0) | 0) + $8 | 0;
    $4 = ($6 >>> 20 | 0) & 2047 | 0;
    $5 = ($6 & 1048575 | 0 | 1048576 | 0) >>> (1043 - $4 | 0) | 0;
    $5 = ($8 | 0) < (0 | 0) ? 0 - $5 | 0 : $5;
    $510 = $1;
    $511 = $2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = (-1048576 >> ($4 + -1023 | 0) | 0) & $6 | 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
     $52 = 0;
    } else {
     i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
     $52 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
    }
    wasm2js_scratch_store_i32(0 | 0, $52 | 0);
    wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$0 | 0);
    $2 = $511 - +wasm2js_scratch_load_f64();
    wasm2js_scratch_store_f64(+($510 + $2));
    i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
    $3 = wasm2js_scratch_load_i32(0 | 0) | 0;
    $3$hi = i64toi32_i32$0;
   }
   label$34 : {
    label$35 : {
     $525 = $5 << 20 | 0;
     i64toi32_i32$0 = $3$hi;
     i64toi32_i32$2 = $3;
     i64toi32_i32$1 = -1;
     i64toi32_i32$3 = 0;
     i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
     wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$2 & i64toi32_i32$3 | 0 | 0);
     wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$1 | 0);
     $0 = +wasm2js_scratch_load_f64();
     $15 = $0 * .6931471824645996;
     $2 = ($1 - ($0 - $2)) * .6931471805599453 + $0 * -1.904654299957768e-09;
     $1 = $15 + $2;
     $0 = $1 * $1;
     $0 = $1 - $0 * ($0 * ($0 * ($0 * ($0 * 4.1381367970572385e-08 + -1.6533902205465252e-06) + 6.613756321437934e-05) + -2.7777777777015593e-03) + .16666666666666602);
     $568 = $1 * $0 / ($0 + -2.0);
     $0 = $2 - ($1 - $15);
     $1 = $1 - ($568 - ($0 + $1 * $0)) + 1.0;
     wasm2js_scratch_store_f64(+$1);
     i64toi32_i32$1 = wasm2js_scratch_load_i32(1 | 0) | 0;
     $3 = wasm2js_scratch_load_i32(0 | 0) | 0;
     $3$hi = i64toi32_i32$1;
     i64toi32_i32$0 = $3;
     i64toi32_i32$2 = 0;
     i64toi32_i32$3 = 32;
     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$2 = 0;
      $53 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     } else {
      i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
      $53 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
     }
     $8 = $525 + $53 | 0;
     if (($8 | 0) > (1048575 | 0)) {
      break label$35
     }
     $1 = +scalbn(+$1, $5 | 0);
     break label$34;
    }
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = $8;
    i64toi32_i32$0 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
     $54 = 0;
    } else {
     i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
     $54 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
    }
    $595$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $3$hi;
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = -1;
    i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
    $597 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    $597$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $595$hi;
    i64toi32_i32$0 = $54;
    i64toi32_i32$2 = $597$hi;
    i64toi32_i32$3 = $597;
    i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
    wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$0 | i64toi32_i32$3 | 0 | 0);
    wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$2 | 0);
    $1 = +wasm2js_scratch_load_f64();
   }
   $2 = $14 * $1;
  }
  return +$2;
 }
 
 function sqrt($0) {
  $0 = +$0;
  return +Math_sqrt($0);
 }
 
 function __rem_pio2l($0, $0$hi, $1, $1$hi, $2) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$1 = 0, $3 = 0, $5$hi = 0, i64toi32_i32$4 = 0, $5 = 0, $6$hi = 0, $8$hi = 0, $11 = 0, $7$hi = 0, $8 = 0, $6 = 0, $7 = 0, $9$hi = 0, $9 = 0, $12$hi = 0, $13$hi = 0, $10 = 0, $4 = 0, $12 = 0, $13 = 0, $14 = 0, $10$hi = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $15 = 0.0, $103 = 0, $104 = 0, $105 = 0, $24 = 0, $38 = 0, $38$hi = 0, $42 = 0, $42$hi = 0, $46 = 0, $46$hi = 0, $50 = 0, $50$hi = 0, $66 = 0, $66$hi = 0, $70 = 0, $70$hi = 0, $107 = 0, $149 = 0, $149$hi = 0, $153 = 0, $153$hi = 0, $159 = 0, $159$hi = 0, $163 = 0, $163$hi = 0, $165 = 0, $165$hi = 0, $169 = 0, $169$hi = 0, $192 = 0, $236 = 0, $236$hi = 0, $240 = 0, $240$hi = 0, $246 = 0, $246$hi = 0, $250 = 0, $250$hi = 0, $252 = 0, $252$hi = 0, $256 = 0, $256$hi = 0, $289 = 0, $289$hi = 0, $293 = 0, $293$hi = 0, $300 = 0, $303 = 0, $333 = 0, $347 = 0, $347$hi = 0, $351 = 0, $351$hi = 0, $355 = 0, $355$hi = 0, $359 = 0, $359$hi = 0, $407 = 0, $407$hi = 0, $411 = 0, $411$hi = 0, $413 = 0, $413$hi = 0, $417 = 0, $417$hi = 0, $457 = 0, $457$hi = 0, $461 = 0, $461$hi = 0, $477 = 0, $480 = 0;
  $3 = __stack_pointer - 624 | 0;
  __stack_pointer = $3;
  label$1 : {
   label$2 : {
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$2 = $1;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = 48;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $99 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     $99 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
    }
    $4 = $99 & 32767 | 0;
    $24 = $4 << 16 | 0;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$0 = $1;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = 0;
     $100 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     $100 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
    }
    if (($24 | ($100 & 65535 | 0) | 0) >>> 0 > 1076662814 >>> 0) {
     break label$2
    }
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$1 = 710146126;
    i64toi32_i32$3 = 1073628659;
    __multf3($3 + 352 | 0 | 0, $0 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$0 | 0, -1348212118 | 0, i64toi32_i32$1 | 0, 115121288 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$0 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 352 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 356 | 0) >> 2] | 0;
    $38 = i64toi32_i32$3;
    $38$hi = i64toi32_i32$1;
    i64toi32_i32$0 = (i64toi32_i32$0 + 352 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $42 = i64toi32_i32$1;
    $42$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $38$hi;
    i64toi32_i32$1 = $42$hi;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = 1081049088;
    __addtf3($3 + 336 | 0 | 0, $38 | 0, i64toi32_i32$3 | 0, $42 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 336 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 340 | 0) >> 2] | 0;
    $46 = i64toi32_i32$2;
    $46$hi = i64toi32_i32$0;
    i64toi32_i32$1 = (i64toi32_i32$1 + 336 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $50 = i64toi32_i32$0;
    $50$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $46$hi;
    i64toi32_i32$0 = $50$hi;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = -1066434560;
    __addtf3($3 + 320 | 0 | 0, $46 | 0, i64toi32_i32$2 | 0, $50 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$0 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 320 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 324 | 0) >> 2] | 0;
    $5 = i64toi32_i32$3;
    $5$hi = i64toi32_i32$1;
    i64toi32_i32$0 = (i64toi32_i32$0 + 320 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $6 = i64toi32_i32$1;
    $6$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$1 = $6$hi;
    i64toi32_i32$0 = -2073460736;
    i64toi32_i32$2 = -1073769953;
    __multf3($3 + 288 | 0 | 0, $5 | 0, i64toi32_i32$3 | 0, $6 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$0 | 0, -1253817647 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 288 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 292 | 0) >> 2] | 0;
    $66 = i64toi32_i32$2;
    $66$hi = i64toi32_i32$0;
    i64toi32_i32$1 = (i64toi32_i32$1 + 288 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $70 = i64toi32_i32$0;
    $70$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$1 = $66$hi;
    i64toi32_i32$3 = $70$hi;
    __addtf3($3 + 272 | 0 | 0, $0 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$0 | 0, $66 | 0, i64toi32_i32$1 | 0, $70 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$3 = $6$hi;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$1 = $6$hi;
    i64toi32_i32$0 = 877281427;
    i64toi32_i32$2 = 1069167e3;
    __multf3($3 + 304 | 0 | 0, $5 | 0, i64toi32_i32$3 | 0, $6 | 0, i64toi32_i32$1 | 0, -2111661581 | 0, i64toi32_i32$0 | 0, -1562364153 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 272 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 276 | 0) >> 2] | 0;
    $1 = i64toi32_i32$2;
    $1$hi = i64toi32_i32$0;
    i64toi32_i32$1 = (i64toi32_i32$1 + 272 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $7 = i64toi32_i32$0;
    $7$hi = i64toi32_i32$2;
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 304 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 308 | 0) >> 2] | 0;
    $8 = i64toi32_i32$2;
    $8$hi = i64toi32_i32$0;
    i64toi32_i32$1 = (i64toi32_i32$1 + 304 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
    $9 = i64toi32_i32$0;
    $9$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$1 = $8$hi;
    i64toi32_i32$3 = $9$hi;
    __subtf3($3 + 256 | 0 | 0, $1 | 0, i64toi32_i32$2 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0, $9 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$0 = ($3 + 256 | 0) + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $0 = i64toi32_i32$3;
    $0$hi = i64toi32_i32$1;
    i64toi32_i32$3 = $2;
    HEAP32[(i64toi32_i32$3 + 8 | 0) >> 2] = $0;
    HEAP32[(i64toi32_i32$3 + 12 | 0) >> 2] = i64toi32_i32$1;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 256 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 260 | 0) >> 2] | 0;
    $10 = i64toi32_i32$1;
    $10$hi = i64toi32_i32$3;
    i64toi32_i32$1 = $2;
    HEAP32[i64toi32_i32$1 >> 2] = $10;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$3;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$3 = $6$hi;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$1 = $6$hi;
    i64toi32_i32$1 = __fixtfdi($5 | 0, i64toi32_i32$3 | 0, $6 | 0, i64toi32_i32$1 | 0) | 0;
    i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
    $11 = i64toi32_i32$1;
    label$3 : {
     $107 = $4;
     i64toi32_i32$3 = $0$hi;
     i64toi32_i32$0 = $0;
     i64toi32_i32$1 = 0;
     i64toi32_i32$2 = 48;
     i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
      i64toi32_i32$1 = 0;
      $101 = i64toi32_i32$3 >>> i64toi32_i32$4 | 0;
     } else {
      i64toi32_i32$1 = i64toi32_i32$3 >>> i64toi32_i32$4 | 0;
      $101 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
     }
     if (($107 - ($101 & 32767 | 0) | 0 | 0) < (52 | 0)) {
      break label$3
     }
     i64toi32_i32$1 = $5$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = $5$hi;
     i64toi32_i32$0 = $6$hi;
     i64toi32_i32$3 = 877281280;
     i64toi32_i32$2 = 1069167e3;
     __multf3($3 + 240 | 0 | 0, $5 | 0, i64toi32_i32$1 | 0, $6 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$3 | 0, -1562364153 | 0, i64toi32_i32$2 | 0);
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $7$hi;
     i64toi32_i32$0 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 240 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 244 | 0) >> 2] | 0;
     $0 = i64toi32_i32$2;
     $0$hi = i64toi32_i32$3;
     i64toi32_i32$0 = (i64toi32_i32$0 + 240 | 0) + 8 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $8 = i64toi32_i32$3;
     $8$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$3 = $7$hi;
     i64toi32_i32$0 = $0$hi;
     i64toi32_i32$1 = $8$hi;
     __subtf3($3 + 208 | 0 | 0, $1 | 0, i64toi32_i32$2 | 0, $7 | 0, i64toi32_i32$3 | 0, $0 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$1 = $5$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = $5$hi;
     i64toi32_i32$0 = $6$hi;
     i64toi32_i32$3 = 17162067;
     i64toi32_i32$2 = 1064380164;
     __multf3($3 + 224 | 0 | 0, $5 | 0, i64toi32_i32$1 | 0, $6 | 0, i64toi32_i32$0 | 0, 495570321 | 0, i64toi32_i32$3 | 0, 1161029178 | 0, i64toi32_i32$2 | 0);
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $7$hi;
     i64toi32_i32$0 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 208 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 212 | 0) >> 2] | 0;
     $12 = i64toi32_i32$2;
     $12$hi = i64toi32_i32$3;
     i64toi32_i32$0 = (i64toi32_i32$0 + 208 | 0) + 8 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $13 = i64toi32_i32$3;
     $13$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$3 = $7$hi;
     i64toi32_i32$0 = $12$hi;
     i64toi32_i32$1 = $13$hi;
     __subtf3($3 + 192 | 0 | 0, $1 | 0, i64toi32_i32$2 | 0, $7 | 0, i64toi32_i32$3 | 0, $12 | 0, i64toi32_i32$0 | 0, $13 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$3 = $3;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 192 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 196 | 0) >> 2] | 0;
     $149 = i64toi32_i32$1;
     $149$hi = i64toi32_i32$0;
     i64toi32_i32$3 = (i64toi32_i32$3 + 192 | 0) + 8 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
     $153 = i64toi32_i32$0;
     $153$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $0$hi;
     i64toi32_i32$1 = $8$hi;
     i64toi32_i32$1 = $149$hi;
     i64toi32_i32$0 = $153$hi;
     i64toi32_i32$3 = $0$hi;
     i64toi32_i32$2 = $8$hi;
     __subtf3($3 + 176 | 0 | 0, $149 | 0, i64toi32_i32$1 | 0, $153 | 0, i64toi32_i32$0 | 0, $0 | 0, i64toi32_i32$3 | 0, $8 | 0, i64toi32_i32$2 | 0);
     i64toi32_i32$0 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 224 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 228 | 0) >> 2] | 0;
     $159 = i64toi32_i32$2;
     $159$hi = i64toi32_i32$3;
     i64toi32_i32$0 = (i64toi32_i32$0 + 224 | 0) + 8 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $163 = i64toi32_i32$3;
     $163$hi = i64toi32_i32$2;
     i64toi32_i32$0 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 176 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 180 | 0) >> 2] | 0;
     $165 = i64toi32_i32$2;
     $165$hi = i64toi32_i32$3;
     i64toi32_i32$0 = (i64toi32_i32$0 + 176 | 0) + 8 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $169 = i64toi32_i32$3;
     $169$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $159$hi;
     i64toi32_i32$3 = $163$hi;
     i64toi32_i32$0 = $165$hi;
     i64toi32_i32$1 = $169$hi;
     __subtf3($3 + 160 | 0 | 0, $159 | 0, i64toi32_i32$2 | 0, $163 | 0, i64toi32_i32$3 | 0, $165 | 0, i64toi32_i32$0 | 0, $169 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$1 = $13$hi;
     i64toi32_i32$3 = $3;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 160 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 164 | 0) >> 2] | 0;
     $8 = i64toi32_i32$1;
     $8$hi = i64toi32_i32$0;
     i64toi32_i32$3 = (i64toi32_i32$3 + 160 | 0) + 8 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
     $9 = i64toi32_i32$0;
     $9$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$0 = $13$hi;
     i64toi32_i32$3 = $8$hi;
     i64toi32_i32$2 = $9$hi;
     __subtf3($3 + 144 | 0 | 0, $12 | 0, i64toi32_i32$1 | 0, $13 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$3 | 0, $9 | 0, i64toi32_i32$2 | 0);
     i64toi32_i32$0 = ($3 + 144 | 0) + 8 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $0 = i64toi32_i32$2;
     $0$hi = i64toi32_i32$3;
     i64toi32_i32$2 = $2;
     HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] = $0;
     HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] = i64toi32_i32$3;
     i64toi32_i32$0 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 144 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 148 | 0) >> 2] | 0;
     $10 = i64toi32_i32$3;
     $10$hi = i64toi32_i32$2;
     i64toi32_i32$3 = $2;
     HEAP32[i64toi32_i32$3 >> 2] = $10;
     HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$2;
     label$4 : {
      $192 = $4;
      i64toi32_i32$2 = $0$hi;
      i64toi32_i32$0 = $0;
      i64toi32_i32$3 = 0;
      i64toi32_i32$1 = 48;
      i64toi32_i32$4 = i64toi32_i32$1 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = 0;
       $102 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$3 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
       $102 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
      }
      if (($192 - ($102 & 32767 | 0) | 0 | 0) >= (120 | 0)) {
       break label$4
      }
      i64toi32_i32$3 = $12$hi;
      $1 = $12;
      $1$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $13$hi;
      $7 = $13;
      $7$hi = i64toi32_i32$3;
      break label$3;
     }
     i64toi32_i32$3 = $5$hi;
     i64toi32_i32$3 = $6$hi;
     i64toi32_i32$3 = $5$hi;
     i64toi32_i32$0 = $6$hi;
     i64toi32_i32$2 = 17162240;
     i64toi32_i32$1 = 1064380164;
     __multf3($3 + 128 | 0 | 0, $5 | 0, i64toi32_i32$3 | 0, $6 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0, 1161029178 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$1 = $13$hi;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 128 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 132 | 0) >> 2] | 0;
     $0 = i64toi32_i32$1;
     $0$hi = i64toi32_i32$2;
     i64toi32_i32$0 = (i64toi32_i32$0 + 128 | 0) + 8 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $8 = i64toi32_i32$2;
     $8$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$2 = $13$hi;
     i64toi32_i32$0 = $0$hi;
     i64toi32_i32$3 = $8$hi;
     __subtf3($3 + 96 | 0 | 0, $12 | 0, i64toi32_i32$1 | 0, $13 | 0, i64toi32_i32$2 | 0, $0 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$3 | 0);
     i64toi32_i32$3 = $5$hi;
     i64toi32_i32$3 = $6$hi;
     i64toi32_i32$3 = $5$hi;
     i64toi32_i32$0 = $6$hi;
     i64toi32_i32$2 = -1242069391;
     i64toi32_i32$1 = -1087874620;
     __multf3($3 + 112 | 0 | 0, $5 | 0, i64toi32_i32$3 | 0, $6 | 0, i64toi32_i32$0 | 0, -872734192 | 0, i64toi32_i32$2 | 0, -328933970 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$1 = $13$hi;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 96 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 100 | 0) >> 2] | 0;
     $1 = i64toi32_i32$1;
     $1$hi = i64toi32_i32$2;
     i64toi32_i32$0 = (i64toi32_i32$0 + 96 | 0) + 8 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $7 = i64toi32_i32$2;
     $7$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$2 = $13$hi;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$3 = $7$hi;
     __subtf3($3 + 80 | 0 | 0, $12 | 0, i64toi32_i32$1 | 0, $13 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$0 | 0, $7 | 0, i64toi32_i32$3 | 0);
     i64toi32_i32$2 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
     $236 = i64toi32_i32$3;
     $236$hi = i64toi32_i32$0;
     i64toi32_i32$2 = (i64toi32_i32$2 + 80 | 0) + 8 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $240 = i64toi32_i32$0;
     $240$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $0$hi;
     i64toi32_i32$3 = $8$hi;
     i64toi32_i32$3 = $236$hi;
     i64toi32_i32$0 = $240$hi;
     i64toi32_i32$2 = $0$hi;
     i64toi32_i32$1 = $8$hi;
     __subtf3($3 + 64 | 0 | 0, $236 | 0, i64toi32_i32$3 | 0, $240 | 0, i64toi32_i32$0 | 0, $0 | 0, i64toi32_i32$2 | 0, $8 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 112 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 116 | 0) >> 2] | 0;
     $246 = i64toi32_i32$1;
     $246$hi = i64toi32_i32$2;
     i64toi32_i32$0 = (i64toi32_i32$0 + 112 | 0) + 8 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $250 = i64toi32_i32$2;
     $250$hi = i64toi32_i32$1;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 64 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 68 | 0) >> 2] | 0;
     $252 = i64toi32_i32$1;
     $252$hi = i64toi32_i32$2;
     i64toi32_i32$0 = (i64toi32_i32$0 + 64 | 0) + 8 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $256 = i64toi32_i32$2;
     $256$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $246$hi;
     i64toi32_i32$2 = $250$hi;
     i64toi32_i32$0 = $252$hi;
     i64toi32_i32$3 = $256$hi;
     __subtf3($3 + 48 | 0 | 0, $246 | 0, i64toi32_i32$1 | 0, $250 | 0, i64toi32_i32$2 | 0, $252 | 0, i64toi32_i32$0 | 0, $256 | 0, i64toi32_i32$3 | 0);
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$3 = $7$hi;
     i64toi32_i32$2 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
     $8 = i64toi32_i32$3;
     $8$hi = i64toi32_i32$0;
     i64toi32_i32$2 = (i64toi32_i32$2 + 48 | 0) + 8 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
     $9 = i64toi32_i32$0;
     $9$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$0 = $7$hi;
     i64toi32_i32$2 = $8$hi;
     i64toi32_i32$1 = $9$hi;
     __subtf3($3 + 32 | 0 | 0, $1 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$2 | 0, $9 | 0, i64toi32_i32$1 | 0);
     i64toi32_i32$0 = ($3 + 32 | 0) + 8 | 0;
     i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $0 = i64toi32_i32$1;
     $0$hi = i64toi32_i32$2;
     i64toi32_i32$1 = $2;
     HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $0;
     HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$2;
     i64toi32_i32$0 = $3;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] | 0;
     $10 = i64toi32_i32$2;
     $10$hi = i64toi32_i32$1;
     i64toi32_i32$2 = $2;
     HEAP32[i64toi32_i32$2 >> 2] = $10;
     HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$1;
    }
    $11 = $11 & 2147483647 | 0;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $7$hi;
    i64toi32_i32$1 = $10$hi;
    i64toi32_i32$1 = $0$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$2 = $7$hi;
    i64toi32_i32$0 = $10$hi;
    i64toi32_i32$3 = $0$hi;
    __subtf3($3 + 16 | 0 | 0, $1 | 0, i64toi32_i32$1 | 0, $7 | 0, i64toi32_i32$2 | 0, $10 | 0, i64toi32_i32$0 | 0, $0 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$2 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
    $289 = i64toi32_i32$3;
    $289$hi = i64toi32_i32$0;
    i64toi32_i32$2 = (i64toi32_i32$2 + 16 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $293 = i64toi32_i32$0;
    $293$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $8$hi;
    i64toi32_i32$3 = $9$hi;
    i64toi32_i32$3 = $289$hi;
    i64toi32_i32$0 = $293$hi;
    i64toi32_i32$2 = $8$hi;
    i64toi32_i32$1 = $9$hi;
    __subtf3($3 | 0, $289 | 0, i64toi32_i32$3 | 0, $293 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$2 | 0, $9 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$0 = $3 + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $300 = i64toi32_i32$1;
    i64toi32_i32$1 = $2 + 24 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $300;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$2;
    i64toi32_i32$0 = $3;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $303 = i64toi32_i32$2;
    i64toi32_i32$2 = $2;
    HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] = $303;
    HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] = i64toi32_i32$1;
    break label$1;
   }
   label$5 : {
    if (($4 | 0) != (32767 | 0)) {
     break label$5
    }
    i64toi32_i32$1 = $0$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $0$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $0$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$0 = i64toi32_i32$1;
    i64toi32_i32$3 = i64toi32_i32$2;
    __subtf3($3 + 368 | 0 | 0, $0 | 0, i64toi32_i32$0 | 0, $1 | 0, i64toi32_i32$2 | 0, $0 | 0, i64toi32_i32$0 | 0, $1 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$2 = $3 + 376 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $0 = i64toi32_i32$3;
    $0$hi = i64toi32_i32$0;
    i64toi32_i32$3 = $2;
    HEAP32[(i64toi32_i32$3 + 8 | 0) >> 2] = $0;
    HEAP32[(i64toi32_i32$3 + 12 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$2 = $3;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 368 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 372 | 0) >> 2] | 0;
    $5 = i64toi32_i32$0;
    $5$hi = i64toi32_i32$3;
    i64toi32_i32$0 = $2;
    HEAP32[i64toi32_i32$0 >> 2] = $5;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$3;
    i64toi32_i32$3 = $0$hi;
    i64toi32_i32$0 = i64toi32_i32$0 + 24 | 0;
    HEAP32[i64toi32_i32$0 >> 2] = $0;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$3;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$0 = $2;
    HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] = $5;
    HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] = i64toi32_i32$3;
    $11 = 0;
    break label$1;
   }
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$2 = $1;
   i64toi32_i32$0 = 65535;
   i64toi32_i32$1 = -1;
   i64toi32_i32$0 = i64toi32_i32$3 & i64toi32_i32$0 | 0;
   i64toi32_i32$3 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
   i64toi32_i32$2 = 1075183616;
   i64toi32_i32$1 = 0;
   i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
   $5 = i64toi32_i32$3 | i64toi32_i32$1 | 0;
   $5$hi = i64toi32_i32$2;
   $11 = 0;
   label$6 : while (1) {
    $333 = ($3 + 576 | 0) + ($11 << 3 | 0) | 0;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$2 = $5$hi;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$3 = $5$hi;
    $14 = __fixtfsi($0 | 0, i64toi32_i32$2 | 0, $5 | 0, i64toi32_i32$3 | 0) | 0;
    HEAPF64[$333 >> 3] = +($14 | 0);
    __floatsitf($3 + 528 | 0 | 0, $14 | 0);
    i64toi32_i32$3 = i64toi32_i32$2;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$0 = $3;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 528 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 532 | 0) >> 2] | 0;
    $347 = i64toi32_i32$3;
    $347$hi = i64toi32_i32$2;
    i64toi32_i32$0 = (i64toi32_i32$0 + 528 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $351 = i64toi32_i32$2;
    $351$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $0$hi;
    i64toi32_i32$2 = $5$hi;
    i64toi32_i32$0 = $347$hi;
    i64toi32_i32$1 = $351$hi;
    __subtf3($3 + 512 | 0 | 0, $0 | 0, i64toi32_i32$3 | 0, $5 | 0, i64toi32_i32$2 | 0, $347 | 0, i64toi32_i32$0 | 0, $351 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 512 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 516 | 0) >> 2] | 0;
    $355 = i64toi32_i32$1;
    $355$hi = i64toi32_i32$0;
    i64toi32_i32$2 = (i64toi32_i32$2 + 512 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $359 = i64toi32_i32$0;
    $359$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $355$hi;
    i64toi32_i32$0 = $359$hi;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 1075249152;
    __multf3($3 + 496 | 0 | 0, $355 | 0, i64toi32_i32$1 | 0, $359 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$0 = ($3 + 496 | 0) + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $5 = i64toi32_i32$3;
    $5$hi = i64toi32_i32$2;
    i64toi32_i32$0 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 496 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 500 | 0) >> 2] | 0;
    $0 = i64toi32_i32$2;
    $0$hi = i64toi32_i32$3;
    $11 = $11 + 1 | 0;
    if (($11 | 0) != (4 | 0)) {
     continue label$6
    }
    break label$6;
   };
   i64toi32_i32$3 = $0$hi;
   i64toi32_i32$3 = $5$hi;
   i64toi32_i32$3 = $0$hi;
   i64toi32_i32$2 = $5$hi;
   $15 = +__trunctfdf2($0 | 0, i64toi32_i32$3 | 0, $5 | 0, i64toi32_i32$2 | 0);
   HEAPF64[($3 + 608 | 0) >> 3] = $15;
   label$7 : {
    label$8 : {
     if ($15 == 0.0) {
      break label$8
     }
     $11 = 4;
     break label$7;
    }
    $14 = 3;
    label$9 : while (1) {
     $11 = $14;
     $14 = $11 + -1 | 0;
     if (+HEAPF64[(($3 + 576 | 0) + ($11 << 3 | 0) | 0) >> 3] == 0.0) {
      continue label$9
     }
     break label$9;
    };
   }
   $11 = __rem_pio2_large($3 + 576 | 0 | 0, $3 + 544 | 0 | 0, $4 + -16406 | 0 | 0, $11 + 1 | 0 | 0, 3 | 0) | 0;
   __extenddftf2($3 + 384 | 0 | 0, +(+HEAPF64[($3 + 552 | 0) >> 3]));
   __extenddftf2($3 + 464 | 0 | 0, +(+HEAPF64[($3 + 560 | 0) >> 3]));
   i64toi32_i32$0 = $3;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 384 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 388 | 0) >> 2] | 0;
   $407 = i64toi32_i32$2;
   $407$hi = i64toi32_i32$3;
   i64toi32_i32$0 = (i64toi32_i32$0 + 384 | 0) + 8 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $411 = i64toi32_i32$3;
   $411$hi = i64toi32_i32$2;
   i64toi32_i32$0 = $3;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 464 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 468 | 0) >> 2] | 0;
   $413 = i64toi32_i32$2;
   $413$hi = i64toi32_i32$3;
   i64toi32_i32$0 = (i64toi32_i32$0 + 464 | 0) + 8 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $417 = i64toi32_i32$3;
   $417$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $407$hi;
   i64toi32_i32$3 = $411$hi;
   i64toi32_i32$0 = $413$hi;
   i64toi32_i32$1 = $417$hi;
   __addtf3($3 + 448 | 0 | 0, $407 | 0, i64toi32_i32$2 | 0, $411 | 0, i64toi32_i32$3 | 0, $413 | 0, i64toi32_i32$0 | 0, $417 | 0, i64toi32_i32$1 | 0);
   __extenddftf2($3 + 480 | 0 | 0, +(+HEAPF64[($3 + 544 | 0) >> 3]));
   i64toi32_i32$3 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 448 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 452 | 0) >> 2] | 0;
   $5 = i64toi32_i32$1;
   $5$hi = i64toi32_i32$0;
   i64toi32_i32$3 = (i64toi32_i32$3 + 448 | 0) + 8 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $6 = i64toi32_i32$0;
   $6$hi = i64toi32_i32$1;
   i64toi32_i32$3 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 480 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 484 | 0) >> 2] | 0;
   $7 = i64toi32_i32$1;
   $7$hi = i64toi32_i32$0;
   i64toi32_i32$3 = (i64toi32_i32$3 + 480 | 0) + 8 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $8 = i64toi32_i32$0;
   $8$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $5$hi;
   i64toi32_i32$0 = $6$hi;
   i64toi32_i32$3 = $7$hi;
   i64toi32_i32$2 = $8$hi;
   __addtf3($3 + 432 | 0 | 0, $5 | 0, i64toi32_i32$1 | 0, $6 | 0, i64toi32_i32$0 | 0, $7 | 0, i64toi32_i32$3 | 0, $8 | 0, i64toi32_i32$2 | 0);
   i64toi32_i32$0 = $3;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 432 | 0) >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 436 | 0) >> 2] | 0;
   $0 = i64toi32_i32$2;
   $0$hi = i64toi32_i32$3;
   i64toi32_i32$0 = (i64toi32_i32$0 + 432 | 0) + 8 | 0;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $9 = i64toi32_i32$3;
   $9$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $7$hi;
   i64toi32_i32$2 = $8$hi;
   i64toi32_i32$2 = $0$hi;
   i64toi32_i32$3 = $9$hi;
   i64toi32_i32$0 = $7$hi;
   i64toi32_i32$1 = $8$hi;
   __subtf3($3 + 416 | 0 | 0, $0 | 0, i64toi32_i32$2 | 0, $9 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$1 | 0);
   i64toi32_i32$1 = $5$hi;
   i64toi32_i32$1 = $6$hi;
   i64toi32_i32$3 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 416 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$3 + 420 | 0) >> 2] | 0;
   $457 = i64toi32_i32$1;
   $457$hi = i64toi32_i32$0;
   i64toi32_i32$3 = (i64toi32_i32$3 + 416 | 0) + 8 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$3 >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
   $461 = i64toi32_i32$0;
   $461$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $5$hi;
   i64toi32_i32$0 = $6$hi;
   i64toi32_i32$3 = $457$hi;
   i64toi32_i32$2 = $461$hi;
   __subtf3($3 + 400 | 0 | 0, $5 | 0, i64toi32_i32$1 | 0, $6 | 0, i64toi32_i32$0 | 0, $457 | 0, i64toi32_i32$3 | 0, $461 | 0, i64toi32_i32$2 | 0);
   i64toi32_i32$0 = ($3 + 400 | 0) + 8 | 0;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   $6 = i64toi32_i32$2;
   $6$hi = i64toi32_i32$3;
   i64toi32_i32$0 = $3;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 400 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 404 | 0) >> 2] | 0;
   $5 = i64toi32_i32$3;
   $5$hi = i64toi32_i32$2;
   label$10 : {
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$0 = $1;
    i64toi32_i32$3 = -1;
    i64toi32_i32$1 = -1;
    if ((i64toi32_i32$2 | 0) > (i64toi32_i32$3 | 0)) {
     $103 = 1
    } else {
     if ((i64toi32_i32$2 | 0) >= (i64toi32_i32$3 | 0)) {
      if (i64toi32_i32$0 >>> 0 <= i64toi32_i32$1 >>> 0) {
       $104 = 0
      } else {
       $104 = 1
      }
      $105 = $104;
     } else {
      $105 = 0
     }
     $103 = $105;
    }
    if ($103) {
     break label$10
    }
    i64toi32_i32$0 = $5$hi;
    i64toi32_i32$2 = $2;
    HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] = $5;
    HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$0 = $0$hi;
    HEAP32[i64toi32_i32$2 >> 2] = $0;
    HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$0 = $6$hi;
    i64toi32_i32$1 = $6;
    i64toi32_i32$2 = -2147483648;
    i64toi32_i32$3 = 0;
    i64toi32_i32$2 = i64toi32_i32$0 ^ i64toi32_i32$2 | 0;
    $477 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
    i64toi32_i32$1 = $2 + 24 | 0;
    HEAP32[i64toi32_i32$1 >> 2] = $477;
    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$2;
    i64toi32_i32$2 = $9$hi;
    i64toi32_i32$0 = $9;
    i64toi32_i32$1 = -2147483648;
    i64toi32_i32$3 = 0;
    i64toi32_i32$1 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
    $480 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
    i64toi32_i32$0 = $2;
    HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $480;
    HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
    $11 = 0 - $11 | 0;
    break label$1;
   }
   i64toi32_i32$1 = $5$hi;
   i64toi32_i32$0 = $2;
   HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] = $5;
   HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$1 = $0$hi;
   HEAP32[i64toi32_i32$0 >> 2] = $0;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$1 = $6$hi;
   i64toi32_i32$0 = i64toi32_i32$0 + 24 | 0;
   HEAP32[i64toi32_i32$0 >> 2] = $6;
   HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
   i64toi32_i32$1 = $9$hi;
   i64toi32_i32$0 = $2;
   HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $9;
   HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$1;
  }
  __stack_pointer = $3 + 624 | 0;
  return $11 | 0;
 }
 
 function sqrtl($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $3 = 0, i64toi32_i32$2 = 0, $15 = 0, $18 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $2$hi;
  __extenddftf2($3 | 0, +(+sqrt(+(+__trunctfdf2($1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$1 | 0)))));
  i64toi32_i32$2 = $3 + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $15 = i64toi32_i32$1;
  i64toi32_i32$1 = $0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $15;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[$3 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[($3 + 4 | 0) >> 2] | 0;
  $18 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  HEAP32[i64toi32_i32$0 >> 2] = $18;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $3 + 16 | 0;
 }
 
 function __invtrigl_R($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, $3 = 0, $4$hi = 0, $5$hi = 0, $4 = 0, $5 = 0, $16 = 0, $16$hi = 0, $20 = 0, $20$hi = 0, $24 = 0, $24$hi = 0, $28 = 0, $28$hi = 0, $34 = 0, $34$hi = 0, $38 = 0, $38$hi = 0, $42 = 0, $42$hi = 0, $46 = 0, $46$hi = 0, $52 = 0, $52$hi = 0, $56 = 0, $56$hi = 0, $60 = 0, $60$hi = 0, $64 = 0, $64$hi = 0, $80 = 0, $80$hi = 0, $84 = 0, $84$hi = 0, $90 = 0, $90$hi = 0, $94 = 0, $94$hi = 0, $98 = 0, $98$hi = 0, $102 = 0, $102$hi = 0, $108 = 0, $108$hi = 0, $112 = 0, $112$hi = 0, $116 = 0, $116$hi = 0, $120 = 0, $120$hi = 0, $126 = 0, $126$hi = 0, $130 = 0, $130$hi = 0, $134 = 0, $134$hi = 0, $138 = 0, $138$hi = 0, $144 = 0, $144$hi = 0, $148 = 0, $148$hi = 0, $152 = 0, $152$hi = 0, $156 = 0, $156$hi = 0, $162 = 0, $162$hi = 0, $166 = 0, $166$hi = 0, $170 = 0, $170$hi = 0, $174 = 0, $174$hi = 0, $184 = 0, $184$hi = 0, $188 = 0, $188$hi = 0, $194 = 0, $194$hi = 0, $198 = 0, $198$hi = 0, $202 = 0, $202$hi = 0, $206 = 0, $206$hi = 0, $212 = 0, $212$hi = 0, $216 = 0, $216$hi = 0, $220 = 0, $220$hi = 0, $224 = 0, $224$hi = 0, $230 = 0, $230$hi = 0, $234 = 0, $234$hi = 0, $238 = 0, $238$hi = 0, $242 = 0, $242$hi = 0, $248 = 0, $248$hi = 0, $252 = 0, $252$hi = 0, $256 = 0, $256$hi = 0, $260 = 0, $260$hi = 0, $266 = 0, $266$hi = 0, $270 = 0, $270$hi = 0, $273 = 0, $273$hi = 0, $277 = 0, $277$hi = 0, $279 = 0, $279$hi = 0, $283 = 0, $283$hi = 0, $287 = 0, $290 = 0;
  $3 = __stack_pointer - 496 | 0;
  __stack_pointer = $3;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $2$hi;
  i64toi32_i32$2 = -1758518244;
  i64toi32_i32$3 = -1075264468;
  __multf3($3 + 480 | 0 | 0, $1 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$1 | 0, 435724678 | 0, i64toi32_i32$2 | 0, 48450880 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 480 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 484 | 0) >> 2] | 0;
  $16 = i64toi32_i32$3;
  $16$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 480 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $20 = i64toi32_i32$2;
  $20$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $16$hi;
  i64toi32_i32$2 = $20$hi;
  i64toi32_i32$1 = -1915086118;
  i64toi32_i32$0 = 1072836389;
  __addtf3($3 + 464 | 0 | 0, $16 | 0, i64toi32_i32$3 | 0, $20 | 0, i64toi32_i32$2 | 0, -1237769951 | 0, i64toi32_i32$1 | 0, -2085098447 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 464 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 468 | 0) >> 2] | 0;
  $24 = i64toi32_i32$0;
  $24$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 464 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $28 = i64toi32_i32$1;
  $28$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $24$hi;
  i64toi32_i32$1 = $28$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 448 | 0 | 0, $24 | 0, i64toi32_i32$0 | 0, $28 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 448 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 452 | 0) >> 2] | 0;
  $34 = i64toi32_i32$3;
  $34$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 448 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $38 = i64toi32_i32$2;
  $38$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $34$hi;
  i64toi32_i32$2 = $38$hi;
  i64toi32_i32$1 = -1723591560;
  i64toi32_i32$0 = -1074322941;
  __addtf3($3 + 432 | 0 | 0, $34 | 0, i64toi32_i32$3 | 0, $38 | 0, i64toi32_i32$2 | 0, 1096579356 | 0, i64toi32_i32$1 | 0, 362421661 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 432 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 436 | 0) >> 2] | 0;
  $42 = i64toi32_i32$0;
  $42$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 432 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $46 = i64toi32_i32$1;
  $46$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $42$hi;
  i64toi32_i32$1 = $46$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 416 | 0 | 0, $42 | 0, i64toi32_i32$0 | 0, $46 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 416 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 420 | 0) >> 2] | 0;
  $52 = i64toi32_i32$3;
  $52$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 416 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $56 = i64toi32_i32$2;
  $56$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $52$hi;
  i64toi32_i32$2 = $56$hi;
  i64toi32_i32$1 = -702902447;
  i64toi32_i32$0 = 1073383885;
  __addtf3($3 + 400 | 0 | 0, $52 | 0, i64toi32_i32$3 | 0, $56 | 0, i64toi32_i32$2 | 0, -1461908425 | 0, i64toi32_i32$1 | 0, -23685737 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 400 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 404 | 0) >> 2] | 0;
  $60 = i64toi32_i32$0;
  $60$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 400 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $64 = i64toi32_i32$1;
  $64$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $60$hi;
  i64toi32_i32$1 = $64$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 384 | 0 | 0, $60 | 0, i64toi32_i32$0 | 0, $64 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 384 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 388 | 0) >> 2] | 0;
  $4 = i64toi32_i32$3;
  $4$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 384 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $5 = i64toi32_i32$2;
  $5$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $4$hi;
  i64toi32_i32$2 = $5$hi;
  i64toi32_i32$1 = 1493988427;
  i64toi32_i32$0 = -1073936816;
  __addtf3($3 + 368 | 0 | 0, $4 | 0, i64toi32_i32$3 | 0, $5 | 0, i64toi32_i32$2 | 0, 1769511824 | 0, i64toi32_i32$1 | 0, 1387725423 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 368 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 372 | 0) >> 2] | 0;
  $80 = i64toi32_i32$0;
  $80$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 368 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $84 = i64toi32_i32$1;
  $84$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $80$hi;
  i64toi32_i32$1 = $84$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 352 | 0 | 0, $80 | 0, i64toi32_i32$0 | 0, $84 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 352 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 356 | 0) >> 2] | 0;
  $90 = i64toi32_i32$3;
  $90$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 352 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $94 = i64toi32_i32$2;
  $94$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $90$hi;
  i64toi32_i32$2 = $94$hi;
  i64toi32_i32$1 = 510156818;
  i64toi32_i32$0 = 1073644988;
  __addtf3($3 + 336 | 0 | 0, $90 | 0, i64toi32_i32$3 | 0, $94 | 0, i64toi32_i32$2 | 0, -249045799 | 0, i64toi32_i32$1 | 0, -786414499 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 336 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 340 | 0) >> 2] | 0;
  $98 = i64toi32_i32$0;
  $98$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 336 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $102 = i64toi32_i32$1;
  $102$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $98$hi;
  i64toi32_i32$1 = $102$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 320 | 0 | 0, $98 | 0, i64toi32_i32$0 | 0, $102 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 320 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 324 | 0) >> 2] | 0;
  $108 = i64toi32_i32$3;
  $108$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 320 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $112 = i64toi32_i32$2;
  $112$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $108$hi;
  i64toi32_i32$2 = $112$hi;
  i64toi32_i32$1 = 2054598157;
  i64toi32_i32$0 = -1073786072;
  __addtf3($3 + 304 | 0 | 0, $108 | 0, i64toi32_i32$3 | 0, $112 | 0, i64toi32_i32$2 | 0, -327834660 | 0, i64toi32_i32$1 | 0, 679820802 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 304 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 308 | 0) >> 2] | 0;
  $116 = i64toi32_i32$0;
  $116$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 304 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $120 = i64toi32_i32$1;
  $120$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $116$hi;
  i64toi32_i32$1 = $120$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 288 | 0 | 0, $116 | 0, i64toi32_i32$0 | 0, $120 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 288 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 292 | 0) >> 2] | 0;
  $126 = i64toi32_i32$3;
  $126$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 288 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $130 = i64toi32_i32$2;
  $130$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $126$hi;
  i64toi32_i32$2 = $130$hi;
  i64toi32_i32$1 = -1850408393;
  i64toi32_i32$0 = 1073698711;
  __addtf3($3 + 272 | 0 | 0, $126 | 0, i64toi32_i32$3 | 0, $130 | 0, i64toi32_i32$2 | 0, 1464630558 | 0, i64toi32_i32$1 | 0, -1688508594 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 272 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 276 | 0) >> 2] | 0;
  $134 = i64toi32_i32$0;
  $134$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 272 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $138 = i64toi32_i32$1;
  $138$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $134$hi;
  i64toi32_i32$1 = $138$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 256 | 0 | 0, $134 | 0, i64toi32_i32$0 | 0, $138 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 256 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 260 | 0) >> 2] | 0;
  $144 = i64toi32_i32$3;
  $144$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 256 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $148 = i64toi32_i32$2;
  $148$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $144$hi;
  i64toi32_i32$2 = $148$hi;
  i64toi32_i32$1 = 703215124;
  i64toi32_i32$0 = -1073842381;
  __addtf3($3 + 240 | 0 | 0, $144 | 0, i64toi32_i32$3 | 0, $148 | 0, i64toi32_i32$2 | 0, -1339085247 | 0, i64toi32_i32$1 | 0, -932864964 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 240 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 244 | 0) >> 2] | 0;
  $152 = i64toi32_i32$0;
  $152$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 240 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $156 = i64toi32_i32$1;
  $156$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $152$hi;
  i64toi32_i32$1 = $156$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 224 | 0 | 0, $152 | 0, i64toi32_i32$0 | 0, $156 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 224 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 228 | 0) >> 2] | 0;
  $162 = i64toi32_i32$3;
  $162$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 224 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $166 = i64toi32_i32$2;
  $166$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $162$hi;
  i64toi32_i32$2 = $166$hi;
  i64toi32_i32$1 = 1431655765;
  i64toi32_i32$0 = 1073501525;
  __addtf3($3 + 208 | 0 | 0, $162 | 0, i64toi32_i32$3 | 0, $166 | 0, i64toi32_i32$2 | 0, 1431657163 | 0, i64toi32_i32$1 | 0, 1431655765 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 208 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 212 | 0) >> 2] | 0;
  $170 = i64toi32_i32$0;
  $170$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 208 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $174 = i64toi32_i32$1;
  $174$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $170$hi;
  i64toi32_i32$1 = $174$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 192 | 0 | 0, $170 | 0, i64toi32_i32$0 | 0, $174 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $4$hi;
  i64toi32_i32$3 = $5$hi;
  i64toi32_i32$3 = $4$hi;
  i64toi32_i32$2 = $5$hi;
  i64toi32_i32$1 = -1646486135;
  i64toi32_i32$0 = -1073700579;
  __addtf3($3 + 176 | 0 | 0, $4 | 0, i64toi32_i32$3 | 0, $5 | 0, i64toi32_i32$2 | 0, 205153220 | 0, i64toi32_i32$1 | 0, -1149376104 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 176 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 180 | 0) >> 2] | 0;
  $184 = i64toi32_i32$0;
  $184$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 176 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $188 = i64toi32_i32$1;
  $188$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $184$hi;
  i64toi32_i32$1 = $188$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 160 | 0 | 0, $184 | 0, i64toi32_i32$0 | 0, $188 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 160 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 164 | 0) >> 2] | 0;
  $194 = i64toi32_i32$3;
  $194$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 160 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $198 = i64toi32_i32$2;
  $198$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $194$hi;
  i64toi32_i32$2 = $198$hi;
  i64toi32_i32$1 = -1320075135;
  i64toi32_i32$0 = 1073868636;
  __addtf3($3 + 144 | 0 | 0, $194 | 0, i64toi32_i32$3 | 0, $198 | 0, i64toi32_i32$2 | 0, 145765489 | 0, i64toi32_i32$1 | 0, -529569581 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 144 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 148 | 0) >> 2] | 0;
  $202 = i64toi32_i32$0;
  $202$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 144 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $206 = i64toi32_i32$1;
  $206$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $202$hi;
  i64toi32_i32$1 = $206$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 128 | 0 | 0, $202 | 0, i64toi32_i32$0 | 0, $206 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 128 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 132 | 0) >> 2] | 0;
  $212 = i64toi32_i32$3;
  $212$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 128 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $216 = i64toi32_i32$2;
  $216$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $212$hi;
  i64toi32_i32$2 = $216$hi;
  i64toi32_i32$1 = -1844005102;
  i64toi32_i32$0 = -1073583573;
  __addtf3($3 + 112 | 0 | 0, $212 | 0, i64toi32_i32$3 | 0, $216 | 0, i64toi32_i32$2 | 0, 992091819 | 0, i64toi32_i32$1 | 0, 1425651750 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 112 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 116 | 0) >> 2] | 0;
  $220 = i64toi32_i32$0;
  $220$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 112 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $224 = i64toi32_i32$1;
  $224$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $220$hi;
  i64toi32_i32$1 = $224$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 96 | 0 | 0, $220 | 0, i64toi32_i32$0 | 0, $224 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 96 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 100 | 0) >> 2] | 0;
  $230 = i64toi32_i32$3;
  $230$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 96 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $234 = i64toi32_i32$2;
  $234$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $230$hi;
  i64toi32_i32$2 = $234$hi;
  i64toi32_i32$1 = 71504620;
  i64toi32_i32$0 = 1073889003;
  __addtf3($3 + 80 | 0 | 0, $230 | 0, i64toi32_i32$3 | 0, $234 | 0, i64toi32_i32$2 | 0, -421027522 | 0, i64toi32_i32$1 | 0, 162267658 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
  $238 = i64toi32_i32$0;
  $238$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 80 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $242 = i64toi32_i32$1;
  $242$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $238$hi;
  i64toi32_i32$1 = $242$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 64 | 0 | 0, $238 | 0, i64toi32_i32$0 | 0, $242 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
  $248 = i64toi32_i32$3;
  $248$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 64 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $252 = i64toi32_i32$2;
  $252$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $248$hi;
  i64toi32_i32$2 = $252$hi;
  i64toi32_i32$1 = -331582116;
  i64toi32_i32$0 = -1073662413;
  __addtf3($3 + 48 | 0 | 0, $248 | 0, i64toi32_i32$3 | 0, $252 | 0, i64toi32_i32$2 | 0, 1357769108 | 0, i64toi32_i32$1 | 0, -1558642183 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
  $256 = i64toi32_i32$0;
  $256$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 48 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $260 = i64toi32_i32$1;
  $260$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $256$hi;
  i64toi32_i32$1 = $260$hi;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  __multf3($3 + 32 | 0 | 0, $256 | 0, i64toi32_i32$0 | 0, $260 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $266 = i64toi32_i32$3;
  $266$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 32 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $270 = i64toi32_i32$2;
  $270$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $266$hi;
  i64toi32_i32$2 = $270$hi;
  i64toi32_i32$1 = 0;
  i64toi32_i32$0 = 1073676288;
  __addtf3($3 + 16 | 0 | 0, $266 | 0, i64toi32_i32$3 | 0, $270 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 192 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 196 | 0) >> 2] | 0;
  $273 = i64toi32_i32$0;
  $273$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 192 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $277 = i64toi32_i32$1;
  $277$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
  $279 = i64toi32_i32$0;
  $279$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 16 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $283 = i64toi32_i32$1;
  $283$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $273$hi;
  i64toi32_i32$1 = $277$hi;
  i64toi32_i32$2 = $279$hi;
  i64toi32_i32$3 = $283$hi;
  __divtf3($3 | 0, $273 | 0, i64toi32_i32$0 | 0, $277 | 0, i64toi32_i32$1 | 0, $279 | 0, i64toi32_i32$2 | 0, $283 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $3 + 8 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $287 = i64toi32_i32$3;
  i64toi32_i32$3 = $0;
  HEAP32[(i64toi32_i32$3 + 8 | 0) >> 2] = $287;
  HEAP32[(i64toi32_i32$3 + 12 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $3;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $290 = i64toi32_i32$2;
  i64toi32_i32$2 = $0;
  HEAP32[i64toi32_i32$2 >> 2] = $290;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  __stack_pointer = i64toi32_i32$1 + 496 | 0;
 }
 
 function __cosl($0, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4, $4$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  $4$hi = $4$hi | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, i64toi32_i32$0 = 0, $5 = 0, $6$hi = 0, $7$hi = 0, $6 = 0, $7 = 0, $8$hi = 0, $9$hi = 0, $10$hi = 0, $11$hi = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $34 = 0, $34$hi = 0, $38 = 0, $38$hi = 0, $44 = 0, $44$hi = 0, $48 = 0, $48$hi = 0, $52 = 0, $52$hi = 0, $56 = 0, $56$hi = 0, $62 = 0, $62$hi = 0, $66 = 0, $66$hi = 0, $70 = 0, $70$hi = 0, $74 = 0, $74$hi = 0, $80 = 0, $80$hi = 0, $84 = 0, $84$hi = 0, $88 = 0, $88$hi = 0, $92 = 0, $92$hi = 0, $98 = 0, $98$hi = 0, $102 = 0, $102$hi = 0, $106 = 0, $106$hi = 0, $110 = 0, $110$hi = 0, $116 = 0, $116$hi = 0, $120 = 0, $120$hi = 0, $124 = 0, $124$hi = 0, $128 = 0, $128$hi = 0, $134 = 0, $134$hi = 0, $138 = 0, $138$hi = 0, $142 = 0, $142$hi = 0, $146 = 0, $146$hi = 0, $152 = 0, $152$hi = 0, $156 = 0, $156$hi = 0, $160 = 0, $160$hi = 0, $164 = 0, $164$hi = 0, $170 = 0, $170$hi = 0, $174 = 0, $174$hi = 0, $178 = 0, $178$hi = 0, $182 = 0, $182$hi = 0, $188 = 0, $188$hi = 0, $192 = 0, $192$hi = 0, $196 = 0, $196$hi = 0, $200 = 0, $200$hi = 0, $206 = 0, $206$hi = 0, $210 = 0, $210$hi = 0, $238 = 0, $238$hi = 0, $242 = 0, $242$hi = 0, $250 = 0, $250$hi = 0, $254 = 0, $254$hi = 0, $264 = 0, $264$hi = 0, $268 = 0, $268$hi = 0, $270 = 0, $270$hi = 0, $274 = 0, $274$hi = 0, $278 = 0, $278$hi = 0, $282 = 0, $282$hi = 0, $284 = 0, $284$hi = 0, $288 = 0, $288$hi = 0, $293 = 0, $293$hi = 0, $297 = 0, $297$hi = 0, $301 = 0, $304 = 0;
  $5 = __stack_pointer - 496 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$1 = $2$hi;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$3 = i64toi32_i32$1;
  __multf3($5 + 480 | 0 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0);
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 480 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 484 | 0) >> 2] | 0;
  $6 = i64toi32_i32$3;
  $6$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 480 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $7 = i64toi32_i32$2;
  $7$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = -1879048192;
  i64toi32_i32$0 = 1068494721;
  __multf3($5 + 464 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0, 668427696 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 464 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 468 | 0) >> 2] | 0;
  $34 = i64toi32_i32$0;
  $34$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 464 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $38 = i64toi32_i32$1;
  $38$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $34$hi;
  i64toi32_i32$1 = $38$hi;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = -1078391582;
  __addtf3($5 + 448 | 0 | 0, $34 | 0, i64toi32_i32$0 | 0, $38 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 215509154 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 448 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 452 | 0) >> 2] | 0;
  $44 = i64toi32_i32$3;
  $44$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 448 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $48 = i64toi32_i32$2;
  $48$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $44$hi;
  i64toi32_i32$0 = $48$hi;
  __multf3($5 + 432 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $44 | 0, i64toi32_i32$1 | 0, $48 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 432 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 436 | 0) >> 2] | 0;
  $52 = i64toi32_i32$0;
  $52$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 432 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $56 = i64toi32_i32$1;
  $56$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $52$hi;
  i64toi32_i32$1 = $56$hi;
  i64toi32_i32$2 = 1879048192;
  i64toi32_i32$3 = 1069671746;
  __addtf3($5 + 416 | 0 | 0, $52 | 0, i64toi32_i32$0 | 0, $56 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, -1197406016 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 416 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 420 | 0) >> 2] | 0;
  $62 = i64toi32_i32$3;
  $62$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 416 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $66 = i64toi32_i32$2;
  $66$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $62$hi;
  i64toi32_i32$0 = $66$hi;
  __multf3($5 + 400 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $62 | 0, i64toi32_i32$1 | 0, $66 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 400 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 404 | 0) >> 2] | 0;
  $70 = i64toi32_i32$0;
  $70$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 400 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $74 = i64toi32_i32$1;
  $74$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $70$hi;
  i64toi32_i32$1 = $74$hi;
  i64toi32_i32$2 = -1073741824;
  i64toi32_i32$3 = -1077254105;
  __addtf3($5 + 384 | 0 | 0, $70 | 0, i64toi32_i32$0 | 0, $74 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, -2042949618 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 384 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 388 | 0) >> 2] | 0;
  $80 = i64toi32_i32$3;
  $80$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 384 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $84 = i64toi32_i32$2;
  $84$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $80$hi;
  i64toi32_i32$0 = $84$hi;
  __multf3($5 + 368 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $80 | 0, i64toi32_i32$1 | 0, $84 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 368 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 372 | 0) >> 2] | 0;
  $88 = i64toi32_i32$0;
  $88$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 368 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $92 = i64toi32_i32$1;
  $92$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $88$hi;
  i64toi32_i32$1 = $92$hi;
  i64toi32_i32$2 = -576243931;
  i64toi32_i32$3 = 1070771839;
  __addtf3($5 + 352 | 0 | 0, $88 | 0, i64toi32_i32$0 | 0, $92 | 0, i64toi32_i32$1 | 0, -1463060798 | 0, i64toi32_i32$2 | 0, 1047739208 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 352 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 356 | 0) >> 2] | 0;
  $98 = i64toi32_i32$3;
  $98$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 352 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $102 = i64toi32_i32$2;
  $102$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $98$hi;
  i64toi32_i32$0 = $102$hi;
  __multf3($5 + 336 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $98 | 0, i64toi32_i32$1 | 0, $102 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 336 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 340 | 0) >> 2] | 0;
  $106 = i64toi32_i32$0;
  $106$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 336 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $110 = i64toi32_i32$1;
  $110$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $106$hi;
  i64toi32_i32$1 = $110$hi;
  i64toi32_i32$2 = -1029468220;
  i64toi32_i32$3 = -1076194409;
  __addtf3($5 + 320 | 0 | 0, $106 | 0, i64toi32_i32$0 | 0, $110 | 0, i64toi32_i32$1 | 0, 1270648309 | 0, i64toi32_i32$2 | 0, 1250691017 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 320 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 324 | 0) >> 2] | 0;
  $116 = i64toi32_i32$3;
  $116$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 320 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $120 = i64toi32_i32$2;
  $120$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $116$hi;
  i64toi32_i32$0 = $120$hi;
  __multf3($5 + 304 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $116 | 0, i64toi32_i32$1 | 0, $120 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 304 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 308 | 0) >> 2] | 0;
  $124 = i64toi32_i32$0;
  $124$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 304 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $128 = i64toi32_i32$1;
  $128$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $124$hi;
  i64toi32_i32$1 = $128$hi;
  i64toi32_i32$2 = 2068952566;
  i64toi32_i32$3 = 1071783661;
  __addtf3($5 + 288 | 0 | 0, $124 | 0, i64toi32_i32$0 | 0, $128 | 0, i64toi32_i32$1 | 0, 782850458 | 0, i64toi32_i32$2 | 0, -1895854711 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 288 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 292 | 0) >> 2] | 0;
  $134 = i64toi32_i32$3;
  $134$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 288 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $138 = i64toi32_i32$2;
  $138$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $134$hi;
  i64toi32_i32$0 = $138$hi;
  __multf3($5 + 272 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $134 | 0, i64toi32_i32$1 | 0, $138 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 272 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 276 | 0) >> 2] | 0;
  $142 = i64toi32_i32$0;
  $142$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 272 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $146 = i64toi32_i32$1;
  $146$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $142$hi;
  i64toi32_i32$1 = $146$hi;
  i64toi32_i32$2 = -953225324;
  i64toi32_i32$3 = -1075238940;
  __addtf3($5 + 256 | 0 | 0, $142 | 0, i64toi32_i32$0 | 0, $146 | 0, i64toi32_i32$1 | 0, -2036552662 | 0, i64toi32_i32$2 | 0, -76051979 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 256 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 260 | 0) >> 2] | 0;
  $152 = i64toi32_i32$3;
  $152$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 256 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $156 = i64toi32_i32$2;
  $156$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $152$hi;
  i64toi32_i32$0 = $156$hi;
  __multf3($5 + 240 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $152 | 0, i64toi32_i32$1 | 0, $156 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 240 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 244 | 0) >> 2] | 0;
  $160 = i64toi32_i32$0;
  $160$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 240 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $164 = i64toi32_i32$1;
  $164$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $160$hi;
  i64toi32_i32$1 = $164$hi;
  i64toi32_i32$2 = -1608908385;
  i64toi32_i32$3 = 1072668698;
  __addtf3($5 + 224 | 0 | 0, $160 | 0, i64toi32_i32$0 | 0, $164 | 0, i64toi32_i32$1 | 0, -3886787 | 0, i64toi32_i32$2 | 0, 27269633 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 224 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 228 | 0) >> 2] | 0;
  $170 = i64toi32_i32$3;
  $170$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 224 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $174 = i64toi32_i32$2;
  $174$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $170$hi;
  i64toi32_i32$0 = $174$hi;
  __multf3($5 + 208 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $170 | 0, i64toi32_i32$1 | 0, $174 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 208 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 212 | 0) >> 2] | 0;
  $178 = i64toi32_i32$0;
  $178$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 208 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $182 = i64toi32_i32$1;
  $182$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $178$hi;
  i64toi32_i32$1 = $182$hi;
  i64toi32_i32$2 = 1813430636;
  i64toi32_i32$3 = -1074435050;
  __addtf3($5 + 192 | 0 | 0, $178 | 0, i64toi32_i32$0 | 0, $182 | 0, i64toi32_i32$1 | 0, 381639832 | 0, i64toi32_i32$2 | 0, -1049880895 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 192 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 196 | 0) >> 2] | 0;
  $188 = i64toi32_i32$3;
  $188$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 192 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $192 = i64toi32_i32$2;
  $192$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $188$hi;
  i64toi32_i32$0 = $192$hi;
  __multf3($5 + 176 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $188 | 0, i64toi32_i32$1 | 0, $192 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 176 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 180 | 0) >> 2] | 0;
  $196 = i64toi32_i32$0;
  $196$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 176 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $200 = i64toi32_i32$1;
  $200$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $196$hi;
  i64toi32_i32$1 = $200$hi;
  i64toi32_i32$2 = 1431655765;
  i64toi32_i32$3 = 1073370453;
  __addtf3($5 + 160 | 0 | 0, $196 | 0, i64toi32_i32$0 | 0, $200 | 0, i64toi32_i32$1 | 0, 1431655752 | 0, i64toi32_i32$2 | 0, 1431655765 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$3 = $7$hi;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 160 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 164 | 0) >> 2] | 0;
  $206 = i64toi32_i32$3;
  $206$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 160 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $210 = i64toi32_i32$2;
  $210$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $6$hi;
  i64toi32_i32$2 = $7$hi;
  i64toi32_i32$1 = $206$hi;
  i64toi32_i32$0 = $210$hi;
  __multf3($5 + 144 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$2 | 0, $206 | 0, i64toi32_i32$1 | 0, $210 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = i64toi32_i32$3;
  i64toi32_i32$0 = i64toi32_i32$2;
  i64toi32_i32$0 = i64toi32_i32$3;
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 1073610752;
  __multf3($5 + 112 | 0 | 0, $6 | 0, i64toi32_i32$0 | 0, $7 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
  $8 = i64toi32_i32$3;
  $8$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 112 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $9 = i64toi32_i32$2;
  $9$hi = i64toi32_i32$3;
  i64toi32_i32$3 = 0;
  i64toi32_i32$2 = 1073676288;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$0 = $9$hi;
  __subtf3($5 + 96 | 0 | 0, 0 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$2 | 0, $8 | 0, i64toi32_i32$1 | 0, $9 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 96 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 100 | 0) >> 2] | 0;
  $10 = i64toi32_i32$0;
  $10$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 96 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $11 = i64toi32_i32$1;
  $11$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  i64toi32_i32$1 = 1073676288;
  i64toi32_i32$2 = $10$hi;
  i64toi32_i32$3 = $11$hi;
  __subtf3($5 + 80 | 0 | 0, 0 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$1 | 0, $10 | 0, i64toi32_i32$2 | 0, $11 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 80 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] | 0;
  $238 = i64toi32_i32$3;
  $238$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 80 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $242 = i64toi32_i32$2;
  $242$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $8$hi;
  i64toi32_i32$3 = $9$hi;
  i64toi32_i32$3 = $238$hi;
  i64toi32_i32$2 = $242$hi;
  i64toi32_i32$1 = $8$hi;
  i64toi32_i32$0 = $9$hi;
  __subtf3($5 + 64 | 0 | 0, $238 | 0, i64toi32_i32$3 | 0, $242 | 0, i64toi32_i32$2 | 0, $8 | 0, i64toi32_i32$1 | 0, $9 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$0 = $7$hi;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 144 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 148 | 0) >> 2] | 0;
  $250 = i64toi32_i32$0;
  $250$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 144 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $254 = i64toi32_i32$1;
  $254$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $6$hi;
  i64toi32_i32$1 = $7$hi;
  i64toi32_i32$2 = $250$hi;
  i64toi32_i32$3 = $254$hi;
  __multf3($5 + 128 | 0 | 0, $6 | 0, i64toi32_i32$0 | 0, $7 | 0, i64toi32_i32$1 | 0, $250 | 0, i64toi32_i32$2 | 0, $254 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$3 = $1$hi;
  i64toi32_i32$3 = $2$hi;
  i64toi32_i32$3 = $3$hi;
  i64toi32_i32$3 = $4$hi;
  i64toi32_i32$3 = $1$hi;
  i64toi32_i32$2 = $2$hi;
  i64toi32_i32$1 = $3$hi;
  i64toi32_i32$0 = $4$hi;
  __multf3($5 + 48 | 0 | 0, $1 | 0, i64toi32_i32$3 | 0, $2 | 0, i64toi32_i32$2 | 0, $3 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 128 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 132 | 0) >> 2] | 0;
  $264 = i64toi32_i32$0;
  $264$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 128 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $268 = i64toi32_i32$1;
  $268$hi = i64toi32_i32$0;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
  $270 = i64toi32_i32$0;
  $270$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 48 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $274 = i64toi32_i32$1;
  $274$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $264$hi;
  i64toi32_i32$1 = $268$hi;
  i64toi32_i32$2 = $270$hi;
  i64toi32_i32$3 = $274$hi;
  __subtf3($5 + 32 | 0 | 0, $264 | 0, i64toi32_i32$0 | 0, $268 | 0, i64toi32_i32$1 | 0, $270 | 0, i64toi32_i32$2 | 0, $274 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
  $278 = i64toi32_i32$3;
  $278$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 64 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $282 = i64toi32_i32$2;
  $282$hi = i64toi32_i32$3;
  i64toi32_i32$1 = $5;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
  $284 = i64toi32_i32$3;
  $284$hi = i64toi32_i32$2;
  i64toi32_i32$1 = (i64toi32_i32$1 + 32 | 0) + 8 | 0;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $288 = i64toi32_i32$2;
  $288$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $278$hi;
  i64toi32_i32$2 = $282$hi;
  i64toi32_i32$1 = $284$hi;
  i64toi32_i32$0 = $288$hi;
  __addtf3($5 + 16 | 0 | 0, $278 | 0, i64toi32_i32$3 | 0, $282 | 0, i64toi32_i32$2 | 0, $284 | 0, i64toi32_i32$1 | 0, $288 | 0, i64toi32_i32$0 | 0);
  i64toi32_i32$0 = $10$hi;
  i64toi32_i32$0 = $11$hi;
  i64toi32_i32$2 = $5;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 16 | 0) >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 20 | 0) >> 2] | 0;
  $293 = i64toi32_i32$0;
  $293$hi = i64toi32_i32$1;
  i64toi32_i32$2 = (i64toi32_i32$2 + 16 | 0) + 8 | 0;
  i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $297 = i64toi32_i32$1;
  $297$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $10$hi;
  i64toi32_i32$1 = $11$hi;
  i64toi32_i32$2 = $293$hi;
  i64toi32_i32$3 = $297$hi;
  __addtf3($5 | 0, $10 | 0, i64toi32_i32$0 | 0, $11 | 0, i64toi32_i32$1 | 0, $293 | 0, i64toi32_i32$2 | 0, $297 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$1 = $5 + 8 | 0;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $301 = i64toi32_i32$3;
  i64toi32_i32$3 = $0;
  HEAP32[(i64toi32_i32$3 + 8 | 0) >> 2] = $301;
  HEAP32[(i64toi32_i32$3 + 12 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$1 = $5;
  i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
  $304 = i64toi32_i32$2;
  i64toi32_i32$2 = $0;
  HEAP32[i64toi32_i32$2 >> 2] = $304;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$3;
  __stack_pointer = i64toi32_i32$1 + 496 | 0;
 }
 
 function __sin($0, $1, $2) {
  $0 = +$0;
  $1 = +$1;
  $2 = $2 | 0;
  var $3 = 0.0, $5 = 0.0, $4 = 0.0;
  $3 = $0 * $0;
  $4 = $3 * ($3 * $3) * ($3 * 1.58969099521155e-10 + -2.5050760253406863e-08) + ($3 * ($3 * 2.7557313707070068e-06 + -1.984126982985795e-04) + .00833333333332249);
  $5 = $3 * $0;
  label$1 : {
   if ($2) {
    break label$1
   }
   return +($5 * ($3 * $4 + -.16666666666666632) + $0);
  }
  return +($0 - ($3 * ($1 * .5 - $5 * $4) - $1 + $5 * .16666666666666632));
 }
 
 function floor($0) {
  $0 = +$0;
  return +Math_floor($0);
 }
 
 function __rem_pio2_large($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $12 = 0.0, $11 = 0, $6 = 0, $5 = 0, $19 = 0.0, $14 = 0, $15 = 0, $9 = 0, $8 = 0, $22 = 0, $10 = 0, $20 = 0, $13 = 0, $23 = 0.0, $7 = 0, $17 = 0, $21 = 0, $16 = 0, $18 = 0, $206 = 0, $209 = 0, $538 = 0.0, $576 = 0.0;
  $5 = __stack_pointer - 560 | 0;
  __stack_pointer = $5;
  $6 = ($2 + -3 | 0 | 0) / (24 | 0) | 0;
  $7 = ($6 | 0) > (0 | 0) ? $6 : 0;
  $8 = Math_imul($7, -24) + $2 | 0;
  label$1 : {
   $9 = HEAP32[(($4 << 2 | 0) + 7024 | 0) >> 2] | 0;
   $10 = $3 + -1 | 0;
   if (($9 + $10 | 0 | 0) < (0 | 0)) {
    break label$1
   }
   $11 = $9 + $3 | 0;
   $2 = $7 - $10 | 0;
   $6 = 0;
   label$2 : while (1) {
    label$3 : {
     label$4 : {
      if (($2 | 0) >= (0 | 0)) {
       break label$4
      }
      $12 = 0.0;
      break label$3;
     }
     $12 = +(HEAP32[(($2 << 2 | 0) + 7040 | 0) >> 2] | 0 | 0);
    }
    HEAPF64[(($5 + 320 | 0) + ($6 << 3 | 0) | 0) >> 3] = $12;
    $2 = $2 + 1 | 0;
    $6 = $6 + 1 | 0;
    if (($6 | 0) != ($11 | 0)) {
     continue label$2
    }
    break label$2;
   };
  }
  $13 = $8 + -24 | 0;
  $11 = 0;
  $14 = ($9 | 0) > (0 | 0) ? $9 : 0;
  $15 = ($3 | 0) < (1 | 0);
  label$5 : while (1) {
   label$6 : {
    label$7 : {
     if (!$15) {
      break label$7
     }
     $12 = 0.0;
     break label$6;
    }
    $6 = $11 + $10 | 0;
    $2 = 0;
    $12 = 0.0;
    label$8 : while (1) {
     $12 = $12 + +HEAPF64[($0 + ($2 << 3 | 0) | 0) >> 3] * +HEAPF64[(($5 + 320 | 0) + (($6 - $2 | 0) << 3 | 0) | 0) >> 3];
     $2 = $2 + 1 | 0;
     if (($2 | 0) != ($3 | 0)) {
      continue label$8
     }
     break label$8;
    };
   }
   HEAPF64[($5 + ($11 << 3 | 0) | 0) >> 3] = $12;
   $2 = ($11 | 0) == ($14 | 0);
   $11 = $11 + 1 | 0;
   if (!$2) {
    continue label$5
   }
   break label$5;
  };
  $16 = 47 - $8 | 0;
  $17 = 48 - $8 | 0;
  $18 = $8 + -25 | 0;
  $11 = $9;
  label$9 : {
   label$10 : while (1) {
    $12 = +HEAPF64[($5 + ($11 << 3 | 0) | 0) >> 3];
    $2 = 0;
    $6 = $11;
    label$11 : {
     $10 = ($11 | 0) < (1 | 0);
     if ($10) {
      break label$11
     }
     label$12 : while (1) {
      $14 = $2 << 2 | 0;
      label$13 : {
       label$14 : {
        $19 = $12 * 5.9604644775390625e-08;
        if (!(Math_abs($19) < 2147483648.0)) {
         break label$14
        }
        $15 = ~~$19;
        break label$13;
       }
       $15 = -2147483648;
      }
      $14 = ($5 + 480 | 0) + $14 | 0;
      label$15 : {
       label$16 : {
        $19 = +($15 | 0);
        $12 = $12 + $19 * -16777216.0;
        if (!(Math_abs($12) < 2147483648.0)) {
         break label$16
        }
        $15 = ~~$12;
        break label$15;
       }
       $15 = -2147483648;
      }
      HEAP32[$14 >> 2] = $15;
      $6 = $6 + -1 | 0;
      $12 = +HEAPF64[($5 + ($6 << 3 | 0) | 0) >> 3] + $19;
      $2 = $2 + 1 | 0;
      if (($2 | 0) != ($11 | 0)) {
       continue label$12
      }
      break label$12;
     };
    }
    $12 = +scalbn(+$12, $13 | 0);
    label$17 : {
     label$18 : {
      $12 = $12 + +floor(+($12 * .125)) * -8.0;
      if (!(Math_abs($12) < 2147483648.0)) {
       break label$18
      }
      $20 = ~~$12;
      break label$17;
     }
     $20 = -2147483648;
    }
    $12 = $12 - +($20 | 0);
    label$19 : {
     label$20 : {
      label$21 : {
       label$22 : {
        label$23 : {
         $21 = ($13 | 0) < (1 | 0);
         if ($21) {
          break label$23
         }
         $2 = (($11 << 2 | 0) + ($5 + 480 | 0) | 0) + -4 | 0;
         $206 = $2;
         $2 = HEAP32[$2 >> 2] | 0;
         $209 = $2;
         $2 = $2 >> $17 | 0;
         $6 = $209 - ($2 << $17 | 0) | 0;
         HEAP32[$206 >> 2] = $6;
         $22 = $6 >> $16 | 0;
         $20 = $2 + $20 | 0;
         break label$22;
        }
        if ($13) {
         break label$21
        }
        $22 = (HEAP32[((($11 << 2 | 0) + ($5 + 480 | 0) | 0) + -4 | 0) >> 2] | 0) >> 23 | 0;
       }
       if (($22 | 0) < (1 | 0)) {
        break label$19
       }
       break label$20;
      }
      $22 = 2;
      if (!($12 >= .5 ^ 1 | 0)) {
       break label$20
      }
      $22 = 0;
      break label$19;
     }
     $2 = 0;
     $15 = 0;
     label$24 : {
      if ($10) {
       break label$24
      }
      label$25 : while (1) {
       $10 = ($5 + 480 | 0) + ($2 << 2 | 0) | 0;
       $6 = HEAP32[$10 >> 2] | 0;
       $14 = 16777215;
       label$26 : {
        label$27 : {
         if ($15) {
          break label$27
         }
         $14 = 16777216;
         if ($6) {
          break label$27
         }
         $15 = 0;
         break label$26;
        }
        HEAP32[$10 >> 2] = $14 - $6 | 0;
        $15 = 1;
       }
       $2 = $2 + 1 | 0;
       if (($2 | 0) != ($11 | 0)) {
        continue label$25
       }
       break label$25;
      };
     }
     label$28 : {
      if ($21) {
       break label$28
      }
      label$29 : {
       switch ($18 | 0) {
       case 0:
        $2 = (($11 << 2 | 0) + ($5 + 480 | 0) | 0) + -4 | 0;
        HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) & 8388607 | 0;
        break label$28;
       case 1:
        break label$29;
       default:
        break label$28;
       };
      }
      $2 = (($11 << 2 | 0) + ($5 + 480 | 0) | 0) + -4 | 0;
      HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) & 4194303 | 0;
     }
     $20 = $20 + 1 | 0;
     if (($22 | 0) != (2 | 0)) {
      break label$19
     }
     $12 = 1.0 - $12;
     $22 = 2;
     if (!$15) {
      break label$19
     }
     $12 = $12 - +scalbn(+(1.0), $13 | 0);
    }
    label$31 : {
     if ($12 != 0.0) {
      break label$31
     }
     $6 = 0;
     $2 = $11;
     label$32 : {
      if (($2 | 0) <= ($9 | 0)) {
       break label$32
      }
      label$33 : while (1) {
       $2 = $2 + -1 | 0;
       $6 = HEAP32[(($5 + 480 | 0) + ($2 << 2 | 0) | 0) >> 2] | 0 | $6 | 0;
       if (($2 | 0) > ($9 | 0)) {
        continue label$33
       }
       break label$33;
      };
      if (!$6) {
       break label$32
      }
      $8 = $13;
      label$34 : while (1) {
       $8 = $8 + -24 | 0;
       $11 = $11 + -1 | 0;
       if (!(HEAP32[(($5 + 480 | 0) + ($11 << 2 | 0) | 0) >> 2] | 0)) {
        continue label$34
       }
       break label$9;
      };
     }
     $2 = 1;
     label$35 : while (1) {
      $6 = $2;
      $2 = $2 + 1 | 0;
      if (!(HEAP32[(($5 + 480 | 0) + (($9 - $6 | 0) << 2 | 0) | 0) >> 2] | 0)) {
       continue label$35
      }
      break label$35;
     };
     $14 = $6 + $11 | 0;
     label$36 : while (1) {
      $6 = $11 + $3 | 0;
      $11 = $11 + 1 | 0;
      HEAPF64[(($5 + 320 | 0) + ($6 << 3 | 0) | 0) >> 3] = +(HEAP32[((($11 + $7 | 0) << 2 | 0) + 7040 | 0) >> 2] | 0 | 0);
      $2 = 0;
      $12 = 0.0;
      label$37 : {
       if (($3 | 0) < (1 | 0)) {
        break label$37
       }
       label$38 : while (1) {
        $12 = $12 + +HEAPF64[($0 + ($2 << 3 | 0) | 0) >> 3] * +HEAPF64[(($5 + 320 | 0) + (($6 - $2 | 0) << 3 | 0) | 0) >> 3];
        $2 = $2 + 1 | 0;
        if (($2 | 0) != ($3 | 0)) {
         continue label$38
        }
        break label$38;
       };
      }
      HEAPF64[($5 + ($11 << 3 | 0) | 0) >> 3] = $12;
      if (($11 | 0) < ($14 | 0)) {
       continue label$36
      }
      break label$36;
     };
     $11 = $14;
     continue label$10;
    }
    break label$10;
   };
   label$39 : {
    label$40 : {
     $12 = +scalbn(+$12, 24 - $8 | 0 | 0);
     if ($12 >= 16777216.0 ^ 1 | 0) {
      break label$40
     }
     $3 = $11 << 2 | 0;
     label$41 : {
      label$42 : {
       $19 = $12 * 5.9604644775390625e-08;
       if (!(Math_abs($19) < 2147483648.0)) {
        break label$42
       }
       $2 = ~~$19;
       break label$41;
      }
      $2 = -2147483648;
     }
     $3 = ($5 + 480 | 0) + $3 | 0;
     label$43 : {
      label$44 : {
       $12 = $12 + +($2 | 0) * -16777216.0;
       if (!(Math_abs($12) < 2147483648.0)) {
        break label$44
       }
       $6 = ~~$12;
       break label$43;
      }
      $6 = -2147483648;
     }
     HEAP32[$3 >> 2] = $6;
     $11 = $11 + 1 | 0;
     break label$39;
    }
    label$45 : {
     label$46 : {
      if (!(Math_abs($12) < 2147483648.0)) {
       break label$46
      }
      $2 = ~~$12;
      break label$45;
     }
     $2 = -2147483648;
    }
    $8 = $13;
   }
   HEAP32[(($5 + 480 | 0) + ($11 << 2 | 0) | 0) >> 2] = $2;
  }
  $12 = +scalbn(+(1.0), $8 | 0);
  label$47 : {
   if (($11 | 0) <= (-1 | 0)) {
    break label$47
   }
   $2 = $11;
   label$48 : while (1) {
    HEAPF64[($5 + ($2 << 3 | 0) | 0) >> 3] = $12 * +(HEAP32[(($5 + 480 | 0) + ($2 << 2 | 0) | 0) >> 2] | 0 | 0);
    $12 = $12 * 5.9604644775390625e-08;
    $3 = ($2 | 0) > (0 | 0);
    $2 = $2 + -1 | 0;
    if ($3) {
     continue label$48
    }
    break label$48;
   };
   $14 = 0;
   if (($11 | 0) < (0 | 0)) {
    break label$47
   }
   $9 = ($9 | 0) > (0 | 0) ? $9 : 0;
   $6 = $11;
   label$49 : while (1) {
    $0 = $9 >>> 0 < $14 >>> 0 ? $9 : $14;
    $15 = $11 - $6 | 0;
    $2 = 0;
    $12 = 0.0;
    label$50 : while (1) {
     $12 = $12 + +HEAPF64[(($2 << 3 | 0) + 9808 | 0) >> 3] * +HEAPF64[($5 + (($2 + $6 | 0) << 3 | 0) | 0) >> 3];
     $3 = ($2 | 0) != ($0 | 0);
     $2 = $2 + 1 | 0;
     if ($3) {
      continue label$50
     }
     break label$50;
    };
    HEAPF64[(($5 + 160 | 0) + ($15 << 3 | 0) | 0) >> 3] = $12;
    $6 = $6 + -1 | 0;
    $2 = ($14 | 0) != ($11 | 0);
    $14 = $14 + 1 | 0;
    if ($2) {
     continue label$49
    }
    break label$49;
   };
  }
  label$51 : {
   label$52 : {
    label$53 : {
     switch ($4 | 0) {
     case 3:
      $23 = 0.0;
      label$56 : {
       if (($11 | 0) < (1 | 0)) {
        break label$56
       }
       $12 = +HEAPF64[(($5 + 160 | 0) + ($11 << 3 | 0) | 0) >> 3];
       $2 = $11;
       label$57 : while (1) {
        $3 = $2 + -1 | 0;
        $6 = ($5 + 160 | 0) + ($3 << 3 | 0) | 0;
        $19 = +HEAPF64[$6 >> 3];
        $538 = $19;
        $19 = $19 + $12;
        HEAPF64[(($5 + 160 | 0) + ($2 << 3 | 0) | 0) >> 3] = $12 + ($538 - $19);
        HEAPF64[$6 >> 3] = $19;
        $6 = ($2 | 0) > (1 | 0);
        $12 = $19;
        $2 = $3;
        if ($6) {
         continue label$57
        }
        break label$57;
       };
       if (($11 | 0) < (2 | 0)) {
        break label$56
       }
       $12 = +HEAPF64[(($5 + 160 | 0) + ($11 << 3 | 0) | 0) >> 3];
       $2 = $11;
       label$58 : while (1) {
        $3 = $2 + -1 | 0;
        $6 = ($5 + 160 | 0) + ($3 << 3 | 0) | 0;
        $19 = +HEAPF64[$6 >> 3];
        $576 = $19;
        $19 = $19 + $12;
        HEAPF64[(($5 + 160 | 0) + ($2 << 3 | 0) | 0) >> 3] = $12 + ($576 - $19);
        HEAPF64[$6 >> 3] = $19;
        $6 = ($2 | 0) > (2 | 0);
        $12 = $19;
        $2 = $3;
        if ($6) {
         continue label$58
        }
        break label$58;
       };
       $23 = 0.0;
       if (($11 | 0) <= (1 | 0)) {
        break label$56
       }
       label$59 : while (1) {
        $23 = $23 + +HEAPF64[(($5 + 160 | 0) + ($11 << 3 | 0) | 0) >> 3];
        $2 = ($11 | 0) > (2 | 0);
        $11 = $11 + -1 | 0;
        if ($2) {
         continue label$59
        }
        break label$59;
       };
      }
      $12 = +HEAPF64[($5 + 160 | 0) >> 3];
      if ($22) {
       break label$52
      }
      HEAPF64[$1 >> 3] = $12;
      $12 = +HEAPF64[($5 + 168 | 0) >> 3];
      HEAPF64[($1 + 16 | 0) >> 3] = $23;
      HEAPF64[($1 + 8 | 0) >> 3] = $12;
      break label$51;
     case 0:
      $12 = 0.0;
      label$60 : {
       if (($11 | 0) < (0 | 0)) {
        break label$60
       }
       label$61 : while (1) {
        $12 = $12 + +HEAPF64[(($5 + 160 | 0) + ($11 << 3 | 0) | 0) >> 3];
        $2 = ($11 | 0) > (0 | 0);
        $11 = $11 + -1 | 0;
        if ($2) {
         continue label$61
        }
        break label$61;
       };
      }
      HEAPF64[$1 >> 3] = $22 ? -$12 : $12;
      break label$51;
     case 1:
     case 2:
      break label$53;
     default:
      break label$51;
     };
    }
    $12 = 0.0;
    label$62 : {
     if (($11 | 0) < (0 | 0)) {
      break label$62
     }
     $2 = $11;
     label$63 : while (1) {
      $12 = $12 + +HEAPF64[(($5 + 160 | 0) + ($2 << 3 | 0) | 0) >> 3];
      $3 = ($2 | 0) > (0 | 0);
      $2 = $2 + -1 | 0;
      if ($3) {
       continue label$63
      }
      break label$63;
     };
    }
    HEAPF64[$1 >> 3] = $22 ? -$12 : $12;
    $12 = +HEAPF64[($5 + 160 | 0) >> 3] - $12;
    $2 = 1;
    label$64 : {
     if (($11 | 0) < (1 | 0)) {
      break label$64
     }
     label$65 : while (1) {
      $12 = $12 + +HEAPF64[(($5 + 160 | 0) + ($2 << 3 | 0) | 0) >> 3];
      $3 = ($2 | 0) != ($11 | 0);
      $2 = $2 + 1 | 0;
      if ($3) {
       continue label$65
      }
      break label$65;
     };
    }
    HEAPF64[($1 + 8 | 0) >> 3] = $22 ? -$12 : $12;
    break label$51;
   }
   HEAPF64[$1 >> 3] = -$12;
   $12 = +HEAPF64[($5 + 168 | 0) >> 3];
   HEAPF64[($1 + 16 | 0) >> 3] = -$23;
   HEAPF64[($1 + 8 | 0) >> 3] = -$12;
  }
  __stack_pointer = $5 + 560 | 0;
  return $20 & 7 | 0 | 0;
 }
 
 function __cos($0, $1) {
  $0 = +$0;
  $1 = +$1;
  var $2 = 0.0, $3 = 0.0, $4 = 0.0, $16 = 0.0;
  $2 = $0 * $0;
  $3 = $2 * .5;
  $4 = 1.0 - $3;
  $16 = 1.0 - $4 - $3;
  $3 = $2 * $2;
  return +($4 + ($16 + ($2 * ($2 * ($2 * ($2 * 2.480158728947673e-05 + -.001388888888887411) + .0416666666666666) + $3 * $3 * ($2 * ($2 * -1.1359647557788195e-11 + 2.087572321298175e-09) + -2.7557314351390663e-07)) - $0 * $1)));
 }
 
 function cosl($0, $1, $1$hi, $2, $2$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, $3 = 0, $4$hi = 0, $4 = 0, $6$hi = 0, i64toi32_i32$4 = 0, $5 = 0, $6 = 0, $16 = 0;
  $3 = __stack_pointer - 144 | 0;
  __stack_pointer = $3;
  label$1 : {
   label$2 : {
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$2 = $2;
    i64toi32_i32$1 = 2147483647;
    i64toi32_i32$3 = -1;
    i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
    $4 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    $4$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $4;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 48;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = 0;
     $16 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     $16 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
    }
    $5 = $16;
    if (($5 | 0) != (32767 | 0)) {
     break label$2
    }
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$1 = i64toi32_i32$2;
    i64toi32_i32$3 = i64toi32_i32$0;
    __subtf3($3 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$0 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$0 | 0);
    i64toi32_i32$0 = $3 + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $1 = i64toi32_i32$3;
    $1$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $3;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $2 = i64toi32_i32$1;
    $2$hi = i64toi32_i32$3;
    break label$1;
   }
   label$3 : {
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$3 = $4$hi;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$0 = -2147483648;
    i64toi32_i32$2 = 1073648159;
    if ((__letf2($1 | 0, i64toi32_i32$3 | 0, $4 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$0 | 0, -1253817647 | 0, i64toi32_i32$2 | 0) | 0 | 0) > (-1 | 0)) {
     break label$3
    }
    label$4 : {
     if ($5 >>> 0 > 16269 >>> 0) {
      break label$4
     }
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $4$hi;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$0 = $4$hi;
     i64toi32_i32$1 = 0;
     i64toi32_i32$3 = 1073676288;
     __addtf3($3 + 16 | 0 | 0, $1 | 0, i64toi32_i32$2 | 0, $4 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$3 | 0);
     i64toi32_i32$0 = $3 + 24 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $1 = i64toi32_i32$3;
     $1$hi = i64toi32_i32$1;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] | 0;
     $2 = i64toi32_i32$1;
     $2$hi = i64toi32_i32$3;
     break label$1;
    }
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$3 = $4$hi;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = 0;
    __cosl($3 + 32 | 0 | 0, $1 | 0, i64toi32_i32$3 | 0, $4 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0);
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 40 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 44 | 0) >> 2] | 0;
    $1 = i64toi32_i32$2;
    $1$hi = i64toi32_i32$0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] | 0;
    $2 = i64toi32_i32$0;
    $2$hi = i64toi32_i32$2;
    break label$1;
   }
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$0 = $4$hi;
   $5 = __rem_pio2l($1 | 0, i64toi32_i32$2 | 0, $4 | 0, i64toi32_i32$0 | 0, $3 + 112 | 0 | 0) | 0;
   i64toi32_i32$1 = $3 + 136 | 0;
   i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $1 = i64toi32_i32$0;
   $1$hi = i64toi32_i32$2;
   i64toi32_i32$1 = $3;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 128 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 132 | 0) >> 2] | 0;
   $2 = i64toi32_i32$2;
   $2$hi = i64toi32_i32$0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 120 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 124 | 0) >> 2] | 0;
   $4 = i64toi32_i32$0;
   $4$hi = i64toi32_i32$2;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 112 | 0) >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 116 | 0) >> 2] | 0;
   $6 = i64toi32_i32$2;
   $6$hi = i64toi32_i32$0;
   label$5 : {
    switch ($5 & 3 | 0 | 0) {
    default:
     i64toi32_i32$0 = $6$hi;
     i64toi32_i32$0 = $4$hi;
     i64toi32_i32$0 = $2$hi;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$0 = $6$hi;
     i64toi32_i32$2 = $4$hi;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$3 = $1$hi;
     __cosl($3 + 48 | 0 | 0, $6 | 0, i64toi32_i32$0 | 0, $4 | 0, i64toi32_i32$2 | 0, $2 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$3 | 0);
     i64toi32_i32$2 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 56 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 60 | 0) >> 2] | 0;
     $1 = i64toi32_i32$3;
     $1$hi = i64toi32_i32$1;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 48 | 0) >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 52 | 0) >> 2] | 0;
     $2 = i64toi32_i32$1;
     $2$hi = i64toi32_i32$3;
     break label$1;
    case 1:
     i64toi32_i32$3 = $6$hi;
     i64toi32_i32$3 = $4$hi;
     i64toi32_i32$3 = $2$hi;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$3 = $6$hi;
     i64toi32_i32$1 = $4$hi;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$0 = $1$hi;
     __sinl($3 + 64 | 0 | 0, $6 | 0, i64toi32_i32$3 | 0, $4 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$0 | 0, 1 | 0);
     i64toi32_i32$1 = $3;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 72 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 76 | 0) >> 2] | 0;
     i64toi32_i32$1 = i64toi32_i32$0;
     i64toi32_i32$0 = -2147483648;
     i64toi32_i32$3 = 0;
     i64toi32_i32$0 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
     $1 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
     $1$hi = i64toi32_i32$0;
     i64toi32_i32$2 = $3;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;
     $2 = i64toi32_i32$0;
     $2$hi = i64toi32_i32$1;
     break label$1;
    case 2:
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = $4$hi;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$0 = $4$hi;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$3 = $1$hi;
     __cosl($3 + 80 | 0 | 0, $6 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$3 | 0);
     i64toi32_i32$0 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 88 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 92 | 0) >> 2] | 0;
     i64toi32_i32$0 = i64toi32_i32$3;
     i64toi32_i32$3 = -2147483648;
     i64toi32_i32$1 = 0;
     i64toi32_i32$3 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
     $1 = i64toi32_i32$0 ^ i64toi32_i32$1 | 0;
     $1$hi = i64toi32_i32$3;
     i64toi32_i32$2 = $3;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 80 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 84 | 0) >> 2] | 0;
     $2 = i64toi32_i32$3;
     $2$hi = i64toi32_i32$0;
     break label$1;
    case 3:
     break label$5;
    };
   }
   i64toi32_i32$0 = $6$hi;
   i64toi32_i32$0 = $4$hi;
   i64toi32_i32$0 = $2$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$0 = $6$hi;
   i64toi32_i32$3 = $4$hi;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$1 = $1$hi;
   __sinl($3 + 96 | 0 | 0, $6 | 0, i64toi32_i32$0 | 0, $4 | 0, i64toi32_i32$3 | 0, $2 | 0, i64toi32_i32$2 | 0, $1 | 0, i64toi32_i32$1 | 0, 1 | 0);
   i64toi32_i32$3 = $3;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 104 | 0) >> 2] | 0;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 108 | 0) >> 2] | 0;
   $1 = i64toi32_i32$1;
   $1$hi = i64toi32_i32$2;
   i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 96 | 0) >> 2] | 0;
   i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 100 | 0) >> 2] | 0;
   $2 = i64toi32_i32$2;
   $2$hi = i64toi32_i32$1;
  }
  i64toi32_i32$1 = $2$hi;
  i64toi32_i32$2 = $0;
  HEAP32[i64toi32_i32$2 >> 2] = $2;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$1 = $1$hi;
  HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] = $1;
  HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] = i64toi32_i32$1;
  __stack_pointer = $3 + 144 | 0;
 }
 
 function __strdup($0) {
  $0 = $0 | 0;
  var $1 = 0, $2 = 0;
  label$1 : {
   $1 = (strlen($0 | 0) | 0) + 1 | 0;
   $2 = dlmalloc($1 | 0) | 0;
   if ($2) {
    break label$1
   }
   return 0 | 0;
  }
  return memcpy($2 | 0, $0 | 0, $1 | 0) | 0 | 0;
 }
 
 function __floatsitf($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$5 = 0, i64toi32_i32$3 = 0, $5 = 0, i64toi32_i32$4 = 0, $2 = 0, $3 = 0, $3$hi = 0, $4 = 0, $4$hi = 0, $21 = 0, $22 = 0, $19 = 0, $27 = 0, $27$hi = 0, $31$hi = 0, $32 = 0, $32$hi = 0, $36$hi = 0;
  $2 = __stack_pointer - 16 | 0;
  __stack_pointer = $2;
  label$1 : {
   label$2 : {
    if ($1) {
     break label$2
    }
    i64toi32_i32$0 = 0;
    $3 = 0;
    $3$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    $4 = 0;
    $4$hi = i64toi32_i32$0;
    break label$1;
   }
   $5 = $1 >> 31 | 0;
   $5 = ($1 + $5 | 0) ^ $5 | 0;
   i64toi32_i32$0 = 0;
   $19 = $5;
   $5 = Math_clz32($5);
   i64toi32_i32$1 = 0;
   __ashlti3($2 | 0, $19 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$1 | 0, $5 + 81 | 0 | 0);
   i64toi32_i32$2 = $2 + 8 | 0;
   i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   i64toi32_i32$2 = i64toi32_i32$1;
   i64toi32_i32$1 = 65536;
   i64toi32_i32$3 = 0;
   i64toi32_i32$1 = i64toi32_i32$0 ^ i64toi32_i32$1 | 0;
   $27 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
   $27$hi = i64toi32_i32$1;
   i64toi32_i32$1 = 0;
   i64toi32_i32$0 = 16414 - $5 | 0;
   i64toi32_i32$2 = 0;
   i64toi32_i32$3 = 48;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
    $21 = 0;
   } else {
    i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
    $21 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
   }
   $31$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $27$hi;
   i64toi32_i32$1 = $27;
   i64toi32_i32$0 = $31$hi;
   i64toi32_i32$3 = $21;
   i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
   i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
   if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
    i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
   }
   $32 = i64toi32_i32$4;
   $32$hi = i64toi32_i32$5;
   i64toi32_i32$5 = 0;
   i64toi32_i32$2 = $1 & -2147483648 | 0;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 32;
   i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$0 | 0;
    $22 = 0;
   } else {
    i64toi32_i32$1 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$0 | 0) | 0;
    $22 = i64toi32_i32$2 << i64toi32_i32$0 | 0;
   }
   $36$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $32$hi;
   i64toi32_i32$5 = $32;
   i64toi32_i32$2 = $36$hi;
   i64toi32_i32$3 = $22;
   i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
   $4 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
   $4$hi = i64toi32_i32$2;
   i64toi32_i32$1 = $2;
   i64toi32_i32$2 = HEAP32[i64toi32_i32$1 >> 2] | 0;
   i64toi32_i32$5 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
   $3 = i64toi32_i32$2;
   $3$hi = i64toi32_i32$5;
  }
  i64toi32_i32$5 = $3$hi;
  i64toi32_i32$2 = $0;
  HEAP32[i64toi32_i32$2 >> 2] = $3;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$5;
  i64toi32_i32$5 = $4$hi;
  HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] = $4;
  HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] = i64toi32_i32$5;
  __stack_pointer = $2 + 16 | 0;
 }
 
 function __multi3($0, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4, $4$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  $4$hi = $4$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$5 = 0, i64toi32_i32$4 = 0, i64toi32_i32$3 = 0, $46 = 0, $48 = 0, $49 = 0, $50 = 0, $53 = 0, $54 = 0, $6 = 0, $9 = 0, $9$hi = 0, $12 = 0, $12$hi = 0, $13 = 0, $13$hi = 0, $16 = 0, $16$hi = 0, $20 = 0, $20$hi = 0, $21 = 0, $21$hi = 0, $5 = 0, $5$hi = 0, $30$hi = 0, $33 = 0, $33$hi = 0, $36$hi = 0, $37 = 0, $37$hi = 0, $39 = 0, $39$hi = 0, $42 = 0, $42$hi = 0, $45$hi = 0, $47 = 0, $49$hi = 0, $51 = 0, $51$hi = 0, $52 = 0;
  $6 = $0;
  i64toi32_i32$0 = $4$hi;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $4$hi;
  i64toi32_i32$1 = $1$hi;
  i64toi32_i32$1 = __wasm_i64_mul($4 | 0, i64toi32_i32$0 | 0, $1 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  $9 = i64toi32_i32$1;
  $9$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$1 = $3$hi;
  i64toi32_i32$1 = __wasm_i64_mul($2 | 0, i64toi32_i32$0 | 0, $3 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  $12 = i64toi32_i32$1;
  $12$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $9$hi;
  i64toi32_i32$2 = $9;
  i64toi32_i32$1 = $12$hi;
  i64toi32_i32$3 = $12;
  i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
  i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
  if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
   i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
  }
  $13 = i64toi32_i32$4;
  $13$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $3$hi;
  i64toi32_i32$0 = $3;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$1 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = 0;
   $46 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
  } else {
   i64toi32_i32$2 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
   $46 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$1 | 0) | 0;
  }
  $4 = $46;
  $4$hi = i64toi32_i32$2;
  $16 = $4;
  $16$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$5 = $1;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$1 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = 0;
   $48 = i64toi32_i32$2 >>> i64toi32_i32$1 | 0;
  } else {
   i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$1 | 0;
   $48 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$1 | 0) | 0;
  }
  $2 = $48;
  $2$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $16$hi;
  i64toi32_i32$5 = $2$hi;
  i64toi32_i32$5 = __wasm_i64_mul($16 | 0, i64toi32_i32$0 | 0, $2 | 0, i64toi32_i32$5 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  $20 = i64toi32_i32$5;
  $20$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $13$hi;
  i64toi32_i32$2 = $13;
  i64toi32_i32$5 = $20$hi;
  i64toi32_i32$3 = $20;
  i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
  i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
  if (i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0) {
   i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
  }
  $21 = i64toi32_i32$1;
  $21$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $3$hi;
  i64toi32_i32$0 = $3;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = -1;
  i64toi32_i32$2 = i64toi32_i32$4 & i64toi32_i32$2 | 0;
  $3 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
  $3$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$4 = $1;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = -1;
  i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
  $1 = i64toi32_i32$4 & i64toi32_i32$3 | 0;
  $1$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$4 = $1$hi;
  i64toi32_i32$4 = __wasm_i64_mul($3 | 0, i64toi32_i32$0 | 0, $1 | 0, i64toi32_i32$4 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  $5 = i64toi32_i32$4;
  $5$hi = i64toi32_i32$0;
  i64toi32_i32$2 = i64toi32_i32$4;
  i64toi32_i32$4 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$5 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$4 = 0;
   $49 = i64toi32_i32$0 >>> i64toi32_i32$5 | 0;
  } else {
   i64toi32_i32$4 = i64toi32_i32$0 >>> i64toi32_i32$5 | 0;
   $49 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$5 | 0) | 0;
  }
  $30$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $3$hi;
  i64toi32_i32$4 = $2$hi;
  i64toi32_i32$4 = $3$hi;
  i64toi32_i32$2 = $2$hi;
  i64toi32_i32$2 = __wasm_i64_mul($3 | 0, i64toi32_i32$4 | 0, $2 | 0, i64toi32_i32$2 | 0) | 0;
  i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
  $33 = i64toi32_i32$2;
  $33$hi = i64toi32_i32$4;
  i64toi32_i32$4 = $30$hi;
  i64toi32_i32$0 = $49;
  i64toi32_i32$2 = $33$hi;
  i64toi32_i32$3 = $33;
  i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
  i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$2 | 0;
  if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) {
   i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
  }
  $3 = i64toi32_i32$5;
  $3$hi = i64toi32_i32$1;
  i64toi32_i32$4 = i64toi32_i32$5;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$2 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = 0;
   $50 = i64toi32_i32$1 >>> i64toi32_i32$2 | 0;
  } else {
   i64toi32_i32$0 = i64toi32_i32$1 >>> i64toi32_i32$2 | 0;
   $50 = (((1 << i64toi32_i32$2 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$2 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$2 | 0) | 0;
  }
  $36$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $21$hi;
  i64toi32_i32$1 = $21;
  i64toi32_i32$4 = $36$hi;
  i64toi32_i32$3 = $50;
  i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
  i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
  if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) {
   i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
  }
  $37 = i64toi32_i32$2;
  $37$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $3$hi;
  i64toi32_i32$0 = $3;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = -1;
  i64toi32_i32$1 = i64toi32_i32$5 & i64toi32_i32$1 | 0;
  $39 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
  $39$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $4$hi;
  i64toi32_i32$1 = $1$hi;
  i64toi32_i32$1 = $4$hi;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = __wasm_i64_mul($4 | 0, i64toi32_i32$1 | 0, $1 | 0, i64toi32_i32$0 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  $42 = i64toi32_i32$0;
  $42$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $39$hi;
  i64toi32_i32$5 = $39;
  i64toi32_i32$0 = $42$hi;
  i64toi32_i32$3 = $42;
  i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
  i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
  if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
   i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
  }
  $3 = i64toi32_i32$4;
  $3$hi = i64toi32_i32$2;
  i64toi32_i32$1 = i64toi32_i32$4;
  i64toi32_i32$5 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$5 = 0;
   $53 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
  } else {
   i64toi32_i32$5 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
   $53 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$0 | 0) | 0;
  }
  $45$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $37$hi;
  i64toi32_i32$2 = $37;
  i64toi32_i32$1 = $45$hi;
  i64toi32_i32$3 = $53;
  i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
  i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$1 | 0;
  if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) {
   i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
  }
  i64toi32_i32$2 = $6;
  HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] = i64toi32_i32$0;
  HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] = i64toi32_i32$4;
  $47 = $0;
  i64toi32_i32$4 = $3$hi;
  i64toi32_i32$5 = $3;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$1 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = i64toi32_i32$5 << i64toi32_i32$1 | 0;
   $54 = 0;
  } else {
   i64toi32_i32$2 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$1 | 0) | 0;
   $54 = i64toi32_i32$5 << i64toi32_i32$1 | 0;
  }
  $49$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $5$hi;
  i64toi32_i32$4 = $5;
  i64toi32_i32$5 = 0;
  i64toi32_i32$3 = -1;
  i64toi32_i32$5 = i64toi32_i32$2 & i64toi32_i32$5 | 0;
  $51 = i64toi32_i32$4 & i64toi32_i32$3 | 0;
  $51$hi = i64toi32_i32$5;
  i64toi32_i32$5 = $49$hi;
  i64toi32_i32$2 = $54;
  i64toi32_i32$4 = $51$hi;
  i64toi32_i32$3 = $51;
  i64toi32_i32$4 = i64toi32_i32$5 | i64toi32_i32$4 | 0;
  $52 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
  i64toi32_i32$2 = $47;
  HEAP32[i64toi32_i32$2 >> 2] = $52;
  HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] = i64toi32_i32$4;
 }
 
 function __divtf3($0, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4, $4$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  $4$hi = $4$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$5 = 0, i64toi32_i32$4 = 0, $15$hi = 0, $12$hi = 0, $15 = 0, $16$hi = 0, $12 = 0, i64toi32_i32$6 = 0, $5 = 0, $18$hi = 0, $19$hi = 0, $17$hi = 0, $16 = 0, $18 = 0, $19 = 0, $7$hi = 0, $17 = 0, $8$hi = 0, $20$hi = 0, $7 = 0, $8 = 0, $20 = 0, $6$hi = 0, $6 = 0, $11 = 0, $9 = 0, $14 = 0, $14$hi = 0, $10 = 0, $21$hi = 0, $13 = 0, $470 = 0, $471 = 0, $475 = 0, $476 = 0, $478 = 0, $479 = 0, $480 = 0, $481 = 0, $482 = 0, $484 = 0, $485 = 0, $486 = 0, $488 = 0, $489 = 0, $490 = 0, $491 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $507 = 0, $508 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $518 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $530 = 0, $21 = 0, $531 = 0, $532 = 0, $533 = 0, $537 = 0, $538 = 0, $539 = 0, $540 = 0, $542 = 0, $543 = 0, $544 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $550 = 0, $552 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $560 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $567 = 0, $568 = 0, $569 = 0, $570 = 0, $572 = 0, $573 = 0, $575 = 0, $576 = 0, $48 = 0, $52 = 0, $59 = 0, $63 = 0, $72 = 0, $72$hi = 0, $77 = 0, $77$hi = 0, $85 = 0, $85$hi = 0, $101 = 0, $102 = 0, $102$hi = 0, $103 = 0, $103$hi = 0, $110$hi = 0, $113$hi = 0, $128 = 0, $129 = 0, $129$hi = 0, $130 = 0, $130$hi = 0, $137$hi = 0, $140$hi = 0, $155 = 0, $157 = 0, $157$hi = 0, $161$hi = 0, $172 = 0, $172$hi = 0, $173$hi = 0, $176 = 0, $179 = 0, $179$hi = 0, $184$hi = 0, $194 = 0, $194$hi = 0, $195$hi = 0, $197 = 0, $200 = 0, $200$hi = 0, $205$hi = 0, $215 = 0, $215$hi = 0, $216$hi = 0, $218 = 0, $221 = 0, $221$hi = 0, $226$hi = 0, $236 = 0, $236$hi = 0, $237$hi = 0, $239 = 0, $242 = 0, $242$hi = 0, $247$hi = 0, $256 = 0, $256$hi = 0, $257$hi = 0, $265 = 0, $265$hi = 0, $269$hi = 0, $274 = 0, $274$hi = 0, $279 = 0, $279$hi = 0, $286 = 0, $286$hi = 0, $289 = 0, $289$hi = 0, $292 = 0, $294$hi = 0, $295 = 0, $295$hi = 0, $298 = 0, $298$hi = 0, $299 = 0, $299$hi = 0, $305 = 0, $305$hi = 0, $309 = 0, $310$hi = 0, $311 = 0, $311$hi = 0, $312 = 0, $312$hi = 0, $313 = 0, $313$hi = 0, $319 = 0, $319$hi = 0, $320 = 0, $320$hi = 0, $325 = 0, $325$hi = 0, $332 = 0, $332$hi = 0, $333$hi = 0, $335 = 0, $336 = 0, $336$hi = 0, $338 = 0, $338$hi = 0, $341 = 0, $343$hi = 0, $344 = 0, $344$hi = 0, $347 = 0, $347$hi = 0, $348$hi = 0, $349$hi = 0, $353 = 0, $354$hi = 0, $355$hi = 0, $357 = 0, $358$hi = 0, $359$hi = 0, $366 = 0, $366$hi = 0, $370 = 0, $370$hi = 0, $371 = 0, $371$hi = 0, $375 = 0, $375$hi = 0, $378$hi = 0, $383 = 0, $383$hi = 0, $385 = 0, $385$hi = 0, $388 = 0, $390$hi = 0, $391 = 0, $391$hi = 0, $394 = 0, $394$hi = 0, $395$hi = 0, $396 = 0, $396$hi = 0, $397 = 0, $397$hi = 0, $410 = 0, $410$hi = 0, $417 = 0, $417$hi = 0, $418$hi = 0, $420 = 0, $421 = 0, $421$hi = 0, $423 = 0, $423$hi = 0, $426 = 0, $428$hi = 0, $429 = 0, $429$hi = 0, $432 = 0, $432$hi = 0, $433$hi = 0, $434$hi = 0, $438 = 0, $439$hi = 0, $440 = 0, $440$hi = 0, $445 = 0, $446$hi = 0, $451 = 0, $451$hi = 0, $453 = 0, $453$hi = 0, $455$hi = 0, $460 = 0, $460$hi = 0, $464 = 0, $464$hi = 0, $468 = 0, $468$hi = 0, $472 = 0, $473 = 0, $473$hi = 0, $474 = 0, $474$hi = 0, $477 = 0, $477$hi = 0, $483 = 0, $483$hi = 0, $487 = 0, $488$hi = 0, $489$hi = 0, $492 = 0, $492$hi = 0, $493 = 0, $493$hi = 0, $500 = 0, $500$hi = 0, $506 = 0, $506$hi = 0, $508$hi = 0, $509 = 0, $509$hi = 0, $510 = 0, $510$hi = 0, $511 = 0, $511$hi = 0, $513$hi = 0, $517 = 0, $518$hi = 0, $519 = 0, $519$hi = 0, $520 = 0, $520$hi = 0, $529 = 0, $529$hi = 0, $534 = 0, $534$hi = 0, $535 = 0, $535$hi = 0, $536 = 0, $536$hi = 0, $541 = 0, $541$hi = 0, $545 = 0, $546$hi = 0, $547$hi = 0, $551 = 0, $552$hi = 0, $553 = 0, $553$hi = 0, $554 = 0, $554$hi = 0, $561 = 0, $561$hi = 0, $566 = 0, $566$hi = 0, $571 = 0, $571$hi = 0, $574 = 0, $574$hi = 0, $577 = 0, $578$hi = 0, $581 = 0, $582$hi = 0, $583$hi = 0, $586 = 0, $587$hi = 0, $589$hi = 0, $590 = 0, $590$hi = 0, $594 = 0, $595$hi = 0, $596 = 0, $596$hi = 0, $597 = 0, $597$hi = 0, $598 = 0, $598$hi = 0, $605 = 0, $605$hi = 0, $608 = 0, $608$hi = 0, $611 = 0, $613$hi = 0, $614 = 0, $614$hi = 0, $618 = 0, $619 = 0, $619$hi = 0, $620 = 0, $620$hi = 0, $622$hi = 0, $623$hi = 0, $625 = 0, $626$hi = 0, $627$hi = 0, $631 = 0, $632$hi = 0, $637$hi = 0, $646 = 0, $647$hi = 0, $648 = 0, $648$hi = 0, $651 = 0, $651$hi = 0, $657 = 0, $657$hi = 0, $658 = 0, $658$hi = 0, $662 = 0, $662$hi = 0, $667 = 0, $668$hi = 0, $669 = 0, $669$hi = 0, $670 = 0, $670$hi = 0, $672$hi = 0, $673 = 0, $673$hi = 0, $674 = 0, $674$hi = 0, $676$hi = 0, $677 = 0, $677$hi = 0, $678$hi = 0, $681 = 0, $681$hi = 0, $682$hi = 0, $685 = 0, $685$hi = 0, $687 = 0, $687$hi = 0, $689$hi = 0, $578 = 0, $691 = 0, $691$hi = 0, $694 = 0, $694$hi = 0, $695 = 0, $695$hi = 0, $696$hi = 0, $699 = 0, $699$hi = 0, $700 = 0, $700$hi = 0, $702 = 0, $702$hi = 0, $705 = 0, $707$hi = 0, $708 = 0, $708$hi = 0, $709$hi = 0, $710$hi = 0, $720 = 0, $720$hi = 0, $722 = 0, $722$hi = 0, $724$hi = 0, $734 = 0, $735$hi = 0, $736 = 0, $736$hi = 0, $739 = 0, $739$hi = 0, $740 = 0, $740$hi = 0, $745 = 0, $745$hi = 0, $746 = 0, $746$hi = 0, $748$hi = 0, $754 = 0, $754$hi = 0, $759 = 0, $760$hi = 0, $761 = 0, $761$hi = 0, $762 = 0, $762$hi = 0, $764$hi = 0, $765 = 0, $765$hi = 0, $766 = 0, $766$hi = 0, $768$hi = 0, $769 = 0, $769$hi = 0, $770 = 0, $770$hi = 0, $775 = 0, $775$hi = 0, $776$hi = 0, $779 = 0, $779$hi = 0, $781 = 0, $781$hi = 0, $784 = 0, $784$hi = 0, $786$hi = 0, $579 = 0, $788 = 0, $788$hi = 0, $789$hi = 0, $792 = 0, $792$hi = 0, $793 = 0, $793$hi = 0, $794 = 0, $794$hi = 0, $796 = 0, $796$hi = 0, $799 = 0, $801$hi = 0, $802 = 0, $802$hi = 0, $803$hi = 0, $804$hi = 0, $820 = 0, $820$hi = 0, $821 = 0, $821$hi = 0, $823$hi = 0, $825 = 0, $827 = 0, $827$hi = 0, $829$hi = 0, $833 = 0, $837 = 0, $838$hi = 0, $842 = 0, $843$hi = 0, $852 = 0, $852$hi = 0, $853 = 0, $853$hi = 0, $855$hi = 0, $857 = 0, $859 = 0, $859$hi = 0, $861$hi = 0, $865 = 0, $869 = 0, $870$hi = 0, $874 = 0, $875$hi = 0, $876 = 0, $876$hi = 0, $879$hi = 0, $880$hi = 0, $896 = 0;
  $5 = __stack_pointer - 192 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $4$hi;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = 65535;
  i64toi32_i32$3 = -1;
  i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
  $6 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
  $6$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $2$hi;
  i64toi32_i32$0 = $2;
  i64toi32_i32$2 = 65535;
  i64toi32_i32$3 = -1;
  i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
  $7 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
  $7$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $4$hi;
  i64toi32_i32$2 = i64toi32_i32$1;
  i64toi32_i32$2 = $4$hi;
  i64toi32_i32$1 = $4;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$3 = $2;
  i64toi32_i32$0 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
  i64toi32_i32$2 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
  i64toi32_i32$1 = -2147483648;
  i64toi32_i32$3 = 0;
  i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
  $8 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
  $8$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $4$hi;
  i64toi32_i32$0 = $4;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 48;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = 0;
   $470 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   $470 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
  }
  $9 = $470 & 32767 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      i64toi32_i32$2 = $2$hi;
      i64toi32_i32$1 = $2;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = 48;
      i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = 0;
       $471 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
       $471 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
      }
      $10 = $471 & 32767 | 0;
      if (($10 + -1 | 0) >>> 0 > 32765 >>> 0) {
       break label$4
      }
      $11 = 0;
      if (($9 + -1 | 0) >>> 0 < 32766 >>> 0) {
       break label$3
      }
     }
     label$5 : {
      i64toi32_i32$0 = $1$hi;
      $48 = !($1 | i64toi32_i32$0 | 0);
      i64toi32_i32$0 = $2$hi;
      i64toi32_i32$2 = $2;
      i64toi32_i32$1 = 2147483647;
      i64toi32_i32$3 = -1;
      i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
      $12 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
      $12$hi = i64toi32_i32$1;
      i64toi32_i32$0 = $12;
      i64toi32_i32$2 = 2147418112;
      i64toi32_i32$3 = 0;
      $52 = i64toi32_i32$1 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$1;
      i64toi32_i32$0 = i64toi32_i32$1;
      i64toi32_i32$3 = $12;
      i64toi32_i32$1 = 2147418112;
      i64toi32_i32$2 = 0;
      if ((i64toi32_i32$3 | 0) == (i64toi32_i32$2 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) | 0 ? $48 : $52) {
       break label$5
      }
      i64toi32_i32$3 = $2$hi;
      i64toi32_i32$2 = $2;
      i64toi32_i32$0 = 32768;
      i64toi32_i32$1 = 0;
      i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
      $8 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
      $8$hi = i64toi32_i32$0;
      break label$2;
     }
     label$6 : {
      i64toi32_i32$0 = $3$hi;
      $59 = !($3 | i64toi32_i32$0 | 0);
      i64toi32_i32$0 = $4$hi;
      i64toi32_i32$3 = $4;
      i64toi32_i32$2 = 2147483647;
      i64toi32_i32$1 = -1;
      i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$2 | 0;
      $2 = i64toi32_i32$3 & i64toi32_i32$1 | 0;
      $2$hi = i64toi32_i32$2;
      i64toi32_i32$0 = $2;
      i64toi32_i32$3 = 2147418112;
      i64toi32_i32$1 = 0;
      $63 = i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$2;
      i64toi32_i32$1 = $2;
      i64toi32_i32$2 = 2147418112;
      i64toi32_i32$3 = 0;
      if ((i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$2 | 0) | 0 ? $59 : $63) {
       break label$6
      }
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$3 = $4;
      i64toi32_i32$0 = 32768;
      i64toi32_i32$2 = 0;
      i64toi32_i32$0 = i64toi32_i32$1 | i64toi32_i32$0 | 0;
      $8 = i64toi32_i32$3 | i64toi32_i32$2 | 0;
      $8$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $3$hi;
      $1 = $3;
      $1$hi = i64toi32_i32$0;
      break label$2;
     }
     label$7 : {
      i64toi32_i32$0 = $1$hi;
      i64toi32_i32$0 = $12$hi;
      i64toi32_i32$1 = $12;
      i64toi32_i32$3 = 2147418112;
      i64toi32_i32$2 = 0;
      i64toi32_i32$3 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
      $72 = i64toi32_i32$1 ^ i64toi32_i32$2 | 0;
      $72$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $1$hi;
      i64toi32_i32$0 = $1;
      i64toi32_i32$1 = $72$hi;
      i64toi32_i32$2 = $72;
      i64toi32_i32$1 = i64toi32_i32$3 | i64toi32_i32$1 | 0;
      i64toi32_i32$3 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$2 = 0;
      if ((i64toi32_i32$3 | 0) != (i64toi32_i32$2 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$0 | 0) | 0) {
       break label$7
      }
      label$8 : {
       i64toi32_i32$3 = $3$hi;
       i64toi32_i32$3 = $2$hi;
       i64toi32_i32$2 = $2;
       i64toi32_i32$1 = 2147418112;
       i64toi32_i32$0 = 0;
       i64toi32_i32$1 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
       $77 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
       $77$hi = i64toi32_i32$1;
       i64toi32_i32$1 = $3$hi;
       i64toi32_i32$3 = $3;
       i64toi32_i32$2 = $77$hi;
       i64toi32_i32$0 = $77;
       i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
       if (!!(i64toi32_i32$3 | i64toi32_i32$0 | 0 | i64toi32_i32$2 | 0)) {
        break label$8
       }
       i64toi32_i32$2 = 0;
       $1 = 0;
       $1$hi = i64toi32_i32$2;
       i64toi32_i32$2 = 2147450880;
       $8 = 0;
       $8$hi = i64toi32_i32$2;
       break label$2;
      }
      i64toi32_i32$2 = $8$hi;
      i64toi32_i32$1 = $8;
      i64toi32_i32$3 = 2147418112;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
      $8 = i64toi32_i32$1 | i64toi32_i32$0 | 0;
      $8$hi = i64toi32_i32$3;
      i64toi32_i32$3 = 0;
      $1 = 0;
      $1$hi = i64toi32_i32$3;
      break label$2;
     }
     label$9 : {
      i64toi32_i32$3 = $3$hi;
      i64toi32_i32$3 = $2$hi;
      i64toi32_i32$2 = $2;
      i64toi32_i32$1 = 2147418112;
      i64toi32_i32$0 = 0;
      i64toi32_i32$1 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
      $85 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
      $85$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $3$hi;
      i64toi32_i32$3 = $3;
      i64toi32_i32$2 = $85$hi;
      i64toi32_i32$0 = $85;
      i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
      i64toi32_i32$1 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
      i64toi32_i32$3 = 0;
      i64toi32_i32$0 = 0;
      if ((i64toi32_i32$1 | 0) != (i64toi32_i32$0 | 0) | (i64toi32_i32$2 | 0) != (i64toi32_i32$3 | 0) | 0) {
       break label$9
      }
      i64toi32_i32$1 = 0;
      $1 = 0;
      $1$hi = i64toi32_i32$1;
      break label$2;
     }
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$0 = $1;
     i64toi32_i32$2 = $12$hi;
     i64toi32_i32$3 = $12;
     i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
     i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
     i64toi32_i32$0 = 0;
     i64toi32_i32$3 = 0;
     if ((i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) | 0) {
      break label$1
     }
     label$10 : {
      i64toi32_i32$1 = $3$hi;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$1 = $3$hi;
      i64toi32_i32$3 = $3;
      i64toi32_i32$2 = $2$hi;
      i64toi32_i32$0 = $2;
      i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
      i64toi32_i32$1 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
      i64toi32_i32$3 = 0;
      i64toi32_i32$0 = 0;
      if ((i64toi32_i32$1 | 0) != (i64toi32_i32$0 | 0) | (i64toi32_i32$2 | 0) != (i64toi32_i32$3 | 0) | 0) {
       break label$10
      }
      i64toi32_i32$1 = $8$hi;
      i64toi32_i32$0 = $8;
      i64toi32_i32$2 = 2147418112;
      i64toi32_i32$3 = 0;
      i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
      $8 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
      $8$hi = i64toi32_i32$2;
      i64toi32_i32$2 = 0;
      $1 = 0;
      $1$hi = i64toi32_i32$2;
      break label$2;
     }
     $11 = 0;
     label$11 : {
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$1 = $12;
      i64toi32_i32$0 = 65535;
      i64toi32_i32$3 = -1;
      if (i64toi32_i32$2 >>> 0 > i64toi32_i32$0 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$1 >>> 0 > i64toi32_i32$3 >>> 0 | 0) | 0) {
       break label$11
      }
      $101 = $5 + 176 | 0;
      i64toi32_i32$1 = $1$hi;
      $102 = $1;
      $102$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $7$hi;
      $103 = $7;
      $103$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $1$hi;
      i64toi32_i32$1 = $7$hi;
      $11 = !($7 | i64toi32_i32$1 | 0);
      i64toi32_i32$4 = $11;
      i64toi32_i32$1 = $1$hi;
      i64toi32_i32$2 = $7$hi;
      i64toi32_i32$0 = i64toi32_i32$4 ? $1 : $7;
      i64toi32_i32$3 = i64toi32_i32$4 ? i64toi32_i32$1 : i64toi32_i32$2;
      i64toi32_i32$1 = Math_clz32(i64toi32_i32$3);
      i64toi32_i32$4 = 0;
      if ((i64toi32_i32$1 | 0) == (32 | 0)) {
       $475 = Math_clz32(i64toi32_i32$0) + 32 | 0
      } else {
       $475 = i64toi32_i32$1
      }
      $110$hi = i64toi32_i32$4;
      i64toi32_i32$4 = 0;
      $113$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $110$hi;
      i64toi32_i32$0 = $475;
      i64toi32_i32$3 = $113$hi;
      i64toi32_i32$1 = $11 << 6 | 0;
      i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
      i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$2 >>> 0 < i64toi32_i32$1 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $11 = i64toi32_i32$2;
      i64toi32_i32$5 = $102$hi;
      i64toi32_i32$0 = $103$hi;
      __ashlti3($101 | 0, $102 | 0, i64toi32_i32$5 | 0, $103 | 0, i64toi32_i32$0 | 0, i64toi32_i32$2 + -15 | 0 | 0);
      $11 = 16 - i64toi32_i32$2 | 0;
      i64toi32_i32$4 = $5 + 184 | 0;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$4 >> 2] | 0;
      i64toi32_i32$5 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
      $7 = i64toi32_i32$0;
      $7$hi = i64toi32_i32$5;
      i64toi32_i32$4 = $5;
      i64toi32_i32$5 = HEAP32[(i64toi32_i32$4 + 176 | 0) >> 2] | 0;
      i64toi32_i32$0 = HEAP32[(i64toi32_i32$4 + 180 | 0) >> 2] | 0;
      $1 = i64toi32_i32$5;
      $1$hi = i64toi32_i32$0;
     }
     i64toi32_i32$0 = $2$hi;
     i64toi32_i32$4 = $2;
     i64toi32_i32$5 = 65535;
     i64toi32_i32$1 = -1;
     if (i64toi32_i32$0 >>> 0 > i64toi32_i32$5 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$4 >>> 0 > i64toi32_i32$1 >>> 0 | 0) | 0) {
      break label$3
     }
     $128 = $5 + 160 | 0;
     i64toi32_i32$4 = $3$hi;
     $129 = $3;
     $129$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $6$hi;
     $130 = $6;
     $130$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $3$hi;
     i64toi32_i32$4 = $6$hi;
     $13 = !($6 | i64toi32_i32$4 | 0);
     i64toi32_i32$3 = $13;
     i64toi32_i32$4 = $3$hi;
     i64toi32_i32$0 = $6$hi;
     i64toi32_i32$5 = i64toi32_i32$3 ? $3 : $6;
     i64toi32_i32$1 = i64toi32_i32$3 ? i64toi32_i32$4 : i64toi32_i32$0;
     i64toi32_i32$4 = Math_clz32(i64toi32_i32$1);
     i64toi32_i32$3 = 0;
     if ((i64toi32_i32$4 | 0) == (32 | 0)) {
      $476 = Math_clz32(i64toi32_i32$5) + 32 | 0
     } else {
      $476 = i64toi32_i32$4
     }
     $137$hi = i64toi32_i32$3;
     i64toi32_i32$3 = 0;
     $140$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $137$hi;
     i64toi32_i32$5 = $476;
     i64toi32_i32$1 = $140$hi;
     i64toi32_i32$4 = $13 << 6 | 0;
     i64toi32_i32$0 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
     i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
     if (i64toi32_i32$0 >>> 0 < i64toi32_i32$4 >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
     }
     $13 = i64toi32_i32$0;
     i64toi32_i32$2 = $129$hi;
     i64toi32_i32$5 = $130$hi;
     __ashlti3($128 | 0, $129 | 0, i64toi32_i32$2 | 0, $130 | 0, i64toi32_i32$5 | 0, i64toi32_i32$0 + -15 | 0 | 0);
     $11 = (i64toi32_i32$0 + $11 | 0) + -16 | 0;
     i64toi32_i32$3 = $5 + 168 | 0;
     i64toi32_i32$5 = HEAP32[i64toi32_i32$3 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
     $6 = i64toi32_i32$5;
     $6$hi = i64toi32_i32$2;
     i64toi32_i32$3 = $5;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$3 + 160 | 0) >> 2] | 0;
     i64toi32_i32$5 = HEAP32[(i64toi32_i32$3 + 164 | 0) >> 2] | 0;
     $3 = i64toi32_i32$2;
     $3$hi = i64toi32_i32$5;
    }
    $155 = $5 + 144 | 0;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$3 = $3;
    i64toi32_i32$2 = 0;
    i64toi32_i32$4 = 49;
    i64toi32_i32$1 = i64toi32_i32$4 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = 0;
     $478 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
    } else {
     i64toi32_i32$2 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
     $478 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$1 | 0) | 0;
    }
    $157 = $478;
    $157$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $6$hi;
    i64toi32_i32$5 = $6;
    i64toi32_i32$3 = 65536;
    i64toi32_i32$4 = 0;
    i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
    $14 = i64toi32_i32$5 | i64toi32_i32$4 | 0;
    $14$hi = i64toi32_i32$3;
    i64toi32_i32$2 = $14;
    i64toi32_i32$5 = 0;
    i64toi32_i32$4 = 15;
    i64toi32_i32$1 = i64toi32_i32$4 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
     $479 = 0;
    } else {
     i64toi32_i32$5 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$1 | 0) | 0;
     $479 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
    }
    $161$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $157$hi;
    i64toi32_i32$3 = $157;
    i64toi32_i32$2 = $161$hi;
    i64toi32_i32$4 = $479;
    i64toi32_i32$2 = i64toi32_i32$5 | i64toi32_i32$2 | 0;
    $2 = i64toi32_i32$3 | i64toi32_i32$4 | 0;
    $2$hi = i64toi32_i32$2;
    i64toi32_i32$2 = 1963258675;
    i64toi32_i32$5 = -102865788;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$4 = $2;
    i64toi32_i32$1 = i64toi32_i32$5 - i64toi32_i32$4 | 0;
    i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$4 >>> 0;
    i64toi32_i32$0 = i64toi32_i32$6 + i64toi32_i32$3 | 0;
    i64toi32_i32$0 = i64toi32_i32$2 - i64toi32_i32$0 | 0;
    $4 = i64toi32_i32$1;
    $4$hi = i64toi32_i32$0;
    i64toi32_i32$0 = i64toi32_i32$3;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$4 = 0;
    __multi3($155 | 0, $2 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$5 | 0, i64toi32_i32$1 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$4 | 0);
    i64toi32_i32$5 = ($5 + 144 | 0) + 8 | 0;
    i64toi32_i32$4 = HEAP32[i64toi32_i32$5 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
    $172 = i64toi32_i32$4;
    $172$hi = i64toi32_i32$2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$5 = 0;
    i64toi32_i32$4 = $172$hi;
    i64toi32_i32$0 = $172;
    i64toi32_i32$3 = i64toi32_i32$5 - i64toi32_i32$0 | 0;
    i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0;
    i64toi32_i32$1 = i64toi32_i32$6 + i64toi32_i32$4 | 0;
    i64toi32_i32$1 = i64toi32_i32$2 - i64toi32_i32$1 | 0;
    $173$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$1 = $173$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$0 = 0;
    __multi3($5 + 128 | 0 | 0, i64toi32_i32$3 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$5 | 0, $4 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$0 | 0);
    $176 = $5 + 112 | 0;
    i64toi32_i32$5 = $5;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$5 + 128 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 132 | 0) >> 2] | 0;
    i64toi32_i32$5 = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$1 = 63;
    i64toi32_i32$4 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = 0;
     $480 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
     $480 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$4 | 0) | 0;
    }
    $179 = $480;
    $179$hi = i64toi32_i32$0;
    i64toi32_i32$2 = ($5 + 128 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$5 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    i64toi32_i32$2 = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$1 = 1;
    i64toi32_i32$4 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     $481 = 0;
    } else {
     i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$4 | 0) | 0;
     $481 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
    }
    $184$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $179$hi;
    i64toi32_i32$5 = $179;
    i64toi32_i32$2 = $184$hi;
    i64toi32_i32$1 = $481;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    $4 = i64toi32_i32$5 | i64toi32_i32$1 | 0;
    $4$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$1 = 0;
    __multi3($176 | 0, $4 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$5 | 0, $2 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$1 = i64toi32_i32$2;
    i64toi32_i32$5 = ($5 + 112 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$5 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
    $194 = i64toi32_i32$1;
    $194$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$5 = 0;
    i64toi32_i32$1 = $194$hi;
    i64toi32_i32$2 = $194;
    i64toi32_i32$4 = i64toi32_i32$5 - i64toi32_i32$2 | 0;
    i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0;
    i64toi32_i32$3 = i64toi32_i32$6 + i64toi32_i32$1 | 0;
    i64toi32_i32$3 = i64toi32_i32$0 - i64toi32_i32$3 | 0;
    $195$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $4$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$0 = $195$hi;
    i64toi32_i32$2 = 0;
    __multi3($5 + 96 | 0 | 0, $4 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$5 | 0, i64toi32_i32$4 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0);
    $197 = $5 + 80 | 0;
    i64toi32_i32$5 = $5;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 96 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$5 + 100 | 0) >> 2] | 0;
    i64toi32_i32$5 = i64toi32_i32$2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 63;
    i64toi32_i32$1 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = 0;
     $482 = i64toi32_i32$0 >>> i64toi32_i32$1 | 0;
    } else {
     i64toi32_i32$2 = i64toi32_i32$0 >>> i64toi32_i32$1 | 0;
     $482 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$1 | 0) | 0;
    }
    $200 = $482;
    $200$hi = i64toi32_i32$2;
    i64toi32_i32$0 = ($5 + 96 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$5 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    i64toi32_i32$0 = i64toi32_i32$2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 1;
    i64toi32_i32$1 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$1 | 0;
     $484 = 0;
    } else {
     i64toi32_i32$2 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$1 | 0) | 0;
     $484 = i64toi32_i32$0 << i64toi32_i32$1 | 0;
    }
    $205$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $200$hi;
    i64toi32_i32$5 = $200;
    i64toi32_i32$0 = $205$hi;
    i64toi32_i32$3 = $484;
    i64toi32_i32$0 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
    $4 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
    $4$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$0 = $4$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$3 = 0;
    __multi3($197 | 0, $4 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$5 | 0, $2 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$3 | 0);
    i64toi32_i32$3 = i64toi32_i32$0;
    i64toi32_i32$5 = ($5 + 80 | 0) + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$5 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
    $215 = i64toi32_i32$3;
    $215$hi = i64toi32_i32$2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$5 = 0;
    i64toi32_i32$3 = $215$hi;
    i64toi32_i32$0 = $215;
    i64toi32_i32$1 = i64toi32_i32$5 - i64toi32_i32$0 | 0;
    i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0;
    i64toi32_i32$4 = i64toi32_i32$6 + i64toi32_i32$3 | 0;
    i64toi32_i32$4 = i64toi32_i32$2 - i64toi32_i32$4 | 0;
    $216$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $4$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = $216$hi;
    i64toi32_i32$0 = 0;
    __multi3($5 + 64 | 0 | 0, $4 | 0, i64toi32_i32$4 | 0, 0 | 0, i64toi32_i32$5 | 0, i64toi32_i32$1 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$0 | 0);
    $218 = $5 + 48 | 0;
    i64toi32_i32$5 = $5;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$5 + 64 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 68 | 0) >> 2] | 0;
    i64toi32_i32$5 = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$4 = 63;
    i64toi32_i32$3 = i64toi32_i32$4 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = 0;
     $485 = i64toi32_i32$2 >>> i64toi32_i32$3 | 0;
    } else {
     i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$3 | 0;
     $485 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$3 | 0) | 0;
    }
    $221 = $485;
    $221$hi = i64toi32_i32$0;
    i64toi32_i32$2 = ($5 + 64 | 0) + 8 | 0;
    i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$5 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    i64toi32_i32$2 = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$4 = 1;
    i64toi32_i32$3 = i64toi32_i32$4 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
     $486 = 0;
    } else {
     i64toi32_i32$0 = ((1 << i64toi32_i32$3 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$3 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$3 | 0) | 0;
     $486 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
    }
    $226$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $221$hi;
    i64toi32_i32$5 = $221;
    i64toi32_i32$2 = $226$hi;
    i64toi32_i32$4 = $486;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    $4 = i64toi32_i32$5 | i64toi32_i32$4 | 0;
    $4$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$4 = 0;
    __multi3($218 | 0, $4 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$5 | 0, $2 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$4 | 0);
    i64toi32_i32$4 = i64toi32_i32$2;
    i64toi32_i32$5 = ($5 + 48 | 0) + 8 | 0;
    i64toi32_i32$4 = HEAP32[i64toi32_i32$5 >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
    $236 = i64toi32_i32$4;
    $236$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$5 = 0;
    i64toi32_i32$4 = $236$hi;
    i64toi32_i32$2 = $236;
    i64toi32_i32$3 = i64toi32_i32$5 - i64toi32_i32$2 | 0;
    i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0;
    i64toi32_i32$1 = i64toi32_i32$6 + i64toi32_i32$4 | 0;
    i64toi32_i32$1 = i64toi32_i32$0 - i64toi32_i32$1 | 0;
    $237$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$0 = $237$hi;
    i64toi32_i32$2 = 0;
    __multi3($5 + 32 | 0 | 0, $4 | 0, i64toi32_i32$1 | 0, 0 | 0, i64toi32_i32$5 | 0, i64toi32_i32$3 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$2 | 0);
    $239 = $5 + 16 | 0;
    i64toi32_i32$5 = $5;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 32 | 0) >> 2] | 0;
    i64toi32_i32$0 = HEAP32[(i64toi32_i32$5 + 36 | 0) >> 2] | 0;
    i64toi32_i32$5 = i64toi32_i32$2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = 63;
    i64toi32_i32$4 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = 0;
     $488 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$2 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     $488 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$4 | 0) | 0;
    }
    $242 = $488;
    $242$hi = i64toi32_i32$2;
    i64toi32_i32$0 = ($5 + 32 | 0) + 8 | 0;
    i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$5 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    i64toi32_i32$0 = i64toi32_i32$2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = 1;
    i64toi32_i32$4 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
     $489 = 0;
    } else {
     i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$4 | 0) | 0;
     $489 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
    }
    $247$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $242$hi;
    i64toi32_i32$5 = $242;
    i64toi32_i32$0 = $247$hi;
    i64toi32_i32$1 = $489;
    i64toi32_i32$0 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
    $4 = i64toi32_i32$5 | i64toi32_i32$1 | 0;
    $4$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$0 = $4$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$1 = 0;
    __multi3($239 | 0, $4 | 0, i64toi32_i32$0 | 0, 0 | 0, i64toi32_i32$5 | 0, $2 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$1 | 0);
    i64toi32_i32$1 = i64toi32_i32$0;
    i64toi32_i32$5 = ($5 + 16 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$5 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
    $256 = i64toi32_i32$1;
    $256$hi = i64toi32_i32$2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$5 = 0;
    i64toi32_i32$1 = $256$hi;
    i64toi32_i32$0 = $256;
    i64toi32_i32$4 = i64toi32_i32$5 - i64toi32_i32$0 | 0;
    i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0;
    i64toi32_i32$3 = i64toi32_i32$6 + i64toi32_i32$1 | 0;
    i64toi32_i32$3 = i64toi32_i32$2 - i64toi32_i32$3 | 0;
    $257$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $4$hi;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = $257$hi;
    i64toi32_i32$0 = 0;
    __multi3($5 | 0, $4 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$5 | 0, i64toi32_i32$4 | 0, i64toi32_i32$2 | 0, 0 | 0, i64toi32_i32$0 | 0);
    $9 = $11 + ($10 - $9 | 0) | 0;
    label$12 : {
     label$13 : {
      i64toi32_i32$5 = $5;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$5 >> 2] | 0;
      i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
      i64toi32_i32$5 = i64toi32_i32$0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = 63;
      i64toi32_i32$1 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = 0;
       $490 = i64toi32_i32$2 >>> i64toi32_i32$1 | 0;
      } else {
       i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$1 | 0;
       $490 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$1 | 0) | 0;
      }
      $265 = $490;
      $265$hi = i64toi32_i32$0;
      i64toi32_i32$2 = $5 + 8 | 0;
      i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
      i64toi32_i32$5 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
      i64toi32_i32$2 = i64toi32_i32$0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = 1;
      i64toi32_i32$1 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
       $491 = 0;
      } else {
       i64toi32_i32$0 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$1 | 0) | 0;
       $491 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
      }
      $269$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $265$hi;
      i64toi32_i32$5 = $265;
      i64toi32_i32$2 = $269$hi;
      i64toi32_i32$3 = $491;
      i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
      i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
      i64toi32_i32$5 = -1;
      i64toi32_i32$3 = -1;
      i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $12 = i64toi32_i32$1;
      $12$hi = i64toi32_i32$4;
      i64toi32_i32$2 = i64toi32_i32$1;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = -1;
      i64toi32_i32$0 = i64toi32_i32$4 & i64toi32_i32$0 | 0;
      $4 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
      $4$hi = i64toi32_i32$0;
      $274 = $4;
      $274$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $2$hi;
      i64toi32_i32$4 = $2;
      i64toi32_i32$2 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$5 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = 0;
       $494 = i64toi32_i32$0 >>> i64toi32_i32$5 | 0;
      } else {
       i64toi32_i32$2 = i64toi32_i32$0 >>> i64toi32_i32$5 | 0;
       $494 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$5 | 0) | 0;
      }
      $15 = $494;
      $15$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $274$hi;
      i64toi32_i32$4 = $15$hi;
      i64toi32_i32$4 = __wasm_i64_mul($274 | 0, i64toi32_i32$2 | 0, $15 | 0, i64toi32_i32$4 | 0) | 0;
      i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
      $16 = i64toi32_i32$4;
      $16$hi = i64toi32_i32$2;
      $279 = i64toi32_i32$4;
      $279$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$0 = $12;
      i64toi32_i32$4 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$5 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = 0;
       $495 = i64toi32_i32$2 >>> i64toi32_i32$5 | 0;
      } else {
       i64toi32_i32$4 = i64toi32_i32$2 >>> i64toi32_i32$5 | 0;
       $495 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$5 | 0) | 0;
      }
      $12 = $495;
      $12$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $2$hi;
      i64toi32_i32$2 = $2;
      i64toi32_i32$0 = 0;
      i64toi32_i32$3 = -1;
      i64toi32_i32$0 = i64toi32_i32$4 & i64toi32_i32$0 | 0;
      $17 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
      $17$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $12$hi;
      i64toi32_i32$2 = $17$hi;
      i64toi32_i32$2 = __wasm_i64_mul($12 | 0, i64toi32_i32$0 | 0, $17 | 0, i64toi32_i32$2 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
      $286 = i64toi32_i32$2;
      $286$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $279$hi;
      i64toi32_i32$4 = $279;
      i64toi32_i32$2 = $286$hi;
      i64toi32_i32$3 = $286;
      i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
      i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $2 = i64toi32_i32$5;
      $2$hi = i64toi32_i32$1;
      i64toi32_i32$0 = i64toi32_i32$5;
      i64toi32_i32$4 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$2 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = 0;
       $496 = i64toi32_i32$1 >>> i64toi32_i32$2 | 0;
      } else {
       i64toi32_i32$4 = i64toi32_i32$1 >>> i64toi32_i32$2 | 0;
       $496 = (((1 << i64toi32_i32$2 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$2 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$2 | 0) | 0;
      }
      $289 = $496;
      $289$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $2$hi;
      i64toi32_i32$4 = $16$hi;
      i64toi32_i32$4 = $2$hi;
      i64toi32_i32$1 = $2;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$3 = $16;
      $292 = i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = $292;
      i64toi32_i32$4 = 0;
      i64toi32_i32$0 = 32;
      i64toi32_i32$2 = i64toi32_i32$0 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$3 << i64toi32_i32$2 | 0;
       $497 = 0;
      } else {
       i64toi32_i32$4 = ((1 << i64toi32_i32$2 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$2 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$2 | 0) | 0;
       $497 = i64toi32_i32$3 << i64toi32_i32$2 | 0;
      }
      $294$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $289$hi;
      i64toi32_i32$1 = $289;
      i64toi32_i32$3 = $294$hi;
      i64toi32_i32$0 = $497;
      i64toi32_i32$3 = i64toi32_i32$4 | i64toi32_i32$3 | 0;
      $295 = i64toi32_i32$1 | i64toi32_i32$0 | 0;
      $295$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $12$hi;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$3 = $12$hi;
      i64toi32_i32$1 = $15$hi;
      i64toi32_i32$1 = __wasm_i64_mul($12 | 0, i64toi32_i32$3 | 0, $15 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $298 = i64toi32_i32$1;
      $298$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $295$hi;
      i64toi32_i32$4 = $295;
      i64toi32_i32$1 = $298$hi;
      i64toi32_i32$0 = $298;
      i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
      i64toi32_i32$5 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $299 = i64toi32_i32$2;
      $299$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $2$hi;
      i64toi32_i32$3 = $2;
      i64toi32_i32$4 = 0;
      i64toi32_i32$0 = 32;
      i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$3 << i64toi32_i32$1 | 0;
       $498 = 0;
      } else {
       i64toi32_i32$4 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$1 | 0) | 0;
       $498 = i64toi32_i32$3 << i64toi32_i32$1 | 0;
      }
      $15 = $498;
      $15$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $4$hi;
      i64toi32_i32$4 = $17$hi;
      i64toi32_i32$4 = $4$hi;
      i64toi32_i32$3 = $17$hi;
      i64toi32_i32$3 = __wasm_i64_mul($4 | 0, i64toi32_i32$4 | 0, $17 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
      $305 = i64toi32_i32$3;
      $305$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $15$hi;
      i64toi32_i32$5 = $15;
      i64toi32_i32$3 = $305$hi;
      i64toi32_i32$0 = $305;
      i64toi32_i32$1 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
      i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
      }
      $2 = i64toi32_i32$1;
      $2$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $15$hi;
      i64toi32_i32$2 = $2$hi;
      i64toi32_i32$4 = i64toi32_i32$1;
      i64toi32_i32$5 = $15$hi;
      i64toi32_i32$0 = $15;
      $309 = i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
      i64toi32_i32$4 = 0;
      $310$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $299$hi;
      i64toi32_i32$0 = $299;
      i64toi32_i32$2 = $310$hi;
      i64toi32_i32$5 = $309;
      i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
      i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$2 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $311 = i64toi32_i32$3;
      $311$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $2$hi;
      $312 = $2;
      $312$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $4$hi;
      $313 = $4;
      $313$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $3$hi;
      i64toi32_i32$4 = $3;
      i64toi32_i32$0 = 0;
      i64toi32_i32$5 = 17;
      i64toi32_i32$2 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = 0;
       $499 = i64toi32_i32$1 >>> i64toi32_i32$2 | 0;
      } else {
       i64toi32_i32$0 = i64toi32_i32$1 >>> i64toi32_i32$2 | 0;
       $499 = (((1 << i64toi32_i32$2 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$2 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$2 | 0) | 0;
      }
      i64toi32_i32$1 = $499;
      i64toi32_i32$4 = 0;
      i64toi32_i32$5 = -1;
      i64toi32_i32$4 = i64toi32_i32$0 & i64toi32_i32$4 | 0;
      $16 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
      $16$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $313$hi;
      i64toi32_i32$1 = $16$hi;
      i64toi32_i32$1 = __wasm_i64_mul($313 | 0, i64toi32_i32$4 | 0, $16 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
      $17 = i64toi32_i32$1;
      $17$hi = i64toi32_i32$4;
      $319 = i64toi32_i32$1;
      $319$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $12$hi;
      $320 = $12;
      $320$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $3$hi;
      i64toi32_i32$0 = $3;
      i64toi32_i32$1 = 0;
      i64toi32_i32$5 = 15;
      i64toi32_i32$2 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$0 << i64toi32_i32$2 | 0;
       $501 = 0;
      } else {
       i64toi32_i32$1 = ((1 << i64toi32_i32$2 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$2 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$2 | 0) | 0;
       $501 = i64toi32_i32$0 << i64toi32_i32$2 | 0;
      }
      i64toi32_i32$4 = $501;
      i64toi32_i32$0 = 0;
      i64toi32_i32$5 = -32768;
      i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
      $18 = i64toi32_i32$4 & i64toi32_i32$5 | 0;
      $18$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $320$hi;
      i64toi32_i32$4 = $18$hi;
      i64toi32_i32$4 = __wasm_i64_mul($320 | 0, i64toi32_i32$0 | 0, $18 | 0, i64toi32_i32$4 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
      $325 = i64toi32_i32$4;
      $325$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $319$hi;
      i64toi32_i32$1 = $319;
      i64toi32_i32$4 = $325$hi;
      i64toi32_i32$5 = $325;
      i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
      i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $15 = i64toi32_i32$2;
      $15$hi = i64toi32_i32$3;
      i64toi32_i32$0 = i64toi32_i32$2;
      i64toi32_i32$1 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$4 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
       $502 = 0;
      } else {
       i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$4 | 0) | 0;
       $502 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
      }
      $19 = $502;
      $19$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$1 = $18$hi;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$0 = $18$hi;
      i64toi32_i32$0 = __wasm_i64_mul($4 | 0, i64toi32_i32$1 | 0, $18 | 0, i64toi32_i32$0 | 0) | 0;
      i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
      $332 = i64toi32_i32$0;
      $332$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $19$hi;
      i64toi32_i32$3 = $19;
      i64toi32_i32$0 = $332$hi;
      i64toi32_i32$5 = $332;
      i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
      i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
      }
      $333$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $19$hi;
      i64toi32_i32$2 = $333$hi;
      i64toi32_i32$1 = i64toi32_i32$4;
      i64toi32_i32$3 = $19$hi;
      i64toi32_i32$5 = $19;
      $335 = i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      $336 = $335;
      $336$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $15$hi;
      i64toi32_i32$5 = $15;
      i64toi32_i32$2 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = 0;
       $503 = i64toi32_i32$1 >>> i64toi32_i32$0 | 0;
      } else {
       i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$0 | 0;
       $503 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$0 | 0) | 0;
      }
      $338 = $503;
      $338$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $15$hi;
      i64toi32_i32$2 = $17$hi;
      i64toi32_i32$2 = $15$hi;
      i64toi32_i32$1 = $15;
      i64toi32_i32$5 = $17$hi;
      i64toi32_i32$3 = $17;
      $341 = i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = $341;
      i64toi32_i32$2 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
       $504 = 0;
      } else {
       i64toi32_i32$2 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$0 | 0) | 0;
       $504 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
      }
      $343$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $338$hi;
      i64toi32_i32$1 = $338;
      i64toi32_i32$3 = $343$hi;
      i64toi32_i32$5 = $504;
      i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
      $344 = i64toi32_i32$1 | i64toi32_i32$5 | 0;
      $344$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $12$hi;
      i64toi32_i32$3 = $16$hi;
      i64toi32_i32$3 = $12$hi;
      i64toi32_i32$1 = $16$hi;
      i64toi32_i32$1 = __wasm_i64_mul($12 | 0, i64toi32_i32$3 | 0, $16 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $347 = i64toi32_i32$1;
      $347$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $344$hi;
      i64toi32_i32$2 = $344;
      i64toi32_i32$1 = $347$hi;
      i64toi32_i32$5 = $347;
      i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
      i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $348$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $336$hi;
      i64toi32_i32$3 = $336;
      i64toi32_i32$2 = $348$hi;
      i64toi32_i32$5 = i64toi32_i32$0;
      i64toi32_i32$1 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
      i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$2 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
      }
      $349$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $312$hi;
      i64toi32_i32$4 = $312;
      i64toi32_i32$3 = $349$hi;
      i64toi32_i32$5 = i64toi32_i32$1;
      i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$1 | 0;
      i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $15 = i64toi32_i32$2;
      $15$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$1 = $15$hi;
      i64toi32_i32$0 = i64toi32_i32$2;
      i64toi32_i32$4 = $2$hi;
      i64toi32_i32$5 = $2;
      $353 = i64toi32_i32$1 >>> 0 < i64toi32_i32$4 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$4 | 0) & i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$0 = 0;
      $354$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $311$hi;
      i64toi32_i32$5 = $311;
      i64toi32_i32$1 = $354$hi;
      i64toi32_i32$4 = $353;
      i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
      i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$4 >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
      }
      $355$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $15$hi;
      i64toi32_i32$0 = $15;
      i64toi32_i32$5 = 0;
      i64toi32_i32$4 = 0;
      $357 = (i64toi32_i32$0 | 0) != (i64toi32_i32$4 | 0) | (i64toi32_i32$2 | 0) != (i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$0 = 0;
      $358$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $355$hi;
      i64toi32_i32$4 = i64toi32_i32$3;
      i64toi32_i32$2 = $358$hi;
      i64toi32_i32$5 = $357;
      i64toi32_i32$1 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
      i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $359$hi = i64toi32_i32$3;
      i64toi32_i32$3 = 0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$4 = $359$hi;
      i64toi32_i32$5 = i64toi32_i32$1;
      i64toi32_i32$2 = i64toi32_i32$0 - i64toi32_i32$1 | 0;
      i64toi32_i32$6 = i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0;
      i64toi32_i32$1 = i64toi32_i32$6 + i64toi32_i32$4 | 0;
      i64toi32_i32$1 = i64toi32_i32$3 - i64toi32_i32$1 | 0;
      $2 = i64toi32_i32$2;
      $2$hi = i64toi32_i32$1;
      i64toi32_i32$3 = i64toi32_i32$2;
      i64toi32_i32$0 = 0;
      i64toi32_i32$5 = -1;
      i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
      $16 = i64toi32_i32$2 & i64toi32_i32$5 | 0;
      $16$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $4$hi;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$3 = __wasm_i64_mul($16 | 0, i64toi32_i32$0 | 0, $4 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
      $17 = i64toi32_i32$3;
      $17$hi = i64toi32_i32$0;
      $366 = i64toi32_i32$3;
      $366$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$0 = $12$hi;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$3 = $12$hi;
      i64toi32_i32$3 = __wasm_i64_mul($16 | 0, i64toi32_i32$0 | 0, $12 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
      $18 = i64toi32_i32$3;
      $18$hi = i64toi32_i32$0;
      $370 = i64toi32_i32$3;
      $370$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $4$hi;
      $371 = $4;
      $371$hi = i64toi32_i32$0;
      i64toi32_i32$0 = i64toi32_i32$1;
      i64toi32_i32$0 = i64toi32_i32$1;
      i64toi32_i32$1 = i64toi32_i32$2;
      i64toi32_i32$3 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$4 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = 0;
       $505 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$3 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
       $505 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
      }
      $19 = $505;
      $19$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $371$hi;
      i64toi32_i32$1 = $19$hi;
      i64toi32_i32$1 = __wasm_i64_mul($371 | 0, i64toi32_i32$3 | 0, $19 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $375 = i64toi32_i32$1;
      $375$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $370$hi;
      i64toi32_i32$0 = $370;
      i64toi32_i32$1 = $375$hi;
      i64toi32_i32$5 = $375;
      i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
      i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
      }
      $2 = i64toi32_i32$4;
      $2$hi = i64toi32_i32$2;
      i64toi32_i32$3 = i64toi32_i32$4;
      i64toi32_i32$0 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$3 << i64toi32_i32$1 | 0;
       $507 = 0;
      } else {
       i64toi32_i32$0 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$1 | 0) | 0;
       $507 = i64toi32_i32$3 << i64toi32_i32$1 | 0;
      }
      $378$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $366$hi;
      i64toi32_i32$2 = $366;
      i64toi32_i32$3 = $378$hi;
      i64toi32_i32$5 = $507;
      i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
      i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $16 = i64toi32_i32$1;
      $16$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $17$hi;
      i64toi32_i32$4 = $16$hi;
      i64toi32_i32$0 = i64toi32_i32$1;
      i64toi32_i32$2 = $17$hi;
      i64toi32_i32$5 = $17;
      i64toi32_i32$0 = 0;
      $383 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      $383$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $2$hi;
      i64toi32_i32$5 = $2;
      i64toi32_i32$4 = 0;
      i64toi32_i32$2 = 32;
      i64toi32_i32$3 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = 0;
       $508 = i64toi32_i32$0 >>> i64toi32_i32$3 | 0;
      } else {
       i64toi32_i32$4 = i64toi32_i32$0 >>> i64toi32_i32$3 | 0;
       $508 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$3 | 0) | 0;
      }
      $385 = $508;
      $385$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $2$hi;
      i64toi32_i32$4 = $18$hi;
      i64toi32_i32$4 = $2$hi;
      i64toi32_i32$0 = $2;
      i64toi32_i32$5 = $18$hi;
      i64toi32_i32$2 = $18;
      $388 = i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$0 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$2 = $388;
      i64toi32_i32$4 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$3 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
       $512 = 0;
      } else {
       i64toi32_i32$4 = ((1 << i64toi32_i32$3 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$3 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$3 | 0) | 0;
       $512 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
      }
      $390$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $385$hi;
      i64toi32_i32$0 = $385;
      i64toi32_i32$2 = $390$hi;
      i64toi32_i32$5 = $512;
      i64toi32_i32$2 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
      $391 = i64toi32_i32$0 | i64toi32_i32$5 | 0;
      $391$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$2 = $19$hi;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$0 = $19$hi;
      i64toi32_i32$0 = __wasm_i64_mul($12 | 0, i64toi32_i32$2 | 0, $19 | 0, i64toi32_i32$0 | 0) | 0;
      i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
      $394 = i64toi32_i32$0;
      $394$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $391$hi;
      i64toi32_i32$4 = $391;
      i64toi32_i32$0 = $394$hi;
      i64toi32_i32$5 = $394;
      i64toi32_i32$3 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
      i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $395$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $383$hi;
      i64toi32_i32$2 = $383;
      i64toi32_i32$4 = $395$hi;
      i64toi32_i32$5 = i64toi32_i32$3;
      i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
      i64toi32_i32$3 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $396 = i64toi32_i32$0;
      $396$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $16$hi;
      $397 = $16;
      $397$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$3 = 0;
      i64toi32_i32$1 = 0;
      i64toi32_i32$2 = $15$hi;
      i64toi32_i32$5 = $15;
      i64toi32_i32$4 = i64toi32_i32$1 - i64toi32_i32$5 | 0;
      i64toi32_i32$6 = i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0;
      i64toi32_i32$0 = i64toi32_i32$6 + i64toi32_i32$2 | 0;
      i64toi32_i32$0 = i64toi32_i32$3 - i64toi32_i32$0 | 0;
      $2 = i64toi32_i32$4;
      $2$hi = i64toi32_i32$0;
      i64toi32_i32$3 = i64toi32_i32$4;
      i64toi32_i32$1 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$2 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = 0;
       $513 = i64toi32_i32$0 >>> i64toi32_i32$2 | 0;
      } else {
       i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$2 | 0;
       $513 = (((1 << i64toi32_i32$2 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$2 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$2 | 0) | 0;
      }
      $15 = $513;
      $15$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$1 = $15$hi;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$3 = __wasm_i64_mul($15 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
      $17 = i64toi32_i32$3;
      $17$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$0 = $2;
      i64toi32_i32$3 = 0;
      i64toi32_i32$5 = -1;
      i64toi32_i32$3 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
      $18 = i64toi32_i32$0 & i64toi32_i32$5 | 0;
      $18$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $12$hi;
      i64toi32_i32$3 = $18$hi;
      i64toi32_i32$0 = $12$hi;
      i64toi32_i32$0 = __wasm_i64_mul($18 | 0, i64toi32_i32$3 | 0, $12 | 0, i64toi32_i32$0 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $410 = i64toi32_i32$0;
      $410$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $17$hi;
      i64toi32_i32$1 = $17;
      i64toi32_i32$0 = $410$hi;
      i64toi32_i32$5 = $410;
      i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
      i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $2 = i64toi32_i32$2;
      $2$hi = i64toi32_i32$4;
      i64toi32_i32$3 = i64toi32_i32$2;
      i64toi32_i32$1 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
       $514 = 0;
      } else {
       i64toi32_i32$1 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$0 | 0) | 0;
       $514 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
      }
      $19 = $514;
      $19$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $18$hi;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$1 = $18$hi;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$3 = __wasm_i64_mul($18 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
      $417 = i64toi32_i32$3;
      $417$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $19$hi;
      i64toi32_i32$4 = $19;
      i64toi32_i32$3 = $417$hi;
      i64toi32_i32$5 = $417;
      i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
      i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
      }
      $418$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $19$hi;
      i64toi32_i32$2 = $418$hi;
      i64toi32_i32$1 = i64toi32_i32$0;
      i64toi32_i32$4 = $19$hi;
      i64toi32_i32$5 = $19;
      $420 = i64toi32_i32$2 >>> 0 < i64toi32_i32$4 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$4 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      $421 = $420;
      $421$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$5 = $2;
      i64toi32_i32$2 = 0;
      i64toi32_i32$4 = 32;
      i64toi32_i32$3 = i64toi32_i32$4 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = 0;
       $515 = i64toi32_i32$1 >>> i64toi32_i32$3 | 0;
      } else {
       i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$3 | 0;
       $515 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$3 | 0) | 0;
      }
      $423 = $515;
      $423$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $2$hi;
      i64toi32_i32$2 = $17$hi;
      i64toi32_i32$2 = $2$hi;
      i64toi32_i32$1 = $2;
      i64toi32_i32$5 = $17$hi;
      i64toi32_i32$4 = $17;
      $426 = i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$4 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      i64toi32_i32$4 = $426;
      i64toi32_i32$2 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$3 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$4 << i64toi32_i32$3 | 0;
       $516 = 0;
      } else {
       i64toi32_i32$2 = ((1 << i64toi32_i32$3 | 0) - 1 | 0) & (i64toi32_i32$4 >>> (32 - i64toi32_i32$3 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$3 | 0) | 0;
       $516 = i64toi32_i32$4 << i64toi32_i32$3 | 0;
      }
      $428$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $423$hi;
      i64toi32_i32$1 = $423;
      i64toi32_i32$4 = $428$hi;
      i64toi32_i32$5 = $516;
      i64toi32_i32$4 = i64toi32_i32$2 | i64toi32_i32$4 | 0;
      $429 = i64toi32_i32$1 | i64toi32_i32$5 | 0;
      $429$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $15$hi;
      i64toi32_i32$4 = $12$hi;
      i64toi32_i32$4 = $15$hi;
      i64toi32_i32$1 = $12$hi;
      i64toi32_i32$1 = __wasm_i64_mul($15 | 0, i64toi32_i32$4 | 0, $12 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
      $432 = i64toi32_i32$1;
      $432$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $429$hi;
      i64toi32_i32$2 = $429;
      i64toi32_i32$1 = $432$hi;
      i64toi32_i32$5 = $432;
      i64toi32_i32$3 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
      i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
      }
      $433$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $421$hi;
      i64toi32_i32$4 = $421;
      i64toi32_i32$2 = $433$hi;
      i64toi32_i32$5 = i64toi32_i32$3;
      i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
      i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $434$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $397$hi;
      i64toi32_i32$0 = $397;
      i64toi32_i32$4 = $434$hi;
      i64toi32_i32$5 = i64toi32_i32$1;
      i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
      i64toi32_i32$1 = i64toi32_i32$3 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $2 = i64toi32_i32$2;
      $2$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $16$hi;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$3 = i64toi32_i32$2;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$5 = $16;
      $438 = i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$3 = 0;
      $439$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $396$hi;
      i64toi32_i32$5 = $396;
      i64toi32_i32$1 = $439$hi;
      i64toi32_i32$0 = $438;
      i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
      i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
      }
      $440 = i64toi32_i32$4;
      $440$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $2$hi;
      i64toi32_i32$3 = $2;
      i64toi32_i32$5 = -1;
      i64toi32_i32$0 = -2;
      i64toi32_i32$1 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $17 = i64toi32_i32$1;
      $17$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $2$hi;
      i64toi32_i32$4 = $17$hi;
      i64toi32_i32$2 = i64toi32_i32$1;
      i64toi32_i32$3 = $2$hi;
      i64toi32_i32$0 = $2;
      $445 = i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
      i64toi32_i32$2 = 0;
      $446$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $440$hi;
      i64toi32_i32$0 = $440;
      i64toi32_i32$4 = $446$hi;
      i64toi32_i32$3 = $445;
      i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
      i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      i64toi32_i32$2 = i64toi32_i32$5;
      i64toi32_i32$0 = -1;
      i64toi32_i32$3 = -1;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
      i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $15 = i64toi32_i32$4;
      $15$hi = i64toi32_i32$5;
      i64toi32_i32$1 = i64toi32_i32$4;
      i64toi32_i32$2 = 0;
      i64toi32_i32$3 = -1;
      i64toi32_i32$2 = i64toi32_i32$5 & i64toi32_i32$2 | 0;
      $2 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
      $2$hi = i64toi32_i32$2;
      $451 = $2;
      $451$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $1$hi;
      i64toi32_i32$5 = $1;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = 62;
      i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = 0;
       $518 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
      } else {
       i64toi32_i32$1 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
       $518 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$0 | 0) | 0;
      }
      $453 = $518;
      $453$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $7$hi;
      i64toi32_i32$2 = $7;
      i64toi32_i32$5 = 0;
      i64toi32_i32$3 = 2;
      i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$2 << i64toi32_i32$0 | 0;
       $521 = 0;
      } else {
       i64toi32_i32$5 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$0 | 0) | 0;
       $521 = i64toi32_i32$2 << i64toi32_i32$0 | 0;
      }
      $455$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $453$hi;
      i64toi32_i32$1 = $453;
      i64toi32_i32$2 = $455$hi;
      i64toi32_i32$3 = $521;
      i64toi32_i32$2 = i64toi32_i32$5 | i64toi32_i32$2 | 0;
      i64toi32_i32$5 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = -1;
      i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
      $4 = i64toi32_i32$5 & i64toi32_i32$3 | 0;
      $4$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $451$hi;
      i64toi32_i32$5 = $4$hi;
      i64toi32_i32$5 = __wasm_i64_mul($451 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
      $16 = i64toi32_i32$5;
      $16$hi = i64toi32_i32$1;
      $460 = i64toi32_i32$5;
      $460$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $1$hi;
      i64toi32_i32$2 = $1;
      i64toi32_i32$5 = 0;
      i64toi32_i32$3 = 30;
      i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$5 = 0;
       $522 = i64toi32_i32$1 >>> i64toi32_i32$0 | 0;
      } else {
       i64toi32_i32$5 = i64toi32_i32$1 >>> i64toi32_i32$0 | 0;
       $522 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$0 | 0) | 0;
      }
      i64toi32_i32$1 = $522;
      i64toi32_i32$2 = 0;
      i64toi32_i32$3 = -1;
      i64toi32_i32$2 = i64toi32_i32$5 & i64toi32_i32$2 | 0;
      $12 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
      $12$hi = i64toi32_i32$2;
      $464 = $12;
      $464$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $15$hi;
      i64toi32_i32$5 = $15;
      i64toi32_i32$1 = 0;
      i64toi32_i32$3 = 32;
      i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = 0;
       $523 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
      } else {
       i64toi32_i32$1 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
       $523 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$0 | 0) | 0;
      }
      $15 = $523;
      $15$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $464$hi;
      i64toi32_i32$5 = $15$hi;
      i64toi32_i32$5 = __wasm_i64_mul($464 | 0, i64toi32_i32$1 | 0, $15 | 0, i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
      $468 = i64toi32_i32$5;
      $468$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $460$hi;
      i64toi32_i32$2 = $460;
      i64toi32_i32$5 = $468$hi;
      i64toi32_i32$3 = $468;
      i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
      i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $18 = i64toi32_i32$0;
      $18$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $16$hi;
      i64toi32_i32$4 = $18$hi;
      i64toi32_i32$1 = i64toi32_i32$0;
      i64toi32_i32$2 = $16$hi;
      i64toi32_i32$3 = $16;
      $472 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      $473 = $472;
      $473$hi = i64toi32_i32$1;
      i64toi32_i32$1 = i64toi32_i32$4;
      $474 = i64toi32_i32$0;
      $474$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $17$hi;
      i64toi32_i32$3 = $17;
      i64toi32_i32$4 = 0;
      i64toi32_i32$2 = 32;
      i64toi32_i32$5 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = 0;
       $524 = i64toi32_i32$1 >>> i64toi32_i32$5 | 0;
      } else {
       i64toi32_i32$4 = i64toi32_i32$1 >>> i64toi32_i32$5 | 0;
       $524 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$5 | 0) | 0;
      }
      $16 = $524;
      $16$hi = i64toi32_i32$4;
      $477 = $16;
      $477$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $7$hi;
      i64toi32_i32$1 = $7;
      i64toi32_i32$3 = 0;
      i64toi32_i32$2 = 30;
      i64toi32_i32$5 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = 0;
       $525 = i64toi32_i32$4 >>> i64toi32_i32$5 | 0;
      } else {
       i64toi32_i32$3 = i64toi32_i32$4 >>> i64toi32_i32$5 | 0;
       $525 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$5 | 0) | 0;
      }
      i64toi32_i32$4 = $525;
      i64toi32_i32$1 = 0;
      i64toi32_i32$2 = -262145;
      i64toi32_i32$1 = i64toi32_i32$3 & i64toi32_i32$1 | 0;
      i64toi32_i32$3 = i64toi32_i32$4 & i64toi32_i32$2 | 0;
      i64toi32_i32$4 = 0;
      i64toi32_i32$2 = 262144;
      i64toi32_i32$4 = i64toi32_i32$1 | i64toi32_i32$4 | 0;
      $7 = i64toi32_i32$3 | i64toi32_i32$2 | 0;
      $7$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $477$hi;
      i64toi32_i32$3 = $7$hi;
      i64toi32_i32$3 = __wasm_i64_mul($477 | 0, i64toi32_i32$4 | 0, $7 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
      $483 = i64toi32_i32$3;
      $483$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $474$hi;
      i64toi32_i32$1 = $474;
      i64toi32_i32$3 = $483$hi;
      i64toi32_i32$2 = $483;
      i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
      i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
      }
      $19 = i64toi32_i32$5;
      $19$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $18$hi;
      i64toi32_i32$0 = $19$hi;
      i64toi32_i32$4 = i64toi32_i32$5;
      i64toi32_i32$1 = $18$hi;
      i64toi32_i32$2 = $18;
      $487 = i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
      i64toi32_i32$4 = 0;
      $488$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $473$hi;
      i64toi32_i32$2 = $473;
      i64toi32_i32$0 = $488$hi;
      i64toi32_i32$1 = $487;
      i64toi32_i32$3 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
      i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$1 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $489$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $7$hi;
      i64toi32_i32$5 = $15$hi;
      i64toi32_i32$5 = $7$hi;
      i64toi32_i32$2 = $15$hi;
      i64toi32_i32$2 = __wasm_i64_mul($7 | 0, i64toi32_i32$5 | 0, $15 | 0, i64toi32_i32$2 | 0) | 0;
      i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
      $492 = i64toi32_i32$2;
      $492$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $489$hi;
      i64toi32_i32$4 = i64toi32_i32$3;
      i64toi32_i32$2 = $492$hi;
      i64toi32_i32$1 = $492;
      i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
      i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $493 = i64toi32_i32$0;
      $493$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $2$hi;
      i64toi32_i32$3 = $7$hi;
      i64toi32_i32$3 = $2$hi;
      i64toi32_i32$4 = $7$hi;
      i64toi32_i32$4 = __wasm_i64_mul($2 | 0, i64toi32_i32$3 | 0, $7 | 0, i64toi32_i32$4 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $20 = i64toi32_i32$4;
      $20$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$4 = $15$hi;
      i64toi32_i32$4 = __wasm_i64_mul($4 | 0, i64toi32_i32$3 | 0, $15 | 0, i64toi32_i32$4 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $500 = i64toi32_i32$4;
      $500$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $20$hi;
      i64toi32_i32$5 = $20;
      i64toi32_i32$4 = $500$hi;
      i64toi32_i32$1 = $500;
      i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$1 | 0;
      i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$2 >>> 0 < i64toi32_i32$1 >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
      }
      $18 = i64toi32_i32$2;
      $18$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $20$hi;
      i64toi32_i32$0 = $18$hi;
      i64toi32_i32$3 = i64toi32_i32$2;
      i64toi32_i32$5 = $20$hi;
      i64toi32_i32$1 = $20;
      i64toi32_i32$3 = 0;
      i64toi32_i32$1 = i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$1 >>> 0 | 0) | 0;
      i64toi32_i32$0 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$4 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
       $526 = 0;
      } else {
       i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$4 | 0) | 0;
       $526 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
      }
      $506 = $526;
      $506$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $18$hi;
      i64toi32_i32$3 = $18;
      i64toi32_i32$1 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$4 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = 0;
       $527 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
       $527 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$4 | 0) | 0;
      }
      $508$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $506$hi;
      i64toi32_i32$0 = $506;
      i64toi32_i32$3 = $508$hi;
      i64toi32_i32$5 = $527;
      i64toi32_i32$3 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
      $509 = i64toi32_i32$0 | i64toi32_i32$5 | 0;
      $509$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $493$hi;
      i64toi32_i32$1 = $493;
      i64toi32_i32$0 = $509$hi;
      i64toi32_i32$5 = $509;
      i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
      i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
      }
      $510 = i64toi32_i32$4;
      $510$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $19$hi;
      $511 = $19;
      $511$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $18$hi;
      i64toi32_i32$3 = $18;
      i64toi32_i32$1 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
       $528 = 0;
      } else {
       i64toi32_i32$1 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$0 | 0) | 0;
       $528 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
      }
      $513$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $511$hi;
      i64toi32_i32$2 = $511;
      i64toi32_i32$3 = $513$hi;
      i64toi32_i32$5 = $528;
      i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
      i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $18 = i64toi32_i32$0;
      $18$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $19$hi;
      i64toi32_i32$4 = $18$hi;
      i64toi32_i32$1 = i64toi32_i32$0;
      i64toi32_i32$2 = $19$hi;
      i64toi32_i32$5 = $19;
      $517 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      $518$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $510$hi;
      i64toi32_i32$5 = $510;
      i64toi32_i32$4 = $518$hi;
      i64toi32_i32$2 = $517;
      i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
      i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
      }
      $519 = i64toi32_i32$3;
      $519$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $18$hi;
      $520 = $18;
      $520$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$0 = $12$hi;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$5 = $12$hi;
      i64toi32_i32$5 = __wasm_i64_mul($16 | 0, i64toi32_i32$0 | 0, $12 | 0, i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
      $20 = i64toi32_i32$5;
      $20$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $17$hi;
      i64toi32_i32$1 = $17;
      i64toi32_i32$5 = 0;
      i64toi32_i32$2 = -1;
      i64toi32_i32$5 = i64toi32_i32$0 & i64toi32_i32$5 | 0;
      $17 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
      $17$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $4$hi;
      i64toi32_i32$5 = $17$hi;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$1 = __wasm_i64_mul($17 | 0, i64toi32_i32$5 | 0, $4 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
      $529 = i64toi32_i32$1;
      $529$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $20$hi;
      i64toi32_i32$0 = $20;
      i64toi32_i32$1 = $529$hi;
      i64toi32_i32$2 = $529;
      i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
      i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $19 = i64toi32_i32$4;
      $19$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $20$hi;
      i64toi32_i32$3 = $19$hi;
      i64toi32_i32$5 = i64toi32_i32$4;
      i64toi32_i32$0 = $20$hi;
      i64toi32_i32$2 = $20;
      i64toi32_i32$5 = 0;
      $534 = i64toi32_i32$3 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
      $534$hi = i64toi32_i32$5;
      i64toi32_i32$5 = i64toi32_i32$3;
      $535 = i64toi32_i32$4;
      $535$hi = i64toi32_i32$3;
      i64toi32_i32$5 = $2$hi;
      $536 = $2;
      $536$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $1$hi;
      i64toi32_i32$2 = $1;
      i64toi32_i32$3 = 0;
      i64toi32_i32$0 = 2;
      i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
       $530 = 0;
      } else {
       i64toi32_i32$3 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$1 | 0) | 0;
       $530 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
      }
      i64toi32_i32$5 = $530;
      i64toi32_i32$2 = 0;
      i64toi32_i32$0 = -4;
      i64toi32_i32$2 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
      $20 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
      $20$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $536$hi;
      i64toi32_i32$5 = $20$hi;
      i64toi32_i32$5 = __wasm_i64_mul($536 | 0, i64toi32_i32$2 | 0, $20 | 0, i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
      $541 = i64toi32_i32$5;
      $541$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $535$hi;
      i64toi32_i32$3 = $535;
      i64toi32_i32$5 = $541$hi;
      i64toi32_i32$0 = $541;
      i64toi32_i32$1 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $21 = i64toi32_i32$1;
      $21$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $19$hi;
      i64toi32_i32$4 = $21$hi;
      i64toi32_i32$2 = i64toi32_i32$1;
      i64toi32_i32$3 = $19$hi;
      i64toi32_i32$0 = $19;
      $545 = i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
      i64toi32_i32$2 = 0;
      $546$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $534$hi;
      i64toi32_i32$0 = $534;
      i64toi32_i32$4 = $546$hi;
      i64toi32_i32$3 = $545;
      i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
      i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $547$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $520$hi;
      i64toi32_i32$2 = $520;
      i64toi32_i32$0 = $547$hi;
      i64toi32_i32$3 = i64toi32_i32$5;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
      i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $19 = i64toi32_i32$4;
      $19$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $18$hi;
      i64toi32_i32$5 = $19$hi;
      i64toi32_i32$1 = i64toi32_i32$4;
      i64toi32_i32$2 = $18$hi;
      i64toi32_i32$3 = $18;
      $551 = i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      $552$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $519$hi;
      i64toi32_i32$3 = $519;
      i64toi32_i32$5 = $552$hi;
      i64toi32_i32$2 = $551;
      i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
      i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $553 = i64toi32_i32$0;
      $553$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $19$hi;
      $554 = $19;
      $554$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $20$hi;
      i64toi32_i32$4 = $15$hi;
      i64toi32_i32$4 = $20$hi;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$3 = __wasm_i64_mul($20 | 0, i64toi32_i32$4 | 0, $15 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
      $18 = i64toi32_i32$3;
      $18$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $17$hi;
      i64toi32_i32$4 = $7$hi;
      i64toi32_i32$4 = $17$hi;
      i64toi32_i32$3 = $7$hi;
      i64toi32_i32$3 = __wasm_i64_mul($17 | 0, i64toi32_i32$4 | 0, $7 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
      $561 = i64toi32_i32$3;
      $561$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $18$hi;
      i64toi32_i32$1 = $18;
      i64toi32_i32$3 = $561$hi;
      i64toi32_i32$2 = $561;
      i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
      i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
      }
      $15 = i64toi32_i32$5;
      $15$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$0 = $4$hi;
      i64toi32_i32$0 = $16$hi;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$1 = __wasm_i64_mul($16 | 0, i64toi32_i32$0 | 0, $4 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
      $566 = i64toi32_i32$1;
      $566$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $15$hi;
      i64toi32_i32$4 = i64toi32_i32$5;
      i64toi32_i32$1 = $566$hi;
      i64toi32_i32$2 = $566;
      i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
      i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $4 = i64toi32_i32$3;
      $4$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $2$hi;
      i64toi32_i32$5 = $12$hi;
      i64toi32_i32$5 = $2$hi;
      i64toi32_i32$4 = $12$hi;
      i64toi32_i32$4 = __wasm_i64_mul($2 | 0, i64toi32_i32$5 | 0, $12 | 0, i64toi32_i32$4 | 0) | 0;
      i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
      $571 = i64toi32_i32$4;
      $571$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $4$hi;
      i64toi32_i32$0 = i64toi32_i32$3;
      i64toi32_i32$4 = $571$hi;
      i64toi32_i32$2 = $571;
      i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
      i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $2 = i64toi32_i32$1;
      $2$hi = i64toi32_i32$3;
      i64toi32_i32$5 = i64toi32_i32$1;
      i64toi32_i32$0 = 0;
      i64toi32_i32$2 = 32;
      i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = 0;
       $531 = i64toi32_i32$3 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$0 = i64toi32_i32$3 >>> i64toi32_i32$4 | 0;
       $531 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$4 | 0) | 0;
      }
      $574 = $531;
      $574$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $15$hi;
      i64toi32_i32$0 = $18$hi;
      i64toi32_i32$0 = $15$hi;
      i64toi32_i32$3 = $15;
      i64toi32_i32$5 = $18$hi;
      i64toi32_i32$2 = $18;
      $577 = i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
      i64toi32_i32$3 = 0;
      $578$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$3 = i64toi32_i32$0;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$2 = $4;
      i64toi32_i32$5 = $15;
      $581 = i64toi32_i32$3 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$2 = 0;
      $582$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $578$hi;
      i64toi32_i32$5 = $577;
      i64toi32_i32$3 = $582$hi;
      i64toi32_i32$0 = $581;
      i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
      i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $583$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$2 = $2;
      i64toi32_i32$5 = $4$hi;
      i64toi32_i32$0 = $4;
      $586 = i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
      i64toi32_i32$2 = 0;
      $587$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $583$hi;
      i64toi32_i32$0 = i64toi32_i32$4;
      i64toi32_i32$1 = $587$hi;
      i64toi32_i32$5 = $586;
      i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      i64toi32_i32$2 = i64toi32_i32$3;
      i64toi32_i32$0 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
       $532 = 0;
      } else {
       i64toi32_i32$0 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$1 | 0) | 0;
       $532 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
      }
      $589$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $574$hi;
      i64toi32_i32$4 = $574;
      i64toi32_i32$2 = $589$hi;
      i64toi32_i32$5 = $532;
      i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
      $590 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
      $590$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $554$hi;
      i64toi32_i32$0 = $554;
      i64toi32_i32$4 = $590$hi;
      i64toi32_i32$5 = $590;
      i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
      i64toi32_i32$3 = i64toi32_i32$2 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $15 = i64toi32_i32$1;
      $15$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $19$hi;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$2 = i64toi32_i32$1;
      i64toi32_i32$0 = $19$hi;
      i64toi32_i32$5 = $19;
      $594 = i64toi32_i32$3 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$2 = 0;
      $595$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $553$hi;
      i64toi32_i32$5 = $553;
      i64toi32_i32$3 = $595$hi;
      i64toi32_i32$0 = $594;
      i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
      i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $596 = i64toi32_i32$4;
      $596$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $15$hi;
      $597 = $15;
      $597$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $21$hi;
      $598 = $21;
      $598$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $16$hi;
      i64toi32_i32$1 = $20$hi;
      i64toi32_i32$1 = $16$hi;
      i64toi32_i32$5 = $20$hi;
      i64toi32_i32$5 = __wasm_i64_mul($16 | 0, i64toi32_i32$1 | 0, $20 | 0, i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
      $4 = i64toi32_i32$5;
      $4$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $17$hi;
      i64toi32_i32$1 = $12$hi;
      i64toi32_i32$1 = $17$hi;
      i64toi32_i32$5 = $12$hi;
      i64toi32_i32$5 = __wasm_i64_mul($17 | 0, i64toi32_i32$1 | 0, $12 | 0, i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
      $605 = i64toi32_i32$5;
      $605$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$2 = $4;
      i64toi32_i32$5 = $605$hi;
      i64toi32_i32$0 = $605;
      i64toi32_i32$3 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
      i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $12 = i64toi32_i32$3;
      $12$hi = i64toi32_i32$4;
      i64toi32_i32$1 = i64toi32_i32$3;
      i64toi32_i32$2 = 0;
      i64toi32_i32$0 = 32;
      i64toi32_i32$5 = i64toi32_i32$0 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = 0;
       $533 = i64toi32_i32$4 >>> i64toi32_i32$5 | 0;
      } else {
       i64toi32_i32$2 = i64toi32_i32$4 >>> i64toi32_i32$5 | 0;
       $533 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$5 | 0) | 0;
      }
      $608 = $533;
      $608$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$2 = $4$hi;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$4 = $12;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$0 = $4;
      $611 = i64toi32_i32$2 >>> 0 < i64toi32_i32$1 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
      i64toi32_i32$4 = 0;
      i64toi32_i32$0 = $611;
      i64toi32_i32$2 = 0;
      i64toi32_i32$1 = 32;
      i64toi32_i32$5 = i64toi32_i32$1 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$5 | 0;
       $537 = 0;
      } else {
       i64toi32_i32$2 = ((1 << i64toi32_i32$5 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$5 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$5 | 0) | 0;
       $537 = i64toi32_i32$0 << i64toi32_i32$5 | 0;
      }
      $613$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $608$hi;
      i64toi32_i32$4 = $608;
      i64toi32_i32$0 = $613$hi;
      i64toi32_i32$1 = $537;
      i64toi32_i32$0 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
      $614 = i64toi32_i32$4 | i64toi32_i32$1 | 0;
      $614$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $598$hi;
      i64toi32_i32$2 = $598;
      i64toi32_i32$4 = $614$hi;
      i64toi32_i32$1 = $614;
      i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
      i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$1 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $4 = i64toi32_i32$5;
      $4$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $21$hi;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$0 = i64toi32_i32$5;
      i64toi32_i32$2 = $21$hi;
      i64toi32_i32$1 = $21;
      $618 = i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0 | 0) | 0;
      i64toi32_i32$0 = 0;
      $619 = $618;
      $619$hi = i64toi32_i32$0;
      i64toi32_i32$0 = i64toi32_i32$3;
      $620 = i64toi32_i32$5;
      $620$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $2$hi;
      i64toi32_i32$1 = $2;
      i64toi32_i32$3 = 0;
      i64toi32_i32$2 = 32;
      i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
       $538 = 0;
      } else {
       i64toi32_i32$3 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
       $538 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
      }
      $622$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $620$hi;
      i64toi32_i32$0 = $620;
      i64toi32_i32$1 = $622$hi;
      i64toi32_i32$2 = $538;
      i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
      i64toi32_i32$5 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $623$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $4$hi;
      i64toi32_i32$5 = $623$hi;
      i64toi32_i32$3 = i64toi32_i32$4;
      i64toi32_i32$0 = $4$hi;
      i64toi32_i32$2 = $4;
      $625 = i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
      i64toi32_i32$3 = 0;
      $626$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $619$hi;
      i64toi32_i32$2 = $619;
      i64toi32_i32$5 = $626$hi;
      i64toi32_i32$0 = $625;
      i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
      i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $627$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $597$hi;
      i64toi32_i32$3 = $597;
      i64toi32_i32$2 = $627$hi;
      i64toi32_i32$0 = i64toi32_i32$1;
      i64toi32_i32$5 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
      i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$2 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $4 = i64toi32_i32$5;
      $4$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $15$hi;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$4 = i64toi32_i32$5;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$0 = $15;
      $631 = i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
      i64toi32_i32$4 = 0;
      $632$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $596$hi;
      i64toi32_i32$0 = $596;
      i64toi32_i32$1 = $632$hi;
      i64toi32_i32$3 = $631;
      i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
      i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $2 = i64toi32_i32$2;
      $2$hi = i64toi32_i32$5;
      i64toi32_i32$4 = i64toi32_i32$2;
      i64toi32_i32$0 = 131071;
      i64toi32_i32$3 = -1;
      if (i64toi32_i32$5 >>> 0 > i64toi32_i32$0 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$2 >>> 0 > i64toi32_i32$3 >>> 0 | 0) | 0) {
       break label$13
      }
      i64toi32_i32$4 = $1$hi;
      i64toi32_i32$3 = $1;
      i64toi32_i32$5 = 0;
      i64toi32_i32$0 = 49;
      i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$3 << i64toi32_i32$1 | 0;
       $539 = 0;
      } else {
       i64toi32_i32$5 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$1 | 0) | 0;
       $539 = i64toi32_i32$3 << i64toi32_i32$1 | 0;
      }
      $637$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $4$hi;
      i64toi32_i32$4 = $4;
      i64toi32_i32$3 = 0;
      i64toi32_i32$0 = -1;
      i64toi32_i32$3 = i64toi32_i32$5 & i64toi32_i32$3 | 0;
      $1 = i64toi32_i32$4 & i64toi32_i32$0 | 0;
      $1$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $3$hi;
      i64toi32_i32$5 = $3;
      i64toi32_i32$4 = 0;
      i64toi32_i32$0 = -1;
      i64toi32_i32$4 = i64toi32_i32$3 & i64toi32_i32$4 | 0;
      $12 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
      $12$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $1$hi;
      i64toi32_i32$5 = $12$hi;
      i64toi32_i32$5 = __wasm_i64_mul($1 | 0, i64toi32_i32$4 | 0, $12 | 0, i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
      $15 = i64toi32_i32$5;
      $15$hi = i64toi32_i32$4;
      i64toi32_i32$3 = i64toi32_i32$5;
      i64toi32_i32$5 = 0;
      i64toi32_i32$0 = 0;
      $646 = (i64toi32_i32$3 | 0) != (i64toi32_i32$0 | 0) | (i64toi32_i32$4 | 0) != (i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$3 = 0;
      $647$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $637$hi;
      i64toi32_i32$0 = $539;
      i64toi32_i32$4 = $647$hi;
      i64toi32_i32$5 = $646;
      i64toi32_i32$1 = i64toi32_i32$0 - i64toi32_i32$5 | 0;
      i64toi32_i32$6 = i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0;
      i64toi32_i32$2 = i64toi32_i32$6 + i64toi32_i32$4 | 0;
      i64toi32_i32$2 = i64toi32_i32$3 - i64toi32_i32$2 | 0;
      $648 = i64toi32_i32$1;
      $648$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $15$hi;
      i64toi32_i32$2 = 0;
      i64toi32_i32$3 = 0;
      i64toi32_i32$0 = $15$hi;
      i64toi32_i32$5 = $15;
      i64toi32_i32$4 = i64toi32_i32$3 - i64toi32_i32$5 | 0;
      i64toi32_i32$6 = i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0;
      i64toi32_i32$1 = i64toi32_i32$6 + i64toi32_i32$0 | 0;
      i64toi32_i32$1 = i64toi32_i32$2 - i64toi32_i32$1 | 0;
      $17 = i64toi32_i32$4;
      $17$hi = i64toi32_i32$1;
      $651 = i64toi32_i32$4;
      $651$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $4$hi;
      i64toi32_i32$2 = $4;
      i64toi32_i32$3 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = 0;
       $540 = i64toi32_i32$1 >>> i64toi32_i32$0 | 0;
      } else {
       i64toi32_i32$3 = i64toi32_i32$1 >>> i64toi32_i32$0 | 0;
       $540 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$0 | 0) | 0;
      }
      $15 = $540;
      $15$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $12$hi;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$2 = __wasm_i64_mul($15 | 0, i64toi32_i32$3 | 0, $12 | 0, i64toi32_i32$2 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $18 = i64toi32_i32$2;
      $18$hi = i64toi32_i32$3;
      $657 = i64toi32_i32$2;
      $657$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $1$hi;
      $658 = $1;
      $658$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $3$hi;
      i64toi32_i32$1 = $3;
      i64toi32_i32$2 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$2 = 0;
       $542 = i64toi32_i32$3 >>> i64toi32_i32$0 | 0;
      } else {
       i64toi32_i32$2 = i64toi32_i32$3 >>> i64toi32_i32$0 | 0;
       $542 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$0 | 0) | 0;
      }
      $16 = $542;
      $16$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $658$hi;
      i64toi32_i32$1 = $16$hi;
      i64toi32_i32$1 = __wasm_i64_mul($658 | 0, i64toi32_i32$2 | 0, $16 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
      $662 = i64toi32_i32$1;
      $662$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $657$hi;
      i64toi32_i32$3 = $657;
      i64toi32_i32$1 = $662$hi;
      i64toi32_i32$5 = $662;
      i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $7 = i64toi32_i32$0;
      $7$hi = i64toi32_i32$4;
      i64toi32_i32$2 = i64toi32_i32$0;
      i64toi32_i32$3 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
       $543 = 0;
      } else {
       i64toi32_i32$3 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$1 | 0) | 0;
       $543 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
      }
      $19 = $543;
      $19$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $651$hi;
      i64toi32_i32$4 = $651;
      i64toi32_i32$2 = $19$hi;
      i64toi32_i32$5 = $19;
      $667 = i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$4 = 0;
      $668$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $648$hi;
      i64toi32_i32$5 = $648;
      i64toi32_i32$3 = $668$hi;
      i64toi32_i32$2 = $667;
      i64toi32_i32$1 = i64toi32_i32$5 - i64toi32_i32$2 | 0;
      i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0;
      i64toi32_i32$0 = i64toi32_i32$6 + i64toi32_i32$3 | 0;
      i64toi32_i32$0 = i64toi32_i32$4 - i64toi32_i32$0 | 0;
      $669 = i64toi32_i32$1;
      $669$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $4$hi;
      $670 = $4;
      $670$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $14$hi;
      i64toi32_i32$4 = $14;
      i64toi32_i32$5 = 0;
      i64toi32_i32$2 = 32;
      i64toi32_i32$3 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$5 = 0;
       $544 = i64toi32_i32$0 >>> i64toi32_i32$3 | 0;
      } else {
       i64toi32_i32$5 = i64toi32_i32$0 >>> i64toi32_i32$3 | 0;
       $544 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$3 | 0) | 0;
      }
      $672$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $670$hi;
      i64toi32_i32$4 = $672$hi;
      i64toi32_i32$4 = __wasm_i64_mul($670 | 0, i64toi32_i32$5 | 0, $544 | 0, i64toi32_i32$4 | 0) | 0;
      i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
      $673 = i64toi32_i32$4;
      $673$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $3$hi;
      $674 = $3;
      $674$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $2$hi;
      i64toi32_i32$0 = $2;
      i64toi32_i32$4 = 0;
      i64toi32_i32$2 = 32;
      i64toi32_i32$3 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = 0;
       $546 = i64toi32_i32$5 >>> i64toi32_i32$3 | 0;
      } else {
       i64toi32_i32$4 = i64toi32_i32$5 >>> i64toi32_i32$3 | 0;
       $546 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$3 | 0) | 0;
      }
      $676$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $674$hi;
      i64toi32_i32$0 = $676$hi;
      i64toi32_i32$0 = __wasm_i64_mul($674 | 0, i64toi32_i32$4 | 0, $546 | 0, i64toi32_i32$0 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
      $677 = i64toi32_i32$0;
      $677$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $673$hi;
      i64toi32_i32$5 = $673;
      i64toi32_i32$0 = $677$hi;
      i64toi32_i32$2 = $677;
      i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
      i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $678$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$1 = $16$hi;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$5 = $16$hi;
      i64toi32_i32$5 = __wasm_i64_mul($2 | 0, i64toi32_i32$1 | 0, $16 | 0, i64toi32_i32$5 | 0) | 0;
      i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
      $681 = i64toi32_i32$5;
      $681$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $678$hi;
      i64toi32_i32$4 = i64toi32_i32$3;
      i64toi32_i32$5 = $681$hi;
      i64toi32_i32$2 = $681;
      i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
      i64toi32_i32$3 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
      if (i64toi32_i32$0 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $682$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$3 = $6$hi;
      i64toi32_i32$3 = $15$hi;
      i64toi32_i32$4 = $6$hi;
      i64toi32_i32$4 = __wasm_i64_mul($15 | 0, i64toi32_i32$3 | 0, $6 | 0, i64toi32_i32$4 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $685 = i64toi32_i32$4;
      $685$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $682$hi;
      i64toi32_i32$1 = i64toi32_i32$0;
      i64toi32_i32$4 = $685$hi;
      i64toi32_i32$2 = $685;
      i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
      i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
      }
      i64toi32_i32$3 = i64toi32_i32$5;
      i64toi32_i32$1 = 0;
      i64toi32_i32$2 = 32;
      i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$3 << i64toi32_i32$4 | 0;
       $547 = 0;
      } else {
       i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
       $547 = i64toi32_i32$3 << i64toi32_i32$4 | 0;
      }
      $687 = $547;
      $687$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$0 = $2;
      i64toi32_i32$3 = 0;
      i64toi32_i32$2 = -1;
      i64toi32_i32$3 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
      $689$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $12$hi;
      i64toi32_i32$3 = $689$hi;
      $578 = i64toi32_i32$0 & i64toi32_i32$2 | 0;
      i64toi32_i32$0 = $12$hi;
      i64toi32_i32$0 = __wasm_i64_mul($578 | 0, i64toi32_i32$3 | 0, $12 | 0, i64toi32_i32$0 | 0) | 0;
      i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
      $691 = i64toi32_i32$0;
      $691$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $1$hi;
      i64toi32_i32$3 = $6$hi;
      i64toi32_i32$1 = $6;
      i64toi32_i32$0 = 0;
      i64toi32_i32$2 = -1;
      i64toi32_i32$0 = i64toi32_i32$3 & i64toi32_i32$0 | 0;
      $694 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
      $694$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $1$hi;
      i64toi32_i32$1 = $694$hi;
      i64toi32_i32$1 = __wasm_i64_mul($1 | 0, i64toi32_i32$0 | 0, $694 | 0, i64toi32_i32$1 | 0) | 0;
      i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
      $695 = i64toi32_i32$1;
      $695$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $691$hi;
      i64toi32_i32$3 = $691;
      i64toi32_i32$1 = $695$hi;
      i64toi32_i32$2 = $695;
      i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
      i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $696$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $15$hi;
      i64toi32_i32$5 = $16$hi;
      i64toi32_i32$5 = $15$hi;
      i64toi32_i32$3 = $16$hi;
      i64toi32_i32$3 = __wasm_i64_mul($15 | 0, i64toi32_i32$5 | 0, $16 | 0, i64toi32_i32$3 | 0) | 0;
      i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
      $699 = i64toi32_i32$3;
      $699$hi = i64toi32_i32$5;
      i64toi32_i32$5 = $696$hi;
      i64toi32_i32$0 = i64toi32_i32$4;
      i64toi32_i32$3 = $699$hi;
      i64toi32_i32$2 = $699;
      i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
      i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
      if (i64toi32_i32$1 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
      }
      $700 = i64toi32_i32$1;
      $700$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $7$hi;
      i64toi32_i32$5 = $7;
      i64toi32_i32$0 = 0;
      i64toi32_i32$2 = 32;
      i64toi32_i32$3 = i64toi32_i32$2 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = 0;
       $548 = i64toi32_i32$4 >>> i64toi32_i32$3 | 0;
      } else {
       i64toi32_i32$0 = i64toi32_i32$4 >>> i64toi32_i32$3 | 0;
       $548 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$3 | 0) | 0;
      }
      $702 = $548;
      $702$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $7$hi;
      i64toi32_i32$0 = $18$hi;
      i64toi32_i32$0 = $7$hi;
      i64toi32_i32$4 = $7;
      i64toi32_i32$5 = $18$hi;
      i64toi32_i32$2 = $18;
      $705 = i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
      i64toi32_i32$4 = 0;
      i64toi32_i32$2 = $705;
      i64toi32_i32$0 = 0;
      i64toi32_i32$5 = 32;
      i64toi32_i32$3 = i64toi32_i32$5 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
       $549 = 0;
      } else {
       i64toi32_i32$0 = ((1 << i64toi32_i32$3 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$3 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$3 | 0) | 0;
       $549 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
      }
      $707$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $702$hi;
      i64toi32_i32$4 = $702;
      i64toi32_i32$2 = $707$hi;
      i64toi32_i32$5 = $549;
      i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
      $708 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
      $708$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $700$hi;
      i64toi32_i32$0 = $700;
      i64toi32_i32$4 = $708$hi;
      i64toi32_i32$5 = $708;
      i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
      i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
      }
      $709$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $687$hi;
      i64toi32_i32$2 = $687;
      i64toi32_i32$0 = $709$hi;
      i64toi32_i32$5 = i64toi32_i32$3;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
      i64toi32_i32$3 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
      }
      $710$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $669$hi;
      i64toi32_i32$1 = $669;
      i64toi32_i32$2 = $710$hi;
      i64toi32_i32$5 = i64toi32_i32$4;
      i64toi32_i32$0 = i64toi32_i32$1 - i64toi32_i32$5 | 0;
      i64toi32_i32$6 = i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0;
      i64toi32_i32$4 = i64toi32_i32$6 + i64toi32_i32$2 | 0;
      i64toi32_i32$4 = i64toi32_i32$3 - i64toi32_i32$4 | 0;
      $12 = i64toi32_i32$0;
      $12$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $17$hi;
      i64toi32_i32$4 = $19$hi;
      i64toi32_i32$4 = $17$hi;
      i64toi32_i32$3 = $17;
      i64toi32_i32$1 = $19$hi;
      i64toi32_i32$5 = $19;
      i64toi32_i32$2 = i64toi32_i32$3 - i64toi32_i32$5 | 0;
      i64toi32_i32$6 = i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0;
      i64toi32_i32$0 = i64toi32_i32$6 + i64toi32_i32$1 | 0;
      i64toi32_i32$0 = i64toi32_i32$4 - i64toi32_i32$0 | 0;
      $1 = i64toi32_i32$2;
      $1$hi = i64toi32_i32$0;
      $9 = $9 + -1 | 0;
      break label$12;
     }
     i64toi32_i32$0 = $4$hi;
     i64toi32_i32$4 = $4;
     i64toi32_i32$3 = 0;
     i64toi32_i32$5 = 33;
     i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = 0;
      $550 = i64toi32_i32$0 >>> i64toi32_i32$1 | 0;
     } else {
      i64toi32_i32$3 = i64toi32_i32$0 >>> i64toi32_i32$1 | 0;
      $550 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$1 | 0) | 0;
     }
     $16 = $550;
     $16$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$0 = $1;
     i64toi32_i32$4 = 0;
     i64toi32_i32$5 = 48;
     i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$0 << i64toi32_i32$1 | 0;
      $552 = 0;
     } else {
      i64toi32_i32$4 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$1 | 0) | 0;
      $552 = i64toi32_i32$0 << i64toi32_i32$1 | 0;
     }
     $720 = $552;
     $720$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $4$hi;
     i64toi32_i32$3 = $4;
     i64toi32_i32$0 = 0;
     i64toi32_i32$5 = 1;
     i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
      i64toi32_i32$0 = 0;
      $555 = i64toi32_i32$4 >>> i64toi32_i32$1 | 0;
     } else {
      i64toi32_i32$0 = i64toi32_i32$4 >>> i64toi32_i32$1 | 0;
      $555 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$1 | 0) | 0;
     }
     $722 = $555;
     $722$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $2$hi;
     i64toi32_i32$4 = $2;
     i64toi32_i32$3 = 0;
     i64toi32_i32$5 = 63;
     i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = i64toi32_i32$4 << i64toi32_i32$1 | 0;
      $556 = 0;
     } else {
      i64toi32_i32$3 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$4 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$1 | 0) | 0;
      $556 = i64toi32_i32$4 << i64toi32_i32$1 | 0;
     }
     $724$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $722$hi;
     i64toi32_i32$0 = $722;
     i64toi32_i32$4 = $724$hi;
     i64toi32_i32$5 = $556;
     i64toi32_i32$4 = i64toi32_i32$3 | i64toi32_i32$4 | 0;
     $4 = i64toi32_i32$0 | i64toi32_i32$5 | 0;
     $4$hi = i64toi32_i32$4;
     i64toi32_i32$3 = $4;
     i64toi32_i32$0 = 0;
     i64toi32_i32$5 = -1;
     i64toi32_i32$0 = i64toi32_i32$4 & i64toi32_i32$0 | 0;
     $1 = i64toi32_i32$3 & i64toi32_i32$5 | 0;
     $1$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $3$hi;
     i64toi32_i32$4 = $3;
     i64toi32_i32$3 = 0;
     i64toi32_i32$5 = -1;
     i64toi32_i32$3 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
     $12 = i64toi32_i32$4 & i64toi32_i32$5 | 0;
     $12$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$4 = $12$hi;
     i64toi32_i32$4 = __wasm_i64_mul($1 | 0, i64toi32_i32$3 | 0, $12 | 0, i64toi32_i32$4 | 0) | 0;
     i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
     $15 = i64toi32_i32$4;
     $15$hi = i64toi32_i32$3;
     i64toi32_i32$0 = i64toi32_i32$4;
     i64toi32_i32$4 = 0;
     i64toi32_i32$5 = 0;
     $734 = (i64toi32_i32$0 | 0) != (i64toi32_i32$5 | 0) | (i64toi32_i32$3 | 0) != (i64toi32_i32$4 | 0) | 0;
     i64toi32_i32$0 = 0;
     $735$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $720$hi;
     i64toi32_i32$5 = $720;
     i64toi32_i32$3 = $735$hi;
     i64toi32_i32$4 = $734;
     i64toi32_i32$1 = i64toi32_i32$5 - i64toi32_i32$4 | 0;
     i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$4 >>> 0;
     i64toi32_i32$2 = i64toi32_i32$6 + i64toi32_i32$3 | 0;
     i64toi32_i32$2 = i64toi32_i32$0 - i64toi32_i32$2 | 0;
     $736 = i64toi32_i32$1;
     $736$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $15$hi;
     i64toi32_i32$2 = 0;
     i64toi32_i32$0 = 0;
     i64toi32_i32$5 = $15$hi;
     i64toi32_i32$4 = $15;
     i64toi32_i32$3 = i64toi32_i32$0 - i64toi32_i32$4 | 0;
     i64toi32_i32$6 = i64toi32_i32$0 >>> 0 < i64toi32_i32$4 >>> 0;
     i64toi32_i32$1 = i64toi32_i32$6 + i64toi32_i32$5 | 0;
     i64toi32_i32$1 = i64toi32_i32$2 - i64toi32_i32$1 | 0;
     $7 = i64toi32_i32$3;
     $7$hi = i64toi32_i32$1;
     $739 = i64toi32_i32$3;
     $739$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $1$hi;
     $740 = $1;
     $740$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $3$hi;
     i64toi32_i32$2 = $3;
     i64toi32_i32$0 = 0;
     i64toi32_i32$4 = 32;
     i64toi32_i32$5 = i64toi32_i32$4 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
      i64toi32_i32$0 = 0;
      $557 = i64toi32_i32$1 >>> i64toi32_i32$5 | 0;
     } else {
      i64toi32_i32$0 = i64toi32_i32$1 >>> i64toi32_i32$5 | 0;
      $557 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$5 | 0) | 0;
     }
     $15 = $557;
     $15$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $740$hi;
     i64toi32_i32$2 = $15$hi;
     i64toi32_i32$2 = __wasm_i64_mul($740 | 0, i64toi32_i32$0 | 0, $15 | 0, i64toi32_i32$2 | 0) | 0;
     i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
     $17 = i64toi32_i32$2;
     $17$hi = i64toi32_i32$0;
     $745 = i64toi32_i32$2;
     $745$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $16$hi;
     $746 = $16;
     $746$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $2$hi;
     i64toi32_i32$1 = $2;
     i64toi32_i32$2 = 0;
     i64toi32_i32$4 = 31;
     i64toi32_i32$5 = i64toi32_i32$4 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$1 << i64toi32_i32$5 | 0;
      $558 = 0;
     } else {
      i64toi32_i32$2 = ((1 << i64toi32_i32$5 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$5 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$5 | 0) | 0;
      $558 = i64toi32_i32$1 << i64toi32_i32$5 | 0;
     }
     $748$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $746$hi;
     i64toi32_i32$0 = $746;
     i64toi32_i32$1 = $748$hi;
     i64toi32_i32$4 = $558;
     i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
     $18 = i64toi32_i32$0 | i64toi32_i32$4 | 0;
     $18$hi = i64toi32_i32$1;
     i64toi32_i32$2 = $18;
     i64toi32_i32$0 = 0;
     i64toi32_i32$4 = -1;
     i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
     $19 = i64toi32_i32$2 & i64toi32_i32$4 | 0;
     $19$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $12$hi;
     i64toi32_i32$0 = $19$hi;
     i64toi32_i32$2 = $12$hi;
     i64toi32_i32$2 = __wasm_i64_mul($19 | 0, i64toi32_i32$0 | 0, $12 | 0, i64toi32_i32$2 | 0) | 0;
     i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
     $754 = i64toi32_i32$2;
     $754$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $745$hi;
     i64toi32_i32$1 = $745;
     i64toi32_i32$2 = $754$hi;
     i64toi32_i32$4 = $754;
     i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
     i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$4 >>> 0) {
      i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
     }
     $16 = i64toi32_i32$5;
     $16$hi = i64toi32_i32$3;
     i64toi32_i32$0 = i64toi32_i32$5;
     i64toi32_i32$1 = 0;
     i64toi32_i32$4 = 32;
     i64toi32_i32$2 = i64toi32_i32$4 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
      i64toi32_i32$1 = i64toi32_i32$0 << i64toi32_i32$2 | 0;
      $559 = 0;
     } else {
      i64toi32_i32$1 = ((1 << i64toi32_i32$2 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$2 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$2 | 0) | 0;
      $559 = i64toi32_i32$0 << i64toi32_i32$2 | 0;
     }
     $20 = $559;
     $20$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $739$hi;
     i64toi32_i32$3 = $739;
     i64toi32_i32$0 = $20$hi;
     i64toi32_i32$4 = $20;
     $759 = i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$3 >>> 0 < i64toi32_i32$4 >>> 0 | 0) | 0;
     i64toi32_i32$3 = 0;
     $760$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $736$hi;
     i64toi32_i32$4 = $736;
     i64toi32_i32$1 = $760$hi;
     i64toi32_i32$0 = $759;
     i64toi32_i32$2 = i64toi32_i32$4 - i64toi32_i32$0 | 0;
     i64toi32_i32$6 = i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0;
     i64toi32_i32$5 = i64toi32_i32$6 + i64toi32_i32$1 | 0;
     i64toi32_i32$5 = i64toi32_i32$3 - i64toi32_i32$5 | 0;
     $761 = i64toi32_i32$2;
     $761$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $4$hi;
     $762 = $4;
     $762$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $14$hi;
     i64toi32_i32$3 = $14;
     i64toi32_i32$4 = 0;
     i64toi32_i32$0 = 32;
     i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
      i64toi32_i32$4 = 0;
      $560 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
     } else {
      i64toi32_i32$4 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
      $560 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$1 | 0) | 0;
     }
     $764$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $762$hi;
     i64toi32_i32$3 = $764$hi;
     i64toi32_i32$3 = __wasm_i64_mul($762 | 0, i64toi32_i32$4 | 0, $560 | 0, i64toi32_i32$3 | 0) | 0;
     i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
     $765 = i64toi32_i32$3;
     $765$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $3$hi;
     $766 = $3;
     $766$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $2$hi;
     i64toi32_i32$5 = $2;
     i64toi32_i32$3 = 0;
     i64toi32_i32$0 = 33;
     i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = 0;
      $562 = i64toi32_i32$4 >>> i64toi32_i32$1 | 0;
     } else {
      i64toi32_i32$3 = i64toi32_i32$4 >>> i64toi32_i32$1 | 0;
      $562 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$1 | 0) | 0;
     }
     $768$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $766$hi;
     i64toi32_i32$5 = $768$hi;
     i64toi32_i32$5 = __wasm_i64_mul($766 | 0, i64toi32_i32$3 | 0, $562 | 0, i64toi32_i32$5 | 0) | 0;
     i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
     $769 = i64toi32_i32$5;
     $769$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $765$hi;
     i64toi32_i32$4 = $765;
     i64toi32_i32$5 = $769$hi;
     i64toi32_i32$0 = $769;
     i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
     i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
     if (i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
     }
     $770 = i64toi32_i32$1;
     $770$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$3 = $2;
     i64toi32_i32$4 = 0;
     i64toi32_i32$0 = 1;
     i64toi32_i32$5 = i64toi32_i32$0 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
      i64toi32_i32$4 = 0;
      $563 = i64toi32_i32$2 >>> i64toi32_i32$5 | 0;
     } else {
      i64toi32_i32$4 = i64toi32_i32$2 >>> i64toi32_i32$5 | 0;
      $563 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$5 | 0) | 0;
     }
     $2 = $563;
     $2$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $15$hi;
     i64toi32_i32$4 = $2$hi;
     i64toi32_i32$3 = $15$hi;
     i64toi32_i32$3 = __wasm_i64_mul($2 | 0, i64toi32_i32$4 | 0, $15 | 0, i64toi32_i32$3 | 0) | 0;
     i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
     $775 = i64toi32_i32$3;
     $775$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $770$hi;
     i64toi32_i32$2 = $770;
     i64toi32_i32$3 = $775$hi;
     i64toi32_i32$0 = $775;
     i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
     i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0) {
      i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
     }
     $776$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $18$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = $18$hi;
     i64toi32_i32$2 = $6$hi;
     i64toi32_i32$2 = __wasm_i64_mul($18 | 0, i64toi32_i32$1 | 0, $6 | 0, i64toi32_i32$2 | 0) | 0;
     i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
     $779 = i64toi32_i32$2;
     $779$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $776$hi;
     i64toi32_i32$4 = i64toi32_i32$5;
     i64toi32_i32$2 = $779$hi;
     i64toi32_i32$0 = $779;
     i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
     i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
     if (i64toi32_i32$3 >>> 0 < i64toi32_i32$0 >>> 0) {
      i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
     }
     i64toi32_i32$1 = i64toi32_i32$3;
     i64toi32_i32$4 = 0;
     i64toi32_i32$0 = 32;
     i64toi32_i32$2 = i64toi32_i32$0 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$1 << i64toi32_i32$2 | 0;
      $564 = 0;
     } else {
      i64toi32_i32$4 = ((1 << i64toi32_i32$2 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$2 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$2 | 0) | 0;
      $564 = i64toi32_i32$1 << i64toi32_i32$2 | 0;
     }
     $781 = $564;
     $781$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $19$hi;
     i64toi32_i32$4 = $15$hi;
     i64toi32_i32$4 = $19$hi;
     i64toi32_i32$1 = $15$hi;
     i64toi32_i32$1 = __wasm_i64_mul($19 | 0, i64toi32_i32$4 | 0, $15 | 0, i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
     $784 = i64toi32_i32$1;
     $784$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $2$hi;
     i64toi32_i32$5 = $2;
     i64toi32_i32$1 = 0;
     i64toi32_i32$0 = -1;
     i64toi32_i32$1 = i64toi32_i32$4 & i64toi32_i32$1 | 0;
     $786$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $12$hi;
     i64toi32_i32$1 = $786$hi;
     $579 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
     i64toi32_i32$5 = $12$hi;
     i64toi32_i32$5 = __wasm_i64_mul($579 | 0, i64toi32_i32$1 | 0, $12 | 0, i64toi32_i32$5 | 0) | 0;
     i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
     $788 = i64toi32_i32$5;
     $788$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $784$hi;
     i64toi32_i32$4 = $784;
     i64toi32_i32$5 = $788$hi;
     i64toi32_i32$0 = $788;
     i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
     i64toi32_i32$3 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
     if (i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0) {
      i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
     }
     $789$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$3 = $6$hi;
     i64toi32_i32$1 = $6;
     i64toi32_i32$4 = 0;
     i64toi32_i32$0 = -1;
     i64toi32_i32$4 = i64toi32_i32$3 & i64toi32_i32$4 | 0;
     $792 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
     $792$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $1$hi;
     i64toi32_i32$1 = $792$hi;
     i64toi32_i32$1 = __wasm_i64_mul($1 | 0, i64toi32_i32$4 | 0, $792 | 0, i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$4 = i64toi32_i32$HIGH_BITS;
     $793 = i64toi32_i32$1;
     $793$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $789$hi;
     i64toi32_i32$3 = i64toi32_i32$2;
     i64toi32_i32$1 = $793$hi;
     i64toi32_i32$0 = $793;
     i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
     i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$1 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
     }
     $794 = i64toi32_i32$5;
     $794$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $16$hi;
     i64toi32_i32$4 = $16;
     i64toi32_i32$3 = 0;
     i64toi32_i32$0 = 32;
     i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = 0;
      $565 = i64toi32_i32$2 >>> i64toi32_i32$1 | 0;
     } else {
      i64toi32_i32$3 = i64toi32_i32$2 >>> i64toi32_i32$1 | 0;
      $565 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$1 | 0) | 0;
     }
     $796 = $565;
     $796$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $16$hi;
     i64toi32_i32$3 = $17$hi;
     i64toi32_i32$3 = $16$hi;
     i64toi32_i32$2 = $16;
     i64toi32_i32$4 = $17$hi;
     i64toi32_i32$0 = $17;
     $799 = i64toi32_i32$3 >>> 0 < i64toi32_i32$4 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$4 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
     i64toi32_i32$2 = 0;
     i64toi32_i32$0 = $799;
     i64toi32_i32$3 = 0;
     i64toi32_i32$4 = 32;
     i64toi32_i32$1 = i64toi32_i32$4 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = i64toi32_i32$0 << i64toi32_i32$1 | 0;
      $567 = 0;
     } else {
      i64toi32_i32$3 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$1 | 0) | 0;
      $567 = i64toi32_i32$0 << i64toi32_i32$1 | 0;
     }
     $801$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $796$hi;
     i64toi32_i32$2 = $796;
     i64toi32_i32$0 = $801$hi;
     i64toi32_i32$4 = $567;
     i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
     $802 = i64toi32_i32$2 | i64toi32_i32$4 | 0;
     $802$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $794$hi;
     i64toi32_i32$3 = $794;
     i64toi32_i32$2 = $802$hi;
     i64toi32_i32$4 = $802;
     i64toi32_i32$1 = i64toi32_i32$3 + i64toi32_i32$4 | 0;
     i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
     if (i64toi32_i32$1 >>> 0 < i64toi32_i32$4 >>> 0) {
      i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
     }
     $803$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $781$hi;
     i64toi32_i32$0 = $781;
     i64toi32_i32$3 = $803$hi;
     i64toi32_i32$4 = i64toi32_i32$1;
     i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
     i64toi32_i32$1 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
     if (i64toi32_i32$2 >>> 0 < i64toi32_i32$4 >>> 0) {
      i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
     }
     $804$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $761$hi;
     i64toi32_i32$5 = $761;
     i64toi32_i32$0 = $804$hi;
     i64toi32_i32$4 = i64toi32_i32$2;
     i64toi32_i32$3 = i64toi32_i32$5 - i64toi32_i32$2 | 0;
     i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0;
     i64toi32_i32$2 = i64toi32_i32$6 + i64toi32_i32$0 | 0;
     i64toi32_i32$2 = i64toi32_i32$1 - i64toi32_i32$2 | 0;
     $12 = i64toi32_i32$3;
     $12$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $7$hi;
     i64toi32_i32$2 = $20$hi;
     i64toi32_i32$2 = $7$hi;
     i64toi32_i32$1 = $7;
     i64toi32_i32$5 = $20$hi;
     i64toi32_i32$4 = $20;
     i64toi32_i32$0 = i64toi32_i32$1 - i64toi32_i32$4 | 0;
     i64toi32_i32$6 = i64toi32_i32$1 >>> 0 < i64toi32_i32$4 >>> 0;
     i64toi32_i32$3 = i64toi32_i32$6 + i64toi32_i32$5 | 0;
     i64toi32_i32$3 = i64toi32_i32$2 - i64toi32_i32$3 | 0;
     $1 = i64toi32_i32$0;
     $1$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $2$hi;
     $2$hi = i64toi32_i32$3;
    }
    label$14 : {
     if (($9 | 0) < (16384 | 0)) {
      break label$14
     }
     i64toi32_i32$3 = $8$hi;
     i64toi32_i32$2 = $8;
     i64toi32_i32$1 = 2147418112;
     i64toi32_i32$4 = 0;
     i64toi32_i32$1 = i64toi32_i32$3 | i64toi32_i32$1 | 0;
     $8 = i64toi32_i32$2 | i64toi32_i32$4 | 0;
     $8$hi = i64toi32_i32$1;
     i64toi32_i32$1 = 0;
     $1 = 0;
     $1$hi = i64toi32_i32$1;
     break label$2;
    }
    $10 = $9 + 16383 | 0;
    label$15 : {
     if (($9 | 0) > (-16383 | 0)) {
      break label$15
     }
     label$16 : {
      if ($10) {
       break label$16
      }
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$3 = $2;
      i64toi32_i32$2 = 65535;
      i64toi32_i32$4 = -1;
      i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
      $820 = i64toi32_i32$3 & i64toi32_i32$4 | 0;
      $820$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $4$hi;
      $821 = $4;
      $821$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $1$hi;
      i64toi32_i32$1 = $1;
      i64toi32_i32$3 = 0;
      i64toi32_i32$4 = 1;
      i64toi32_i32$5 = i64toi32_i32$4 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$1 << i64toi32_i32$5 | 0;
       $568 = 0;
      } else {
       i64toi32_i32$3 = ((1 << i64toi32_i32$5 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$5 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$5 | 0) | 0;
       $568 = i64toi32_i32$1 << i64toi32_i32$5 | 0;
      }
      $823$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $3$hi;
      i64toi32_i32$3 = $823$hi;
      i64toi32_i32$2 = $568;
      i64toi32_i32$1 = $3$hi;
      i64toi32_i32$4 = $3;
      $825 = i64toi32_i32$3 >>> 0 > i64toi32_i32$1 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$2 >>> 0 > i64toi32_i32$4 >>> 0 | 0) | 0;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$4 = $12;
      i64toi32_i32$3 = 0;
      i64toi32_i32$1 = 1;
      i64toi32_i32$5 = i64toi32_i32$1 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
       i64toi32_i32$3 = i64toi32_i32$4 << i64toi32_i32$5 | 0;
       $569 = 0;
      } else {
       i64toi32_i32$3 = ((1 << i64toi32_i32$5 | 0) - 1 | 0) & (i64toi32_i32$4 >>> (32 - i64toi32_i32$5 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$5 | 0) | 0;
       $569 = i64toi32_i32$4 << i64toi32_i32$5 | 0;
      }
      $827 = $569;
      $827$hi = i64toi32_i32$3;
      i64toi32_i32$3 = $1$hi;
      i64toi32_i32$2 = $1;
      i64toi32_i32$4 = 0;
      i64toi32_i32$1 = 63;
      i64toi32_i32$5 = i64toi32_i32$1 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
       i64toi32_i32$4 = 0;
       $570 = i64toi32_i32$3 >>> i64toi32_i32$5 | 0;
      } else {
       i64toi32_i32$4 = i64toi32_i32$3 >>> i64toi32_i32$5 | 0;
       $570 = (((1 << i64toi32_i32$5 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$5 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$5 | 0) | 0;
      }
      $829$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $827$hi;
      i64toi32_i32$3 = $827;
      i64toi32_i32$2 = $829$hi;
      i64toi32_i32$1 = $570;
      i64toi32_i32$2 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
      $1 = i64toi32_i32$3 | i64toi32_i32$1 | 0;
      $1$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $14$hi;
      i64toi32_i32$2 = $1$hi;
      i64toi32_i32$4 = $1;
      i64toi32_i32$3 = $14$hi;
      i64toi32_i32$1 = $14;
      $833 = i64toi32_i32$2 >>> 0 > i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$4 >>> 0 > i64toi32_i32$1 >>> 0 | 0) | 0;
      i64toi32_i32$4 = i64toi32_i32$2;
      i64toi32_i32$4 = i64toi32_i32$3;
      i64toi32_i32$4 = i64toi32_i32$2;
      i64toi32_i32$1 = $1;
      i64toi32_i32$2 = i64toi32_i32$3;
      i64toi32_i32$3 = $14;
      $837 = (i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) | 0 ? $825 : $833;
      i64toi32_i32$1 = 0;
      $838$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $821$hi;
      i64toi32_i32$3 = $821;
      i64toi32_i32$4 = $838$hi;
      i64toi32_i32$2 = $837;
      i64toi32_i32$5 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
      i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
      if (i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0) {
       i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
      }
      $1 = i64toi32_i32$5;
      $1$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $4$hi;
      i64toi32_i32$0 = $1$hi;
      i64toi32_i32$1 = i64toi32_i32$5;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$2 = $4;
      $842 = i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
      i64toi32_i32$1 = 0;
      $843$hi = i64toi32_i32$1;
      i64toi32_i32$1 = $820$hi;
      i64toi32_i32$2 = $820;
      i64toi32_i32$0 = $843$hi;
      i64toi32_i32$3 = $842;
      i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
      i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
      if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
       i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
      }
      $3 = i64toi32_i32$4;
      $3$hi = i64toi32_i32$5;
      i64toi32_i32$1 = i64toi32_i32$4;
      i64toi32_i32$2 = 65536;
      i64toi32_i32$3 = 0;
      i64toi32_i32$2 = i64toi32_i32$5 & i64toi32_i32$2 | 0;
      if (!(i64toi32_i32$1 & i64toi32_i32$3 | 0 | i64toi32_i32$2 | 0)) {
       break label$16
      }
      i64toi32_i32$2 = $3$hi;
      i64toi32_i32$2 = $8$hi;
      i64toi32_i32$2 = $3$hi;
      i64toi32_i32$5 = $3;
      i64toi32_i32$1 = $8$hi;
      i64toi32_i32$3 = $8;
      i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
      $8 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
      $8$hi = i64toi32_i32$1;
      break label$2;
     }
     i64toi32_i32$1 = 0;
     $1 = 0;
     $1$hi = i64toi32_i32$1;
     break label$2;
    }
    i64toi32_i32$1 = $2$hi;
    i64toi32_i32$2 = $2;
    i64toi32_i32$5 = 65535;
    i64toi32_i32$3 = -1;
    i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
    $852 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    $852$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $4$hi;
    $853 = $4;
    $853$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $1$hi;
    i64toi32_i32$1 = $1;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 1;
    i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$1 << i64toi32_i32$0 | 0;
     $572 = 0;
    } else {
     i64toi32_i32$2 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$0 | 0) | 0;
     $572 = i64toi32_i32$1 << i64toi32_i32$0 | 0;
    }
    $855$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$2 = $855$hi;
    i64toi32_i32$5 = $572;
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$3 = $3;
    $857 = i64toi32_i32$2 >>> 0 > i64toi32_i32$1 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$5 >>> 0 >= i64toi32_i32$3 >>> 0 | 0) | 0;
    i64toi32_i32$5 = $12$hi;
    i64toi32_i32$3 = $12;
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = 1;
    i64toi32_i32$0 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
     $573 = 0;
    } else {
     i64toi32_i32$2 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$0 | 0) | 0;
     $573 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
    }
    $859 = $573;
    $859$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$5 = $1;
    i64toi32_i32$3 = 0;
    i64toi32_i32$1 = 63;
    i64toi32_i32$0 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$3 = 0;
     $575 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
    } else {
     i64toi32_i32$3 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
     $575 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$0 | 0) | 0;
    }
    $861$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $859$hi;
    i64toi32_i32$2 = $859;
    i64toi32_i32$5 = $861$hi;
    i64toi32_i32$1 = $575;
    i64toi32_i32$5 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
    $1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
    $1$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $14$hi;
    i64toi32_i32$5 = $1$hi;
    i64toi32_i32$3 = $1;
    i64toi32_i32$2 = $14$hi;
    i64toi32_i32$1 = $14;
    $865 = i64toi32_i32$5 >>> 0 > i64toi32_i32$2 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$3 >>> 0 >= i64toi32_i32$1 >>> 0 | 0) | 0;
    i64toi32_i32$3 = i64toi32_i32$5;
    i64toi32_i32$3 = i64toi32_i32$2;
    i64toi32_i32$3 = i64toi32_i32$5;
    i64toi32_i32$1 = $1;
    i64toi32_i32$5 = i64toi32_i32$2;
    i64toi32_i32$2 = $14;
    $869 = (i64toi32_i32$1 | 0) == (i64toi32_i32$2 | 0) & (i64toi32_i32$3 | 0) == (i64toi32_i32$5 | 0) | 0 ? $857 : $865;
    i64toi32_i32$1 = 0;
    $870$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $853$hi;
    i64toi32_i32$2 = $853;
    i64toi32_i32$3 = $870$hi;
    i64toi32_i32$5 = $869;
    i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$5 | 0;
    i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
    if (i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0) {
     i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
    }
    $1 = i64toi32_i32$0;
    $1$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $4$hi;
    i64toi32_i32$4 = $1$hi;
    i64toi32_i32$1 = i64toi32_i32$0;
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$5 = $4;
    $874 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
    i64toi32_i32$1 = 0;
    $875$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $852$hi;
    i64toi32_i32$5 = $852;
    i64toi32_i32$4 = $875$hi;
    i64toi32_i32$2 = $874;
    i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
    i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
    if (i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
    }
    $876 = i64toi32_i32$3;
    $876$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$1 = $10;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 48;
    i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
     $576 = 0;
    } else {
     i64toi32_i32$5 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $576 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
    }
    $879$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $876$hi;
    i64toi32_i32$0 = $876;
    i64toi32_i32$1 = $879$hi;
    i64toi32_i32$2 = $576;
    i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
    i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$1 | 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0) {
     i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
    }
    $880$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $8$hi;
    i64toi32_i32$3 = $880$hi;
    i64toi32_i32$5 = i64toi32_i32$4;
    i64toi32_i32$0 = $8$hi;
    i64toi32_i32$2 = $8;
    i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
    $8 = i64toi32_i32$5 | i64toi32_i32$2 | 0;
    $8$hi = i64toi32_i32$0;
   }
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$5 = $0;
   HEAP32[i64toi32_i32$5 >> 2] = $1;
   HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] = i64toi32_i32$0;
   i64toi32_i32$0 = $8$hi;
   HEAP32[(i64toi32_i32$5 + 8 | 0) >> 2] = $8;
   HEAP32[(i64toi32_i32$5 + 12 | 0) >> 2] = i64toi32_i32$0;
   __stack_pointer = $5 + 192 | 0;
   return;
  }
  i64toi32_i32$5 = $0;
  i64toi32_i32$0 = 0;
  HEAP32[i64toi32_i32$5 >> 2] = 0;
  HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = $8$hi;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$3 = $3;
  i64toi32_i32$5 = $2$hi;
  i64toi32_i32$2 = $2;
  i64toi32_i32$5 = i64toi32_i32$0 | i64toi32_i32$5 | 0;
  i64toi32_i32$1 = !(i64toi32_i32$3 | i64toi32_i32$2 | 0 | i64toi32_i32$5 | 0);
  i64toi32_i32$5 = 2147450880;
  i64toi32_i32$3 = $8$hi;
  i64toi32_i32$2 = i64toi32_i32$1 ? 0 : $8;
  i64toi32_i32$0 = i64toi32_i32$1 ? i64toi32_i32$5 : i64toi32_i32$3;
  $896 = i64toi32_i32$2;
  i64toi32_i32$2 = $0;
  HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] = $896;
  HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] = i64toi32_i32$0;
  __stack_pointer = $5 + 192 | 0;
 }
 
 function __addtf3($0, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4, $4$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  $4$hi = $4$hi | 0;
  var i64toi32_i32$5 = 0, i64toi32_i32$4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$0 = 0, $9 = 0, $10 = 0, $5 = 0, $6$hi = 0, $6 = 0, $7$hi = 0, $8$hi = 0, $7 = 0, $8 = 0, i64toi32_i32$6 = 0, $12$hi = 0, $11 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $12 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $21 = 0, $27 = 0, $28$hi = 0, $32 = 0, $39 = 0, $43 = 0, $44$hi = 0, $48 = 0, $53 = 0, $55 = 0, $63 = 0, $65 = 0, $73 = 0, $73$hi = 0, $79 = 0, $79$hi = 0, $83 = 0, $83$hi = 0, $93 = 0, $93$hi = 0, $121 = 0, $124 = 0, $151 = 0, $152 = 0, $152$hi = 0, $153 = 0, $153$hi = 0, $160$hi = 0, $163$hi = 0, $183 = 0, $184 = 0, $184$hi = 0, $185 = 0, $185$hi = 0, $192$hi = 0, $195$hi = 0, $208 = 0, $208$hi = 0, $210$hi = 0, $214 = 0, $214$hi = 0, $216$hi = 0, $242 = 0, $242$hi = 0, $244 = 0, $244$hi = 0, $248 = 0, $248$hi = 0, $250 = 0, $251$hi = 0, $269$hi = 0, $272 = 0, $273$hi = 0, $282 = 0, $283 = 0, $283$hi = 0, $284 = 0, $284$hi = 0, $291$hi = 0, $294$hi = 0, $309 = 0, $309$hi = 0, $315 = 0, $316$hi = 0, $322 = 0, $322$hi = 0, $324$hi = 0, $325 = 0, $325$hi = 0, $327 = 0, $327$hi = 0, $354 = 0, $354$hi = 0, $356 = 0, $356$hi = 0, $360 = 0, $360$hi = 0, $362 = 0, $363$hi = 0, $369 = 0, $369$hi = 0, $371$hi = 0, $375 = 0, $375$hi = 0, $378 = 0, $378$hi = 0, $379$hi = 0, $386 = 0, $386$hi = 0, $390$hi = 0, $394 = 0, $395$hi = 0, $400 = 0, $400$hi = 0, $408 = 0, $409$hi = 0, $411 = 0, $411$hi = 0, $417 = 0, $418$hi = 0, $422 = 0, $423$hi = 0, $426 = 0, $426$hi = 0, $432 = 0, $433$hi = 0, $437 = 0, $438$hi = 0;
  $5 = __stack_pointer - 112 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $4$hi;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = 2147483647;
  i64toi32_i32$3 = -1;
  i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
  $6 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
  $6$hi = i64toi32_i32$1;
  label$1 : {
   label$2 : {
    label$3 : {
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$0 = $1;
     i64toi32_i32$2 = -1;
     i64toi32_i32$3 = -1;
     i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
     i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
     }
     $7 = i64toi32_i32$4;
     $7$hi = i64toi32_i32$5;
     i64toi32_i32$1 = i64toi32_i32$4;
     i64toi32_i32$0 = -1;
     i64toi32_i32$3 = -1;
     $21 = (i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$5 | 0) == (i64toi32_i32$0 | 0) | 0;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$3 = $2;
     i64toi32_i32$5 = 2147483647;
     i64toi32_i32$0 = -1;
     i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
     $8 = i64toi32_i32$3 & i64toi32_i32$0 | 0;
     $8$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $7$hi;
     i64toi32_i32$5 = $1$hi;
     i64toi32_i32$5 = $7$hi;
     i64toi32_i32$1 = i64toi32_i32$4;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$0 = $1;
     $27 = i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
     i64toi32_i32$1 = 0;
     $28$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $8$hi;
     i64toi32_i32$0 = $8;
     i64toi32_i32$5 = $28$hi;
     i64toi32_i32$3 = $27;
     i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
     i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
     if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     i64toi32_i32$1 = i64toi32_i32$2;
     i64toi32_i32$0 = -1;
     i64toi32_i32$3 = -1;
     i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
     i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
     }
     $7 = i64toi32_i32$5;
     $7$hi = i64toi32_i32$2;
     i64toi32_i32$4 = i64toi32_i32$5;
     i64toi32_i32$1 = 2147418111;
     i64toi32_i32$3 = -1;
     $32 = i64toi32_i32$2 >>> 0 > i64toi32_i32$1 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$5 >>> 0 > i64toi32_i32$3 >>> 0 | 0) | 0;
     i64toi32_i32$4 = i64toi32_i32$2;
     i64toi32_i32$3 = i64toi32_i32$5;
     i64toi32_i32$2 = 2147418111;
     i64toi32_i32$1 = -1;
     if ((i64toi32_i32$5 | 0) == (i64toi32_i32$1 | 0) & (i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) | 0 ? $21 : $32) {
      break label$3
     }
     i64toi32_i32$3 = $3$hi;
     i64toi32_i32$1 = $3;
     i64toi32_i32$4 = -1;
     i64toi32_i32$2 = -1;
     i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
     i64toi32_i32$5 = i64toi32_i32$3 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$0 >>> 0 < i64toi32_i32$2 >>> 0) {
      i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
     }
     $7 = i64toi32_i32$0;
     $7$hi = i64toi32_i32$5;
     i64toi32_i32$3 = i64toi32_i32$0;
     i64toi32_i32$1 = -1;
     i64toi32_i32$2 = -1;
     $39 = (i64toi32_i32$0 | 0) != (i64toi32_i32$2 | 0) | (i64toi32_i32$5 | 0) != (i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$3 = $6$hi;
     i64toi32_i32$3 = i64toi32_i32$5;
     i64toi32_i32$3 = $3$hi;
     i64toi32_i32$3 = i64toi32_i32$5;
     i64toi32_i32$2 = i64toi32_i32$0;
     i64toi32_i32$5 = $3$hi;
     i64toi32_i32$1 = $3;
     $43 = i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$1 >>> 0 | 0) | 0;
     i64toi32_i32$2 = 0;
     $44$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $6$hi;
     i64toi32_i32$1 = $6;
     i64toi32_i32$3 = $44$hi;
     i64toi32_i32$5 = $43;
     i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
     i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
      i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
     }
     i64toi32_i32$2 = i64toi32_i32$4;
     i64toi32_i32$1 = -1;
     i64toi32_i32$5 = -1;
     i64toi32_i32$3 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
     i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
     if (i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     $7 = i64toi32_i32$3;
     $7$hi = i64toi32_i32$4;
     i64toi32_i32$0 = i64toi32_i32$3;
     i64toi32_i32$2 = 2147418111;
     i64toi32_i32$5 = -1;
     $48 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
     i64toi32_i32$0 = i64toi32_i32$4;
     i64toi32_i32$0 = i64toi32_i32$4;
     i64toi32_i32$5 = i64toi32_i32$3;
     i64toi32_i32$4 = 2147418111;
     i64toi32_i32$2 = -1;
     if ((i64toi32_i32$5 | 0) == (i64toi32_i32$2 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$4 | 0) | 0 ? $39 : $48) {
      break label$2
     }
    }
    label$4 : {
     i64toi32_i32$5 = $1$hi;
     $53 = !($1 | i64toi32_i32$5 | 0);
     i64toi32_i32$5 = $8$hi;
     i64toi32_i32$2 = $8;
     i64toi32_i32$0 = 2147418112;
     i64toi32_i32$4 = 0;
     $55 = i64toi32_i32$5 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$4 >>> 0 | 0) | 0;
     i64toi32_i32$2 = i64toi32_i32$5;
     i64toi32_i32$2 = i64toi32_i32$5;
     i64toi32_i32$4 = $8;
     i64toi32_i32$5 = 2147418112;
     i64toi32_i32$0 = 0;
     if ((i64toi32_i32$4 | 0) == (i64toi32_i32$0 | 0) & (i64toi32_i32$2 | 0) == (i64toi32_i32$5 | 0) | 0 ? $53 : $55) {
      break label$4
     }
     i64toi32_i32$4 = $2$hi;
     i64toi32_i32$0 = $2;
     i64toi32_i32$2 = 32768;
     i64toi32_i32$5 = 0;
     i64toi32_i32$2 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
     $4 = i64toi32_i32$0 | i64toi32_i32$5 | 0;
     $4$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $1$hi;
     $3 = $1;
     $3$hi = i64toi32_i32$2;
     break label$1;
    }
    label$5 : {
     i64toi32_i32$2 = $3$hi;
     $63 = !($3 | i64toi32_i32$2 | 0);
     i64toi32_i32$2 = $6$hi;
     i64toi32_i32$4 = $6;
     i64toi32_i32$0 = 2147418112;
     i64toi32_i32$5 = 0;
     $65 = i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
     i64toi32_i32$4 = i64toi32_i32$2;
     i64toi32_i32$5 = $6;
     i64toi32_i32$2 = 2147418112;
     i64toi32_i32$0 = 0;
     if ((i64toi32_i32$5 | 0) == (i64toi32_i32$0 | 0) & (i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) | 0 ? $63 : $65) {
      break label$5
     }
     i64toi32_i32$5 = $4$hi;
     i64toi32_i32$0 = $4;
     i64toi32_i32$4 = 32768;
     i64toi32_i32$2 = 0;
     i64toi32_i32$4 = i64toi32_i32$5 | i64toi32_i32$4 | 0;
     $4 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
     $4$hi = i64toi32_i32$4;
     break label$1;
    }
    label$6 : {
     i64toi32_i32$4 = $1$hi;
     i64toi32_i32$4 = $8$hi;
     i64toi32_i32$5 = $8;
     i64toi32_i32$0 = 2147418112;
     i64toi32_i32$2 = 0;
     i64toi32_i32$0 = i64toi32_i32$4 ^ i64toi32_i32$0 | 0;
     $73 = i64toi32_i32$5 ^ i64toi32_i32$2 | 0;
     $73$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$4 = $1;
     i64toi32_i32$5 = $73$hi;
     i64toi32_i32$2 = $73;
     i64toi32_i32$5 = i64toi32_i32$0 | i64toi32_i32$5 | 0;
     i64toi32_i32$0 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
     i64toi32_i32$4 = 0;
     i64toi32_i32$2 = 0;
     if ((i64toi32_i32$0 | 0) != (i64toi32_i32$2 | 0) | (i64toi32_i32$5 | 0) != (i64toi32_i32$4 | 0) | 0) {
      break label$6
     }
     i64toi32_i32$0 = $2$hi;
     i64toi32_i32$0 = $3$hi;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$0 = $3$hi;
     i64toi32_i32$2 = $3;
     i64toi32_i32$5 = $1$hi;
     i64toi32_i32$4 = $1;
     i64toi32_i32$5 = i64toi32_i32$0 ^ i64toi32_i32$5 | 0;
     $79 = i64toi32_i32$2 ^ i64toi32_i32$4 | 0;
     $79$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $4$hi;
     i64toi32_i32$5 = $2$hi;
     i64toi32_i32$5 = $4$hi;
     i64toi32_i32$0 = $4;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$4 = $2;
     i64toi32_i32$2 = i64toi32_i32$5 ^ i64toi32_i32$2 | 0;
     i64toi32_i32$5 = i64toi32_i32$0 ^ i64toi32_i32$4 | 0;
     i64toi32_i32$0 = -2147483648;
     i64toi32_i32$4 = 0;
     i64toi32_i32$0 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
     $83 = i64toi32_i32$5 ^ i64toi32_i32$4 | 0;
     $83$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $79$hi;
     i64toi32_i32$2 = $79;
     i64toi32_i32$5 = $83$hi;
     i64toi32_i32$4 = $83;
     i64toi32_i32$5 = i64toi32_i32$0 | i64toi32_i32$5 | 0;
     $9 = !(i64toi32_i32$2 | i64toi32_i32$4 | 0 | i64toi32_i32$5 | 0);
     i64toi32_i32$1 = $9;
     i64toi32_i32$5 = 2147450880;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$4 = i64toi32_i32$1 ? 0 : $2;
     i64toi32_i32$0 = i64toi32_i32$1 ? i64toi32_i32$5 : i64toi32_i32$2;
     $4 = i64toi32_i32$4;
     $4$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$2 = i64toi32_i32$1;
     i64toi32_i32$0 = 0;
     i64toi32_i32$4 = $1$hi;
     i64toi32_i32$5 = i64toi32_i32$1 ? 0 : $1;
     i64toi32_i32$1 = i64toi32_i32$1 ? i64toi32_i32$0 : i64toi32_i32$4;
     $3 = i64toi32_i32$5;
     $3$hi = i64toi32_i32$1;
     break label$1;
    }
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$1 = $6$hi;
    i64toi32_i32$2 = $6;
    i64toi32_i32$5 = 2147418112;
    i64toi32_i32$0 = 0;
    i64toi32_i32$5 = i64toi32_i32$1 ^ i64toi32_i32$5 | 0;
    $93 = i64toi32_i32$2 ^ i64toi32_i32$0 | 0;
    $93$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = $93$hi;
    i64toi32_i32$0 = $93;
    i64toi32_i32$2 = i64toi32_i32$5 | i64toi32_i32$2 | 0;
    if (!(i64toi32_i32$1 | i64toi32_i32$0 | 0 | i64toi32_i32$2 | 0)) {
     break label$1
    }
    label$7 : {
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $8$hi;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$5 = $1;
     i64toi32_i32$1 = $8$hi;
     i64toi32_i32$0 = $8;
     i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
     i64toi32_i32$2 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
     i64toi32_i32$5 = 0;
     i64toi32_i32$0 = 0;
     if ((i64toi32_i32$2 | 0) != (i64toi32_i32$0 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$5 | 0) | 0) {
      break label$7
     }
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$2 = $6$hi;
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$0 = $3;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$5 = $6;
     i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
     i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$5 | 0;
     i64toi32_i32$0 = 0;
     i64toi32_i32$5 = 0;
     if ((i64toi32_i32$2 | 0) != (i64toi32_i32$5 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$0 | 0) | 0) {
      break label$1
     }
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$5 = $3;
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$0 = $1;
     i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
     $3 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
     $3$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $4$hi;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$1 = $4$hi;
     i64toi32_i32$2 = $4;
     i64toi32_i32$5 = $2$hi;
     i64toi32_i32$0 = $2;
     i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
     $4 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
     $4$hi = i64toi32_i32$5;
     break label$1;
    }
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$5 = $6$hi;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = $6$hi;
    i64toi32_i32$0 = $6;
    i64toi32_i32$2 = i64toi32_i32$5 | i64toi32_i32$2 | 0;
    if (!!(i64toi32_i32$1 | i64toi32_i32$0 | 0 | i64toi32_i32$2 | 0)) {
     break label$2
    }
    i64toi32_i32$2 = $1$hi;
    $3 = $1;
    $3$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $2$hi;
    $4 = $2;
    $4$hi = i64toi32_i32$2;
    break label$1;
   }
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$5 = $3;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$0 = $1;
   $121 = i64toi32_i32$2 >>> 0 > i64toi32_i32$1 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$5 >>> 0 > i64toi32_i32$0 >>> 0 | 0) | 0;
   i64toi32_i32$5 = $6$hi;
   i64toi32_i32$5 = $8$hi;
   i64toi32_i32$5 = $6$hi;
   i64toi32_i32$0 = $6;
   i64toi32_i32$2 = $8$hi;
   i64toi32_i32$1 = $8;
   $124 = i64toi32_i32$5 >>> 0 > i64toi32_i32$2 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$0 >>> 0 > i64toi32_i32$1 >>> 0 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$5;
   i64toi32_i32$0 = i64toi32_i32$2;
   i64toi32_i32$0 = i64toi32_i32$5;
   i64toi32_i32$1 = $6;
   i64toi32_i32$5 = i64toi32_i32$2;
   i64toi32_i32$2 = $8;
   $10 = (i64toi32_i32$1 | 0) == (i64toi32_i32$2 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$5 | 0) | 0 ? $121 : $124;
   i64toi32_i32$4 = $10;
   i64toi32_i32$1 = $3$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$5 = i64toi32_i32$4 ? $3 : $1;
   i64toi32_i32$2 = i64toi32_i32$4 ? i64toi32_i32$1 : i64toi32_i32$0;
   $6 = i64toi32_i32$5;
   $6$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$0 = i64toi32_i32$4;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$5 = $2$hi;
   i64toi32_i32$1 = i64toi32_i32$4 ? $4 : $2;
   i64toi32_i32$4 = i64toi32_i32$4 ? i64toi32_i32$2 : i64toi32_i32$5;
   $8 = i64toi32_i32$1;
   $8$hi = i64toi32_i32$4;
   i64toi32_i32$0 = i64toi32_i32$1;
   i64toi32_i32$1 = 65535;
   i64toi32_i32$2 = -1;
   i64toi32_i32$1 = i64toi32_i32$4 & i64toi32_i32$1 | 0;
   $7 = i64toi32_i32$0 & i64toi32_i32$2 | 0;
   $7$hi = i64toi32_i32$1;
   i64toi32_i32$1 = i64toi32_i32$5;
   i64toi32_i32$1 = $4$hi;
   i64toi32_i32$5 = $10;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$0 = $4$hi;
   i64toi32_i32$2 = i64toi32_i32$5 ? $2 : $4;
   i64toi32_i32$4 = i64toi32_i32$5 ? i64toi32_i32$1 : i64toi32_i32$0;
   $2 = i64toi32_i32$2;
   $2$hi = i64toi32_i32$4;
   i64toi32_i32$5 = i64toi32_i32$2;
   i64toi32_i32$2 = 0;
   i64toi32_i32$1 = 48;
   i64toi32_i32$0 = i64toi32_i32$1 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
    i64toi32_i32$2 = 0;
    $136 = i64toi32_i32$4 >>> i64toi32_i32$0 | 0;
   } else {
    i64toi32_i32$2 = i64toi32_i32$4 >>> i64toi32_i32$0 | 0;
    $136 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$0 | 0) | 0;
   }
   $11 = $136 & 32767 | 0;
   label$8 : {
    i64toi32_i32$2 = $8$hi;
    i64toi32_i32$4 = $8;
    i64toi32_i32$5 = 0;
    i64toi32_i32$1 = 48;
    i64toi32_i32$0 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = 0;
     $137 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
    } else {
     i64toi32_i32$5 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
     $137 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$0 | 0) | 0;
    }
    $9 = $137 & 32767 | 0;
    if ($9) {
     break label$8
    }
    $151 = $5 + 96 | 0;
    i64toi32_i32$5 = $6$hi;
    $152 = $6;
    $152$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $7$hi;
    $153 = $7;
    $153$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $6$hi;
    i64toi32_i32$5 = $7$hi;
    $9 = !($7 | i64toi32_i32$5 | 0);
    i64toi32_i32$0 = $9;
    i64toi32_i32$5 = $6$hi;
    i64toi32_i32$4 = $7$hi;
    i64toi32_i32$1 = i64toi32_i32$0 ? $6 : $7;
    i64toi32_i32$2 = i64toi32_i32$0 ? i64toi32_i32$5 : i64toi32_i32$4;
    i64toi32_i32$5 = Math_clz32(i64toi32_i32$2);
    i64toi32_i32$0 = 0;
    if ((i64toi32_i32$5 | 0) == (32 | 0)) {
     $138 = Math_clz32(i64toi32_i32$1) + 32 | 0
    } else {
     $138 = i64toi32_i32$5
    }
    $160$hi = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    $163$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $160$hi;
    i64toi32_i32$1 = $138;
    i64toi32_i32$2 = $163$hi;
    i64toi32_i32$5 = $9 << 6 | 0;
    i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
    i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
     i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
    }
    $9 = i64toi32_i32$4;
    i64toi32_i32$3 = $152$hi;
    i64toi32_i32$1 = $153$hi;
    __ashlti3($151 | 0, $152 | 0, i64toi32_i32$3 | 0, $153 | 0, i64toi32_i32$1 | 0, i64toi32_i32$4 + -15 | 0 | 0);
    $9 = 16 - i64toi32_i32$4 | 0;
    i64toi32_i32$0 = $5 + 104 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $7 = i64toi32_i32$1;
    $7$hi = i64toi32_i32$3;
    i64toi32_i32$0 = $5;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 96 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 100 | 0) >> 2] | 0;
    $6 = i64toi32_i32$3;
    $6$hi = i64toi32_i32$1;
   }
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$1 = $3$hi;
   i64toi32_i32$2 = $10;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$3 = $3$hi;
   i64toi32_i32$5 = i64toi32_i32$2 ? $1 : $3;
   i64toi32_i32$0 = i64toi32_i32$2 ? i64toi32_i32$1 : i64toi32_i32$3;
   $3 = i64toi32_i32$5;
   $3$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $2$hi;
   i64toi32_i32$2 = $2;
   i64toi32_i32$5 = 65535;
   i64toi32_i32$1 = -1;
   i64toi32_i32$5 = i64toi32_i32$0 & i64toi32_i32$5 | 0;
   $4 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
   $4$hi = i64toi32_i32$5;
   label$9 : {
    if ($11) {
     break label$9
    }
    $183 = $5 + 80 | 0;
    i64toi32_i32$5 = $3$hi;
    $184 = $3;
    $184$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $4$hi;
    $185 = $4;
    $185$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$5 = $4$hi;
    $10 = !($4 | i64toi32_i32$5 | 0);
    i64toi32_i32$3 = $10;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$1 = i64toi32_i32$3 ? $3 : $4;
    i64toi32_i32$0 = i64toi32_i32$3 ? i64toi32_i32$5 : i64toi32_i32$2;
    i64toi32_i32$5 = Math_clz32(i64toi32_i32$0);
    i64toi32_i32$3 = 0;
    if ((i64toi32_i32$5 | 0) == (32 | 0)) {
     $139 = Math_clz32(i64toi32_i32$1) + 32 | 0
    } else {
     $139 = i64toi32_i32$5
    }
    $192$hi = i64toi32_i32$3;
    i64toi32_i32$3 = 0;
    $195$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $192$hi;
    i64toi32_i32$1 = $139;
    i64toi32_i32$0 = $195$hi;
    i64toi32_i32$5 = $10 << 6 | 0;
    i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
    if (i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0) {
     i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
    }
    $10 = i64toi32_i32$2;
    i64toi32_i32$4 = $184$hi;
    i64toi32_i32$1 = $185$hi;
    __ashlti3($183 | 0, $184 | 0, i64toi32_i32$4 | 0, $185 | 0, i64toi32_i32$1 | 0, i64toi32_i32$2 + -15 | 0 | 0);
    $11 = 16 - i64toi32_i32$2 | 0;
    i64toi32_i32$3 = $5 + 88 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
    $4 = i64toi32_i32$1;
    $4$hi = i64toi32_i32$4;
    i64toi32_i32$3 = $5;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$3 + 80 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 84 | 0) >> 2] | 0;
    $3 = i64toi32_i32$4;
    $3$hi = i64toi32_i32$1;
   }
   i64toi32_i32$1 = $4$hi;
   i64toi32_i32$3 = $4;
   i64toi32_i32$4 = 0;
   i64toi32_i32$5 = 3;
   i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$4 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
    $140 = 0;
   } else {
    i64toi32_i32$4 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$0 | 0) | 0;
    $140 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
   }
   $208 = $140;
   $208$hi = i64toi32_i32$4;
   i64toi32_i32$4 = $3$hi;
   i64toi32_i32$1 = $3;
   i64toi32_i32$3 = 0;
   i64toi32_i32$5 = 61;
   i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$3 = 0;
    $141 = i64toi32_i32$4 >>> i64toi32_i32$0 | 0;
   } else {
    i64toi32_i32$3 = i64toi32_i32$4 >>> i64toi32_i32$0 | 0;
    $141 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$0 | 0) | 0;
   }
   $210$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $208$hi;
   i64toi32_i32$4 = $208;
   i64toi32_i32$1 = $210$hi;
   i64toi32_i32$5 = $141;
   i64toi32_i32$1 = i64toi32_i32$3 | i64toi32_i32$1 | 0;
   i64toi32_i32$3 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
   i64toi32_i32$4 = 524288;
   i64toi32_i32$5 = 0;
   i64toi32_i32$4 = i64toi32_i32$1 | i64toi32_i32$4 | 0;
   $4 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
   $4$hi = i64toi32_i32$4;
   i64toi32_i32$4 = $7$hi;
   i64toi32_i32$1 = $7;
   i64toi32_i32$3 = 0;
   i64toi32_i32$5 = 3;
   i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$3 = i64toi32_i32$1 << i64toi32_i32$0 | 0;
    $142 = 0;
   } else {
    i64toi32_i32$3 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$0 | 0) | 0;
    $142 = i64toi32_i32$1 << i64toi32_i32$0 | 0;
   }
   $214 = $142;
   $214$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $6$hi;
   i64toi32_i32$4 = $6;
   i64toi32_i32$1 = 0;
   i64toi32_i32$5 = 61;
   i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $143 = i64toi32_i32$3 >>> i64toi32_i32$0 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$3 >>> i64toi32_i32$0 | 0;
    $143 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$0 | 0) | 0;
   }
   $216$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $214$hi;
   i64toi32_i32$3 = $214;
   i64toi32_i32$4 = $216$hi;
   i64toi32_i32$5 = $143;
   i64toi32_i32$4 = i64toi32_i32$1 | i64toi32_i32$4 | 0;
   $1 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
   $1$hi = i64toi32_i32$4;
   i64toi32_i32$4 = $3$hi;
   i64toi32_i32$1 = $3;
   i64toi32_i32$3 = 0;
   i64toi32_i32$5 = 3;
   i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$3 = i64toi32_i32$1 << i64toi32_i32$0 | 0;
    $144 = 0;
   } else {
    i64toi32_i32$3 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$0 | 0) | 0;
    $144 = i64toi32_i32$1 << i64toi32_i32$0 | 0;
   }
   $3 = $144;
   $3$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $8$hi;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$3 = $8$hi;
   i64toi32_i32$4 = $8;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$5 = $2;
   i64toi32_i32$1 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
   $7 = i64toi32_i32$4 ^ i64toi32_i32$5 | 0;
   $7$hi = i64toi32_i32$1;
   label$10 : {
    $10 = $9 - $11 | 0;
    if (!$10) {
     break label$10
    }
    label$11 : {
     if ($10 >>> 0 <= 127 >>> 0) {
      break label$11
     }
     i64toi32_i32$1 = 0;
     $4 = 0;
     $4$hi = i64toi32_i32$1;
     i64toi32_i32$1 = 0;
     $3 = 1;
     $3$hi = i64toi32_i32$1;
     break label$10;
    }
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$4 = $4$hi;
    __ashlti3($5 + 64 | 0 | 0, $3 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$4 | 0, 128 - $10 | 0 | 0);
    i64toi32_i32$4 = i64toi32_i32$1;
    i64toi32_i32$4 = $4$hi;
    i64toi32_i32$4 = i64toi32_i32$1;
    i64toi32_i32$1 = $4$hi;
    __lshrti3($5 + 48 | 0 | 0, $3 | 0, i64toi32_i32$4 | 0, $4 | 0, i64toi32_i32$1 | 0, $10 | 0);
    i64toi32_i32$3 = $5;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 48 | 0) >> 2] | 0;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$3 + 52 | 0) >> 2] | 0;
    $242 = i64toi32_i32$1;
    $242$hi = i64toi32_i32$4;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$3 + 64 | 0) >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$3 + 68 | 0) >> 2] | 0;
    $244 = i64toi32_i32$4;
    $244$hi = i64toi32_i32$1;
    i64toi32_i32$3 = (i64toi32_i32$3 + 64 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$3 >> 2] | 0;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] | 0;
    $248 = i64toi32_i32$1;
    $248$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $244$hi;
    i64toi32_i32$3 = $244;
    i64toi32_i32$1 = $248$hi;
    i64toi32_i32$5 = $248;
    i64toi32_i32$1 = i64toi32_i32$4 | i64toi32_i32$1 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
    i64toi32_i32$3 = 0;
    i64toi32_i32$5 = 0;
    $250 = (i64toi32_i32$4 | 0) != (i64toi32_i32$5 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$3 | 0) | 0;
    i64toi32_i32$4 = 0;
    $251$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $242$hi;
    i64toi32_i32$5 = $242;
    i64toi32_i32$1 = $251$hi;
    i64toi32_i32$3 = $250;
    i64toi32_i32$1 = i64toi32_i32$4 | i64toi32_i32$1 | 0;
    $3 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
    $3$hi = i64toi32_i32$1;
    i64toi32_i32$4 = ($5 + 48 | 0) + 8 | 0;
    i64toi32_i32$1 = HEAP32[i64toi32_i32$4 >> 2] | 0;
    i64toi32_i32$5 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
    $4 = i64toi32_i32$1;
    $4$hi = i64toi32_i32$5;
   }
   i64toi32_i32$5 = $1$hi;
   i64toi32_i32$4 = $1;
   i64toi32_i32$1 = 524288;
   i64toi32_i32$3 = 0;
   i64toi32_i32$1 = i64toi32_i32$5 | i64toi32_i32$1 | 0;
   $12 = i64toi32_i32$4 | i64toi32_i32$3 | 0;
   $12$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $6$hi;
   i64toi32_i32$5 = $6;
   i64toi32_i32$4 = 0;
   i64toi32_i32$3 = 3;
   i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$4 = i64toi32_i32$5 << i64toi32_i32$0 | 0;
    $145 = 0;
   } else {
    i64toi32_i32$4 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$0 | 0) | 0;
    $145 = i64toi32_i32$5 << i64toi32_i32$0 | 0;
   }
   $2 = $145;
   $2$hi = i64toi32_i32$4;
   label$12 : {
    label$13 : {
     i64toi32_i32$4 = $7$hi;
     i64toi32_i32$1 = $7;
     i64toi32_i32$5 = -1;
     i64toi32_i32$3 = -1;
     if ((i64toi32_i32$4 | 0) > (i64toi32_i32$5 | 0)) {
      $146 = 1
     } else {
      if ((i64toi32_i32$4 | 0) >= (i64toi32_i32$5 | 0)) {
       if (i64toi32_i32$1 >>> 0 <= i64toi32_i32$3 >>> 0) {
        $147 = 0
       } else {
        $147 = 1
       }
       $148 = $147;
      } else {
       $148 = 0
      }
      $146 = $148;
     }
     if ($146) {
      break label$13
     }
     label$14 : {
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$1 = $3$hi;
      i64toi32_i32$1 = $2$hi;
      i64toi32_i32$3 = $2;
      i64toi32_i32$4 = $3$hi;
      i64toi32_i32$5 = $3;
      i64toi32_i32$0 = i64toi32_i32$3 - i64toi32_i32$5 | 0;
      i64toi32_i32$6 = i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0;
      i64toi32_i32$2 = i64toi32_i32$6 + i64toi32_i32$4 | 0;
      i64toi32_i32$2 = i64toi32_i32$1 - i64toi32_i32$2 | 0;
      $1 = i64toi32_i32$0;
      $1$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$2 = $4$hi;
      i64toi32_i32$2 = $12$hi;
      i64toi32_i32$1 = $12;
      i64toi32_i32$3 = $4$hi;
      i64toi32_i32$5 = $4;
      i64toi32_i32$4 = i64toi32_i32$1 - i64toi32_i32$5 | 0;
      i64toi32_i32$6 = i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0;
      i64toi32_i32$0 = i64toi32_i32$6 + i64toi32_i32$3 | 0;
      i64toi32_i32$0 = i64toi32_i32$2 - i64toi32_i32$0 | 0;
      $269$hi = i64toi32_i32$0;
      i64toi32_i32$0 = $2$hi;
      i64toi32_i32$0 = $3$hi;
      i64toi32_i32$0 = $2$hi;
      i64toi32_i32$2 = $2;
      i64toi32_i32$1 = $3$hi;
      i64toi32_i32$5 = $3;
      $272 = i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
      i64toi32_i32$2 = 0;
      $273$hi = i64toi32_i32$2;
      i64toi32_i32$2 = $269$hi;
      i64toi32_i32$5 = i64toi32_i32$4;
      i64toi32_i32$0 = $273$hi;
      i64toi32_i32$1 = $272;
      i64toi32_i32$3 = i64toi32_i32$5 - i64toi32_i32$1 | 0;
      i64toi32_i32$6 = i64toi32_i32$5 >>> 0 < i64toi32_i32$1 >>> 0;
      i64toi32_i32$4 = i64toi32_i32$6 + i64toi32_i32$0 | 0;
      i64toi32_i32$4 = i64toi32_i32$2 - i64toi32_i32$4 | 0;
      $4 = i64toi32_i32$3;
      $4$hi = i64toi32_i32$4;
      i64toi32_i32$4 = $1$hi;
      i64toi32_i32$2 = $1;
      i64toi32_i32$5 = $4$hi;
      i64toi32_i32$1 = i64toi32_i32$3;
      i64toi32_i32$5 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
      if (!!(i64toi32_i32$2 | i64toi32_i32$1 | 0 | i64toi32_i32$5 | 0)) {
       break label$14
      }
      i64toi32_i32$5 = 0;
      $3 = 0;
      $3$hi = i64toi32_i32$5;
      i64toi32_i32$5 = 0;
      $4 = 0;
      $4$hi = i64toi32_i32$5;
      break label$1;
     }
     i64toi32_i32$5 = $4$hi;
     i64toi32_i32$4 = $4;
     i64toi32_i32$2 = 524287;
     i64toi32_i32$1 = -1;
     if (i64toi32_i32$5 >>> 0 > i64toi32_i32$2 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$4 >>> 0 > i64toi32_i32$1 >>> 0 | 0) | 0) {
      break label$12
     }
     $282 = $5 + 32 | 0;
     i64toi32_i32$4 = $1$hi;
     $283 = $1;
     $283$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $4$hi;
     $284 = $4;
     $284$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $1$hi;
     i64toi32_i32$4 = $4$hi;
     $10 = !($4 | i64toi32_i32$4 | 0);
     i64toi32_i32$0 = $10;
     i64toi32_i32$4 = $1$hi;
     i64toi32_i32$5 = $4$hi;
     i64toi32_i32$2 = i64toi32_i32$0 ? $1 : $4;
     i64toi32_i32$1 = i64toi32_i32$0 ? i64toi32_i32$4 : i64toi32_i32$5;
     i64toi32_i32$4 = Math_clz32(i64toi32_i32$1);
     i64toi32_i32$0 = 0;
     if ((i64toi32_i32$4 | 0) == (32 | 0)) {
      $149 = Math_clz32(i64toi32_i32$2) + 32 | 0
     } else {
      $149 = i64toi32_i32$4
     }
     $291$hi = i64toi32_i32$0;
     i64toi32_i32$0 = 0;
     $294$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $291$hi;
     i64toi32_i32$2 = $149;
     i64toi32_i32$1 = $294$hi;
     i64toi32_i32$4 = $10 << 6 | 0;
     i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$4 | 0;
     i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$1 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$4 >>> 0) {
      i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
     }
     $10 = i64toi32_i32$5 + -12 | 0;
     i64toi32_i32$3 = $283$hi;
     i64toi32_i32$2 = $284$hi;
     __ashlti3($282 | 0, $283 | 0, i64toi32_i32$3 | 0, $284 | 0, i64toi32_i32$2 | 0, $10 | 0);
     $9 = $9 - $10 | 0;
     i64toi32_i32$0 = $5 + 40 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $4 = i64toi32_i32$2;
     $4$hi = i64toi32_i32$3;
     i64toi32_i32$0 = $5;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] | 0;
     $1 = i64toi32_i32$3;
     $1$hi = i64toi32_i32$2;
     break label$12;
    }
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$2 = $12$hi;
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$0 = $4;
    i64toi32_i32$3 = $12$hi;
    i64toi32_i32$4 = $12;
    i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
    i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
    if (i64toi32_i32$1 >>> 0 < i64toi32_i32$4 >>> 0) {
     i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
    }
    $309 = i64toi32_i32$1;
    $309$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$5 = $2$hi;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$2 = $3;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$4 = $2;
    i64toi32_i32$3 = i64toi32_i32$2 + i64toi32_i32$4 | 0;
    i64toi32_i32$1 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
    if (i64toi32_i32$3 >>> 0 < i64toi32_i32$4 >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
    }
    $1 = i64toi32_i32$3;
    $1$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$5 = i64toi32_i32$3;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$4 = $3;
    $315 = i64toi32_i32$1 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$5 >>> 0 < i64toi32_i32$4 >>> 0 | 0) | 0;
    i64toi32_i32$5 = 0;
    $316$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $309$hi;
    i64toi32_i32$4 = $309;
    i64toi32_i32$1 = $316$hi;
    i64toi32_i32$2 = $315;
    i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$2 | 0;
    i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$1 | 0;
    if (i64toi32_i32$0 >>> 0 < i64toi32_i32$2 >>> 0) {
     i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
    }
    $4 = i64toi32_i32$0;
    $4$hi = i64toi32_i32$3;
    i64toi32_i32$5 = i64toi32_i32$0;
    i64toi32_i32$4 = 1048576;
    i64toi32_i32$2 = 0;
    i64toi32_i32$4 = i64toi32_i32$3 & i64toi32_i32$4 | 0;
    if (!(i64toi32_i32$5 & i64toi32_i32$2 | 0 | i64toi32_i32$4 | 0)) {
     break label$12
    }
    i64toi32_i32$4 = $1$hi;
    i64toi32_i32$3 = $1;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$1 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = 0;
     $150 = i64toi32_i32$4 >>> i64toi32_i32$1 | 0;
    } else {
     i64toi32_i32$5 = i64toi32_i32$4 >>> i64toi32_i32$1 | 0;
     $150 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$1 | 0) | 0;
    }
    $322 = $150;
    $322$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $4$hi;
    i64toi32_i32$4 = $4;
    i64toi32_i32$3 = 0;
    i64toi32_i32$2 = 63;
    i64toi32_i32$1 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$3 = i64toi32_i32$4 << i64toi32_i32$1 | 0;
     $154 = 0;
    } else {
     i64toi32_i32$3 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$4 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$1 | 0) | 0;
     $154 = i64toi32_i32$4 << i64toi32_i32$1 | 0;
    }
    $324$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $322$hi;
    i64toi32_i32$5 = $322;
    i64toi32_i32$4 = $324$hi;
    i64toi32_i32$2 = $154;
    i64toi32_i32$4 = i64toi32_i32$3 | i64toi32_i32$4 | 0;
    $325 = i64toi32_i32$5 | i64toi32_i32$2 | 0;
    $325$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $1$hi;
    i64toi32_i32$3 = $1;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$5 = i64toi32_i32$4 & i64toi32_i32$5 | 0;
    $327 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
    $327$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $325$hi;
    i64toi32_i32$4 = $325;
    i64toi32_i32$3 = $327$hi;
    i64toi32_i32$2 = $327;
    i64toi32_i32$3 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
    $1 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
    $1$hi = i64toi32_i32$3;
    $9 = $9 + 1 | 0;
    i64toi32_i32$3 = $4$hi;
    i64toi32_i32$5 = $4;
    i64toi32_i32$4 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$1 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$4 = 0;
     $155 = i64toi32_i32$3 >>> i64toi32_i32$1 | 0;
    } else {
     i64toi32_i32$4 = i64toi32_i32$3 >>> i64toi32_i32$1 | 0;
     $155 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$1 | 0) | 0;
    }
    $4 = $155;
    $4$hi = i64toi32_i32$4;
   }
   i64toi32_i32$4 = $8$hi;
   i64toi32_i32$3 = $8;
   i64toi32_i32$5 = -2147483648;
   i64toi32_i32$2 = 0;
   i64toi32_i32$5 = i64toi32_i32$4 & i64toi32_i32$5 | 0;
   $2 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
   $2$hi = i64toi32_i32$5;
   label$15 : {
    if (($9 | 0) < (32767 | 0)) {
     break label$15
    }
    i64toi32_i32$5 = $2$hi;
    i64toi32_i32$4 = $2;
    i64toi32_i32$3 = 2147418112;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
    $4 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
    $4$hi = i64toi32_i32$3;
    i64toi32_i32$3 = 0;
    $3 = 0;
    $3$hi = i64toi32_i32$3;
    break label$1;
   }
   $10 = 0;
   label$16 : {
    label$17 : {
     if (($9 | 0) <= (0 | 0)) {
      break label$17
     }
     $10 = $9;
     break label$16;
    }
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$3 = $4$hi;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$4 = $4$hi;
    __ashlti3($5 + 16 | 0 | 0, $1 | 0, i64toi32_i32$3 | 0, $4 | 0, i64toi32_i32$4 | 0, $9 + 127 | 0 | 0);
    i64toi32_i32$4 = i64toi32_i32$3;
    i64toi32_i32$4 = $4$hi;
    i64toi32_i32$4 = i64toi32_i32$3;
    i64toi32_i32$3 = $4$hi;
    __lshrti3($5 | 0, $1 | 0, i64toi32_i32$4 | 0, $4 | 0, i64toi32_i32$3 | 0, 1 - $9 | 0 | 0);
    i64toi32_i32$5 = $5;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$5 >> 2] | 0;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
    $354 = i64toi32_i32$3;
    $354$hi = i64toi32_i32$4;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$5 + 16 | 0) >> 2] | 0;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$5 + 20 | 0) >> 2] | 0;
    $356 = i64toi32_i32$4;
    $356$hi = i64toi32_i32$3;
    i64toi32_i32$5 = (i64toi32_i32$5 + 16 | 0) + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$5 >> 2] | 0;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
    $360 = i64toi32_i32$3;
    $360$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $356$hi;
    i64toi32_i32$5 = $356;
    i64toi32_i32$3 = $360$hi;
    i64toi32_i32$2 = $360;
    i64toi32_i32$3 = i64toi32_i32$4 | i64toi32_i32$3 | 0;
    i64toi32_i32$4 = i64toi32_i32$5 | i64toi32_i32$2 | 0;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 0;
    $362 = (i64toi32_i32$4 | 0) != (i64toi32_i32$2 | 0) | (i64toi32_i32$3 | 0) != (i64toi32_i32$5 | 0) | 0;
    i64toi32_i32$4 = 0;
    $363$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $354$hi;
    i64toi32_i32$2 = $354;
    i64toi32_i32$3 = $363$hi;
    i64toi32_i32$5 = $362;
    i64toi32_i32$3 = i64toi32_i32$4 | i64toi32_i32$3 | 0;
    $1 = i64toi32_i32$2 | i64toi32_i32$5 | 0;
    $1$hi = i64toi32_i32$3;
    i64toi32_i32$4 = $5 + 8 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$4 >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
    $4 = i64toi32_i32$3;
    $4$hi = i64toi32_i32$2;
   }
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$4 = $1;
   i64toi32_i32$3 = 0;
   i64toi32_i32$5 = 3;
   i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$3 = 0;
    $156 = i64toi32_i32$2 >>> i64toi32_i32$1 | 0;
   } else {
    i64toi32_i32$3 = i64toi32_i32$2 >>> i64toi32_i32$1 | 0;
    $156 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$1 | 0) | 0;
   }
   $369 = $156;
   $369$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $4$hi;
   i64toi32_i32$2 = $4;
   i64toi32_i32$4 = 0;
   i64toi32_i32$5 = 61;
   i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$4 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
    $157 = 0;
   } else {
    i64toi32_i32$4 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$1 | 0) | 0;
    $157 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
   }
   $371$hi = i64toi32_i32$4;
   i64toi32_i32$4 = $369$hi;
   i64toi32_i32$3 = $369;
   i64toi32_i32$2 = $371$hi;
   i64toi32_i32$5 = $157;
   i64toi32_i32$2 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
   $3 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
   $3$hi = i64toi32_i32$2;
   i64toi32_i32$2 = 0;
   i64toi32_i32$4 = $10;
   i64toi32_i32$3 = 0;
   i64toi32_i32$5 = 48;
   i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$3 = i64toi32_i32$4 << i64toi32_i32$1 | 0;
    $158 = 0;
   } else {
    i64toi32_i32$3 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$4 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$1 | 0) | 0;
    $158 = i64toi32_i32$4 << i64toi32_i32$1 | 0;
   }
   $375 = $158;
   $375$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $4$hi;
   i64toi32_i32$2 = $4;
   i64toi32_i32$4 = 0;
   i64toi32_i32$5 = 3;
   i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$4 = 0;
    $159 = i64toi32_i32$3 >>> i64toi32_i32$1 | 0;
   } else {
    i64toi32_i32$4 = i64toi32_i32$3 >>> i64toi32_i32$1 | 0;
    $159 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$1 | 0) | 0;
   }
   i64toi32_i32$3 = $159;
   i64toi32_i32$2 = 65535;
   i64toi32_i32$5 = -1;
   i64toi32_i32$2 = i64toi32_i32$4 & i64toi32_i32$2 | 0;
   $378 = i64toi32_i32$3 & i64toi32_i32$5 | 0;
   $378$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $375$hi;
   i64toi32_i32$4 = $375;
   i64toi32_i32$3 = $378$hi;
   i64toi32_i32$5 = $378;
   i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
   $379$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$3 = $379$hi;
   i64toi32_i32$2 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
   i64toi32_i32$4 = $2$hi;
   i64toi32_i32$5 = $2;
   i64toi32_i32$4 = i64toi32_i32$3 | i64toi32_i32$4 | 0;
   $4 = i64toi32_i32$2 | i64toi32_i32$5 | 0;
   $4$hi = i64toi32_i32$4;
   i64toi32_i32$4 = $1$hi;
   $9 = $1 & 7 | 0;
   label$18 : {
    label$19 : {
     label$20 : {
      switch (__fe_getround() | 0 | 0) {
      case 0:
       i64toi32_i32$4 = $4$hi;
       $386 = $4;
       $386$hi = i64toi32_i32$4;
       i64toi32_i32$4 = $3$hi;
       i64toi32_i32$4 = 0;
       $390$hi = i64toi32_i32$4;
       i64toi32_i32$4 = $3$hi;
       i64toi32_i32$3 = $3;
       i64toi32_i32$2 = $390$hi;
       i64toi32_i32$5 = $9 >>> 0 > 4 >>> 0;
       i64toi32_i32$1 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
       i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$2 | 0;
       if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
        i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
       }
       $1 = i64toi32_i32$1;
       $1$hi = i64toi32_i32$0;
       i64toi32_i32$0 = $3$hi;
       i64toi32_i32$0 = $1$hi;
       i64toi32_i32$4 = i64toi32_i32$1;
       i64toi32_i32$3 = $3$hi;
       i64toi32_i32$5 = $3;
       $394 = i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
       i64toi32_i32$4 = 0;
       $395$hi = i64toi32_i32$4;
       i64toi32_i32$4 = $386$hi;
       i64toi32_i32$5 = $386;
       i64toi32_i32$0 = $395$hi;
       i64toi32_i32$3 = $394;
       i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
       i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$0 | 0;
       if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) {
        i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
       }
       $4 = i64toi32_i32$2;
       $4$hi = i64toi32_i32$1;
       label$23 : {
        if (($9 | 0) == (4 | 0)) {
         break label$23
        }
        i64toi32_i32$1 = $1$hi;
        $3 = $1;
        $3$hi = i64toi32_i32$1;
        break label$19;
       }
       i64toi32_i32$1 = $4$hi;
       $400 = $4;
       $400$hi = i64toi32_i32$1;
       i64toi32_i32$1 = $1$hi;
       i64toi32_i32$4 = $1;
       i64toi32_i32$5 = 0;
       i64toi32_i32$3 = 1;
       i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
       $2 = i64toi32_i32$4 & i64toi32_i32$3 | 0;
       $2$hi = i64toi32_i32$5;
       i64toi32_i32$5 = i64toi32_i32$1;
       i64toi32_i32$5 = $2$hi;
       i64toi32_i32$1 = $2;
       i64toi32_i32$4 = $1$hi;
       i64toi32_i32$3 = $1;
       i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
       i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
       if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) {
        i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
       }
       $3 = i64toi32_i32$0;
       $3$hi = i64toi32_i32$2;
       i64toi32_i32$2 = $2$hi;
       i64toi32_i32$2 = $3$hi;
       i64toi32_i32$5 = i64toi32_i32$0;
       i64toi32_i32$1 = $2$hi;
       i64toi32_i32$3 = $2;
       $408 = i64toi32_i32$2 >>> 0 < i64toi32_i32$1 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
       i64toi32_i32$5 = 0;
       $409$hi = i64toi32_i32$5;
       i64toi32_i32$5 = $400$hi;
       i64toi32_i32$3 = $400;
       i64toi32_i32$2 = $409$hi;
       i64toi32_i32$1 = $408;
       i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
       i64toi32_i32$0 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
       if (i64toi32_i32$4 >>> 0 < i64toi32_i32$1 >>> 0) {
        i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
       }
       $4 = i64toi32_i32$4;
       $4$hi = i64toi32_i32$0;
       break label$18;
      case 1:
       i64toi32_i32$0 = $4$hi;
       $411 = $4;
       $411$hi = i64toi32_i32$0;
       i64toi32_i32$0 = $3$hi;
       i64toi32_i32$0 = $2$hi;
       i64toi32_i32$5 = $2;
       i64toi32_i32$3 = 0;
       i64toi32_i32$1 = 0;
       $417 = ((i64toi32_i32$5 | 0) != (i64toi32_i32$1 | 0) | (i64toi32_i32$0 | 0) != (i64toi32_i32$3 | 0) | 0) & ($9 | 0) != (0 | 0) | 0;
       i64toi32_i32$5 = 0;
       $418$hi = i64toi32_i32$5;
       i64toi32_i32$5 = $3$hi;
       i64toi32_i32$1 = $3;
       i64toi32_i32$0 = $418$hi;
       i64toi32_i32$3 = $417;
       i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
       i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
       if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) {
        i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
       }
       $1 = i64toi32_i32$2;
       $1$hi = i64toi32_i32$4;
       i64toi32_i32$4 = $3$hi;
       i64toi32_i32$4 = $1$hi;
       i64toi32_i32$5 = i64toi32_i32$2;
       i64toi32_i32$1 = $3$hi;
       i64toi32_i32$3 = $3;
       $422 = i64toi32_i32$4 >>> 0 < i64toi32_i32$1 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
       i64toi32_i32$5 = 0;
       $423$hi = i64toi32_i32$5;
       i64toi32_i32$5 = $411$hi;
       i64toi32_i32$3 = $411;
       i64toi32_i32$4 = $423$hi;
       i64toi32_i32$1 = $422;
       i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
       i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
       if (i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0) {
        i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
       }
       $4 = i64toi32_i32$0;
       $4$hi = i64toi32_i32$2;
       i64toi32_i32$2 = $1$hi;
       $3 = $1;
       $3$hi = i64toi32_i32$2;
       break label$19;
      case 2:
       break label$20;
      default:
       break label$19;
      };
     }
     i64toi32_i32$2 = $4$hi;
     $426 = $4;
     $426$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$2 = $2$hi;
     $432 = !($2 | i64toi32_i32$2 | 0) & ($9 | 0) != (0 | 0) | 0;
     i64toi32_i32$2 = 0;
     $433$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$5 = $3;
     i64toi32_i32$3 = $433$hi;
     i64toi32_i32$1 = $432;
     i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$1 | 0;
     i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$1 >>> 0) {
      i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
     }
     $1 = i64toi32_i32$4;
     $1$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $3$hi;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$2 = i64toi32_i32$4;
     i64toi32_i32$5 = $3$hi;
     i64toi32_i32$1 = $3;
     $437 = i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$1 >>> 0 | 0) | 0;
     i64toi32_i32$2 = 0;
     $438$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $426$hi;
     i64toi32_i32$1 = $426;
     i64toi32_i32$0 = $438$hi;
     i64toi32_i32$5 = $437;
     i64toi32_i32$3 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
     i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
     if (i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     $4 = i64toi32_i32$3;
     $4$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $1$hi;
     $3 = $1;
     $3$hi = i64toi32_i32$4;
    }
    if (!$9) {
     break label$1
    }
   }
   __fe_raise_inexact() | 0;
  }
  i64toi32_i32$4 = $3$hi;
  i64toi32_i32$1 = $0;
  HEAP32[i64toi32_i32$1 >> 2] = $3;
  HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$4;
  i64toi32_i32$4 = $4$hi;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = $4;
  HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = i64toi32_i32$4;
  __stack_pointer = $5 + 112 | 0;
 }
 
 function __lshrti3($0, $1, $1$hi, $2, $2$hi, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $4$hi = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $11$hi = 0, $18$hi = 0, $19 = 0, $19$hi = 0, $4 = 0, $24$hi = 0;
  label$1 : {
   label$2 : {
    if (!($3 & 64 | 0)) {
     break label$2
    }
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$0 = 0;
    $11$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$2 = $2;
    i64toi32_i32$1 = $11$hi;
    i64toi32_i32$3 = $3 + -64 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $18 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     $18 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
    }
    $1 = $18;
    $1$hi = i64toi32_i32$1;
    i64toi32_i32$1 = 0;
    $2 = 0;
    $2$hi = i64toi32_i32$1;
    break label$1;
   }
   if (!$3) {
    break label$1
   }
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$1 = 0;
   $18$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$0 = $2;
   i64toi32_i32$2 = $18$hi;
   i64toi32_i32$3 = 64 - $3 | 0;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
    $20 = 0;
   } else {
    i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
    $20 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
   }
   $19 = $20;
   $19$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$2 = 0;
   $4 = $3;
   $4$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$1 = $1;
   i64toi32_i32$0 = $4$hi;
   i64toi32_i32$3 = $3;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$0 = 0;
    $21 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
    $21 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
   }
   $24$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $19$hi;
   i64toi32_i32$2 = $19;
   i64toi32_i32$1 = $24$hi;
   i64toi32_i32$3 = $21;
   i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
   $1 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
   $1$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$1 = $4$hi;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$0 = $2;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$3 = $4;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$2 = 0;
    $22 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    $22 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
   }
   $2 = $22;
   $2$hi = i64toi32_i32$2;
  }
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$0 = $0;
  HEAP32[i64toi32_i32$0 >> 2] = $1;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $2$hi;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$2;
 }
 
 function __fixtfdi($0, $0$hi, $1, $1$hi) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  var i64toi32_i32$4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$5 = 0, $3 = 0, $3$hi = 0, $2 = 0, $4 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $24 = 0, $24$hi = 0, $29 = 0, $29$hi = 0, $31 = 0, $31$hi = 0;
  $2 = __stack_pointer - 16 | 0;
  __stack_pointer = $2;
  i64toi32_i32$0 = 0;
  $3 = 0;
  $3$hi = i64toi32_i32$0;
  label$1 : {
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$2 = $1;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 48;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $20 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    $20 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
   }
   $4 = $20 & 32767 | 0;
   if ($4 >>> 0 < 16383 >>> 0) {
    break label$1
   }
   label$2 : {
    if (($4 + -16383 | 0) >>> 0 < 64 >>> 0) {
     break label$2
    }
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$0 = $1;
    i64toi32_i32$2 = -1;
    i64toi32_i32$3 = -1;
    if ((i64toi32_i32$1 | 0) > (i64toi32_i32$2 | 0)) {
     $21 = 1
    } else {
     if ((i64toi32_i32$1 | 0) >= (i64toi32_i32$2 | 0)) {
      if (i64toi32_i32$0 >>> 0 <= i64toi32_i32$3 >>> 0) {
       $22 = 0
      } else {
       $22 = 1
      }
      $23 = $22;
     } else {
      $23 = 0
     }
     $21 = $23;
    }
    i64toi32_i32$4 = $21;
    i64toi32_i32$0 = 2147483647;
    i64toi32_i32$1 = -2147483648;
    i64toi32_i32$2 = i64toi32_i32$4 ? -1 : 0;
    i64toi32_i32$3 = i64toi32_i32$4 ? i64toi32_i32$0 : i64toi32_i32$1;
    $3 = i64toi32_i32$2;
    $3$hi = i64toi32_i32$3;
    break label$1;
   }
   i64toi32_i32$3 = $0$hi;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$4 = $1;
   i64toi32_i32$2 = 65535;
   i64toi32_i32$0 = -1;
   i64toi32_i32$2 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
   i64toi32_i32$3 = i64toi32_i32$4 & i64toi32_i32$0 | 0;
   i64toi32_i32$4 = 65536;
   i64toi32_i32$0 = 0;
   i64toi32_i32$4 = i64toi32_i32$2 | i64toi32_i32$4 | 0;
   $24 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
   $24$hi = i64toi32_i32$4;
   i64toi32_i32$4 = $0$hi;
   i64toi32_i32$3 = $24$hi;
   __lshrti3($2 | 0, $0 | 0, i64toi32_i32$4 | 0, $24 | 0, i64toi32_i32$3 | 0, 16495 - $4 | 0 | 0);
   i64toi32_i32$2 = $2;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
   i64toi32_i32$4 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
   $3 = i64toi32_i32$3;
   $3$hi = i64toi32_i32$4;
   $29 = i64toi32_i32$3;
   $29$hi = i64toi32_i32$4;
   i64toi32_i32$4 = 0;
   i64toi32_i32$2 = 0;
   i64toi32_i32$3 = $3$hi;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = i64toi32_i32$2 - i64toi32_i32$0 | 0;
   i64toi32_i32$5 = (i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0) + i64toi32_i32$3 | 0;
   i64toi32_i32$5 = i64toi32_i32$4 - i64toi32_i32$5 | 0;
   $31 = i64toi32_i32$1;
   $31$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $1$hi;
   i64toi32_i32$4 = $1;
   i64toi32_i32$2 = -1;
   i64toi32_i32$0 = -1;
   if ((i64toi32_i32$5 | 0) > (i64toi32_i32$2 | 0)) {
    $25 = 1
   } else {
    if ((i64toi32_i32$5 | 0) >= (i64toi32_i32$2 | 0)) {
     if (i64toi32_i32$4 >>> 0 <= i64toi32_i32$0 >>> 0) {
      $26 = 0
     } else {
      $26 = 1
     }
     $27 = $26;
    } else {
     $27 = 0
    }
    $25 = $27;
   }
   i64toi32_i32$3 = $25;
   i64toi32_i32$4 = $29$hi;
   i64toi32_i32$5 = $31$hi;
   i64toi32_i32$2 = i64toi32_i32$3 ? $29 : $31;
   i64toi32_i32$0 = i64toi32_i32$3 ? i64toi32_i32$4 : i64toi32_i32$5;
   $3 = i64toi32_i32$2;
   $3$hi = i64toi32_i32$0;
  }
  __stack_pointer = $2 + 16 | 0;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$2 = $3;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$0;
  return i64toi32_i32$2 | 0;
 }
 
 function __trunctfdf2($0, $0$hi, $1, $1$hi) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$5 = 0, i64toi32_i32$4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$1 = 0, $3 = 0, $3$hi = 0, $4$hi = 0, $4 = 0, $2 = 0, $5 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $12 = 0, $12$hi = 0, $14$hi = 0, $17 = 0, $17$hi = 0, $19$hi = 0, $34 = 0, $34$hi = 0, $37 = 0, $39 = 0, $44 = 0, $44$hi = 0, $46$hi = 0, $74 = 0, $74$hi = 0, $78$hi = 0, $81 = 0, $81$hi = 0, $83 = 0, $83$hi = 0, $87 = 0, $87$hi = 0, $89 = 0, $90$hi = 0, $100$hi = 0, $107 = 0, $107$hi = 0;
  $2 = __stack_pointer - 32 | 0;
  __stack_pointer = $2;
  label$1 : {
   label$2 : {
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$2 = $1;
    i64toi32_i32$1 = 2147483647;
    i64toi32_i32$3 = -1;
    i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
    $3 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    $3$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $3;
    i64toi32_i32$2 = -1006698496;
    i64toi32_i32$3 = 0;
    i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
    i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
     i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
    }
    $12 = i64toi32_i32$4;
    $12$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$1 = $3;
    i64toi32_i32$0 = -1140785152;
    i64toi32_i32$3 = 0;
    i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
    i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
    if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) {
     i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
    }
    $14$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $12$hi;
    i64toi32_i32$5 = $12;
    i64toi32_i32$1 = $14$hi;
    i64toi32_i32$3 = i64toi32_i32$2;
    if (i64toi32_i32$4 >>> 0 > i64toi32_i32$1 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$5 >>> 0 >= i64toi32_i32$3 >>> 0 | 0) | 0) {
     break label$2
    }
    i64toi32_i32$5 = $0$hi;
    i64toi32_i32$3 = $0;
    i64toi32_i32$4 = 0;
    i64toi32_i32$1 = 60;
    i64toi32_i32$0 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$4 = 0;
     $43 = i64toi32_i32$5 >>> i64toi32_i32$0 | 0;
    } else {
     i64toi32_i32$4 = i64toi32_i32$5 >>> i64toi32_i32$0 | 0;
     $43 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$0 | 0) | 0;
    }
    $17 = $43;
    $17$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $1$hi;
    i64toi32_i32$5 = $1;
    i64toi32_i32$3 = 0;
    i64toi32_i32$1 = 4;
    i64toi32_i32$0 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$3 = i64toi32_i32$5 << i64toi32_i32$0 | 0;
     $45 = 0;
    } else {
     i64toi32_i32$3 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$0 | 0) | 0;
     $45 = i64toi32_i32$5 << i64toi32_i32$0 | 0;
    }
    $19$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $17$hi;
    i64toi32_i32$4 = $17;
    i64toi32_i32$5 = $19$hi;
    i64toi32_i32$1 = $45;
    i64toi32_i32$5 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
    $3 = i64toi32_i32$4 | i64toi32_i32$1 | 0;
    $3$hi = i64toi32_i32$5;
    label$3 : {
     i64toi32_i32$5 = $0$hi;
     i64toi32_i32$3 = $0;
     i64toi32_i32$4 = 268435455;
     i64toi32_i32$1 = -1;
     i64toi32_i32$4 = i64toi32_i32$5 & i64toi32_i32$4 | 0;
     $0 = i64toi32_i32$3 & i64toi32_i32$1 | 0;
     $0$hi = i64toi32_i32$4;
     i64toi32_i32$5 = $0;
     i64toi32_i32$3 = 134217728;
     i64toi32_i32$1 = 1;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$5 >>> 0 < i64toi32_i32$1 >>> 0 | 0) | 0) {
      break label$3
     }
     i64toi32_i32$5 = $3$hi;
     i64toi32_i32$1 = $3;
     i64toi32_i32$4 = 1073741824;
     i64toi32_i32$3 = 1;
     i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
     i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
     }
     $4 = i64toi32_i32$0;
     $4$hi = i64toi32_i32$2;
     break label$1;
    }
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$5 = $3;
    i64toi32_i32$1 = 1073741824;
    i64toi32_i32$3 = 0;
    i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
    i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
    }
    $4 = i64toi32_i32$4;
    $4$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $0$hi;
    i64toi32_i32$2 = $0;
    i64toi32_i32$5 = 134217728;
    i64toi32_i32$3 = 0;
    i64toi32_i32$5 = i64toi32_i32$0 ^ i64toi32_i32$5 | 0;
    i64toi32_i32$0 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 0;
    if ((i64toi32_i32$0 | 0) != (i64toi32_i32$3 | 0) | (i64toi32_i32$5 | 0) != (i64toi32_i32$2 | 0) | 0) {
     break label$1
    }
    i64toi32_i32$0 = $4$hi;
    i64toi32_i32$0 = $3$hi;
    i64toi32_i32$3 = $3;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$5 = i64toi32_i32$0 & i64toi32_i32$5 | 0;
    $34 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
    $34$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $4$hi;
    i64toi32_i32$0 = $4;
    i64toi32_i32$3 = $34$hi;
    i64toi32_i32$2 = $34;
    i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
    i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
    if (i64toi32_i32$1 >>> 0 < i64toi32_i32$2 >>> 0) {
     i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
    }
    $4 = i64toi32_i32$1;
    $4$hi = i64toi32_i32$4;
    break label$1;
   }
   label$4 : {
    i64toi32_i32$4 = $0$hi;
    $37 = !($0 | i64toi32_i32$4 | 0);
    i64toi32_i32$4 = $3$hi;
    i64toi32_i32$5 = $3;
    i64toi32_i32$0 = 2147418112;
    i64toi32_i32$2 = 0;
    $39 = i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
    i64toi32_i32$5 = i64toi32_i32$4;
    i64toi32_i32$2 = $3;
    i64toi32_i32$4 = 2147418112;
    i64toi32_i32$0 = 0;
    if ((i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) & (i64toi32_i32$5 | 0) == (i64toi32_i32$4 | 0) | 0 ? $37 : $39) {
     break label$4
    }
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$0 = $0;
    i64toi32_i32$5 = 0;
    i64toi32_i32$4 = 60;
    i64toi32_i32$3 = i64toi32_i32$4 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = 0;
     $46 = i64toi32_i32$2 >>> i64toi32_i32$3 | 0;
    } else {
     i64toi32_i32$5 = i64toi32_i32$2 >>> i64toi32_i32$3 | 0;
     $46 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$3 | 0) | 0;
    }
    $44 = $46;
    $44$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $1$hi;
    i64toi32_i32$2 = $1;
    i64toi32_i32$0 = 0;
    i64toi32_i32$4 = 4;
    i64toi32_i32$3 = i64toi32_i32$4 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
     $47 = 0;
    } else {
     i64toi32_i32$0 = ((1 << i64toi32_i32$3 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$3 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$3 | 0) | 0;
     $47 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
    }
    $46$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $44$hi;
    i64toi32_i32$5 = $44;
    i64toi32_i32$2 = $46$hi;
    i64toi32_i32$4 = $47;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$4 | 0;
    i64toi32_i32$5 = 524287;
    i64toi32_i32$4 = -1;
    i64toi32_i32$5 = i64toi32_i32$2 & i64toi32_i32$5 | 0;
    i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$4 | 0;
    i64toi32_i32$0 = 2146959360;
    i64toi32_i32$4 = 0;
    i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
    $4 = i64toi32_i32$2 | i64toi32_i32$4 | 0;
    $4$hi = i64toi32_i32$0;
    break label$1;
   }
   i64toi32_i32$0 = 2146435072;
   $4 = 0;
   $4$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$5 = $3;
   i64toi32_i32$2 = 1140785151;
   i64toi32_i32$4 = -1;
   if (i64toi32_i32$0 >>> 0 > i64toi32_i32$2 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$5 >>> 0 > i64toi32_i32$4 >>> 0 | 0) | 0) {
    break label$1
   }
   i64toi32_i32$5 = 0;
   $4 = 0;
   $4$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $3$hi;
   i64toi32_i32$4 = $3;
   i64toi32_i32$0 = 0;
   i64toi32_i32$2 = 48;
   i64toi32_i32$3 = i64toi32_i32$2 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
    i64toi32_i32$0 = 0;
    $48 = i64toi32_i32$5 >>> i64toi32_i32$3 | 0;
   } else {
    i64toi32_i32$0 = i64toi32_i32$5 >>> i64toi32_i32$3 | 0;
    $48 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$3 | 0) | 0;
   }
   $5 = $48;
   if ($5 >>> 0 < 15249 >>> 0) {
    break label$1
   }
   i64toi32_i32$0 = $0$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$5 = $1;
   i64toi32_i32$4 = 65535;
   i64toi32_i32$2 = -1;
   i64toi32_i32$4 = i64toi32_i32$0 & i64toi32_i32$4 | 0;
   i64toi32_i32$0 = i64toi32_i32$5 & i64toi32_i32$2 | 0;
   i64toi32_i32$5 = 65536;
   i64toi32_i32$2 = 0;
   i64toi32_i32$5 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
   $3 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
   $3$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $0$hi;
   i64toi32_i32$0 = $3$hi;
   __ashlti3($2 + 16 | 0 | 0, $0 | 0, i64toi32_i32$5 | 0, $3 | 0, i64toi32_i32$0 | 0, $5 + -15233 | 0 | 0);
   i64toi32_i32$0 = i64toi32_i32$5;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = i64toi32_i32$5;
   i64toi32_i32$5 = $3$hi;
   __lshrti3($2 | 0, $0 | 0, i64toi32_i32$0 | 0, $3 | 0, i64toi32_i32$5 | 0, 15361 - $5 | 0 | 0);
   i64toi32_i32$4 = $2;
   i64toi32_i32$5 = HEAP32[i64toi32_i32$4 >> 2] | 0;
   i64toi32_i32$0 = HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] | 0;
   $3 = i64toi32_i32$5;
   $3$hi = i64toi32_i32$0;
   i64toi32_i32$4 = i64toi32_i32$5;
   i64toi32_i32$5 = 0;
   i64toi32_i32$2 = 60;
   i64toi32_i32$3 = i64toi32_i32$2 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
    i64toi32_i32$5 = 0;
    $49 = i64toi32_i32$0 >>> i64toi32_i32$3 | 0;
   } else {
    i64toi32_i32$5 = i64toi32_i32$0 >>> i64toi32_i32$3 | 0;
    $49 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$3 | 0) | 0;
   }
   $74 = $49;
   $74$hi = i64toi32_i32$5;
   i64toi32_i32$0 = $2 + 8 | 0;
   i64toi32_i32$5 = HEAP32[i64toi32_i32$0 >> 2] | 0;
   i64toi32_i32$4 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
   i64toi32_i32$0 = i64toi32_i32$5;
   i64toi32_i32$5 = 0;
   i64toi32_i32$2 = 4;
   i64toi32_i32$3 = i64toi32_i32$2 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
    i64toi32_i32$5 = i64toi32_i32$0 << i64toi32_i32$3 | 0;
    $50 = 0;
   } else {
    i64toi32_i32$5 = ((1 << i64toi32_i32$3 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$3 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$3 | 0) | 0;
    $50 = i64toi32_i32$0 << i64toi32_i32$3 | 0;
   }
   $78$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $74$hi;
   i64toi32_i32$4 = $74;
   i64toi32_i32$0 = $78$hi;
   i64toi32_i32$2 = $50;
   i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
   $4 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
   $4$hi = i64toi32_i32$0;
   label$5 : {
    i64toi32_i32$0 = $3$hi;
    i64toi32_i32$5 = $3;
    i64toi32_i32$4 = 268435455;
    i64toi32_i32$2 = -1;
    i64toi32_i32$4 = i64toi32_i32$0 & i64toi32_i32$4 | 0;
    $81 = i64toi32_i32$5 & i64toi32_i32$2 | 0;
    $81$hi = i64toi32_i32$4;
    i64toi32_i32$0 = $2;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] | 0;
    i64toi32_i32$5 = HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] | 0;
    $83 = i64toi32_i32$4;
    $83$hi = i64toi32_i32$5;
    i64toi32_i32$0 = (i64toi32_i32$0 + 16 | 0) + 8 | 0;
    i64toi32_i32$5 = HEAP32[i64toi32_i32$0 >> 2] | 0;
    i64toi32_i32$4 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
    $87 = i64toi32_i32$5;
    $87$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $83$hi;
    i64toi32_i32$0 = $83;
    i64toi32_i32$5 = $87$hi;
    i64toi32_i32$2 = $87;
    i64toi32_i32$5 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
    i64toi32_i32$4 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = 0;
    $89 = (i64toi32_i32$4 | 0) != (i64toi32_i32$2 | 0) | (i64toi32_i32$5 | 0) != (i64toi32_i32$0 | 0) | 0;
    i64toi32_i32$4 = 0;
    $90$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $81$hi;
    i64toi32_i32$2 = $81;
    i64toi32_i32$5 = $90$hi;
    i64toi32_i32$0 = $89;
    i64toi32_i32$5 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
    $3 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
    $3$hi = i64toi32_i32$5;
    i64toi32_i32$4 = $3;
    i64toi32_i32$2 = 134217728;
    i64toi32_i32$0 = 1;
    if (i64toi32_i32$5 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0) {
     break label$5
    }
    i64toi32_i32$4 = $4$hi;
    i64toi32_i32$0 = $4;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
    i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
    if (i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
    }
    $4 = i64toi32_i32$3;
    $4$hi = i64toi32_i32$1;
    break label$1;
   }
   i64toi32_i32$1 = $3$hi;
   i64toi32_i32$4 = $3;
   i64toi32_i32$0 = 134217728;
   i64toi32_i32$2 = 0;
   i64toi32_i32$0 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
   i64toi32_i32$1 = i64toi32_i32$4 ^ i64toi32_i32$2 | 0;
   i64toi32_i32$4 = 0;
   i64toi32_i32$2 = 0;
   if ((i64toi32_i32$1 | 0) != (i64toi32_i32$2 | 0) | (i64toi32_i32$0 | 0) != (i64toi32_i32$4 | 0) | 0) {
    break label$1
   }
   i64toi32_i32$1 = $4$hi;
   i64toi32_i32$2 = $4;
   i64toi32_i32$0 = 0;
   i64toi32_i32$4 = 1;
   i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
   $100$hi = i64toi32_i32$0;
   i64toi32_i32$0 = i64toi32_i32$1;
   i64toi32_i32$0 = $100$hi;
   i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$4 | 0;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$4 = $4;
   i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
   i64toi32_i32$3 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
   if (i64toi32_i32$5 >>> 0 < i64toi32_i32$4 >>> 0) {
    i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
   }
   $4 = i64toi32_i32$5;
   $4$hi = i64toi32_i32$3;
  }
  __stack_pointer = $2 + 32 | 0;
  i64toi32_i32$3 = $4$hi;
  i64toi32_i32$3 = $1$hi;
  i64toi32_i32$0 = $1;
  i64toi32_i32$1 = -2147483648;
  i64toi32_i32$4 = 0;
  i64toi32_i32$1 = i64toi32_i32$3 & i64toi32_i32$1 | 0;
  $107 = i64toi32_i32$0 & i64toi32_i32$4 | 0;
  $107$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $4$hi;
  i64toi32_i32$3 = $4;
  i64toi32_i32$0 = $107$hi;
  i64toi32_i32$4 = $107;
  i64toi32_i32$0 = i64toi32_i32$1 | i64toi32_i32$0 | 0;
  wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$3 | i64toi32_i32$4 | 0 | 0);
  wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$0 | 0);
  return +(+wasm2js_scratch_load_f64());
 }
 
 function __fixtfsi($0, $0$hi, $1, $1$hi) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $3 = 0, i64toi32_i32$4 = 0, $2 = 0, $4 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $24$hi = 0, $29 = 0, $31 = 0;
  $2 = __stack_pointer - 16 | 0;
  __stack_pointer = $2;
  $3 = 0;
  label$1 : {
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$2 = $1;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 48;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $16 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    $16 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
   }
   $4 = $16 & 32767 | 0;
   if ($4 >>> 0 < 16383 >>> 0) {
    break label$1
   }
   label$2 : {
    if (($4 + -16383 | 0) >>> 0 < 32 >>> 0) {
     break label$2
    }
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$0 = $1;
    i64toi32_i32$2 = -1;
    i64toi32_i32$3 = -1;
    if ((i64toi32_i32$1 | 0) > (i64toi32_i32$2 | 0)) {
     $17 = 1
    } else {
     if ((i64toi32_i32$1 | 0) >= (i64toi32_i32$2 | 0)) {
      if (i64toi32_i32$0 >>> 0 <= i64toi32_i32$3 >>> 0) {
       $18 = 0
      } else {
       $18 = 1
      }
      $19 = $18;
     } else {
      $19 = 0
     }
     $17 = $19;
    }
    $3 = $17 ? 2147483647 : -2147483648;
    break label$1;
   }
   i64toi32_i32$0 = $0$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$3 = $1;
   i64toi32_i32$1 = 65535;
   i64toi32_i32$2 = -1;
   i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
   i64toi32_i32$0 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
   i64toi32_i32$3 = 65536;
   i64toi32_i32$2 = 0;
   i64toi32_i32$3 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
   $24 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
   $24$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $0$hi;
   i64toi32_i32$0 = $24$hi;
   __lshrti3($2 | 0, $0 | 0, i64toi32_i32$3 | 0, $24 | 0, i64toi32_i32$0 | 0, 16495 - $4 | 0 | 0);
   $3 = HEAP32[$2 >> 2] | 0;
   $29 = $3;
   $31 = 0 - $3 | 0;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$1 = $1;
   i64toi32_i32$3 = -1;
   i64toi32_i32$2 = -1;
   if ((i64toi32_i32$0 | 0) > (i64toi32_i32$3 | 0)) {
    $20 = 1
   } else {
    if ((i64toi32_i32$0 | 0) >= (i64toi32_i32$3 | 0)) {
     if (i64toi32_i32$1 >>> 0 <= i64toi32_i32$2 >>> 0) {
      $21 = 0
     } else {
      $21 = 1
     }
     $22 = $21;
    } else {
     $22 = 0
    }
    $20 = $22;
   }
   $3 = $20 ? $29 : $31;
  }
  __stack_pointer = $2 + 16 | 0;
  return $3 | 0;
 }
 
 function __multf3($0, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4, $4$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  $4$hi = $4$hi | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$5 = 0, i64toi32_i32$4 = 0, $5 = 0, $10$hi = 0, $10 = 0, $8$hi = 0, $7$hi = 0, $6$hi = 0, $11$hi = 0, $8 = 0, $14 = 0, $11 = 0, $7 = 0, $6 = 0, $17$hi = 0, $16 = 0, $17 = 0, $9$hi = 0, $12$hi = 0, $13$hi = 0, $15 = 0, $9 = 0, $12 = 0, $13 = 0, $19$hi = 0, $22$hi = 0, $19 = 0, $18 = 0, $20$hi = 0, $21$hi = 0, $23$hi = 0, $24$hi = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $237 = 0, $238 = 0, $239 = 0, $240 = 0, $241 = 0, $242 = 0, $244 = 0, $246 = 0, $248 = 0, $249 = 0, $251 = 0, $252 = 0, $254 = 0, $256 = 0, $20 = 0, $257 = 0, $258 = 0, $21 = 0, $22 = 0, $259 = 0, $24 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $278 = 0, $29 = 0, $29$hi = 0, $31$hi = 0, $34 = 0, $34$hi = 0, $36$hi = 0, $39 = 0, $39$hi = 0, $43$hi = 0, $70 = 0, $74 = 0, $81 = 0, $85 = 0, $94 = 0, $94$hi = 0, $106 = 0, $106$hi = 0, $128 = 0, $129 = 0, $129$hi = 0, $130 = 0, $130$hi = 0, $137$hi = 0, $140$hi = 0, $150 = 0, $150$hi = 0, $155$hi = 0, $162 = 0, $163 = 0, $163$hi = 0, $164 = 0, $164$hi = 0, $171$hi = 0, $174$hi = 0, $186 = 0, $186$hi = 0, $191$hi = 0, $194 = 0, $194$hi = 0, $196$hi = 0, $207 = 0, $207$hi = 0, $215 = 0, $215$hi = 0, $222 = 0, $222$hi = 0, $227 = 0, $227$hi = 0, $236 = 0, $236$hi = 0, $243 = 0, $243$hi = 0, $245 = 0, $245$hi = 0, $247 = 0, $247$hi = 0, $250 = 0, $252$hi = 0, $253 = 0, $253$hi = 0, $255 = 0, $255$hi = 0, $264 = 0, $264$hi = 0, $269 = 0, $269$hi = 0, $277 = 0, $277$hi = 0, $280$hi = 0, $23 = 0, $296 = 0, $296$hi = 0, $300 = 0, $301 = 0, $301$hi = 0, $305 = 0, $305$hi = 0, $309 = 0, $310$hi = 0, $311 = 0, $311$hi = 0, $312 = 0, $312$hi = 0, $315 = 0, $316$hi = 0, $319 = 0, $320$hi = 0, $321$hi = 0, $325 = 0, $326$hi = 0, $327$hi = 0, $330 = 0, $330$hi = 0, $331 = 0, $331$hi = 0, $338 = 0, $338$hi = 0, $344 = 0, $344$hi = 0, $346$hi = 0, $347 = 0, $347$hi = 0, $348 = 0, $348$hi = 0, $349 = 0, $349$hi = 0, $351$hi = 0, $355 = 0, $356$hi = 0, $357 = 0, $357$hi = 0, $358 = 0, $358$hi = 0, $360 = 0, $360$hi = 0, $363 = 0, $364$hi = 0, $367 = 0, $368$hi = 0, $369$hi = 0, $372 = 0, $373$hi = 0, $375$hi = 0, $376 = 0, $376$hi = 0, $380 = 0, $381$hi = 0, $382 = 0, $382$hi = 0, $383 = 0, $383$hi = 0, $386 = 0, $387$hi = 0, $390 = 0, $391$hi = 0, $392$hi = 0, $396 = 0, $397$hi = 0, $407 = 0, $407$hi = 0, $409$hi = 0, $412 = 0, $412$hi = 0, $414$hi = 0, $418 = 0, $418$hi = 0, $420$hi = 0, $454 = 0, $454$hi = 0, $456 = 0, $456$hi = 0, $457 = 0, $457$hi = 0, $459 = 0, $459$hi = 0, $463 = 0, $463$hi = 0, $465 = 0, $466$hi = 0, $471 = 0, $471$hi = 0, $475 = 0, $475$hi = 0, $484$hi = 0, $486 = 0, $486$hi = 0, $492 = 0, $498 = 0, $498$hi = 0, $503 = 0, $504$hi = 0, $508 = 0, $508$hi = 0, $512 = 0, $512$hi = 0, $515 = 0, $515$hi = 0, $519 = 0, $520$hi = 0;
  $5 = __stack_pointer - 96 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$2 = $1;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = 0;
   $228 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   $228 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
  }
  $29 = $228;
  $29$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $2$hi;
  i64toi32_i32$0 = $2;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
   $229 = 0;
  } else {
   i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
   $229 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
  }
  $31$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $29$hi;
  i64toi32_i32$1 = $29;
  i64toi32_i32$0 = $31$hi;
  i64toi32_i32$3 = $229;
  i64toi32_i32$0 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
  $6 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
  $6$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 17;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = 0;
   $230 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   $230 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
  }
  $34 = $230;
  $34$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $4$hi;
  i64toi32_i32$0 = $4;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 47;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
   $231 = 0;
  } else {
   i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
   $231 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
  }
  $36$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $34$hi;
  i64toi32_i32$1 = $34;
  i64toi32_i32$0 = $36$hi;
  i64toi32_i32$3 = $231;
  i64toi32_i32$0 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
  $7 = i64toi32_i32$1 | i64toi32_i32$3 | 0;
  $7$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 49;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = 0;
   $232 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   $232 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
  }
  $39 = $232;
  $39$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $4$hi;
  i64toi32_i32$0 = $4;
  i64toi32_i32$2 = 65535;
  i64toi32_i32$3 = -1;
  i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
  $8 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
  $8$hi = i64toi32_i32$2;
  i64toi32_i32$1 = $8;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = 15;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
   $233 = 0;
  } else {
   i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
   $233 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
  }
  $43$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $39$hi;
  i64toi32_i32$2 = $39;
  i64toi32_i32$1 = $43$hi;
  i64toi32_i32$3 = $233;
  i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
  $9 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
  $9$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $4$hi;
  i64toi32_i32$1 = $2$hi;
  i64toi32_i32$1 = $4$hi;
  i64toi32_i32$0 = $4;
  i64toi32_i32$2 = $2$hi;
  i64toi32_i32$3 = $2;
  i64toi32_i32$2 = i64toi32_i32$1 ^ i64toi32_i32$2 | 0;
  i64toi32_i32$1 = i64toi32_i32$0 ^ i64toi32_i32$3 | 0;
  i64toi32_i32$0 = -2147483648;
  i64toi32_i32$3 = 0;
  i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
  $10 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
  $10$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$2 = $2;
  i64toi32_i32$1 = 65535;
  i64toi32_i32$3 = -1;
  i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
  $11 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
  $11$hi = i64toi32_i32$1;
  i64toi32_i32$0 = $11;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = 0;
   $234 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   $234 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
  }
  $12 = $234;
  $12$hi = i64toi32_i32$2;
  i64toi32_i32$2 = $8$hi;
  i64toi32_i32$1 = $8;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = 17;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = 0;
   $235 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$0 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
   $235 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
  }
  $13 = $235;
  $13$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $4$hi;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 48;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = 0;
   $237 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   $237 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
  }
  $14 = $237 & 32767 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$0 = $2;
     i64toi32_i32$2 = 0;
     i64toi32_i32$3 = 48;
     i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$2 = 0;
      $238 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     } else {
      i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
      $238 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
     }
     $15 = $238 & 32767 | 0;
     if (($15 + -1 | 0) >>> 0 > 32765 >>> 0) {
      break label$3
     }
     $16 = 0;
     if (($14 + -1 | 0) >>> 0 < 32766 >>> 0) {
      break label$2
     }
    }
    label$4 : {
     i64toi32_i32$2 = $1$hi;
     $70 = !($1 | i64toi32_i32$2 | 0);
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$1 = $2;
     i64toi32_i32$0 = 2147483647;
     i64toi32_i32$3 = -1;
     i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
     $17 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
     $17$hi = i64toi32_i32$0;
     i64toi32_i32$2 = $17;
     i64toi32_i32$1 = 2147418112;
     i64toi32_i32$3 = 0;
     $74 = i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
     i64toi32_i32$2 = i64toi32_i32$0;
     i64toi32_i32$2 = i64toi32_i32$0;
     i64toi32_i32$3 = $17;
     i64toi32_i32$0 = 2147418112;
     i64toi32_i32$1 = 0;
     if ((i64toi32_i32$3 | 0) == (i64toi32_i32$1 | 0) & (i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) | 0 ? $70 : $74) {
      break label$4
     }
     i64toi32_i32$3 = $2$hi;
     i64toi32_i32$1 = $2;
     i64toi32_i32$2 = 32768;
     i64toi32_i32$0 = 0;
     i64toi32_i32$2 = i64toi32_i32$3 | i64toi32_i32$2 | 0;
     $10 = i64toi32_i32$1 | i64toi32_i32$0 | 0;
     $10$hi = i64toi32_i32$2;
     break label$1;
    }
    label$5 : {
     i64toi32_i32$2 = $3$hi;
     $81 = !($3 | i64toi32_i32$2 | 0);
     i64toi32_i32$2 = $4$hi;
     i64toi32_i32$3 = $4;
     i64toi32_i32$1 = 2147483647;
     i64toi32_i32$0 = -1;
     i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
     $2 = i64toi32_i32$3 & i64toi32_i32$0 | 0;
     $2$hi = i64toi32_i32$1;
     i64toi32_i32$2 = $2;
     i64toi32_i32$3 = 2147418112;
     i64toi32_i32$0 = 0;
     $85 = i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
     i64toi32_i32$2 = i64toi32_i32$1;
     i64toi32_i32$0 = $2;
     i64toi32_i32$1 = 2147418112;
     i64toi32_i32$3 = 0;
     if ((i64toi32_i32$0 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$2 | 0) == (i64toi32_i32$1 | 0) | 0 ? $81 : $85) {
      break label$5
     }
     i64toi32_i32$0 = $4$hi;
     i64toi32_i32$3 = $4;
     i64toi32_i32$2 = 32768;
     i64toi32_i32$1 = 0;
     i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
     $10 = i64toi32_i32$3 | i64toi32_i32$1 | 0;
     $10$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $3$hi;
     $1 = $3;
     $1$hi = i64toi32_i32$2;
     break label$1;
    }
    label$6 : {
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $17$hi;
     i64toi32_i32$0 = $17;
     i64toi32_i32$3 = 2147418112;
     i64toi32_i32$1 = 0;
     i64toi32_i32$3 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
     $94 = i64toi32_i32$0 ^ i64toi32_i32$1 | 0;
     $94$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$2 = $1;
     i64toi32_i32$0 = $94$hi;
     i64toi32_i32$1 = $94;
     i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
     i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
     i64toi32_i32$2 = 0;
     i64toi32_i32$1 = 0;
     if ((i64toi32_i32$3 | 0) != (i64toi32_i32$1 | 0) | (i64toi32_i32$0 | 0) != (i64toi32_i32$2 | 0) | 0) {
      break label$6
     }
     label$7 : {
      i64toi32_i32$3 = $3$hi;
      i64toi32_i32$3 = $2$hi;
      i64toi32_i32$3 = $3$hi;
      i64toi32_i32$1 = $3;
      i64toi32_i32$0 = $2$hi;
      i64toi32_i32$2 = $2;
      i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
      if (!!(i64toi32_i32$1 | i64toi32_i32$2 | 0 | i64toi32_i32$0 | 0)) {
       break label$7
      }
      i64toi32_i32$0 = 2147450880;
      $10 = 0;
      $10$hi = i64toi32_i32$0;
      i64toi32_i32$0 = 0;
      $1 = 0;
      $1$hi = i64toi32_i32$0;
      break label$1;
     }
     i64toi32_i32$0 = $10$hi;
     i64toi32_i32$3 = $10;
     i64toi32_i32$1 = 2147418112;
     i64toi32_i32$2 = 0;
     i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
     $10 = i64toi32_i32$3 | i64toi32_i32$2 | 0;
     $10$hi = i64toi32_i32$1;
     i64toi32_i32$1 = 0;
     $1 = 0;
     $1$hi = i64toi32_i32$1;
     break label$1;
    }
    label$8 : {
     i64toi32_i32$1 = $3$hi;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$0 = $2;
     i64toi32_i32$3 = 2147418112;
     i64toi32_i32$2 = 0;
     i64toi32_i32$3 = i64toi32_i32$1 ^ i64toi32_i32$3 | 0;
     $106 = i64toi32_i32$0 ^ i64toi32_i32$2 | 0;
     $106$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $3$hi;
     i64toi32_i32$1 = $3;
     i64toi32_i32$0 = $106$hi;
     i64toi32_i32$2 = $106;
     i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
     i64toi32_i32$3 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
     i64toi32_i32$1 = 0;
     i64toi32_i32$2 = 0;
     if ((i64toi32_i32$3 | 0) != (i64toi32_i32$2 | 0) | (i64toi32_i32$0 | 0) != (i64toi32_i32$1 | 0) | 0) {
      break label$8
     }
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$3 = $17$hi;
     i64toi32_i32$3 = $1$hi;
     i64toi32_i32$2 = $1;
     i64toi32_i32$0 = $17$hi;
     i64toi32_i32$1 = $17;
     i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
     $2 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
     $2$hi = i64toi32_i32$0;
     i64toi32_i32$0 = 0;
     $1 = 0;
     $1$hi = i64toi32_i32$0;
     label$9 : {
      i64toi32_i32$0 = $2$hi;
      if (!!($2 | i64toi32_i32$0 | 0)) {
       break label$9
      }
      i64toi32_i32$0 = 2147450880;
      $10 = 0;
      $10$hi = i64toi32_i32$0;
      break label$1;
     }
     i64toi32_i32$0 = $10$hi;
     i64toi32_i32$3 = $10;
     i64toi32_i32$2 = 2147418112;
     i64toi32_i32$1 = 0;
     i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
     $10 = i64toi32_i32$3 | i64toi32_i32$1 | 0;
     $10$hi = i64toi32_i32$2;
     break label$1;
    }
    label$10 : {
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $17$hi;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$0 = $1;
     i64toi32_i32$3 = $17$hi;
     i64toi32_i32$1 = $17;
     i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
     i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
     i64toi32_i32$0 = 0;
     i64toi32_i32$1 = 0;
     if ((i64toi32_i32$2 | 0) != (i64toi32_i32$1 | 0) | (i64toi32_i32$3 | 0) != (i64toi32_i32$0 | 0) | 0) {
      break label$10
     }
     i64toi32_i32$2 = 0;
     $1 = 0;
     $1$hi = i64toi32_i32$2;
     break label$1;
    }
    label$11 : {
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$1 = $3;
     i64toi32_i32$3 = $2$hi;
     i64toi32_i32$0 = $2;
     i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
     i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$0 | 0;
     i64toi32_i32$1 = 0;
     i64toi32_i32$0 = 0;
     if ((i64toi32_i32$2 | 0) != (i64toi32_i32$0 | 0) | (i64toi32_i32$3 | 0) != (i64toi32_i32$1 | 0) | 0) {
      break label$11
     }
     i64toi32_i32$2 = 0;
     $1 = 0;
     $1$hi = i64toi32_i32$2;
     break label$1;
    }
    $16 = 0;
    label$12 : {
     i64toi32_i32$2 = $17$hi;
     i64toi32_i32$0 = $17;
     i64toi32_i32$3 = 65535;
     i64toi32_i32$1 = -1;
     if (i64toi32_i32$2 >>> 0 > i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$0 >>> 0 > i64toi32_i32$1 >>> 0 | 0) | 0) {
      break label$12
     }
     $128 = $5 + 80 | 0;
     i64toi32_i32$0 = $1$hi;
     $129 = $1;
     $129$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $11$hi;
     $130 = $11;
     $130$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$0 = $11$hi;
     $16 = !($11 | i64toi32_i32$0 | 0);
     i64toi32_i32$4 = $16;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$2 = $11$hi;
     i64toi32_i32$3 = i64toi32_i32$4 ? $1 : $11;
     i64toi32_i32$1 = i64toi32_i32$4 ? i64toi32_i32$0 : i64toi32_i32$2;
     i64toi32_i32$0 = Math_clz32(i64toi32_i32$1);
     i64toi32_i32$4 = 0;
     if ((i64toi32_i32$0 | 0) == (32 | 0)) {
      $239 = Math_clz32(i64toi32_i32$3) + 32 | 0
     } else {
      $239 = i64toi32_i32$0
     }
     $137$hi = i64toi32_i32$4;
     i64toi32_i32$4 = 0;
     $140$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $137$hi;
     i64toi32_i32$3 = $239;
     i64toi32_i32$1 = $140$hi;
     i64toi32_i32$0 = $16 << 6 | 0;
     i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
     i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$1 | 0;
     if (i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0) {
      i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
     }
     $16 = i64toi32_i32$2;
     i64toi32_i32$5 = $129$hi;
     i64toi32_i32$3 = $130$hi;
     __ashlti3($128 | 0, $129 | 0, i64toi32_i32$5 | 0, $130 | 0, i64toi32_i32$3 | 0, i64toi32_i32$2 + -15 | 0 | 0);
     $16 = 16 - i64toi32_i32$2 | 0;
     i64toi32_i32$4 = $5;
     i64toi32_i32$3 = HEAP32[(i64toi32_i32$4 + 80 | 0) >> 2] | 0;
     i64toi32_i32$5 = HEAP32[(i64toi32_i32$4 + 84 | 0) >> 2] | 0;
     $1 = i64toi32_i32$3;
     $1$hi = i64toi32_i32$5;
     i64toi32_i32$4 = i64toi32_i32$3;
     i64toi32_i32$3 = 0;
     i64toi32_i32$0 = 32;
     i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = 0;
      $240 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
     } else {
      i64toi32_i32$3 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
      $240 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$4 >>> i64toi32_i32$1 | 0) | 0;
     }
     $150 = $240;
     $150$hi = i64toi32_i32$3;
     i64toi32_i32$5 = $5 + 88 | 0;
     i64toi32_i32$3 = HEAP32[i64toi32_i32$5 >> 2] | 0;
     i64toi32_i32$4 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
     $11 = i64toi32_i32$3;
     $11$hi = i64toi32_i32$4;
     i64toi32_i32$5 = i64toi32_i32$3;
     i64toi32_i32$3 = 0;
     i64toi32_i32$0 = 32;
     i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = i64toi32_i32$5 << i64toi32_i32$1 | 0;
      $241 = 0;
     } else {
      i64toi32_i32$3 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$1 | 0) | 0;
      $241 = i64toi32_i32$5 << i64toi32_i32$1 | 0;
     }
     $155$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $150$hi;
     i64toi32_i32$4 = $150;
     i64toi32_i32$5 = $155$hi;
     i64toi32_i32$0 = $241;
     i64toi32_i32$5 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
     $6 = i64toi32_i32$4 | i64toi32_i32$0 | 0;
     $6$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $11$hi;
     i64toi32_i32$3 = $11;
     i64toi32_i32$4 = 0;
     i64toi32_i32$0 = 32;
     i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
      i64toi32_i32$4 = 0;
      $242 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
     } else {
      i64toi32_i32$4 = i64toi32_i32$5 >>> i64toi32_i32$1 | 0;
      $242 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$1 | 0) | 0;
     }
     $12 = $242;
     $12$hi = i64toi32_i32$4;
    }
    i64toi32_i32$4 = $2$hi;
    i64toi32_i32$5 = $2;
    i64toi32_i32$3 = 65535;
    i64toi32_i32$0 = -1;
    if (i64toi32_i32$4 >>> 0 > i64toi32_i32$3 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$5 >>> 0 > i64toi32_i32$0 >>> 0 | 0) | 0) {
     break label$2
    }
    $162 = $5 + 64 | 0;
    i64toi32_i32$5 = $3$hi;
    $163 = $3;
    $163$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $8$hi;
    $164 = $8;
    $164$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$5 = $8$hi;
    $18 = !($8 | i64toi32_i32$5 | 0);
    i64toi32_i32$1 = $18;
    i64toi32_i32$5 = $3$hi;
    i64toi32_i32$4 = $8$hi;
    i64toi32_i32$3 = i64toi32_i32$1 ? $3 : $8;
    i64toi32_i32$0 = i64toi32_i32$1 ? i64toi32_i32$5 : i64toi32_i32$4;
    i64toi32_i32$5 = Math_clz32(i64toi32_i32$0);
    i64toi32_i32$1 = 0;
    if ((i64toi32_i32$5 | 0) == (32 | 0)) {
     $244 = Math_clz32(i64toi32_i32$3) + 32 | 0
    } else {
     $244 = i64toi32_i32$5
    }
    $171$hi = i64toi32_i32$1;
    i64toi32_i32$1 = 0;
    $174$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $171$hi;
    i64toi32_i32$3 = $244;
    i64toi32_i32$0 = $174$hi;
    i64toi32_i32$5 = $18 << 6 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
    i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
    }
    $18 = i64toi32_i32$4;
    i64toi32_i32$2 = $163$hi;
    i64toi32_i32$3 = $164$hi;
    __ashlti3($162 | 0, $163 | 0, i64toi32_i32$2 | 0, $164 | 0, i64toi32_i32$3 | 0, i64toi32_i32$4 + -15 | 0 | 0);
    $16 = ($16 - i64toi32_i32$4 | 0) + 16 | 0;
    i64toi32_i32$1 = $5;
    i64toi32_i32$3 = HEAP32[(i64toi32_i32$1 + 64 | 0) >> 2] | 0;
    i64toi32_i32$2 = HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] | 0;
    $3 = i64toi32_i32$3;
    $3$hi = i64toi32_i32$2;
    i64toi32_i32$1 = i64toi32_i32$3;
    i64toi32_i32$3 = 0;
    i64toi32_i32$5 = 49;
    i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
     i64toi32_i32$3 = 0;
     $246 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
    } else {
     i64toi32_i32$3 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
     $246 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$0 | 0) | 0;
    }
    $186 = $246;
    $186$hi = i64toi32_i32$3;
    i64toi32_i32$2 = $5 + 72 | 0;
    i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
    $2 = i64toi32_i32$3;
    $2$hi = i64toi32_i32$1;
    i64toi32_i32$2 = i64toi32_i32$3;
    i64toi32_i32$3 = 0;
    i64toi32_i32$5 = 15;
    i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
     i64toi32_i32$3 = i64toi32_i32$2 << i64toi32_i32$0 | 0;
     $248 = 0;
    } else {
     i64toi32_i32$3 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$0 | 0) | 0;
     $248 = i64toi32_i32$2 << i64toi32_i32$0 | 0;
    }
    $191$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $186$hi;
    i64toi32_i32$1 = $186;
    i64toi32_i32$2 = $191$hi;
    i64toi32_i32$5 = $248;
    i64toi32_i32$2 = i64toi32_i32$3 | i64toi32_i32$2 | 0;
    $9 = i64toi32_i32$1 | i64toi32_i32$5 | 0;
    $9$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$3 = $3;
    i64toi32_i32$1 = 0;
    i64toi32_i32$5 = 17;
    i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $249 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
     $249 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$0 | 0) | 0;
    }
    $194 = $249;
    $194$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $2$hi;
    i64toi32_i32$2 = $2;
    i64toi32_i32$3 = 0;
    i64toi32_i32$5 = 47;
    i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
     i64toi32_i32$3 = i64toi32_i32$2 << i64toi32_i32$0 | 0;
     $251 = 0;
    } else {
     i64toi32_i32$3 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$0 | 0) | 0;
     $251 = i64toi32_i32$2 << i64toi32_i32$0 | 0;
    }
    $196$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $194$hi;
    i64toi32_i32$1 = $194;
    i64toi32_i32$2 = $196$hi;
    i64toi32_i32$5 = $251;
    i64toi32_i32$2 = i64toi32_i32$3 | i64toi32_i32$2 | 0;
    $7 = i64toi32_i32$1 | i64toi32_i32$5 | 0;
    $7$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$3 = $2;
    i64toi32_i32$1 = 0;
    i64toi32_i32$5 = 17;
    i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $252 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
     $252 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$0 | 0) | 0;
    }
    $13 = $252;
    $13$hi = i64toi32_i32$1;
   }
   i64toi32_i32$1 = $7$hi;
   i64toi32_i32$2 = $7;
   i64toi32_i32$3 = 0;
   i64toi32_i32$5 = -1;
   i64toi32_i32$3 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
   $2 = i64toi32_i32$2 & i64toi32_i32$5 | 0;
   $2$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$1 = $1;
   i64toi32_i32$2 = 0;
   i64toi32_i32$5 = -1;
   i64toi32_i32$2 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
   $4 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
   $4$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$1 = $4$hi;
   i64toi32_i32$1 = __wasm_i64_mul($2 | 0, i64toi32_i32$2 | 0, $4 | 0, i64toi32_i32$1 | 0) | 0;
   i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
   $19 = i64toi32_i32$1;
   $19$hi = i64toi32_i32$2;
   $207 = i64toi32_i32$1;
   $207$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$3 = $3;
   i64toi32_i32$1 = 0;
   i64toi32_i32$5 = 15;
   i64toi32_i32$0 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
    $254 = 0;
   } else {
    i64toi32_i32$1 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$0 | 0) | 0;
    $254 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
   }
   i64toi32_i32$2 = $254;
   i64toi32_i32$3 = 0;
   i64toi32_i32$5 = -32768;
   i64toi32_i32$3 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
   $1 = i64toi32_i32$2 & i64toi32_i32$5 | 0;
   $1$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $6$hi;
   i64toi32_i32$1 = $6;
   i64toi32_i32$2 = 0;
   i64toi32_i32$5 = -1;
   i64toi32_i32$2 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
   $3 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
   $3$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$1 = $3$hi;
   i64toi32_i32$1 = __wasm_i64_mul($1 | 0, i64toi32_i32$2 | 0, $3 | 0, i64toi32_i32$1 | 0) | 0;
   i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
   $215 = i64toi32_i32$1;
   $215$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $207$hi;
   i64toi32_i32$3 = $207;
   i64toi32_i32$1 = $215$hi;
   i64toi32_i32$5 = $215;
   i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
   i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
   if (i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0) {
    i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
   }
   $6 = i64toi32_i32$0;
   $6$hi = i64toi32_i32$4;
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$3 = 0;
   i64toi32_i32$5 = 32;
   i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$3 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
    $256 = 0;
   } else {
    i64toi32_i32$3 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$1 | 0) | 0;
    $256 = i64toi32_i32$2 << i64toi32_i32$1 | 0;
   }
   $8 = $256;
   $8$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$3 = $4$hi;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$2 = __wasm_i64_mul($1 | 0, i64toi32_i32$3 | 0, $4 | 0, i64toi32_i32$2 | 0) | 0;
   i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
   $222 = i64toi32_i32$2;
   $222$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $8$hi;
   i64toi32_i32$4 = $8;
   i64toi32_i32$2 = $222$hi;
   i64toi32_i32$5 = $222;
   i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
   i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
   if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
    i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
   }
   $7 = i64toi32_i32$1;
   $7$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $8$hi;
   i64toi32_i32$0 = $7$hi;
   i64toi32_i32$3 = i64toi32_i32$1;
   i64toi32_i32$4 = $8$hi;
   i64toi32_i32$5 = $8;
   i64toi32_i32$3 = 0;
   $227 = i64toi32_i32$0 >>> 0 < i64toi32_i32$4 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$4 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
   $227$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$3 = $3$hi;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = __wasm_i64_mul($2 | 0, i64toi32_i32$3 | 0, $3 | 0, i64toi32_i32$0 | 0) | 0;
   i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
   $20 = i64toi32_i32$0;
   $20$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $1$hi;
   i64toi32_i32$3 = $11$hi;
   i64toi32_i32$5 = $11;
   i64toi32_i32$0 = 0;
   i64toi32_i32$4 = -1;
   i64toi32_i32$0 = i64toi32_i32$3 & i64toi32_i32$0 | 0;
   $8 = i64toi32_i32$5 & i64toi32_i32$4 | 0;
   $8$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$5 = $8$hi;
   i64toi32_i32$5 = __wasm_i64_mul($1 | 0, i64toi32_i32$0 | 0, $8 | 0, i64toi32_i32$5 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
   $236 = i64toi32_i32$5;
   $236$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $20$hi;
   i64toi32_i32$3 = $20;
   i64toi32_i32$5 = $236$hi;
   i64toi32_i32$4 = $236;
   i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$4 | 0;
   i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
   if (i64toi32_i32$2 >>> 0 < i64toi32_i32$4 >>> 0) {
    i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
   }
   $17 = i64toi32_i32$2;
   $17$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $9$hi;
   i64toi32_i32$0 = $9;
   i64toi32_i32$3 = 0;
   i64toi32_i32$4 = -1;
   i64toi32_i32$3 = i64toi32_i32$1 & i64toi32_i32$3 | 0;
   $11 = i64toi32_i32$0 & i64toi32_i32$4 | 0;
   $11$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $4$hi;
   i64toi32_i32$3 = $11$hi;
   i64toi32_i32$0 = $4$hi;
   i64toi32_i32$0 = __wasm_i64_mul($11 | 0, i64toi32_i32$3 | 0, $4 | 0, i64toi32_i32$0 | 0) | 0;
   i64toi32_i32$3 = i64toi32_i32$HIGH_BITS;
   $243 = i64toi32_i32$0;
   $243$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $17$hi;
   i64toi32_i32$1 = i64toi32_i32$2;
   i64toi32_i32$0 = $243$hi;
   i64toi32_i32$4 = $243;
   i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
   i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
   if (i64toi32_i32$5 >>> 0 < i64toi32_i32$4 >>> 0) {
    i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
   }
   $9 = i64toi32_i32$5;
   $9$hi = i64toi32_i32$2;
   $245 = i64toi32_i32$5;
   $245$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $6$hi;
   i64toi32_i32$3 = $6;
   i64toi32_i32$1 = 0;
   i64toi32_i32$4 = 32;
   i64toi32_i32$0 = i64toi32_i32$4 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$4 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $257 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$2 >>> i64toi32_i32$0 | 0;
    $257 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$0 | 0) | 0;
   }
   $247 = $257;
   $247$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $6$hi;
   i64toi32_i32$1 = $19$hi;
   i64toi32_i32$1 = $6$hi;
   i64toi32_i32$2 = $6;
   i64toi32_i32$3 = $19$hi;
   i64toi32_i32$4 = $19;
   $250 = i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$4 >>> 0 | 0) | 0;
   i64toi32_i32$2 = 0;
   i64toi32_i32$4 = $250;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 32;
   i64toi32_i32$0 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = i64toi32_i32$4 << i64toi32_i32$0 | 0;
    $258 = 0;
   } else {
    i64toi32_i32$1 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$4 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$0 | 0) | 0;
    $258 = i64toi32_i32$4 << i64toi32_i32$0 | 0;
   }
   $252$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $247$hi;
   i64toi32_i32$2 = $247;
   i64toi32_i32$4 = $252$hi;
   i64toi32_i32$3 = $258;
   i64toi32_i32$4 = i64toi32_i32$1 | i64toi32_i32$4 | 0;
   $253 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
   $253$hi = i64toi32_i32$4;
   i64toi32_i32$4 = $245$hi;
   i64toi32_i32$1 = $245;
   i64toi32_i32$2 = $253$hi;
   i64toi32_i32$3 = $253;
   i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
   i64toi32_i32$5 = i64toi32_i32$4 + i64toi32_i32$2 | 0;
   if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) {
    i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
   }
   $19 = i64toi32_i32$0;
   $19$hi = i64toi32_i32$5;
   $255 = i64toi32_i32$0;
   $255$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $2$hi;
   i64toi32_i32$5 = $8$hi;
   i64toi32_i32$5 = $2$hi;
   i64toi32_i32$1 = $8$hi;
   i64toi32_i32$1 = __wasm_i64_mul($2 | 0, i64toi32_i32$5 | 0, $8 | 0, i64toi32_i32$1 | 0) | 0;
   i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
   $21 = i64toi32_i32$1;
   $21$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $1$hi;
   i64toi32_i32$5 = $12$hi;
   i64toi32_i32$4 = $12;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 65536;
   i64toi32_i32$1 = i64toi32_i32$5 | i64toi32_i32$1 | 0;
   $6 = i64toi32_i32$4 | i64toi32_i32$3 | 0;
   $6$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$4 = $6$hi;
   i64toi32_i32$4 = __wasm_i64_mul($1 | 0, i64toi32_i32$1 | 0, $6 | 0, i64toi32_i32$4 | 0) | 0;
   i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
   $264 = i64toi32_i32$4;
   $264$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $21$hi;
   i64toi32_i32$5 = $21;
   i64toi32_i32$4 = $264$hi;
   i64toi32_i32$3 = $264;
   i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
   i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
   if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) {
    i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
   }
   $12 = i64toi32_i32$2;
   $12$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $11$hi;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = $11$hi;
   i64toi32_i32$5 = $3$hi;
   i64toi32_i32$5 = __wasm_i64_mul($11 | 0, i64toi32_i32$0 | 0, $3 | 0, i64toi32_i32$5 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
   $269 = i64toi32_i32$5;
   $269$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $12$hi;
   i64toi32_i32$1 = i64toi32_i32$2;
   i64toi32_i32$5 = $269$hi;
   i64toi32_i32$3 = $269;
   i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
   i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
   if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
    i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
   }
   $22 = i64toi32_i32$4;
   $22$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $13$hi;
   i64toi32_i32$0 = $13;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 2147483647;
   i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
   i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
   i64toi32_i32$0 = 0;
   i64toi32_i32$3 = -2147483648;
   i64toi32_i32$0 = i64toi32_i32$1 | i64toi32_i32$0 | 0;
   $1 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
   $1$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $4$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$2 = __wasm_i64_mul($1 | 0, i64toi32_i32$0 | 0, $4 | 0, i64toi32_i32$2 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
   $277 = i64toi32_i32$2;
   $277$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $22$hi;
   i64toi32_i32$1 = i64toi32_i32$4;
   i64toi32_i32$2 = $277$hi;
   i64toi32_i32$3 = $277;
   i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
   i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
   if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) {
    i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
   }
   $13 = i64toi32_i32$5;
   $13$hi = i64toi32_i32$4;
   i64toi32_i32$0 = i64toi32_i32$5;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 32;
   i64toi32_i32$2 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = i64toi32_i32$0 << i64toi32_i32$2 | 0;
    $259 = 0;
   } else {
    i64toi32_i32$1 = ((1 << i64toi32_i32$2 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$2 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$2 | 0) | 0;
    $259 = i64toi32_i32$0 << i64toi32_i32$2 | 0;
   }
   $280$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $255$hi;
   i64toi32_i32$4 = $255;
   i64toi32_i32$0 = $280$hi;
   i64toi32_i32$3 = $259;
   i64toi32_i32$2 = i64toi32_i32$4 + i64toi32_i32$3 | 0;
   i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
   if (i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0) {
    i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
   }
   $23 = i64toi32_i32$2;
   $23$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $227$hi;
   i64toi32_i32$1 = $227;
   i64toi32_i32$4 = $23$hi;
   i64toi32_i32$3 = i64toi32_i32$2;
   i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
   i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
   if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) {
    i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
   }
   $4 = i64toi32_i32$0;
   $4$hi = i64toi32_i32$2;
   $14 = (($15 + $14 | 0) + $16 | 0) + -16383 | 0;
   label$13 : {
    label$14 : {
     i64toi32_i32$2 = $11$hi;
     i64toi32_i32$2 = $8$hi;
     i64toi32_i32$2 = $11$hi;
     i64toi32_i32$1 = $8$hi;
     i64toi32_i32$1 = __wasm_i64_mul($11 | 0, i64toi32_i32$2 | 0, $8 | 0, i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
     $24 = i64toi32_i32$1;
     $24$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$2 = $6$hi;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = __wasm_i64_mul($2 | 0, i64toi32_i32$2 | 0, $6 | 0, i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
     $296 = i64toi32_i32$1;
     $296$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $24$hi;
     i64toi32_i32$5 = $24;
     i64toi32_i32$1 = $296$hi;
     i64toi32_i32$3 = $296;
     i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
     i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
     }
     $2 = i64toi32_i32$4;
     $2$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $24$hi;
     i64toi32_i32$0 = $2$hi;
     i64toi32_i32$2 = i64toi32_i32$4;
     i64toi32_i32$5 = $24$hi;
     i64toi32_i32$3 = $24;
     $300 = i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
     i64toi32_i32$2 = 0;
     $301 = $300;
     $301$hi = i64toi32_i32$2;
     i64toi32_i32$2 = i64toi32_i32$0;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$0 = $3$hi;
     i64toi32_i32$0 = __wasm_i64_mul($1 | 0, i64toi32_i32$2 | 0, $3 | 0, i64toi32_i32$0 | 0) | 0;
     i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
     $305 = i64toi32_i32$0;
     $305$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $2$hi;
     i64toi32_i32$3 = i64toi32_i32$4;
     i64toi32_i32$0 = $305$hi;
     i64toi32_i32$5 = $305;
     i64toi32_i32$1 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
     i64toi32_i32$4 = i64toi32_i32$2 + i64toi32_i32$0 | 0;
     if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     $3 = i64toi32_i32$1;
     $3$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $2$hi;
     i64toi32_i32$4 = $3$hi;
     i64toi32_i32$2 = i64toi32_i32$1;
     i64toi32_i32$3 = $2$hi;
     i64toi32_i32$5 = $2;
     $309 = i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
     i64toi32_i32$2 = 0;
     $310$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $301$hi;
     i64toi32_i32$5 = $301;
     i64toi32_i32$4 = $310$hi;
     i64toi32_i32$3 = $309;
     i64toi32_i32$0 = i64toi32_i32$5 + i64toi32_i32$3 | 0;
     i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
     }
     $311 = i64toi32_i32$0;
     $311$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $3$hi;
     $312 = $3;
     $312$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $17$hi;
     i64toi32_i32$1 = $20$hi;
     i64toi32_i32$1 = $17$hi;
     i64toi32_i32$2 = $17;
     i64toi32_i32$5 = $20$hi;
     i64toi32_i32$3 = $20;
     $315 = i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
     i64toi32_i32$2 = 0;
     $316$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $9$hi;
     i64toi32_i32$2 = i64toi32_i32$1;
     i64toi32_i32$2 = $9$hi;
     i64toi32_i32$3 = $9;
     i64toi32_i32$5 = $17;
     $319 = i64toi32_i32$2 >>> 0 < i64toi32_i32$1 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
     i64toi32_i32$3 = 0;
     $320$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $316$hi;
     i64toi32_i32$5 = $315;
     i64toi32_i32$2 = $320$hi;
     i64toi32_i32$1 = $319;
     i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$1 | 0;
     i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$1 >>> 0) {
      i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
     }
     $321$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $312$hi;
     i64toi32_i32$3 = $312;
     i64toi32_i32$5 = $321$hi;
     i64toi32_i32$1 = i64toi32_i32$4;
     i64toi32_i32$2 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
     i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
     if (i64toi32_i32$2 >>> 0 < i64toi32_i32$1 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     $2 = i64toi32_i32$2;
     $2$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $3$hi;
     i64toi32_i32$4 = $2$hi;
     i64toi32_i32$0 = i64toi32_i32$2;
     i64toi32_i32$3 = $3$hi;
     i64toi32_i32$1 = $3;
     $325 = i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0 | 0) | 0;
     i64toi32_i32$0 = 0;
     $326$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $311$hi;
     i64toi32_i32$1 = $311;
     i64toi32_i32$4 = $326$hi;
     i64toi32_i32$3 = $325;
     i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
     i64toi32_i32$2 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
     }
     $327$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$2 = $6$hi;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$1 = $6$hi;
     i64toi32_i32$1 = __wasm_i64_mul($1 | 0, i64toi32_i32$2 | 0, $6 | 0, i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
     $330 = i64toi32_i32$1;
     $330$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $327$hi;
     i64toi32_i32$0 = i64toi32_i32$5;
     i64toi32_i32$1 = $330$hi;
     i64toi32_i32$3 = $330;
     i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
     i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
     }
     $331 = i64toi32_i32$4;
     $331$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $1$hi;
     i64toi32_i32$5 = $8$hi;
     i64toi32_i32$5 = $1$hi;
     i64toi32_i32$0 = $8$hi;
     i64toi32_i32$0 = __wasm_i64_mul($1 | 0, i64toi32_i32$5 | 0, $8 | 0, i64toi32_i32$0 | 0) | 0;
     i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
     $3 = i64toi32_i32$0;
     $3$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $11$hi;
     i64toi32_i32$5 = $6$hi;
     i64toi32_i32$5 = $11$hi;
     i64toi32_i32$0 = $6$hi;
     i64toi32_i32$0 = __wasm_i64_mul($11 | 0, i64toi32_i32$5 | 0, $6 | 0, i64toi32_i32$0 | 0) | 0;
     i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
     $338 = i64toi32_i32$0;
     $338$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $3$hi;
     i64toi32_i32$2 = $3;
     i64toi32_i32$0 = $338$hi;
     i64toi32_i32$3 = $338;
     i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
     i64toi32_i32$4 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
     if (i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     $1 = i64toi32_i32$1;
     $1$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $3$hi;
     i64toi32_i32$4 = $1$hi;
     i64toi32_i32$5 = i64toi32_i32$1;
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$3 = $3;
     i64toi32_i32$5 = 0;
     i64toi32_i32$3 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
     i64toi32_i32$4 = 0;
     i64toi32_i32$2 = 32;
     i64toi32_i32$0 = i64toi32_i32$2 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
      $260 = 0;
     } else {
      i64toi32_i32$4 = ((1 << i64toi32_i32$0 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$0 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$0 | 0) | 0;
      $260 = i64toi32_i32$3 << i64toi32_i32$0 | 0;
     }
     $344 = $260;
     $344$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $1$hi;
     i64toi32_i32$5 = $1;
     i64toi32_i32$3 = 0;
     i64toi32_i32$2 = 32;
     i64toi32_i32$0 = i64toi32_i32$2 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = 0;
      $261 = i64toi32_i32$4 >>> i64toi32_i32$0 | 0;
     } else {
      i64toi32_i32$3 = i64toi32_i32$4 >>> i64toi32_i32$0 | 0;
      $261 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$0 | 0) | 0;
     }
     $346$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $344$hi;
     i64toi32_i32$4 = $344;
     i64toi32_i32$5 = $346$hi;
     i64toi32_i32$2 = $261;
     i64toi32_i32$5 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
     $347 = i64toi32_i32$4 | i64toi32_i32$2 | 0;
     $347$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $331$hi;
     i64toi32_i32$3 = $331;
     i64toi32_i32$4 = $347$hi;
     i64toi32_i32$2 = $347;
     i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
     i64toi32_i32$1 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$0 >>> 0 < i64toi32_i32$2 >>> 0) {
      i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
     }
     $348 = i64toi32_i32$0;
     $348$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $2$hi;
     $349 = $2;
     $349$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $1$hi;
     i64toi32_i32$5 = $1;
     i64toi32_i32$3 = 0;
     i64toi32_i32$2 = 32;
     i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
      i64toi32_i32$3 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
      $262 = 0;
     } else {
      i64toi32_i32$3 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
      $262 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
     }
     $351$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $349$hi;
     i64toi32_i32$1 = $349;
     i64toi32_i32$5 = $351$hi;
     i64toi32_i32$2 = $262;
     i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
     i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0) {
      i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
     }
     $1 = i64toi32_i32$4;
     $1$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $2$hi;
     i64toi32_i32$0 = $1$hi;
     i64toi32_i32$3 = i64toi32_i32$4;
     i64toi32_i32$1 = $2$hi;
     i64toi32_i32$2 = $2;
     $355 = i64toi32_i32$0 >>> 0 < i64toi32_i32$1 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
     i64toi32_i32$3 = 0;
     $356$hi = i64toi32_i32$3;
     i64toi32_i32$3 = $348$hi;
     i64toi32_i32$2 = $348;
     i64toi32_i32$0 = $356$hi;
     i64toi32_i32$1 = $355;
     i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
     i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$0 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$1 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     $357 = i64toi32_i32$5;
     $357$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $1$hi;
     $358 = $1;
     $358$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $13$hi;
     i64toi32_i32$3 = $13;
     i64toi32_i32$2 = 0;
     i64toi32_i32$1 = 32;
     i64toi32_i32$0 = i64toi32_i32$1 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
      i64toi32_i32$2 = 0;
      $263 = i64toi32_i32$4 >>> i64toi32_i32$0 | 0;
     } else {
      i64toi32_i32$2 = i64toi32_i32$4 >>> i64toi32_i32$0 | 0;
      $263 = (((1 << i64toi32_i32$0 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$0 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$0 | 0) | 0;
     }
     $360 = $263;
     $360$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $12$hi;
     i64toi32_i32$2 = $21$hi;
     i64toi32_i32$2 = $12$hi;
     i64toi32_i32$4 = $12;
     i64toi32_i32$3 = $21$hi;
     i64toi32_i32$1 = $21;
     $363 = i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$4 >>> 0 < i64toi32_i32$1 >>> 0 | 0) | 0;
     i64toi32_i32$4 = 0;
     $364$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $22$hi;
     i64toi32_i32$4 = i64toi32_i32$2;
     i64toi32_i32$4 = $22$hi;
     i64toi32_i32$1 = $22;
     i64toi32_i32$3 = $12;
     $367 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
     i64toi32_i32$1 = 0;
     $368$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $364$hi;
     i64toi32_i32$3 = $363;
     i64toi32_i32$4 = $368$hi;
     i64toi32_i32$2 = $367;
     i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
     i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$0 >>> 0 < i64toi32_i32$2 >>> 0) {
      i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
     }
     $369$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $13$hi;
     i64toi32_i32$5 = $22$hi;
     i64toi32_i32$5 = $13$hi;
     i64toi32_i32$1 = $13;
     i64toi32_i32$3 = $22$hi;
     i64toi32_i32$2 = $22;
     $372 = i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
     i64toi32_i32$1 = 0;
     $373$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $369$hi;
     i64toi32_i32$2 = i64toi32_i32$0;
     i64toi32_i32$5 = $373$hi;
     i64toi32_i32$3 = $372;
     i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
     i64toi32_i32$0 = i64toi32_i32$1 + i64toi32_i32$5 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
     }
     i64toi32_i32$1 = i64toi32_i32$4;
     i64toi32_i32$2 = 0;
     i64toi32_i32$3 = 32;
     i64toi32_i32$5 = i64toi32_i32$3 & 31 | 0;
     if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
      i64toi32_i32$2 = i64toi32_i32$1 << i64toi32_i32$5 | 0;
      $265 = 0;
     } else {
      i64toi32_i32$2 = ((1 << i64toi32_i32$5 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$5 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$5 | 0) | 0;
      $265 = i64toi32_i32$1 << i64toi32_i32$5 | 0;
     }
     $375$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $360$hi;
     i64toi32_i32$0 = $360;
     i64toi32_i32$1 = $375$hi;
     i64toi32_i32$3 = $265;
     i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
     $376 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
     $376$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $358$hi;
     i64toi32_i32$2 = $358;
     i64toi32_i32$0 = $376$hi;
     i64toi32_i32$3 = $376;
     i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
     i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
     if (i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     $3 = i64toi32_i32$5;
     $3$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $1$hi;
     i64toi32_i32$4 = $3$hi;
     i64toi32_i32$1 = i64toi32_i32$5;
     i64toi32_i32$2 = $1$hi;
     i64toi32_i32$3 = $1;
     $380 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
     i64toi32_i32$1 = 0;
     $381$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $357$hi;
     i64toi32_i32$3 = $357;
     i64toi32_i32$4 = $381$hi;
     i64toi32_i32$2 = $380;
     i64toi32_i32$0 = i64toi32_i32$3 + i64toi32_i32$2 | 0;
     i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$0 >>> 0 < i64toi32_i32$2 >>> 0) {
      i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
     }
     $382 = i64toi32_i32$0;
     $382$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $3$hi;
     $383 = $3;
     $383$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $19$hi;
     i64toi32_i32$5 = $9$hi;
     i64toi32_i32$5 = $19$hi;
     i64toi32_i32$1 = $19;
     i64toi32_i32$3 = $9$hi;
     i64toi32_i32$2 = $9;
     $386 = i64toi32_i32$5 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$2 >>> 0 | 0) | 0;
     i64toi32_i32$1 = 0;
     $387$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $23$hi;
     i64toi32_i32$1 = i64toi32_i32$5;
     i64toi32_i32$1 = $23$hi;
     i64toi32_i32$2 = $23;
     i64toi32_i32$3 = $19;
     $390 = i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | 0) | 0;
     i64toi32_i32$2 = 0;
     $391$hi = i64toi32_i32$2;
     i64toi32_i32$2 = $387$hi;
     i64toi32_i32$3 = $386;
     i64toi32_i32$1 = $391$hi;
     i64toi32_i32$5 = $390;
     i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$5 | 0;
     i64toi32_i32$0 = i64toi32_i32$2 + i64toi32_i32$1 | 0;
     if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
      i64toi32_i32$0 = i64toi32_i32$0 + 1 | 0
     }
     $392$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $383$hi;
     i64toi32_i32$2 = $383;
     i64toi32_i32$3 = $392$hi;
     i64toi32_i32$5 = i64toi32_i32$4;
     i64toi32_i32$1 = i64toi32_i32$2 + i64toi32_i32$4 | 0;
     i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
     if (i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0) {
      i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
     }
     $2 = i64toi32_i32$1;
     $2$hi = i64toi32_i32$4;
     i64toi32_i32$4 = $3$hi;
     i64toi32_i32$4 = $2$hi;
     i64toi32_i32$0 = i64toi32_i32$1;
     i64toi32_i32$2 = $3$hi;
     i64toi32_i32$5 = $3;
     $396 = i64toi32_i32$4 >>> 0 < i64toi32_i32$2 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$2 | 0) & i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
     i64toi32_i32$0 = 0;
     $397$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $382$hi;
     i64toi32_i32$5 = $382;
     i64toi32_i32$4 = $397$hi;
     i64toi32_i32$2 = $396;
     i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$2 | 0;
     i64toi32_i32$1 = i64toi32_i32$0 + i64toi32_i32$4 | 0;
     if (i64toi32_i32$3 >>> 0 < i64toi32_i32$2 >>> 0) {
      i64toi32_i32$1 = i64toi32_i32$1 + 1 | 0
     }
     $1 = i64toi32_i32$3;
     $1$hi = i64toi32_i32$1;
     i64toi32_i32$0 = i64toi32_i32$3;
     i64toi32_i32$5 = 65536;
     i64toi32_i32$2 = 0;
     i64toi32_i32$5 = i64toi32_i32$1 & i64toi32_i32$5 | 0;
     if (!(i64toi32_i32$0 & i64toi32_i32$2 | 0 | i64toi32_i32$5 | 0)) {
      break label$14
     }
     $14 = $14 + 1 | 0;
     break label$13;
    }
    i64toi32_i32$5 = $7$hi;
    i64toi32_i32$1 = $7;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = 63;
    i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = 0;
     $266 = i64toi32_i32$5 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$0 = i64toi32_i32$5 >>> i64toi32_i32$4 | 0;
     $266 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
    }
    $3 = $266;
    $3$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$5 = $1;
    i64toi32_i32$1 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
     $267 = 0;
    } else {
     i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $267 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
    }
    $407 = $267;
    $407$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $2$hi;
    i64toi32_i32$0 = $2;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 63;
    i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = 0;
     $268 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$5 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     $268 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
    }
    $409$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $407$hi;
    i64toi32_i32$1 = $407;
    i64toi32_i32$0 = $409$hi;
    i64toi32_i32$2 = $268;
    i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
    $1 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
    $1$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$5 = $2;
    i64toi32_i32$1 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
     $270 = 0;
    } else {
     i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $270 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
    }
    $412 = $270;
    $412$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$0 = $4;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 63;
    i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = 0;
     $271 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$5 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
     $271 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
    }
    $414$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $412$hi;
    i64toi32_i32$1 = $412;
    i64toi32_i32$0 = $414$hi;
    i64toi32_i32$2 = $271;
    i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
    $2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
    $2$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $7$hi;
    i64toi32_i32$5 = $7;
    i64toi32_i32$1 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
     $272 = 0;
    } else {
     i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $272 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
    }
    $7 = $272;
    $7$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $3$hi;
    $418 = $3;
    $418$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$0 = $4;
    i64toi32_i32$5 = 0;
    i64toi32_i32$2 = 1;
    i64toi32_i32$4 = i64toi32_i32$2 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$2 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
     $273 = 0;
    } else {
     i64toi32_i32$5 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
     $273 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
    }
    $420$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $418$hi;
    i64toi32_i32$1 = $418;
    i64toi32_i32$0 = $420$hi;
    i64toi32_i32$2 = $273;
    i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
    $4 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
    $4$hi = i64toi32_i32$0;
   }
   label$15 : {
    if (($14 | 0) < (32767 | 0)) {
     break label$15
    }
    i64toi32_i32$0 = $10$hi;
    i64toi32_i32$5 = $10;
    i64toi32_i32$1 = 2147418112;
    i64toi32_i32$2 = 0;
    i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
    $10 = i64toi32_i32$5 | i64toi32_i32$2 | 0;
    $10$hi = i64toi32_i32$1;
    i64toi32_i32$1 = 0;
    $1 = 0;
    $1$hi = i64toi32_i32$1;
    break label$1;
   }
   label$16 : {
    label$17 : {
     if (($14 | 0) > (0 | 0)) {
      break label$17
     }
     label$18 : {
      $15 = 1 - $14 | 0;
      if ($15 >>> 0 < 128 >>> 0) {
       break label$18
      }
      i64toi32_i32$1 = 0;
      $1 = 0;
      $1$hi = i64toi32_i32$1;
      break label$1;
     }
     i64toi32_i32$1 = $7$hi;
     i64toi32_i32$1 = $4$hi;
     $14 = $14 + 127 | 0;
     i64toi32_i32$1 = $7$hi;
     i64toi32_i32$5 = $4$hi;
     __ashlti3($5 + 48 | 0 | 0, $7 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$5 | 0, $14 | 0);
     i64toi32_i32$5 = $2$hi;
     i64toi32_i32$5 = $1$hi;
     i64toi32_i32$5 = $2$hi;
     i64toi32_i32$1 = $1$hi;
     __ashlti3($5 + 32 | 0 | 0, $2 | 0, i64toi32_i32$5 | 0, $1 | 0, i64toi32_i32$1 | 0, $14 | 0);
     i64toi32_i32$1 = $7$hi;
     i64toi32_i32$1 = $4$hi;
     i64toi32_i32$1 = $7$hi;
     i64toi32_i32$5 = $4$hi;
     __lshrti3($5 + 16 | 0 | 0, $7 | 0, i64toi32_i32$1 | 0, $4 | 0, i64toi32_i32$5 | 0, $15 | 0);
     i64toi32_i32$5 = $2$hi;
     i64toi32_i32$5 = $1$hi;
     i64toi32_i32$5 = $2$hi;
     i64toi32_i32$1 = $1$hi;
     __lshrti3($5 | 0, $2 | 0, i64toi32_i32$5 | 0, $1 | 0, i64toi32_i32$1 | 0, $15 | 0);
     i64toi32_i32$0 = $5;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] | 0;
     i64toi32_i32$5 = HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] | 0;
     $454 = i64toi32_i32$1;
     $454$hi = i64toi32_i32$5;
     i64toi32_i32$5 = HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] | 0;
     i64toi32_i32$1 = HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] | 0;
     $456 = i64toi32_i32$5;
     $456$hi = i64toi32_i32$1;
     i64toi32_i32$1 = $454$hi;
     i64toi32_i32$0 = $454;
     i64toi32_i32$5 = $456$hi;
     i64toi32_i32$2 = $456;
     i64toi32_i32$5 = i64toi32_i32$1 | i64toi32_i32$5 | 0;
     $457 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
     $457$hi = i64toi32_i32$5;
     i64toi32_i32$1 = $5;
     i64toi32_i32$5 = HEAP32[(i64toi32_i32$1 + 48 | 0) >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$1 + 52 | 0) >> 2] | 0;
     $459 = i64toi32_i32$5;
     $459$hi = i64toi32_i32$0;
     i64toi32_i32$1 = (i64toi32_i32$1 + 48 | 0) + 8 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$1 >> 2] | 0;
     i64toi32_i32$5 = HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] | 0;
     $463 = i64toi32_i32$0;
     $463$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $459$hi;
     i64toi32_i32$1 = $459;
     i64toi32_i32$0 = $463$hi;
     i64toi32_i32$2 = $463;
     i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
     i64toi32_i32$5 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
     i64toi32_i32$1 = 0;
     i64toi32_i32$2 = 0;
     $465 = (i64toi32_i32$5 | 0) != (i64toi32_i32$2 | 0) | (i64toi32_i32$0 | 0) != (i64toi32_i32$1 | 0) | 0;
     i64toi32_i32$5 = 0;
     $466$hi = i64toi32_i32$5;
     i64toi32_i32$5 = $457$hi;
     i64toi32_i32$2 = $457;
     i64toi32_i32$0 = $466$hi;
     i64toi32_i32$1 = $465;
     i64toi32_i32$0 = i64toi32_i32$5 | i64toi32_i32$0 | 0;
     $7 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
     $7$hi = i64toi32_i32$0;
     i64toi32_i32$5 = ($5 + 32 | 0) + 8 | 0;
     i64toi32_i32$0 = HEAP32[i64toi32_i32$5 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
     $471 = i64toi32_i32$0;
     $471$hi = i64toi32_i32$2;
     i64toi32_i32$5 = ($5 + 16 | 0) + 8 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$5 >> 2] | 0;
     i64toi32_i32$0 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
     $475 = i64toi32_i32$2;
     $475$hi = i64toi32_i32$0;
     i64toi32_i32$0 = $471$hi;
     i64toi32_i32$5 = $471;
     i64toi32_i32$2 = $475$hi;
     i64toi32_i32$1 = $475;
     i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
     $4 = i64toi32_i32$5 | i64toi32_i32$1 | 0;
     $4$hi = i64toi32_i32$2;
     i64toi32_i32$0 = $5 + 8 | 0;
     i64toi32_i32$2 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$5 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $1 = i64toi32_i32$2;
     $1$hi = i64toi32_i32$5;
     i64toi32_i32$0 = $5;
     i64toi32_i32$5 = HEAP32[i64toi32_i32$0 >> 2] | 0;
     i64toi32_i32$2 = HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] | 0;
     $2 = i64toi32_i32$5;
     $2$hi = i64toi32_i32$2;
     break label$16;
    }
    i64toi32_i32$2 = 0;
    i64toi32_i32$0 = $14;
    i64toi32_i32$5 = 0;
    i64toi32_i32$1 = 48;
    i64toi32_i32$4 = i64toi32_i32$1 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$1 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
     $274 = 0;
    } else {
     i64toi32_i32$5 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
     $274 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
    }
    $484$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $1$hi;
    i64toi32_i32$2 = $1;
    i64toi32_i32$0 = 65535;
    i64toi32_i32$1 = -1;
    i64toi32_i32$0 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
    $486 = i64toi32_i32$2 & i64toi32_i32$1 | 0;
    $486$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $484$hi;
    i64toi32_i32$5 = $274;
    i64toi32_i32$2 = $486$hi;
    i64toi32_i32$1 = $486;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    $1 = i64toi32_i32$5 | i64toi32_i32$1 | 0;
    $1$hi = i64toi32_i32$2;
   }
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$2 = $10$hi;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$0 = $1;
   i64toi32_i32$5 = $10$hi;
   i64toi32_i32$1 = $10;
   i64toi32_i32$5 = i64toi32_i32$2 | i64toi32_i32$5 | 0;
   $10 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
   $10$hi = i64toi32_i32$5;
   label$19 : {
    i64toi32_i32$5 = $7$hi;
    $492 = !($7 | i64toi32_i32$5 | 0);
    i64toi32_i32$5 = $4$hi;
    i64toi32_i32$2 = $4;
    i64toi32_i32$0 = -1;
    i64toi32_i32$1 = -1;
    if ((i64toi32_i32$5 | 0) > (i64toi32_i32$0 | 0)) {
     $275 = 1
    } else {
     if ((i64toi32_i32$5 | 0) >= (i64toi32_i32$0 | 0)) {
      if (i64toi32_i32$2 >>> 0 <= i64toi32_i32$1 >>> 0) {
       $276 = 0
      } else {
       $276 = 1
      }
      $278 = $276;
     } else {
      $278 = 0
     }
     $275 = $278;
    }
    i64toi32_i32$2 = $4$hi;
    i64toi32_i32$1 = $4;
    i64toi32_i32$5 = -2147483648;
    i64toi32_i32$0 = 0;
    if ((i64toi32_i32$1 | 0) == (i64toi32_i32$0 | 0) & (i64toi32_i32$2 | 0) == (i64toi32_i32$5 | 0) | 0 ? $492 : $275) {
     break label$19
    }
    i64toi32_i32$1 = $10$hi;
    $498 = $10;
    $498$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $2$hi;
    i64toi32_i32$0 = $2;
    i64toi32_i32$2 = 0;
    i64toi32_i32$5 = 1;
    i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$5 | 0;
    i64toi32_i32$3 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0) {
     i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
    }
    $1 = i64toi32_i32$4;
    $1$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$1 = i64toi32_i32$4;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$5 = $2;
    $503 = i64toi32_i32$3 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$3 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0;
    i64toi32_i32$1 = 0;
    $504$hi = i64toi32_i32$1;
    i64toi32_i32$1 = $498$hi;
    i64toi32_i32$5 = $498;
    i64toi32_i32$3 = $504$hi;
    i64toi32_i32$0 = $503;
    i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
    i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
    if (i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0) {
     i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
    }
    $10 = i64toi32_i32$2;
    $10$hi = i64toi32_i32$4;
    break label$1;
   }
   label$20 : {
    i64toi32_i32$4 = $7$hi;
    i64toi32_i32$4 = $4$hi;
    i64toi32_i32$1 = $4;
    i64toi32_i32$5 = -2147483648;
    i64toi32_i32$0 = 0;
    i64toi32_i32$5 = i64toi32_i32$4 ^ i64toi32_i32$5 | 0;
    $508 = i64toi32_i32$1 ^ i64toi32_i32$0 | 0;
    $508$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $7$hi;
    i64toi32_i32$4 = $7;
    i64toi32_i32$1 = $508$hi;
    i64toi32_i32$0 = $508;
    i64toi32_i32$1 = i64toi32_i32$5 | i64toi32_i32$1 | 0;
    i64toi32_i32$5 = i64toi32_i32$4 | i64toi32_i32$0 | 0;
    i64toi32_i32$4 = 0;
    i64toi32_i32$0 = 0;
    if ((i64toi32_i32$5 | 0) == (i64toi32_i32$0 | 0) & (i64toi32_i32$1 | 0) == (i64toi32_i32$4 | 0) | 0) {
     break label$20
    }
    i64toi32_i32$5 = $2$hi;
    $1 = $2;
    $1$hi = i64toi32_i32$5;
    break label$1;
   }
   i64toi32_i32$5 = $10$hi;
   $512 = $10;
   $512$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $2$hi;
   i64toi32_i32$0 = $2;
   i64toi32_i32$1 = 0;
   i64toi32_i32$4 = 1;
   i64toi32_i32$1 = i64toi32_i32$5 & i64toi32_i32$1 | 0;
   $515 = i64toi32_i32$0 & i64toi32_i32$4 | 0;
   $515$hi = i64toi32_i32$1;
   i64toi32_i32$1 = i64toi32_i32$5;
   i64toi32_i32$5 = i64toi32_i32$0;
   i64toi32_i32$0 = $515$hi;
   i64toi32_i32$4 = $515;
   i64toi32_i32$3 = i64toi32_i32$5 + i64toi32_i32$4 | 0;
   i64toi32_i32$2 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
   if (i64toi32_i32$3 >>> 0 < i64toi32_i32$4 >>> 0) {
    i64toi32_i32$2 = i64toi32_i32$2 + 1 | 0
   }
   $1 = i64toi32_i32$3;
   $1$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$1 = i64toi32_i32$3;
   i64toi32_i32$5 = $2$hi;
   i64toi32_i32$4 = $2;
   $519 = i64toi32_i32$2 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$4 >>> 0 | 0) | 0;
   i64toi32_i32$1 = 0;
   $520$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $512$hi;
   i64toi32_i32$4 = $512;
   i64toi32_i32$2 = $520$hi;
   i64toi32_i32$5 = $519;
   i64toi32_i32$0 = i64toi32_i32$4 + i64toi32_i32$5 | 0;
   i64toi32_i32$3 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
   if (i64toi32_i32$0 >>> 0 < i64toi32_i32$5 >>> 0) {
    i64toi32_i32$3 = i64toi32_i32$3 + 1 | 0
   }
   $10 = i64toi32_i32$0;
   $10$hi = i64toi32_i32$3;
  }
  i64toi32_i32$3 = $1$hi;
  i64toi32_i32$4 = $0;
  HEAP32[i64toi32_i32$4 >> 2] = $1;
  HEAP32[(i64toi32_i32$4 + 4 | 0) >> 2] = i64toi32_i32$3;
  i64toi32_i32$3 = $10$hi;
  HEAP32[(i64toi32_i32$4 + 8 | 0) >> 2] = $10;
  HEAP32[(i64toi32_i32$4 + 12 | 0) >> 2] = i64toi32_i32$3;
  __stack_pointer = $5 + 96 | 0;
 }
 
 function __ashlti3($0, $1, $1$hi, $2, $2$hi, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, $4$hi = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $11$hi = 0, $18$hi = 0, $19 = 0, $19$hi = 0, $4 = 0, $24$hi = 0;
  label$1 : {
   label$2 : {
    if (!($3 & 64 | 0)) {
     break label$2
    }
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = 0;
    $11$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$2 = $1;
    i64toi32_i32$1 = $11$hi;
    i64toi32_i32$3 = $3 + -64 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     $18 = 0;
    } else {
     i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $18 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
    }
    $2 = $18;
    $2$hi = i64toi32_i32$1;
    i64toi32_i32$1 = 0;
    $1 = 0;
    $1$hi = i64toi32_i32$1;
    break label$1;
   }
   if (!$3) {
    break label$1
   }
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$1 = 0;
   $18$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$0 = $1;
   i64toi32_i32$2 = $18$hi;
   i64toi32_i32$3 = 64 - $3 | 0;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$2 = 0;
    $20 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
    $20 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
   }
   $19 = $20;
   $19$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$2 = 0;
   $4 = $3;
   $4$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = $4$hi;
   i64toi32_i32$3 = $3;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
    $21 = 0;
   } else {
    i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
    $21 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
   }
   $24$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $19$hi;
   i64toi32_i32$2 = $19;
   i64toi32_i32$1 = $24$hi;
   i64toi32_i32$3 = $21;
   i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
   $2 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
   $2$hi = i64toi32_i32$1;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$1 = $4$hi;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$0 = $1;
   i64toi32_i32$2 = $4$hi;
   i64toi32_i32$3 = $4;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$2 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
    $22 = 0;
   } else {
    i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
    $22 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
   }
   $1 = $22;
   $1$hi = i64toi32_i32$2;
  }
  i64toi32_i32$2 = $1$hi;
  i64toi32_i32$0 = $0;
  HEAP32[i64toi32_i32$0 >> 2] = $1;
  HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$2;
  i64toi32_i32$2 = $2$hi;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $2;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$2;
 }
 
 function __fe_getround() {
  return 0 | 0;
 }
 
 function __fe_raise_inexact() {
  return 0 | 0;
 }
 
 function __letf2($0, $0$hi, $1, $1$hi, $2, $2$hi, $3, $3$hi) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$1 = 0, $4 = 0, $5 = 0, $6 = 0, $5$hi = 0, $6$hi = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $8 = 0, $12 = 0, $17 = 0, $21 = 0, $27 = 0, $27$hi = 0, $30 = 0, $30$hi = 0, $40 = 0, $50 = 0, $50$hi = 0, $53 = 0, $53$hi = 0, $58 = 0, $68 = 0, $68$hi = 0, $71 = 0, $71$hi = 0;
  $4 = 1;
  label$1 : {
   i64toi32_i32$0 = $0$hi;
   i64toi32_i32$2 = $0;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 0;
   $8 = (i64toi32_i32$2 | 0) != (i64toi32_i32$3 | 0) | (i64toi32_i32$0 | 0) != (i64toi32_i32$1 | 0) | 0;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$3 = $1;
   i64toi32_i32$0 = 2147483647;
   i64toi32_i32$1 = -1;
   i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
   $5 = i64toi32_i32$3 & i64toi32_i32$1 | 0;
   $5$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $5;
   i64toi32_i32$3 = 2147418112;
   i64toi32_i32$1 = 0;
   $12 = i64toi32_i32$0 >>> 0 > i64toi32_i32$3 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$2 >>> 0 > i64toi32_i32$1 >>> 0 | 0) | 0;
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$1 = $5;
   i64toi32_i32$0 = 2147418112;
   i64toi32_i32$3 = 0;
   if ((i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) | 0 ? $8 : $12) {
    break label$1
   }
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$3 = $2;
   i64toi32_i32$2 = 0;
   i64toi32_i32$0 = 0;
   $17 = (i64toi32_i32$3 | 0) != (i64toi32_i32$0 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$2 | 0) | 0;
   i64toi32_i32$3 = $3$hi;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = 2147483647;
   i64toi32_i32$2 = -1;
   i64toi32_i32$1 = i64toi32_i32$3 & i64toi32_i32$1 | 0;
   $6 = i64toi32_i32$0 & i64toi32_i32$2 | 0;
   $6$hi = i64toi32_i32$1;
   i64toi32_i32$3 = $6;
   i64toi32_i32$0 = 2147418112;
   i64toi32_i32$2 = 0;
   $21 = i64toi32_i32$1 >>> 0 > i64toi32_i32$0 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$3 >>> 0 > i64toi32_i32$2 >>> 0 | 0) | 0;
   i64toi32_i32$3 = i64toi32_i32$1;
   i64toi32_i32$2 = $6;
   i64toi32_i32$1 = 2147418112;
   i64toi32_i32$0 = 0;
   if ((i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) & (i64toi32_i32$3 | 0) == (i64toi32_i32$1 | 0) | 0 ? $17 : $21) {
    break label$1
   }
   label$2 : {
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$0 = $2;
    i64toi32_i32$3 = $0$hi;
    i64toi32_i32$1 = $0;
    i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
    $27 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
    $27$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $6$hi;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$3 = $6$hi;
    i64toi32_i32$2 = $6;
    i64toi32_i32$0 = $5$hi;
    i64toi32_i32$1 = $5;
    i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
    $30 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
    $30$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $27$hi;
    i64toi32_i32$3 = $27;
    i64toi32_i32$2 = $30$hi;
    i64toi32_i32$1 = $30;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    if (!!(i64toi32_i32$3 | i64toi32_i32$1 | 0 | i64toi32_i32$2 | 0)) {
     break label$2
    }
    return 0 | 0;
   }
   label$3 : {
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$0 = $3;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$1 = $1;
    i64toi32_i32$3 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$1 = 0;
    if ((i64toi32_i32$3 | 0) < (i64toi32_i32$0 | 0)) {
     $35 = 1
    } else {
     if ((i64toi32_i32$3 | 0) <= (i64toi32_i32$0 | 0)) {
      if (i64toi32_i32$2 >>> 0 >= i64toi32_i32$1 >>> 0) {
       $36 = 0
      } else {
       $36 = 1
      }
      $37 = $36;
     } else {
      $37 = 0
     }
     $35 = $37;
    }
    if ($35) {
     break label$3
    }
    $4 = -1;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$1 = $0;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$0 = $2;
    $40 = i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$0 = $1;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$3 = $3;
    if ((i64toi32_i32$1 | 0) < (i64toi32_i32$2 | 0)) {
     $38 = 1
    } else {
     if ((i64toi32_i32$1 | 0) <= (i64toi32_i32$2 | 0)) {
      if (i64toi32_i32$0 >>> 0 >= i64toi32_i32$3 >>> 0) {
       $39 = 0
      } else {
       $39 = 1
      }
      $41 = $39;
     } else {
      $41 = 0
     }
     $38 = $41;
    }
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = $3$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$3 = $1;
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$2 = $3;
    if ((i64toi32_i32$3 | 0) == (i64toi32_i32$2 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) | 0 ? $40 : $38) {
     break label$1
    }
    i64toi32_i32$3 = $0$hi;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$3 = $0$hi;
    i64toi32_i32$2 = $0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$1 = $2;
    i64toi32_i32$0 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
    $50 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
    $50$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = $3$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$3 = $1;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = i64toi32_i32$0 ^ i64toi32_i32$2 | 0;
    $53 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
    $53$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $50$hi;
    i64toi32_i32$0 = $50;
    i64toi32_i32$3 = $53$hi;
    i64toi32_i32$1 = $53;
    i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$1 = 0;
    return (i64toi32_i32$2 | 0) != (i64toi32_i32$1 | 0) | (i64toi32_i32$3 | 0) != (i64toi32_i32$0 | 0) | 0 | 0;
   }
   $4 = -1;
   i64toi32_i32$2 = $0$hi;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$2 = $0$hi;
   i64toi32_i32$1 = $0;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$0 = $2;
   $58 = i64toi32_i32$2 >>> 0 > i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 > i64toi32_i32$0 >>> 0 | 0) | 0;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$1 = $3$hi;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$0 = $1;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$3 = $3;
   if ((i64toi32_i32$1 | 0) > (i64toi32_i32$2 | 0)) {
    $42 = 1
   } else {
    if ((i64toi32_i32$1 | 0) >= (i64toi32_i32$2 | 0)) {
     if (i64toi32_i32$0 >>> 0 <= i64toi32_i32$3 >>> 0) {
      $43 = 0
     } else {
      $43 = 1
     }
     $44 = $43;
    } else {
     $44 = 0
    }
    $42 = $44;
   }
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$3 = $1;
   i64toi32_i32$1 = $3$hi;
   i64toi32_i32$2 = $3;
   if ((i64toi32_i32$3 | 0) == (i64toi32_i32$2 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) | 0 ? $58 : $42) {
    break label$1
   }
   i64toi32_i32$3 = $0$hi;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$3 = $0$hi;
   i64toi32_i32$2 = $0;
   i64toi32_i32$0 = $2$hi;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
   $68 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
   $68$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$3 = $1;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$1 = $3;
   i64toi32_i32$2 = i64toi32_i32$0 ^ i64toi32_i32$2 | 0;
   $71 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
   $71$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $68$hi;
   i64toi32_i32$0 = $68;
   i64toi32_i32$3 = $71$hi;
   i64toi32_i32$1 = $71;
   i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
   i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
   i64toi32_i32$0 = 0;
   i64toi32_i32$1 = 0;
   $4 = (i64toi32_i32$2 | 0) != (i64toi32_i32$1 | 0) | (i64toi32_i32$3 | 0) != (i64toi32_i32$0 | 0) | 0;
  }
  return $4 | 0;
 }
 
 function __getf2($0, $0$hi, $1, $1$hi, $2, $2$hi, $3, $3$hi) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$1 = 0, $5 = 0, $6 = 0, $4 = 0, $5$hi = 0, $6$hi = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $8 = 0, $12 = 0, $17 = 0, $21 = 0, $27 = 0, $27$hi = 0, $30 = 0, $30$hi = 0, $40 = 0, $50 = 0, $50$hi = 0, $53 = 0, $53$hi = 0, $58 = 0, $68 = 0, $68$hi = 0, $71 = 0, $71$hi = 0;
  $4 = -1;
  label$1 : {
   i64toi32_i32$0 = $0$hi;
   i64toi32_i32$2 = $0;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 0;
   $8 = (i64toi32_i32$2 | 0) != (i64toi32_i32$3 | 0) | (i64toi32_i32$0 | 0) != (i64toi32_i32$1 | 0) | 0;
   i64toi32_i32$2 = $1$hi;
   i64toi32_i32$3 = $1;
   i64toi32_i32$0 = 2147483647;
   i64toi32_i32$1 = -1;
   i64toi32_i32$0 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
   $5 = i64toi32_i32$3 & i64toi32_i32$1 | 0;
   $5$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $5;
   i64toi32_i32$3 = 2147418112;
   i64toi32_i32$1 = 0;
   $12 = i64toi32_i32$0 >>> 0 > i64toi32_i32$3 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$2 >>> 0 > i64toi32_i32$1 >>> 0 | 0) | 0;
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$2 = i64toi32_i32$0;
   i64toi32_i32$1 = $5;
   i64toi32_i32$0 = 2147418112;
   i64toi32_i32$3 = 0;
   if ((i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) | 0 ? $8 : $12) {
    break label$1
   }
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$3 = $2;
   i64toi32_i32$2 = 0;
   i64toi32_i32$0 = 0;
   $17 = (i64toi32_i32$3 | 0) != (i64toi32_i32$0 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$2 | 0) | 0;
   i64toi32_i32$3 = $3$hi;
   i64toi32_i32$0 = $3;
   i64toi32_i32$1 = 2147483647;
   i64toi32_i32$2 = -1;
   i64toi32_i32$1 = i64toi32_i32$3 & i64toi32_i32$1 | 0;
   $6 = i64toi32_i32$0 & i64toi32_i32$2 | 0;
   $6$hi = i64toi32_i32$1;
   i64toi32_i32$3 = $6;
   i64toi32_i32$0 = 2147418112;
   i64toi32_i32$2 = 0;
   $21 = i64toi32_i32$1 >>> 0 > i64toi32_i32$0 >>> 0 | ((i64toi32_i32$1 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$3 >>> 0 > i64toi32_i32$2 >>> 0 | 0) | 0;
   i64toi32_i32$3 = i64toi32_i32$1;
   i64toi32_i32$2 = $6;
   i64toi32_i32$1 = 2147418112;
   i64toi32_i32$0 = 0;
   if ((i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) & (i64toi32_i32$3 | 0) == (i64toi32_i32$1 | 0) | 0 ? $17 : $21) {
    break label$1
   }
   label$2 : {
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$0 = $2;
    i64toi32_i32$3 = $0$hi;
    i64toi32_i32$1 = $0;
    i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
    $27 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
    $27$hi = i64toi32_i32$3;
    i64toi32_i32$3 = $6$hi;
    i64toi32_i32$3 = $5$hi;
    i64toi32_i32$3 = $6$hi;
    i64toi32_i32$2 = $6;
    i64toi32_i32$0 = $5$hi;
    i64toi32_i32$1 = $5;
    i64toi32_i32$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
    $30 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
    $30$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $27$hi;
    i64toi32_i32$3 = $27;
    i64toi32_i32$2 = $30$hi;
    i64toi32_i32$1 = $30;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$2 | 0;
    if (!!(i64toi32_i32$3 | i64toi32_i32$1 | 0 | i64toi32_i32$2 | 0)) {
     break label$2
    }
    return 0 | 0;
   }
   label$3 : {
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$2 = $1$hi;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$0 = $3;
    i64toi32_i32$3 = $1$hi;
    i64toi32_i32$1 = $1;
    i64toi32_i32$3 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    i64toi32_i32$2 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$1 = 0;
    if ((i64toi32_i32$3 | 0) < (i64toi32_i32$0 | 0)) {
     $35 = 1
    } else {
     if ((i64toi32_i32$3 | 0) <= (i64toi32_i32$0 | 0)) {
      if (i64toi32_i32$2 >>> 0 >= i64toi32_i32$1 >>> 0) {
       $36 = 0
      } else {
       $36 = 1
      }
      $37 = $36;
     } else {
      $37 = 0
     }
     $35 = $37;
    }
    if ($35) {
     break label$3
    }
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$2 = $2$hi;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$1 = $0;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$0 = $2;
    $40 = i64toi32_i32$2 >>> 0 < i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$1 = $1$hi;
    i64toi32_i32$0 = $1;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$3 = $3;
    if ((i64toi32_i32$1 | 0) < (i64toi32_i32$2 | 0)) {
     $38 = 1
    } else {
     if ((i64toi32_i32$1 | 0) <= (i64toi32_i32$2 | 0)) {
      if (i64toi32_i32$0 >>> 0 >= i64toi32_i32$3 >>> 0) {
       $39 = 0
      } else {
       $39 = 1
      }
      $41 = $39;
     } else {
      $41 = 0
     }
     $38 = $41;
    }
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = $3$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$3 = $1;
    i64toi32_i32$1 = $3$hi;
    i64toi32_i32$2 = $3;
    if ((i64toi32_i32$3 | 0) == (i64toi32_i32$2 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) | 0 ? $40 : $38) {
     break label$1
    }
    i64toi32_i32$3 = $0$hi;
    i64toi32_i32$3 = $2$hi;
    i64toi32_i32$3 = $0$hi;
    i64toi32_i32$2 = $0;
    i64toi32_i32$0 = $2$hi;
    i64toi32_i32$1 = $2;
    i64toi32_i32$0 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
    $50 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
    $50$hi = i64toi32_i32$0;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$0 = $3$hi;
    i64toi32_i32$0 = $1$hi;
    i64toi32_i32$3 = $1;
    i64toi32_i32$2 = $3$hi;
    i64toi32_i32$1 = $3;
    i64toi32_i32$2 = i64toi32_i32$0 ^ i64toi32_i32$2 | 0;
    $53 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
    $53$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $50$hi;
    i64toi32_i32$0 = $50;
    i64toi32_i32$3 = $53$hi;
    i64toi32_i32$1 = $53;
    i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
    i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$1 = 0;
    return (i64toi32_i32$2 | 0) != (i64toi32_i32$1 | 0) | (i64toi32_i32$3 | 0) != (i64toi32_i32$0 | 0) | 0 | 0;
   }
   i64toi32_i32$2 = $0$hi;
   i64toi32_i32$2 = $2$hi;
   i64toi32_i32$2 = $0$hi;
   i64toi32_i32$1 = $0;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$0 = $2;
   $58 = i64toi32_i32$2 >>> 0 > i64toi32_i32$3 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$1 >>> 0 > i64toi32_i32$0 >>> 0 | 0) | 0;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$1 = $3$hi;
   i64toi32_i32$1 = $1$hi;
   i64toi32_i32$0 = $1;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$3 = $3;
   if ((i64toi32_i32$1 | 0) > (i64toi32_i32$2 | 0)) {
    $42 = 1
   } else {
    if ((i64toi32_i32$1 | 0) >= (i64toi32_i32$2 | 0)) {
     if (i64toi32_i32$0 >>> 0 <= i64toi32_i32$3 >>> 0) {
      $43 = 0
     } else {
      $43 = 1
     }
     $44 = $43;
    } else {
     $44 = 0
    }
    $42 = $44;
   }
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$3 = $1;
   i64toi32_i32$1 = $3$hi;
   i64toi32_i32$2 = $3;
   if ((i64toi32_i32$3 | 0) == (i64toi32_i32$2 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) | 0 ? $58 : $42) {
    break label$1
   }
   i64toi32_i32$3 = $0$hi;
   i64toi32_i32$3 = $2$hi;
   i64toi32_i32$3 = $0$hi;
   i64toi32_i32$2 = $0;
   i64toi32_i32$0 = $2$hi;
   i64toi32_i32$1 = $2;
   i64toi32_i32$0 = i64toi32_i32$3 ^ i64toi32_i32$0 | 0;
   $68 = i64toi32_i32$2 ^ i64toi32_i32$1 | 0;
   $68$hi = i64toi32_i32$0;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$0 = $3$hi;
   i64toi32_i32$0 = $1$hi;
   i64toi32_i32$3 = $1;
   i64toi32_i32$2 = $3$hi;
   i64toi32_i32$1 = $3;
   i64toi32_i32$2 = i64toi32_i32$0 ^ i64toi32_i32$2 | 0;
   $71 = i64toi32_i32$3 ^ i64toi32_i32$1 | 0;
   $71$hi = i64toi32_i32$2;
   i64toi32_i32$2 = $68$hi;
   i64toi32_i32$0 = $68;
   i64toi32_i32$3 = $71$hi;
   i64toi32_i32$1 = $71;
   i64toi32_i32$3 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
   i64toi32_i32$2 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
   i64toi32_i32$0 = 0;
   i64toi32_i32$1 = 0;
   $4 = (i64toi32_i32$2 | 0) != (i64toi32_i32$1 | 0) | (i64toi32_i32$3 | 0) != (i64toi32_i32$0 | 0) | 0;
  }
  return $4 | 0;
 }
 
 function __extenddftf2($0, $1) {
  $0 = $0 | 0;
  $1 = +$1;
  var i64toi32_i32$3 = 0, i64toi32_i32$5 = 0, i64toi32_i32$4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $4 = 0, $4$hi = 0, $2 = 0, $3 = 0, $3$hi = 0, $5 = 0, $5$hi = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $6 = 0, $31 = 0, $32 = 0, $33 = 0, $33$hi = 0, $37 = 0, $50 = 0, $50$hi = 0, $54$hi = 0, $63 = 0, $63$hi = 0, $64 = 0;
  $2 = __stack_pointer - 16 | 0;
  __stack_pointer = $2;
  label$1 : {
   label$2 : {
    wasm2js_scratch_store_f64(+$1);
    i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
    $3 = wasm2js_scratch_load_i32(0 | 0) | 0;
    $3$hi = i64toi32_i32$0;
    i64toi32_i32$2 = $3;
    i64toi32_i32$1 = 2147483647;
    i64toi32_i32$3 = -1;
    i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$1 | 0;
    $4 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
    $4$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $4;
    i64toi32_i32$2 = -1048576;
    i64toi32_i32$3 = 0;
    i64toi32_i32$4 = i64toi32_i32$0 + i64toi32_i32$3 | 0;
    i64toi32_i32$5 = i64toi32_i32$1 + i64toi32_i32$2 | 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
     i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
    }
    i64toi32_i32$1 = i64toi32_i32$4;
    i64toi32_i32$0 = 2145386495;
    i64toi32_i32$3 = -1;
    if (i64toi32_i32$5 >>> 0 > i64toi32_i32$0 >>> 0 | ((i64toi32_i32$5 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$1 >>> 0 > i64toi32_i32$3 >>> 0 | 0) | 0) {
     break label$2
    }
    i64toi32_i32$1 = $4$hi;
    i64toi32_i32$3 = $4;
    i64toi32_i32$5 = 0;
    i64toi32_i32$0 = 60;
    i64toi32_i32$2 = i64toi32_i32$0 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
     i64toi32_i32$5 = i64toi32_i32$3 << i64toi32_i32$2 | 0;
     $26 = 0;
    } else {
     i64toi32_i32$5 = ((1 << i64toi32_i32$2 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$2 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$2 | 0) | 0;
     $26 = i64toi32_i32$3 << i64toi32_i32$2 | 0;
    }
    $5 = $26;
    $5$hi = i64toi32_i32$5;
    i64toi32_i32$5 = $4$hi;
    i64toi32_i32$1 = $4;
    i64toi32_i32$3 = 0;
    i64toi32_i32$0 = 4;
    i64toi32_i32$2 = i64toi32_i32$0 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
     i64toi32_i32$3 = 0;
     $27 = i64toi32_i32$5 >>> i64toi32_i32$2 | 0;
    } else {
     i64toi32_i32$3 = i64toi32_i32$5 >>> i64toi32_i32$2 | 0;
     $27 = (((1 << i64toi32_i32$2 | 0) - 1 | 0) & i64toi32_i32$5 | 0) << (32 - i64toi32_i32$2 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$2 | 0) | 0;
    }
    i64toi32_i32$5 = $27;
    i64toi32_i32$1 = 1006632960;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = i64toi32_i32$5 + i64toi32_i32$0 | 0;
    i64toi32_i32$4 = i64toi32_i32$3 + i64toi32_i32$1 | 0;
    if (i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0) {
     i64toi32_i32$4 = i64toi32_i32$4 + 1 | 0
    }
    $4 = i64toi32_i32$2;
    $4$hi = i64toi32_i32$4;
    break label$1;
   }
   label$3 : {
    i64toi32_i32$4 = $4$hi;
    i64toi32_i32$3 = $4;
    i64toi32_i32$5 = 2146435072;
    i64toi32_i32$0 = 0;
    if (i64toi32_i32$4 >>> 0 < i64toi32_i32$5 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$5 | 0) & i64toi32_i32$3 >>> 0 < i64toi32_i32$0 >>> 0 | 0) | 0) {
     break label$3
    }
    i64toi32_i32$3 = $3$hi;
    i64toi32_i32$0 = $3;
    i64toi32_i32$4 = 0;
    i64toi32_i32$5 = 60;
    i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
     i64toi32_i32$4 = i64toi32_i32$0 << i64toi32_i32$1 | 0;
     $28 = 0;
    } else {
     i64toi32_i32$4 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$1 | 0) | 0;
     $28 = i64toi32_i32$0 << i64toi32_i32$1 | 0;
    }
    $5 = $28;
    $5$hi = i64toi32_i32$4;
    i64toi32_i32$4 = $3$hi;
    i64toi32_i32$3 = $3;
    i64toi32_i32$0 = 0;
    i64toi32_i32$5 = 4;
    i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
     i64toi32_i32$0 = 0;
     $29 = i64toi32_i32$4 >>> i64toi32_i32$1 | 0;
    } else {
     i64toi32_i32$0 = i64toi32_i32$4 >>> i64toi32_i32$1 | 0;
     $29 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$1 | 0) | 0;
    }
    i64toi32_i32$4 = $29;
    i64toi32_i32$3 = 2147418112;
    i64toi32_i32$5 = 0;
    i64toi32_i32$3 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
    $4 = i64toi32_i32$4 | i64toi32_i32$5 | 0;
    $4$hi = i64toi32_i32$3;
    break label$1;
   }
   label$4 : {
    i64toi32_i32$3 = $4$hi;
    if (!!($4 | i64toi32_i32$3 | 0)) {
     break label$4
    }
    i64toi32_i32$3 = 0;
    $5 = 0;
    $5$hi = i64toi32_i32$3;
    i64toi32_i32$3 = 0;
    $4 = 0;
    $4$hi = i64toi32_i32$3;
    break label$1;
   }
   $32 = $2;
   i64toi32_i32$3 = $4$hi;
   $33 = $4;
   $33$hi = i64toi32_i32$3;
   i64toi32_i32$3 = $3$hi;
   $37 = Math_clz32($3) + 32 | 0;
   i64toi32_i32$3 = $4$hi;
   i64toi32_i32$0 = $4;
   i64toi32_i32$4 = 0;
   i64toi32_i32$5 = 32;
   i64toi32_i32$1 = i64toi32_i32$5 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$5 & 63 | 0) >>> 0) {
    i64toi32_i32$4 = 0;
    $30 = i64toi32_i32$3 >>> i64toi32_i32$1 | 0;
   } else {
    i64toi32_i32$4 = i64toi32_i32$3 >>> i64toi32_i32$1 | 0;
    $30 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$1 | 0) | 0;
   }
   i64toi32_i32$4 = $4$hi;
   i64toi32_i32$3 = $4;
   i64toi32_i32$0 = 1;
   i64toi32_i32$5 = 0;
   $6 = i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0 | ((i64toi32_i32$4 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$3 >>> 0 < i64toi32_i32$5 >>> 0 | 0) | 0 ? $37 : Math_clz32($30);
   i64toi32_i32$3 = $33$hi;
   i64toi32_i32$4 = 0;
   __ashlti3($32 | 0, $33 | 0, i64toi32_i32$3 | 0, 0 | 0, i64toi32_i32$4 | 0, $6 + 49 | 0 | 0);
   i64toi32_i32$5 = $2 + 8 | 0;
   i64toi32_i32$4 = HEAP32[i64toi32_i32$5 >> 2] | 0;
   i64toi32_i32$3 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
   i64toi32_i32$5 = i64toi32_i32$4;
   i64toi32_i32$4 = 65536;
   i64toi32_i32$0 = 0;
   i64toi32_i32$4 = i64toi32_i32$3 ^ i64toi32_i32$4 | 0;
   $50 = i64toi32_i32$5 ^ i64toi32_i32$0 | 0;
   $50$hi = i64toi32_i32$4;
   i64toi32_i32$4 = 0;
   i64toi32_i32$3 = 15372 - $6 | 0;
   i64toi32_i32$5 = 0;
   i64toi32_i32$0 = 48;
   i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
    i64toi32_i32$5 = i64toi32_i32$3 << i64toi32_i32$1 | 0;
    $31 = 0;
   } else {
    i64toi32_i32$5 = ((1 << i64toi32_i32$1 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$1 | 0) | 0) | 0 | (i64toi32_i32$4 << i64toi32_i32$1 | 0) | 0;
    $31 = i64toi32_i32$3 << i64toi32_i32$1 | 0;
   }
   $54$hi = i64toi32_i32$5;
   i64toi32_i32$5 = $50$hi;
   i64toi32_i32$4 = $50;
   i64toi32_i32$3 = $54$hi;
   i64toi32_i32$0 = $31;
   i64toi32_i32$3 = i64toi32_i32$5 | i64toi32_i32$3 | 0;
   $4 = i64toi32_i32$4 | i64toi32_i32$0 | 0;
   $4$hi = i64toi32_i32$3;
   i64toi32_i32$5 = $2;
   i64toi32_i32$3 = HEAP32[i64toi32_i32$5 >> 2] | 0;
   i64toi32_i32$4 = HEAP32[(i64toi32_i32$5 + 4 | 0) >> 2] | 0;
   $5 = i64toi32_i32$3;
   $5$hi = i64toi32_i32$4;
  }
  i64toi32_i32$4 = $5$hi;
  i64toi32_i32$3 = $0;
  HEAP32[i64toi32_i32$3 >> 2] = $5;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$4;
  i64toi32_i32$4 = $4$hi;
  i64toi32_i32$4 = $3$hi;
  i64toi32_i32$5 = $3;
  i64toi32_i32$3 = -2147483648;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = i64toi32_i32$4 & i64toi32_i32$3 | 0;
  $63 = i64toi32_i32$5 & i64toi32_i32$0 | 0;
  $63$hi = i64toi32_i32$3;
  i64toi32_i32$3 = $4$hi;
  i64toi32_i32$4 = $4;
  i64toi32_i32$5 = $63$hi;
  i64toi32_i32$0 = $63;
  i64toi32_i32$5 = i64toi32_i32$3 | i64toi32_i32$5 | 0;
  $64 = i64toi32_i32$4 | i64toi32_i32$0 | 0;
  i64toi32_i32$4 = $0;
  HEAP32[(i64toi32_i32$4 + 8 | 0) >> 2] = $64;
  HEAP32[(i64toi32_i32$4 + 12 | 0) >> 2] = i64toi32_i32$5;
  __stack_pointer = $2 + 16 | 0;
 }
 
 function __subtf3($0, $1, $1$hi, $2, $2$hi, $3, $3$hi, $4, $4$hi) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  $2$hi = $2$hi | 0;
  $3 = $3 | 0;
  $3$hi = $3$hi | 0;
  $4 = $4 | 0;
  $4$hi = $4$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$3 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $5 = 0, $14 = 0, $14$hi = 0, $17 = 0, $20 = 0;
  $5 = __stack_pointer - 16 | 0;
  __stack_pointer = $5;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = $2$hi;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$0 = $4$hi;
  i64toi32_i32$2 = $4;
  i64toi32_i32$1 = -2147483648;
  i64toi32_i32$3 = 0;
  i64toi32_i32$1 = i64toi32_i32$0 ^ i64toi32_i32$1 | 0;
  $14 = i64toi32_i32$2 ^ i64toi32_i32$3 | 0;
  $14$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $1$hi;
  i64toi32_i32$2 = $2$hi;
  i64toi32_i32$0 = $3$hi;
  i64toi32_i32$3 = $14$hi;
  __addtf3($5 | 0, $1 | 0, i64toi32_i32$1 | 0, $2 | 0, i64toi32_i32$2 | 0, $3 | 0, i64toi32_i32$0 | 0, $14 | 0, i64toi32_i32$3 | 0);
  i64toi32_i32$2 = $5;
  i64toi32_i32$3 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $17 = i64toi32_i32$3;
  i64toi32_i32$3 = $0;
  HEAP32[i64toi32_i32$3 >> 2] = $17;
  HEAP32[(i64toi32_i32$3 + 4 | 0) >> 2] = i64toi32_i32$0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$3 = HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] | 0;
  $20 = i64toi32_i32$0;
  i64toi32_i32$0 = $0;
  HEAP32[(i64toi32_i32$0 + 8 | 0) >> 2] = $20;
  HEAP32[(i64toi32_i32$0 + 12 | 0) >> 2] = i64toi32_i32$3;
  __stack_pointer = i64toi32_i32$2 + 16 | 0;
 }
 
 function std__logic_error__logic_error_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = std__exception__exception_28_29($0 | 0) | 0;
  HEAP32[$0 >> 2] = 11384 + 8 | 0;
  $1 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___c_str_28_29_20const($1 | 0) | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  invoke_iii(118 | 0, $0 + 4 | 0 | 0, $1 | 0) | 0;
  $1 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   if (($1 | 0) == (1 | 0)) {
    break label$1
   }
   return $0 | 0;
  }
  $0 = __cxa_find_matching_catch_2() | 0;
  getTempRet0() | 0;
  std__exception___exception_28_29($2 | 0) | 0;
  __resumeException($0 | 0);
  abort();
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___c_str_28_29_20const($0) {
  $0 = $0 | 0;
  return std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___data_28_29_20const($0 | 0) | 0 | 0;
 }
 
 function std____2____libcpp_refstring____libcpp_refstring_28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0;
  $2 = strlen($1 | 0) | 0;
  $3 = operator_20new_28unsigned_20long_29($2 + 13 | 0 | 0) | 0;
  HEAP32[($3 + 8 | 0) >> 2] = 0;
  HEAP32[($3 + 4 | 0) >> 2] = $2;
  HEAP32[$3 >> 2] = $2;
  HEAP32[$0 >> 2] = memcpy(std____2____refstring_imp___28anonymous_20namespace_29__data_from_rep_28std____2____refstring_imp___28anonymous_20namespace_29___Rep_base__29($3 | 0) | 0 | 0, $1 | 0, $2 + 1 | 0 | 0) | 0;
  return $0 | 0;
 }
 
 function std____2____refstring_imp___28anonymous_20namespace_29__data_from_rep_28std____2____refstring_imp___28anonymous_20namespace_29___Rep_base__29($0) {
  $0 = $0 | 0;
  return $0 + 12 | 0 | 0;
 }
 
 function std__logic_error__logic_error_28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = std__exception__exception_28_29($0 | 0) | 0;
  HEAP32[$0 >> 2] = 11384 + 8 | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  invoke_iii(118 | 0, $0 + 4 | 0 | 0, $1 | 0) | 0;
  $1 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   if (($1 | 0) == (1 | 0)) {
    break label$1
   }
   return $0 | 0;
  }
  $0 = __cxa_find_matching_catch_2() | 0;
  getTempRet0() | 0;
  std__exception___exception_28_29($2 | 0) | 0;
  __resumeException($0 | 0);
  abort();
 }
 
 function std____2____libcpp_refstring____uses_refcount_28_29_20const($0) {
  $0 = $0 | 0;
  return 1 | 0;
 }
 
 function __errno_location() {
  return 12968 | 0;
 }
 
 function isdigit($0) {
  $0 = $0 | 0;
  return ($0 + -48 | 0) >>> 0 < 10 >>> 0 | 0;
 }
 
 function memchr($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $4 = 0;
  $3 = ($2 | 0) != (0 | 0);
  label$1 : {
   label$2 : {
    label$3 : {
     if (!$2) {
      break label$3
     }
     if (!($0 & 3 | 0)) {
      break label$3
     }
     $4 = $1 & 255 | 0;
     label$4 : while (1) {
      if ((HEAPU8[$0 >> 0] | 0 | 0) == ($4 | 0)) {
       break label$2
      }
      $0 = $0 + 1 | 0;
      $2 = $2 + -1 | 0;
      $3 = ($2 | 0) != (0 | 0);
      if (!$2) {
       break label$3
      }
      if ($0 & 3 | 0) {
       continue label$4
      }
      break label$4;
     };
    }
    if (!$3) {
     break label$1
    }
   }
   label$5 : {
    if ((HEAPU8[$0 >> 0] | 0 | 0) == ($1 & 255 | 0 | 0)) {
     break label$5
    }
    if ($2 >>> 0 < 4 >>> 0) {
     break label$5
    }
    $4 = Math_imul($1 & 255 | 0, 16843009);
    label$6 : while (1) {
     $3 = (HEAP32[$0 >> 2] | 0) ^ $4 | 0;
     if ((($3 ^ -1 | 0) & ($3 + -16843009 | 0) | 0) & -2139062144 | 0) {
      break label$5
     }
     $0 = $0 + 4 | 0;
     $2 = $2 + -4 | 0;
     if ($2 >>> 0 > 3 >>> 0) {
      continue label$6
     }
     break label$6;
    };
   }
   if (!$2) {
    break label$1
   }
   $3 = $1 & 255 | 0;
   label$7 : while (1) {
    label$8 : {
     if ((HEAPU8[$0 >> 0] | 0 | 0) != ($3 | 0)) {
      break label$8
     }
     return $0 | 0;
    }
    $0 = $0 + 1 | 0;
    $2 = $2 + -1 | 0;
    if ($2) {
     continue label$7
    }
    break label$7;
   };
  }
  return 0 | 0;
 }
 
 function __pthread_self() {
  return 12564 | 0;
 }
 
 function wcrtomb($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0;
  $3 = 1;
  label$1 : {
   label$2 : {
    if (!$0) {
     break label$2
    }
    if ($1 >>> 0 <= 127 >>> 0) {
     break label$1
    }
    label$3 : {
     label$4 : {
      if (HEAP32[(HEAP32[((__pthread_self() | 0) + 172 | 0) >> 2] | 0) >> 2] | 0) {
       break label$4
      }
      if (($1 & -128 | 0 | 0) == (57216 | 0)) {
       break label$1
      }
      HEAP32[(__errno_location() | 0) >> 2] = 25;
      break label$3;
     }
     label$5 : {
      if ($1 >>> 0 > 2047 >>> 0) {
       break label$5
      }
      HEAP8[($0 + 1 | 0) >> 0] = $1 & 63 | 0 | 128 | 0;
      HEAP8[$0 >> 0] = $1 >>> 6 | 0 | 192 | 0;
      return 2 | 0;
     }
     label$6 : {
      label$7 : {
       if ($1 >>> 0 < 55296 >>> 0) {
        break label$7
       }
       if (($1 & -8192 | 0 | 0) != (57344 | 0)) {
        break label$6
       }
      }
      HEAP8[($0 + 2 | 0) >> 0] = $1 & 63 | 0 | 128 | 0;
      HEAP8[$0 >> 0] = $1 >>> 12 | 0 | 224 | 0;
      HEAP8[($0 + 1 | 0) >> 0] = ($1 >>> 6 | 0) & 63 | 0 | 128 | 0;
      return 3 | 0;
     }
     label$8 : {
      if (($1 + -65536 | 0) >>> 0 > 1048575 >>> 0) {
       break label$8
      }
      HEAP8[($0 + 3 | 0) >> 0] = $1 & 63 | 0 | 128 | 0;
      HEAP8[$0 >> 0] = $1 >>> 18 | 0 | 240 | 0;
      HEAP8[($0 + 2 | 0) >> 0] = ($1 >>> 6 | 0) & 63 | 0 | 128 | 0;
      HEAP8[($0 + 1 | 0) >> 0] = ($1 >>> 12 | 0) & 63 | 0 | 128 | 0;
      return 4 | 0;
     }
     HEAP32[(__errno_location() | 0) >> 2] = 25;
    }
    $3 = -1;
   }
   return $3 | 0;
  }
  HEAP8[$0 >> 0] = $1;
  return 1 | 0;
 }
 
 function wctomb($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   if ($0) {
    break label$1
   }
   return 0 | 0;
  }
  return wcrtomb($0 | 0, $1 | 0, 0 | 0) | 0 | 0;
 }
 
 function frexp($0, $1) {
  $0 = +$0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $3 = 0, i64toi32_i32$2 = 0, i64toi32_i32$4 = 0, $2 = 0, $10 = 0, $2$hi = 0;
  label$1 : {
   wasm2js_scratch_store_f64(+$0);
   i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
   $2 = wasm2js_scratch_load_i32(0 | 0) | 0;
   $2$hi = i64toi32_i32$0;
   i64toi32_i32$2 = $2;
   i64toi32_i32$1 = 0;
   i64toi32_i32$3 = 52;
   i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
   if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
    i64toi32_i32$1 = 0;
    $10 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   } else {
    i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    $10 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
   }
   $3 = $10 & 2047 | 0;
   if (($3 | 0) == (2047 | 0)) {
    break label$1
   }
   label$2 : {
    if ($3) {
     break label$2
    }
    label$3 : {
     label$4 : {
      if ($0 != 0.0) {
       break label$4
      }
      $3 = 0;
      break label$3;
     }
     $0 = +frexp(+($0 * 18446744073709551615.0), $1 | 0);
     $3 = (HEAP32[$1 >> 2] | 0) + -64 | 0;
    }
    HEAP32[$1 >> 2] = $3;
    return +$0;
   }
   HEAP32[$1 >> 2] = $3 + -1022 | 0;
   i64toi32_i32$1 = $2$hi;
   i64toi32_i32$0 = $2;
   i64toi32_i32$2 = -2146435073;
   i64toi32_i32$3 = -1;
   i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
   i64toi32_i32$1 = i64toi32_i32$0 & i64toi32_i32$3 | 0;
   i64toi32_i32$0 = 1071644672;
   i64toi32_i32$3 = 0;
   i64toi32_i32$0 = i64toi32_i32$2 | i64toi32_i32$0 | 0;
   wasm2js_scratch_store_i32(0 | 0, i64toi32_i32$1 | i64toi32_i32$3 | 0 | 0);
   wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$0 | 0);
   $0 = +wasm2js_scratch_load_f64();
  }
  return +$0;
 }
 
 function __vfprintf_internal($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $5 = 0, $6 = 0, $7 = 0;
  $5 = __stack_pointer - 208 | 0;
  __stack_pointer = $5;
  HEAP32[($5 + 204 | 0) >> 2] = $2;
  $2 = 0;
  memset($5 + 160 | 0 | 0, 0 | 0, 40 | 0) | 0;
  HEAP32[($5 + 200 | 0) >> 2] = HEAP32[($5 + 204 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if ((printf_core(0 | 0, $1 | 0, $5 + 200 | 0 | 0, $5 + 80 | 0 | 0, $5 + 160 | 0 | 0, $3 | 0, $4 | 0) | 0 | 0) >= (0 | 0)) {
     break label$2
    }
    $1 = -1;
    break label$1;
   }
   label$3 : {
    if ((HEAP32[($0 + 76 | 0) >> 2] | 0 | 0) < (0 | 0)) {
     break label$3
    }
    $2 = __lockfile($0 | 0) | 0;
   }
   $6 = HEAP32[$0 >> 2] | 0;
   label$4 : {
    if ((HEAP8[($0 + 74 | 0) >> 0] | 0 | 0) > (0 | 0)) {
     break label$4
    }
    HEAP32[$0 >> 2] = $6 & -33 | 0;
   }
   $6 = $6 & 32 | 0;
   label$5 : {
    label$6 : {
     if (!(HEAP32[($0 + 48 | 0) >> 2] | 0)) {
      break label$6
     }
     $1 = printf_core($0 | 0, $1 | 0, $5 + 200 | 0 | 0, $5 + 80 | 0 | 0, $5 + 160 | 0 | 0, $3 | 0, $4 | 0) | 0;
     break label$5;
    }
    HEAP32[($0 + 48 | 0) >> 2] = 80;
    HEAP32[($0 + 16 | 0) >> 2] = $5 + 80 | 0;
    HEAP32[($0 + 28 | 0) >> 2] = $5;
    HEAP32[($0 + 20 | 0) >> 2] = $5;
    $7 = HEAP32[($0 + 44 | 0) >> 2] | 0;
    HEAP32[($0 + 44 | 0) >> 2] = $5;
    $1 = printf_core($0 | 0, $1 | 0, $5 + 200 | 0 | 0, $5 + 80 | 0 | 0, $5 + 160 | 0 | 0, $3 | 0, $4 | 0) | 0;
    if (!$7) {
     break label$5
    }
    FUNCTION_TABLE[HEAP32[($0 + 36 | 0) >> 2] | 0 | 0]($0, 0, 0) | 0;
    HEAP32[($0 + 48 | 0) >> 2] = 0;
    HEAP32[($0 + 44 | 0) >> 2] = $7;
    HEAP32[($0 + 28 | 0) >> 2] = 0;
    HEAP32[($0 + 16 | 0) >> 2] = 0;
    $3 = HEAP32[($0 + 20 | 0) >> 2] | 0;
    HEAP32[($0 + 20 | 0) >> 2] = 0;
    $1 = $3 ? $1 : -1;
   }
   $3 = HEAP32[$0 >> 2] | 0;
   HEAP32[$0 >> 2] = $3 | $6 | 0;
   $1 = $3 & 32 | 0 ? -1 : $1;
   if (!$2) {
    break label$1
   }
   __unlockfile($0 | 0);
  }
  __stack_pointer = $5 + 208 | 0;
  return $1 | 0;
 }
 
 function printf_core($0, $1, $2, $3, $4, $5, $6) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  var $7 = 0, $13 = 0, $14 = 0, $19 = 0, i64toi32_i32$1 = 0, $15 = 0, $12 = 0, $20 = 0, i64toi32_i32$0 = 0, $17 = 0, $11 = 0, $18 = 0, i64toi32_i32$2 = 0, $16 = 0, i64toi32_i32$3 = 0, i64toi32_i32$5 = 0, $9 = 0, $22 = 0, $22$hi = 0, $10 = 0, $21 = 0, $30 = 0, $31 = 0, $32 = 0, $8 = 0, $275 = 0;
  $7 = __stack_pointer - 80 | 0;
  __stack_pointer = $7;
  HEAP32[($7 + 76 | 0) >> 2] = $1;
  $8 = $7 + 55 | 0;
  $9 = $7 + 56 | 0;
  $10 = 0;
  $11 = 0;
  $1 = 0;
  label$1 : {
   label$2 : while (1) {
    label$3 : {
     if (($11 | 0) < (0 | 0)) {
      break label$3
     }
     label$4 : {
      if (($1 | 0) <= (2147483647 - $11 | 0 | 0)) {
       break label$4
      }
      HEAP32[(__errno_location() | 0) >> 2] = 61;
      $11 = -1;
      break label$3;
     }
     $11 = $1 + $11 | 0;
    }
    $12 = HEAP32[($7 + 76 | 0) >> 2] | 0;
    $1 = $12;
    label$5 : {
     label$6 : {
      label$7 : {
       label$8 : {
        label$9 : {
         $13 = HEAPU8[$1 >> 0] | 0;
         if (!$13) {
          break label$9
         }
         label$10 : while (1) {
          label$11 : {
           label$12 : {
            label$13 : {
             $13 = $13 & 255 | 0;
             if ($13) {
              break label$13
             }
             $13 = $1;
             break label$12;
            }
            if (($13 | 0) != (37 | 0)) {
             break label$11
            }
            $13 = $1;
            label$14 : while (1) {
             if ((HEAPU8[($1 + 1 | 0) >> 0] | 0 | 0) != (37 | 0)) {
              break label$12
             }
             $14 = $1 + 2 | 0;
             HEAP32[($7 + 76 | 0) >> 2] = $14;
             $13 = $13 + 1 | 0;
             $15 = HEAPU8[($1 + 2 | 0) >> 0] | 0;
             $1 = $14;
             if (($15 | 0) == (37 | 0)) {
              continue label$14
             }
             break label$14;
            };
           }
           $1 = $13 - $12 | 0;
           label$15 : {
            if (!$0) {
             break label$15
            }
            out($0 | 0, $12 | 0, $1 | 0);
           }
           if ($1) {
            continue label$2
           }
           $1 = isdigit(HEAP8[((HEAP32[($7 + 76 | 0) >> 2] | 0) + 1 | 0) >> 0] | 0 | 0) | 0;
           $13 = HEAP32[($7 + 76 | 0) >> 2] | 0;
           label$16 : {
            label$17 : {
             if (!$1) {
              break label$17
             }
             if ((HEAPU8[($13 + 2 | 0) >> 0] | 0 | 0) != (36 | 0)) {
              break label$17
             }
             $1 = $13 + 3 | 0;
             $16 = (HEAP8[($13 + 1 | 0) >> 0] | 0) + -48 | 0;
             $10 = 1;
             break label$16;
            }
            $1 = $13 + 1 | 0;
            $16 = -1;
           }
           HEAP32[($7 + 76 | 0) >> 2] = $1;
           $17 = 0;
           label$18 : {
            label$19 : {
             $15 = HEAP8[$1 >> 0] | 0;
             $14 = $15 + -32 | 0;
             if ($14 >>> 0 <= 31 >>> 0) {
              break label$19
             }
             $13 = $1;
             break label$18;
            }
            $17 = 0;
            $13 = $1;
            $14 = 1 << $14 | 0;
            if (!($14 & 75913 | 0)) {
             break label$18
            }
            label$20 : while (1) {
             $13 = $1 + 1 | 0;
             HEAP32[($7 + 76 | 0) >> 2] = $13;
             $17 = $14 | $17 | 0;
             $15 = HEAP8[($1 + 1 | 0) >> 0] | 0;
             $14 = $15 + -32 | 0;
             if ($14 >>> 0 >= 32 >>> 0) {
              break label$18
             }
             $1 = $13;
             $14 = 1 << $14 | 0;
             if ($14 & 75913 | 0) {
              continue label$20
             }
             break label$20;
            };
           }
           label$21 : {
            label$22 : {
             if (($15 | 0) != (42 | 0)) {
              break label$22
             }
             label$23 : {
              label$24 : {
               if (!(isdigit(HEAP8[($13 + 1 | 0) >> 0] | 0 | 0) | 0)) {
                break label$24
               }
               $13 = HEAP32[($7 + 76 | 0) >> 2] | 0;
               if ((HEAPU8[($13 + 2 | 0) >> 0] | 0 | 0) != (36 | 0)) {
                break label$24
               }
               HEAP32[((((HEAP8[($13 + 1 | 0) >> 0] | 0) << 2 | 0) + $4 | 0) + -192 | 0) >> 2] = 10;
               $1 = $13 + 3 | 0;
               $18 = HEAP32[((((HEAP8[($13 + 1 | 0) >> 0] | 0) << 3 | 0) + $3 | 0) + -384 | 0) >> 2] | 0;
               $10 = 1;
               break label$23;
              }
              if ($10) {
               break label$8
              }
              $10 = 0;
              $18 = 0;
              label$25 : {
               if (!$0) {
                break label$25
               }
               $1 = HEAP32[$2 >> 2] | 0;
               HEAP32[$2 >> 2] = $1 + 4 | 0;
               $18 = HEAP32[$1 >> 2] | 0;
              }
              $1 = (HEAP32[($7 + 76 | 0) >> 2] | 0) + 1 | 0;
             }
             HEAP32[($7 + 76 | 0) >> 2] = $1;
             if (($18 | 0) > (-1 | 0)) {
              break label$21
             }
             $18 = 0 - $18 | 0;
             $17 = $17 | 8192 | 0;
             break label$21;
            }
            $18 = getint($7 + 76 | 0 | 0) | 0;
            if (($18 | 0) < (0 | 0)) {
             break label$8
            }
            $1 = HEAP32[($7 + 76 | 0) >> 2] | 0;
           }
           $19 = -1;
           label$26 : {
            if ((HEAPU8[$1 >> 0] | 0 | 0) != (46 | 0)) {
             break label$26
            }
            label$27 : {
             if ((HEAPU8[($1 + 1 | 0) >> 0] | 0 | 0) != (42 | 0)) {
              break label$27
             }
             label$28 : {
              if (!(isdigit(HEAP8[($1 + 2 | 0) >> 0] | 0 | 0) | 0)) {
               break label$28
              }
              $1 = HEAP32[($7 + 76 | 0) >> 2] | 0;
              if ((HEAPU8[($1 + 3 | 0) >> 0] | 0 | 0) != (36 | 0)) {
               break label$28
              }
              HEAP32[((((HEAP8[($1 + 2 | 0) >> 0] | 0) << 2 | 0) + $4 | 0) + -192 | 0) >> 2] = 10;
              $19 = HEAP32[((((HEAP8[($1 + 2 | 0) >> 0] | 0) << 3 | 0) + $3 | 0) + -384 | 0) >> 2] | 0;
              $1 = $1 + 4 | 0;
              HEAP32[($7 + 76 | 0) >> 2] = $1;
              break label$26;
             }
             if ($10) {
              break label$8
             }
             label$29 : {
              label$30 : {
               if ($0) {
                break label$30
               }
               $19 = 0;
               break label$29;
              }
              $1 = HEAP32[$2 >> 2] | 0;
              HEAP32[$2 >> 2] = $1 + 4 | 0;
              $19 = HEAP32[$1 >> 2] | 0;
             }
             $1 = (HEAP32[($7 + 76 | 0) >> 2] | 0) + 2 | 0;
             HEAP32[($7 + 76 | 0) >> 2] = $1;
             break label$26;
            }
            HEAP32[($7 + 76 | 0) >> 2] = $1 + 1 | 0;
            $19 = getint($7 + 76 | 0 | 0) | 0;
            $1 = HEAP32[($7 + 76 | 0) >> 2] | 0;
           }
           $13 = 0;
           label$31 : while (1) {
            $14 = $13;
            $20 = -1;
            if (((HEAP8[$1 >> 0] | 0) + -65 | 0) >>> 0 > 57 >>> 0) {
             break label$1
            }
            $15 = $1 + 1 | 0;
            HEAP32[($7 + 76 | 0) >> 2] = $15;
            $13 = HEAP8[$1 >> 0] | 0;
            $1 = $15;
            $13 = HEAPU8[(($13 + Math_imul($14, 58) | 0) + 9839 | 0) >> 0] | 0;
            if (($13 + -1 | 0) >>> 0 < 8 >>> 0) {
             continue label$31
            }
            break label$31;
           };
           label$32 : {
            label$33 : {
             label$34 : {
              if (($13 | 0) == (19 | 0)) {
               break label$34
              }
              if (!$13) {
               break label$1
              }
              label$35 : {
               if (($16 | 0) < (0 | 0)) {
                break label$35
               }
               HEAP32[($4 + ($16 << 2 | 0) | 0) >> 2] = $13;
               i64toi32_i32$2 = $3 + ($16 << 3 | 0) | 0;
               i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
               i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
               $275 = i64toi32_i32$0;
               i64toi32_i32$0 = $7;
               HEAP32[($7 + 64 | 0) >> 2] = $275;
               HEAP32[($7 + 68 | 0) >> 2] = i64toi32_i32$1;
               break label$33;
              }
              if (!$0) {
               break label$5
              }
              pop_arg($7 + 64 | 0 | 0, $13 | 0, $2 | 0, $6 | 0);
              $15 = HEAP32[($7 + 76 | 0) >> 2] | 0;
              break label$32;
             }
             $20 = -1;
             if (($16 | 0) > (-1 | 0)) {
              break label$1
             }
            }
            $1 = 0;
            if (!$0) {
             continue label$2
            }
           }
           $21 = $17 & -65537 | 0;
           $13 = $17 & 8192 | 0 ? $21 : $17;
           $20 = 0;
           $16 = 9872;
           $17 = $9;
           label$36 : {
            label$37 : {
             label$38 : {
              label$39 : {
               label$40 : {
                label$41 : {
                 label$42 : {
                  label$43 : {
                   label$44 : {
                    label$45 : {
                     label$46 : {
                      label$47 : {
                       label$48 : {
                        label$49 : {
                         label$50 : {
                          label$51 : {
                           $1 = HEAP8[($15 + -1 | 0) >> 0] | 0;
                           $1 = $14 ? (($1 & 15 | 0 | 0) == (3 | 0) ? $1 & -33 | 0 : $1) : $1;
                           switch ($1 + -88 | 0 | 0) {
                           case 11:
                            break label$36;
                           case 9:
                           case 13:
                           case 14:
                           case 15:
                            break label$37;
                           case 27:
                            break label$42;
                           case 12:
                           case 17:
                            break label$45;
                           case 23:
                            break label$46;
                           case 0:
                           case 32:
                            break label$47;
                           case 24:
                            break label$48;
                           case 22:
                            break label$49;
                           case 29:
                            break label$50;
                           case 1:
                           case 2:
                           case 3:
                           case 4:
                           case 5:
                           case 6:
                           case 7:
                           case 8:
                           case 10:
                           case 16:
                           case 18:
                           case 19:
                           case 20:
                           case 21:
                           case 25:
                           case 26:
                           case 28:
                           case 30:
                           case 31:
                            break label$6;
                           default:
                            break label$51;
                           };
                          }
                          $17 = $9;
                          label$52 : {
                           switch ($1 + -65 | 0 | 0) {
                           case 0:
                           case 4:
                           case 5:
                           case 6:
                            break label$37;
                           case 2:
                            break label$40;
                           case 1:
                           case 3:
                            break label$6;
                           default:
                            break label$52;
                           };
                          }
                          if (($1 | 0) == (83 | 0)) {
                           break label$41
                          }
                          break label$7;
                         }
                         $20 = 0;
                         $16 = 9872;
                         i64toi32_i32$2 = $7;
                         i64toi32_i32$1 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                         i64toi32_i32$0 = HEAP32[($7 + 68 | 0) >> 2] | 0;
                         $22 = i64toi32_i32$1;
                         $22$hi = i64toi32_i32$0;
                         break label$44;
                        }
                        $1 = 0;
                        label$53 : {
                         switch ($14 & 255 | 0 | 0) {
                         case 0:
                          HEAP32[(HEAP32[($7 + 64 | 0) >> 2] | 0) >> 2] = $11;
                          continue label$2;
                         case 1:
                          HEAP32[(HEAP32[($7 + 64 | 0) >> 2] | 0) >> 2] = $11;
                          continue label$2;
                         case 2:
                          i64toi32_i32$1 = $11;
                          i64toi32_i32$0 = i64toi32_i32$1 >> 31 | 0;
                          i64toi32_i32$1 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                          HEAP32[i64toi32_i32$1 >> 2] = $11;
                          HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
                          continue label$2;
                         case 3:
                          HEAP16[(HEAP32[($7 + 64 | 0) >> 2] | 0) >> 1] = $11;
                          continue label$2;
                         case 4:
                          HEAP8[(HEAP32[($7 + 64 | 0) >> 2] | 0) >> 0] = $11;
                          continue label$2;
                         case 6:
                          HEAP32[(HEAP32[($7 + 64 | 0) >> 2] | 0) >> 2] = $11;
                          continue label$2;
                         case 7:
                          break label$53;
                         default:
                          continue label$2;
                         };
                        }
                        i64toi32_i32$1 = $11;
                        i64toi32_i32$0 = i64toi32_i32$1 >> 31 | 0;
                        i64toi32_i32$1 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                        HEAP32[i64toi32_i32$1 >> 2] = $11;
                        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
                        continue label$2;
                       }
                       $19 = $19 >>> 0 > 8 >>> 0 ? $19 : 8;
                       $13 = $13 | 8 | 0;
                       $1 = 120;
                      }
                      $20 = 0;
                      $16 = 9872;
                      i64toi32_i32$2 = $7;
                      i64toi32_i32$0 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                      i64toi32_i32$1 = HEAP32[($7 + 68 | 0) >> 2] | 0;
                      $12 = fmt_x(i64toi32_i32$0 | 0, i64toi32_i32$1 | 0, $9 | 0, $1 & 32 | 0 | 0) | 0;
                      if (!($13 & 8 | 0)) {
                       break label$43
                      }
                      i64toi32_i32$2 = $7;
                      i64toi32_i32$1 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                      i64toi32_i32$0 = HEAP32[($7 + 68 | 0) >> 2] | 0;
                      if (!(i64toi32_i32$1 | i64toi32_i32$0 | 0)) {
                       break label$43
                      }
                      $16 = ($1 >>> 4 | 0) + 9872 | 0;
                      $20 = 2;
                      break label$43;
                     }
                     $20 = 0;
                     $16 = 9872;
                     i64toi32_i32$2 = $7;
                     i64toi32_i32$0 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                     i64toi32_i32$1 = HEAP32[($7 + 68 | 0) >> 2] | 0;
                     $12 = fmt_o(i64toi32_i32$0 | 0, i64toi32_i32$1 | 0, $9 | 0) | 0;
                     if (!($13 & 8 | 0)) {
                      break label$43
                     }
                     $1 = $9 - $12 | 0;
                     $19 = ($19 | 0) > ($1 | 0) ? $19 : $1 + 1 | 0;
                     break label$43;
                    }
                    label$60 : {
                     i64toi32_i32$2 = $7;
                     i64toi32_i32$1 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                     i64toi32_i32$0 = HEAP32[($7 + 68 | 0) >> 2] | 0;
                     $22 = i64toi32_i32$1;
                     $22$hi = i64toi32_i32$0;
                     i64toi32_i32$2 = i64toi32_i32$1;
                     i64toi32_i32$1 = -1;
                     i64toi32_i32$3 = -1;
                     if ((i64toi32_i32$0 | 0) > (i64toi32_i32$1 | 0)) {
                      $30 = 1
                     } else {
                      if ((i64toi32_i32$0 | 0) >= (i64toi32_i32$1 | 0)) {
                       if (i64toi32_i32$2 >>> 0 <= i64toi32_i32$3 >>> 0) {
                        $31 = 0
                       } else {
                        $31 = 1
                       }
                       $32 = $31;
                      } else {
                       $32 = 0
                      }
                      $30 = $32;
                     }
                     if ($30) {
                      break label$60
                     }
                     i64toi32_i32$2 = $22$hi;
                     i64toi32_i32$2 = 0;
                     i64toi32_i32$3 = 0;
                     i64toi32_i32$0 = $22$hi;
                     i64toi32_i32$1 = $22;
                     i64toi32_i32$5 = (i64toi32_i32$3 >>> 0 < i64toi32_i32$1 >>> 0) + i64toi32_i32$0 | 0;
                     i64toi32_i32$5 = i64toi32_i32$2 - i64toi32_i32$5 | 0;
                     $22 = i64toi32_i32$3 - i64toi32_i32$1 | 0;
                     $22$hi = i64toi32_i32$5;
                     i64toi32_i32$3 = $7;
                     HEAP32[($7 + 64 | 0) >> 2] = $22;
                     HEAP32[($7 + 68 | 0) >> 2] = i64toi32_i32$5;
                     $20 = 1;
                     $16 = 9872;
                     break label$44;
                    }
                    label$61 : {
                     if (!($13 & 2048 | 0)) {
                      break label$61
                     }
                     $20 = 1;
                     $16 = 9873;
                     break label$44;
                    }
                    $20 = $13 & 1 | 0;
                    $16 = $20 ? 9874 : 9872;
                   }
                   i64toi32_i32$5 = $22$hi;
                   $12 = fmt_u($22 | 0, i64toi32_i32$5 | 0, $9 | 0) | 0;
                  }
                  $13 = ($19 | 0) > (-1 | 0) ? $13 & -65537 | 0 : $13;
                  i64toi32_i32$2 = $7;
                  i64toi32_i32$5 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                  i64toi32_i32$3 = HEAP32[($7 + 68 | 0) >> 2] | 0;
                  $22 = i64toi32_i32$5;
                  $22$hi = i64toi32_i32$3;
                  label$62 : {
                   if ($19) {
                    break label$62
                   }
                   i64toi32_i32$3 = $22$hi;
                   if (!!($22 | i64toi32_i32$3 | 0)) {
                    break label$62
                   }
                   $19 = 0;
                   $12 = $9;
                   break label$7;
                  }
                  i64toi32_i32$3 = $22$hi;
                  $1 = ($9 - $12 | 0) + !($22 | i64toi32_i32$3 | 0) | 0;
                  $19 = ($19 | 0) > ($1 | 0) ? $19 : $1;
                  break label$7;
                 }
                 $20 = 0;
                 $1 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                 $12 = $1 ? $1 : 9882;
                 $1 = memchr($12 | 0, 0 | 0, $19 | 0) | 0;
                 $17 = $1 ? $1 : $12 + $19 | 0;
                 $13 = $21;
                 $19 = $1 ? $1 - $12 | 0 : $19;
                 break label$6;
                }
                label$63 : {
                 if (!$19) {
                  break label$63
                 }
                 $14 = HEAP32[($7 + 64 | 0) >> 2] | 0;
                 break label$39;
                }
                $1 = 0;
                pad($0 | 0, 32 | 0, $18 | 0, 0 | 0, $13 | 0);
                break label$38;
               }
               HEAP32[($7 + 12 | 0) >> 2] = 0;
               i64toi32_i32$2 = $7;
               i64toi32_i32$3 = HEAP32[($7 + 64 | 0) >> 2] | 0;
               i64toi32_i32$5 = HEAP32[($7 + 68 | 0) >> 2] | 0;
               HEAP32[($7 + 8 | 0) >> 2] = i64toi32_i32$3;
               HEAP32[($7 + 64 | 0) >> 2] = $7 + 8 | 0;
               $19 = -1;
               $14 = $7 + 8 | 0;
              }
              $1 = 0;
              label$64 : {
               label$65 : while (1) {
                $15 = HEAP32[$14 >> 2] | 0;
                if (!$15) {
                 break label$64
                }
                label$66 : {
                 $15 = wctomb($7 + 4 | 0 | 0, $15 | 0) | 0;
                 $12 = ($15 | 0) < (0 | 0);
                 if ($12) {
                  break label$66
                 }
                 if ($15 >>> 0 > ($19 - $1 | 0) >>> 0) {
                  break label$66
                 }
                 $14 = $14 + 4 | 0;
                 $1 = $15 + $1 | 0;
                 if ($19 >>> 0 > $1 >>> 0) {
                  continue label$65
                 }
                 break label$64;
                }
                break label$65;
               };
               $20 = -1;
               if ($12) {
                break label$1
               }
              }
              pad($0 | 0, 32 | 0, $18 | 0, $1 | 0, $13 | 0);
              label$67 : {
               if ($1) {
                break label$67
               }
               $1 = 0;
               break label$38;
              }
              $14 = 0;
              $15 = HEAP32[($7 + 64 | 0) >> 2] | 0;
              label$68 : while (1) {
               $12 = HEAP32[$15 >> 2] | 0;
               if (!$12) {
                break label$38
               }
               $12 = wctomb($7 + 4 | 0 | 0, $12 | 0) | 0;
               $14 = $12 + $14 | 0;
               if (($14 | 0) > ($1 | 0)) {
                break label$38
               }
               out($0 | 0, $7 + 4 | 0 | 0, $12 | 0);
               $15 = $15 + 4 | 0;
               if ($14 >>> 0 < $1 >>> 0) {
                continue label$68
               }
               break label$68;
              };
             }
             pad($0 | 0, 32 | 0, $18 | 0, $1 | 0, $13 ^ 8192 | 0 | 0);
             $1 = ($18 | 0) > ($1 | 0) ? $18 : $1;
             continue label$2;
            }
            $1 = FUNCTION_TABLE[$5 | 0]($0, +HEAPF64[($7 + 64 | 0) >> 3], $18, $19, $13, $1) | 0;
            continue label$2;
           }
           i64toi32_i32$2 = $7;
           i64toi32_i32$5 = HEAP32[($7 + 64 | 0) >> 2] | 0;
           i64toi32_i32$3 = HEAP32[($7 + 68 | 0) >> 2] | 0;
           HEAP8[($7 + 55 | 0) >> 0] = i64toi32_i32$5;
           $19 = 1;
           $12 = $8;
           $17 = $9;
           $13 = $21;
           break label$6;
          }
          $14 = $1 + 1 | 0;
          HEAP32[($7 + 76 | 0) >> 2] = $14;
          $13 = HEAPU8[($1 + 1 | 0) >> 0] | 0;
          $1 = $14;
          continue label$10;
         };
        }
        $20 = $11;
        if ($0) {
         break label$1
        }
        if (!$10) {
         break label$5
        }
        $1 = 1;
        label$69 : {
         label$70 : while (1) {
          $13 = HEAP32[($4 + ($1 << 2 | 0) | 0) >> 2] | 0;
          if (!$13) {
           break label$69
          }
          pop_arg($3 + ($1 << 3 | 0) | 0 | 0, $13 | 0, $2 | 0, $6 | 0);
          $20 = 1;
          $1 = $1 + 1 | 0;
          if (($1 | 0) != (10 | 0)) {
           continue label$70
          }
          break label$1;
         };
        }
        $20 = 1;
        if ($1 >>> 0 >= 10 >>> 0) {
         break label$1
        }
        label$71 : while (1) {
         if (HEAP32[($4 + ($1 << 2 | 0) | 0) >> 2] | 0) {
          break label$8
         }
         $20 = 1;
         $1 = $1 + 1 | 0;
         if (($1 | 0) == (10 | 0)) {
          break label$1
         }
         continue label$71;
        };
       }
       $20 = -1;
       break label$1;
      }
      $17 = $9;
     }
     $15 = $17 - $12 | 0;
     $17 = ($19 | 0) < ($15 | 0) ? $15 : $19;
     $14 = $20 + $17 | 0;
     $1 = ($18 | 0) < ($14 | 0) ? $14 : $18;
     pad($0 | 0, 32 | 0, $1 | 0, $14 | 0, $13 | 0);
     out($0 | 0, $16 | 0, $20 | 0);
     pad($0 | 0, 48 | 0, $1 | 0, $14 | 0, $13 ^ 65536 | 0 | 0);
     pad($0 | 0, 48 | 0, $17 | 0, $15 | 0, 0 | 0);
     out($0 | 0, $12 | 0, $15 | 0);
     pad($0 | 0, 32 | 0, $1 | 0, $14 | 0, $13 ^ 8192 | 0 | 0);
     continue label$2;
    }
    break label$2;
   };
   $20 = 0;
  }
  __stack_pointer = $7 + 80 | 0;
  return $20 | 0;
 }
 
 function out($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   if ((HEAPU8[$0 >> 0] | 0) & 32 | 0) {
    break label$1
   }
   __fwritex($1 | 0, $2 | 0, $0 | 0) | 0;
  }
 }
 
 function getint($0) {
  $0 = $0 | 0;
  var $1 = 0, $2 = 0, $3 = 0;
  $1 = 0;
  label$1 : {
   if (!(isdigit(HEAP8[(HEAP32[$0 >> 2] | 0) >> 0] | 0 | 0) | 0)) {
    break label$1
   }
   label$2 : while (1) {
    $2 = HEAP32[$0 >> 2] | 0;
    $3 = HEAP8[$2 >> 0] | 0;
    HEAP32[$0 >> 2] = $2 + 1 | 0;
    $1 = ($3 + Math_imul($1, 10) | 0) + -48 | 0;
    if (isdigit(HEAP8[($2 + 1 | 0) >> 0] | 0 | 0) | 0) {
     continue label$2
    }
    break label$2;
   };
  }
  return $1 | 0;
 }
 
 function pop_arg($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $23 = 0, $31 = 0, $41 = 0, $49 = 0, $57 = 0, $65 = 0, $73 = 0;
  label$1 : {
   if ($1 >>> 0 > 20 >>> 0) {
    break label$1
   }
   label$2 : {
    switch ($1 + -9 | 0 | 0) {
    case 0:
     $1 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $1 + 4 | 0;
     HEAP32[$0 >> 2] = HEAP32[$1 >> 2] | 0;
     return;
    case 1:
     $1 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $1 + 4 | 0;
     i64toi32_i32$0 = HEAP32[$1 >> 2] | 0;
     i64toi32_i32$1 = i64toi32_i32$0 >> 31 | 0;
     $23 = i64toi32_i32$0;
     i64toi32_i32$0 = $0;
     HEAP32[i64toi32_i32$0 >> 2] = $23;
     HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
     return;
    case 2:
     $1 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $1 + 4 | 0;
     i64toi32_i32$1 = HEAP32[$1 >> 2] | 0;
     i64toi32_i32$0 = 0;
     $31 = i64toi32_i32$1;
     i64toi32_i32$1 = $0;
     HEAP32[i64toi32_i32$1 >> 2] = $31;
     HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
     return;
    case 3:
     $1 = ((HEAP32[$2 >> 2] | 0) + 7 | 0) & -8 | 0;
     HEAP32[$2 >> 2] = $1 + 8 | 0;
     i64toi32_i32$0 = HEAP32[$1 >> 2] | 0;
     i64toi32_i32$1 = HEAP32[($1 + 4 | 0) >> 2] | 0;
     $41 = i64toi32_i32$0;
     i64toi32_i32$0 = $0;
     HEAP32[i64toi32_i32$0 >> 2] = $41;
     HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
     return;
    case 4:
     $1 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $1 + 4 | 0;
     i64toi32_i32$1 = HEAP16[$1 >> 1] | 0;
     i64toi32_i32$0 = i64toi32_i32$1 >> 31 | 0;
     $49 = i64toi32_i32$1;
     i64toi32_i32$1 = $0;
     HEAP32[i64toi32_i32$1 >> 2] = $49;
     HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
     return;
    case 5:
     $1 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $1 + 4 | 0;
     i64toi32_i32$0 = HEAPU16[$1 >> 1] | 0;
     i64toi32_i32$1 = 0;
     $57 = i64toi32_i32$0;
     i64toi32_i32$0 = $0;
     HEAP32[i64toi32_i32$0 >> 2] = $57;
     HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
     return;
    case 6:
     $1 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $1 + 4 | 0;
     i64toi32_i32$1 = HEAP8[$1 >> 0] | 0;
     i64toi32_i32$0 = i64toi32_i32$1 >> 31 | 0;
     $65 = i64toi32_i32$1;
     i64toi32_i32$1 = $0;
     HEAP32[i64toi32_i32$1 >> 2] = $65;
     HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;
     return;
    case 7:
     $1 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $1 + 4 | 0;
     i64toi32_i32$0 = HEAPU8[$1 >> 0] | 0;
     i64toi32_i32$1 = 0;
     $73 = i64toi32_i32$0;
     i64toi32_i32$0 = $0;
     HEAP32[i64toi32_i32$0 >> 2] = $73;
     HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
     return;
    case 8:
     $1 = ((HEAP32[$2 >> 2] | 0) + 7 | 0) & -8 | 0;
     HEAP32[$2 >> 2] = $1 + 8 | 0;
     HEAPF64[$0 >> 3] = +HEAPF64[$1 >> 3];
     return;
    case 9:
     break label$2;
    default:
     break label$1;
    };
   }
   FUNCTION_TABLE[$3 | 0]($0, $2);
  }
 }
 
 function fmt_x($0, $0$hi, $1, $2) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, i64toi32_i32$2 = 0, $9 = 0;
  label$1 : {
   i64toi32_i32$0 = $0$hi;
   if (!($0 | i64toi32_i32$0 | 0)) {
    break label$1
   }
   label$2 : while (1) {
    $1 = $1 + -1 | 0;
    i64toi32_i32$0 = $0$hi;
    HEAP8[$1 >> 0] = HEAPU8[(($0 & 15 | 0) + 10368 | 0) >> 0] | 0 | $2 | 0;
    i64toi32_i32$2 = $0;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = 4;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $9 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     $9 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
    }
    $0 = $9;
    $0$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $0;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 0;
    if ((i64toi32_i32$0 | 0) != (i64toi32_i32$3 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$2 | 0) | 0) {
     continue label$2
    }
    break label$2;
   };
  }
  return $1 | 0;
 }
 
 function fmt_o($0, $0$hi, $1) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, i64toi32_i32$2 = 0, $8 = 0;
  label$1 : {
   i64toi32_i32$0 = $0$hi;
   if (!($0 | i64toi32_i32$0 | 0)) {
    break label$1
   }
   label$2 : while (1) {
    $1 = $1 + -1 | 0;
    i64toi32_i32$0 = $0$hi;
    HEAP8[$1 >> 0] = $0 & 7 | 0 | 48 | 0;
    i64toi32_i32$2 = $0;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = 3;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $8 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
     $8 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
    }
    $0 = $8;
    $0$hi = i64toi32_i32$1;
    i64toi32_i32$0 = $0;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = 0;
    if ((i64toi32_i32$0 | 0) != (i64toi32_i32$3 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$2 | 0) | 0) {
     continue label$2
    }
    break label$2;
   };
  }
  return $1 | 0;
 }
 
 function fmt_u($0, $0$hi, $1) {
  $0 = $0 | 0;
  $0$hi = $0$hi | 0;
  $1 = $1 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $3 = 0, i64toi32_i32$3 = 0, $2 = 0, i64toi32_i32$5 = 0, $2$hi = 0, $4 = 0, $16 = 0, $16$hi = 0, $5 = 0;
  label$1 : {
   label$2 : {
    i64toi32_i32$0 = $0$hi;
    i64toi32_i32$2 = $0;
    i64toi32_i32$1 = 1;
    i64toi32_i32$3 = 0;
    if (i64toi32_i32$0 >>> 0 > i64toi32_i32$1 >>> 0 | ((i64toi32_i32$0 | 0) == (i64toi32_i32$1 | 0) & i64toi32_i32$2 >>> 0 >= i64toi32_i32$3 >>> 0 | 0) | 0) {
     break label$2
    }
    i64toi32_i32$2 = $0$hi;
    $2 = $0;
    $2$hi = i64toi32_i32$2;
    break label$1;
   }
   label$3 : while (1) {
    $1 = $1 + -1 | 0;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$0 = 0;
    i64toi32_i32$0 = __wasm_i64_udiv($0 | 0, i64toi32_i32$2 | 0, 10 | 0, i64toi32_i32$0 | 0) | 0;
    i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
    $2 = i64toi32_i32$0;
    $2$hi = i64toi32_i32$2;
    i64toi32_i32$0 = 0;
    i64toi32_i32$0 = __wasm_i64_mul($2 | 0, i64toi32_i32$2 | 0, 10 | 0, i64toi32_i32$0 | 0) | 0;
    i64toi32_i32$2 = i64toi32_i32$HIGH_BITS;
    $16 = i64toi32_i32$0;
    $16$hi = i64toi32_i32$2;
    i64toi32_i32$2 = $0$hi;
    i64toi32_i32$3 = $0;
    i64toi32_i32$0 = $16$hi;
    i64toi32_i32$1 = $16;
    i64toi32_i32$5 = ($0 >>> 0 < i64toi32_i32$1 >>> 0) + i64toi32_i32$0 | 0;
    i64toi32_i32$5 = i64toi32_i32$2 - i64toi32_i32$5 | 0;
    HEAP8[$1 >> 0] = $0 - i64toi32_i32$1 | 0 | 48 | 0;
    i64toi32_i32$5 = i64toi32_i32$2;
    i64toi32_i32$5 = i64toi32_i32$2;
    i64toi32_i32$2 = $0;
    i64toi32_i32$3 = 9;
    i64toi32_i32$1 = -1;
    $3 = $0$hi >>> 0 > i64toi32_i32$3 >>> 0 | (($0$hi | 0) == (i64toi32_i32$3 | 0) & i64toi32_i32$2 >>> 0 > i64toi32_i32$1 >>> 0 | 0) | 0;
    i64toi32_i32$2 = $2$hi;
    $0 = $2;
    $0$hi = i64toi32_i32$2;
    if ($3) {
     continue label$3
    }
    break label$3;
   };
  }
  label$4 : {
   i64toi32_i32$2 = $2$hi;
   $3 = $2;
   if (!$3) {
    break label$4
   }
   label$5 : while (1) {
    $1 = $1 + -1 | 0;
    $4 = ($3 >>> 0) / (10 >>> 0) | 0;
    HEAP8[$1 >> 0] = $3 - Math_imul($4, 10) | 0 | 48 | 0;
    $5 = $3 >>> 0 > 9 >>> 0;
    $3 = $4;
    if ($5) {
     continue label$5
    }
    break label$5;
   };
  }
  return $1 | 0;
 }
 
 function pad($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $5 = 0;
  $5 = __stack_pointer - 256 | 0;
  __stack_pointer = $5;
  label$1 : {
   if (($2 | 0) <= ($3 | 0)) {
    break label$1
   }
   if ($4 & 73728 | 0) {
    break label$1
   }
   $2 = $2 - $3 | 0;
   $3 = $2 >>> 0 < 256 >>> 0;
   memset($5 | 0, $1 & 255 | 0 | 0, ($3 ? $2 : 256) | 0) | 0;
   label$2 : {
    if ($3) {
     break label$2
    }
    label$3 : while (1) {
     out($0 | 0, $5 | 0, 256 | 0);
     $2 = $2 + -256 | 0;
     if ($2 >>> 0 > 255 >>> 0) {
      continue label$3
     }
     break label$3;
    };
   }
   out($0 | 0, $5 | 0, $2 | 0);
  }
  __stack_pointer = $5 + 256 | 0;
 }
 
 function vfprintf($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  return __vfprintf_internal($0 | 0, $1 | 0, $2 | 0, 119 | 0, 120 | 0) | 0 | 0;
 }
 
 function fmt_fp($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = +$1;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  var $12 = 0, $19 = 0, $18 = 0, $25 = 0, $6 = 0, $11 = 0, i64toi32_i32$1 = 0, $15 = 0, i64toi32_i32$0 = 0, $23 = 0, i64toi32_i32$4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$5 = 0, $24 = 0, $17 = 0, $13 = 0, $21 = 0, $26 = 0.0, $8 = 0, $10 = 0, $8$hi = 0, $9 = 0, $14 = 0, $16 = 0, $22 = 0, $7 = 0, $44 = 0, $45 = 0, $46 = 0, $20$hi = 0, $47 = 0, $20 = 0, $158 = 0, $160$hi = 0, $162$hi = 0, $164 = 0, $164$hi = 0, $166$hi = 0, $170 = 0, $170$hi = 0, $818 = 0;
  $6 = __stack_pointer - 560 | 0;
  __stack_pointer = $6;
  $7 = 0;
  HEAP32[($6 + 44 | 0) >> 2] = 0;
  label$1 : {
   label$2 : {
    i64toi32_i32$0 = __DOUBLE_BITS(+$1) | 0;
    i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
    $8 = i64toi32_i32$0;
    $8$hi = i64toi32_i32$1;
    i64toi32_i32$2 = i64toi32_i32$0;
    i64toi32_i32$0 = -1;
    i64toi32_i32$3 = -1;
    if ((i64toi32_i32$1 | 0) > (i64toi32_i32$0 | 0)) {
     $44 = 1
    } else {
     if ((i64toi32_i32$1 | 0) >= (i64toi32_i32$0 | 0)) {
      if (i64toi32_i32$2 >>> 0 <= i64toi32_i32$3 >>> 0) {
       $45 = 0
      } else {
       $45 = 1
      }
      $46 = $45;
     } else {
      $46 = 0
     }
     $44 = $46;
    }
    if ($44) {
     break label$2
    }
    $9 = 1;
    $10 = 10384;
    $1 = -$1;
    i64toi32_i32$2 = __DOUBLE_BITS(+$1) | 0;
    i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
    $8 = i64toi32_i32$2;
    $8$hi = i64toi32_i32$1;
    break label$1;
   }
   $9 = 1;
   label$3 : {
    if (!($4 & 2048 | 0)) {
     break label$3
    }
    $10 = 10387;
    break label$1;
   }
   $10 = 10390;
   if ($4 & 1 | 0) {
    break label$1
   }
   $9 = 0;
   $7 = 1;
   $10 = 10385;
  }
  label$4 : {
   label$5 : {
    i64toi32_i32$1 = $8$hi;
    i64toi32_i32$3 = $8;
    i64toi32_i32$2 = 2146435072;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = i64toi32_i32$1 & i64toi32_i32$2 | 0;
    i64toi32_i32$1 = i64toi32_i32$3 & i64toi32_i32$0 | 0;
    i64toi32_i32$3 = 2146435072;
    i64toi32_i32$0 = 0;
    if ((i64toi32_i32$1 | 0) != (i64toi32_i32$0 | 0) | (i64toi32_i32$2 | 0) != (i64toi32_i32$3 | 0) | 0) {
     break label$5
    }
    $11 = $9 + 3 | 0;
    pad($0 | 0, 32 | 0, $2 | 0, $11 | 0, $4 & -65537 | 0 | 0);
    out($0 | 0, $10 | 0, $9 | 0);
    $12 = $5 & 32 | 0;
    out($0 | 0, ($1 != $1 ? ($12 ? 10411 : 10415) : $12 ? 10403 : 10407) | 0, 3 | 0);
    pad($0 | 0, 32 | 0, $2 | 0, $11 | 0, $4 ^ 8192 | 0 | 0);
    break label$4;
   }
   $13 = $6 + 16 | 0;
   label$6 : {
    label$7 : {
     label$8 : {
      label$9 : {
       $1 = +frexp(+$1, $6 + 44 | 0 | 0);
       $1 = $1 + $1;
       if ($1 == 0.0) {
        break label$9
       }
       $12 = HEAP32[($6 + 44 | 0) >> 2] | 0;
       HEAP32[($6 + 44 | 0) >> 2] = $12 + -1 | 0;
       $14 = $5 | 32 | 0;
       if (($14 | 0) != (97 | 0)) {
        break label$8
       }
       break label$6;
      }
      $14 = $5 | 32 | 0;
      if (($14 | 0) == (97 | 0)) {
       break label$6
      }
      $15 = ($3 | 0) < (0 | 0) ? 6 : $3;
      $16 = HEAP32[($6 + 44 | 0) >> 2] | 0;
      break label$7;
     }
     $16 = $12 + -29 | 0;
     HEAP32[($6 + 44 | 0) >> 2] = $16;
     $15 = ($3 | 0) < (0 | 0) ? 6 : $3;
     $1 = $1 * 268435456.0;
    }
    $17 = ($16 | 0) < (0 | 0) ? $6 + 48 | 0 : $6 + 336 | 0;
    $18 = $17;
    label$10 : while (1) {
     label$11 : {
      label$12 : {
       if (!($1 < 4294967296.0 & $1 >= 0.0 | 0)) {
        break label$12
       }
       $12 = ~~$1 >>> 0;
       break label$11;
      }
      $12 = 0;
     }
     HEAP32[$18 >> 2] = $12;
     $18 = $18 + 4 | 0;
     $1 = ($1 - +($12 >>> 0)) * 1.0e9;
     if ($1 != 0.0) {
      continue label$10
     }
     break label$10;
    };
    label$13 : {
     label$14 : {
      if (($16 | 0) >= (1 | 0)) {
       break label$14
      }
      $3 = $16;
      $12 = $18;
      $19 = $17;
      break label$13;
     }
     $19 = $17;
     $3 = $16;
     label$15 : while (1) {
      $3 = ($3 | 0) < (29 | 0) ? $3 : 29;
      label$16 : {
       $12 = $18 + -4 | 0;
       if ($12 >>> 0 < $19 >>> 0) {
        break label$16
       }
       i64toi32_i32$1 = 0;
       $20 = $3;
       $20$hi = i64toi32_i32$1;
       i64toi32_i32$1 = 0;
       $8 = 0;
       $8$hi = i64toi32_i32$1;
       label$17 : while (1) {
        $158 = $12;
        i64toi32_i32$0 = $12;
        i64toi32_i32$1 = HEAP32[$12 >> 2] | 0;
        i64toi32_i32$2 = 0;
        $160$hi = i64toi32_i32$2;
        i64toi32_i32$2 = $20$hi;
        i64toi32_i32$2 = $160$hi;
        i64toi32_i32$0 = i64toi32_i32$1;
        i64toi32_i32$1 = $20$hi;
        i64toi32_i32$3 = $20;
        i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
        if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
         i64toi32_i32$1 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
         $47 = 0;
        } else {
         i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$0 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
         $47 = i64toi32_i32$0 << i64toi32_i32$4 | 0;
        }
        $162$hi = i64toi32_i32$1;
        i64toi32_i32$1 = $8$hi;
        i64toi32_i32$2 = $8;
        i64toi32_i32$0 = 0;
        i64toi32_i32$3 = -1;
        i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
        $164 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
        $164$hi = i64toi32_i32$0;
        i64toi32_i32$0 = $162$hi;
        i64toi32_i32$1 = $47;
        i64toi32_i32$2 = $164$hi;
        i64toi32_i32$3 = $164;
        i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$3 | 0;
        i64toi32_i32$5 = i64toi32_i32$0 + i64toi32_i32$2 | 0;
        if (i64toi32_i32$4 >>> 0 < i64toi32_i32$3 >>> 0) {
         i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
        }
        $8 = i64toi32_i32$4;
        $8$hi = i64toi32_i32$5;
        $166$hi = i64toi32_i32$5;
        i64toi32_i32$1 = 0;
        i64toi32_i32$1 = __wasm_i64_udiv(i64toi32_i32$4 | 0, i64toi32_i32$5 | 0, 1e9 | 0, i64toi32_i32$1 | 0) | 0;
        i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
        $8 = i64toi32_i32$1;
        $8$hi = i64toi32_i32$5;
        i64toi32_i32$1 = 0;
        i64toi32_i32$1 = __wasm_i64_mul($8 | 0, i64toi32_i32$5 | 0, 1e9 | 0, i64toi32_i32$1 | 0) | 0;
        i64toi32_i32$5 = i64toi32_i32$HIGH_BITS;
        $170 = i64toi32_i32$1;
        $170$hi = i64toi32_i32$5;
        i64toi32_i32$5 = $166$hi;
        i64toi32_i32$0 = i64toi32_i32$4;
        i64toi32_i32$1 = $170$hi;
        i64toi32_i32$3 = $170;
        i64toi32_i32$2 = i64toi32_i32$0 - i64toi32_i32$3 | 0;
        i64toi32_i32$4 = (i64toi32_i32$0 >>> 0 < i64toi32_i32$3 >>> 0) + i64toi32_i32$1 | 0;
        i64toi32_i32$4 = i64toi32_i32$5 - i64toi32_i32$4 | 0;
        HEAP32[$158 >> 2] = i64toi32_i32$2;
        $12 = $12 + -4 | 0;
        if ($12 >>> 0 >= $19 >>> 0) {
         continue label$17
        }
        break label$17;
       };
       i64toi32_i32$4 = $8$hi;
       $12 = $8;
       if (!$12) {
        break label$16
       }
       $19 = $19 + -4 | 0;
       HEAP32[$19 >> 2] = $12;
      }
      label$18 : {
       label$19 : while (1) {
        $12 = $18;
        if ($12 >>> 0 <= $19 >>> 0) {
         break label$18
        }
        $18 = $12 + -4 | 0;
        if (!(HEAP32[$18 >> 2] | 0)) {
         continue label$19
        }
        break label$19;
       };
      }
      $3 = (HEAP32[($6 + 44 | 0) >> 2] | 0) - $3 | 0;
      HEAP32[($6 + 44 | 0) >> 2] = $3;
      $18 = $12;
      if (($3 | 0) > (0 | 0)) {
       continue label$15
      }
      break label$15;
     };
    }
    label$20 : {
     if (($3 | 0) > (-1 | 0)) {
      break label$20
     }
     $21 = (($15 + 25 | 0 | 0) / (9 | 0) | 0) + 1 | 0;
     $22 = ($14 | 0) == (102 | 0);
     label$21 : while (1) {
      $11 = ($3 | 0) < (-9 | 0) ? 9 : 0 - $3 | 0;
      label$22 : {
       label$23 : {
        if ($19 >>> 0 < $12 >>> 0) {
         break label$23
        }
        $19 = HEAP32[$19 >> 2] | 0 ? $19 : $19 + 4 | 0;
        break label$22;
       }
       $23 = 1e9 >>> $11 | 0;
       $24 = (-1 << $11 | 0) ^ -1 | 0;
       $3 = 0;
       $18 = $19;
       label$24 : while (1) {
        $25 = HEAP32[$18 >> 2] | 0;
        HEAP32[$18 >> 2] = ($25 >>> $11 | 0) + $3 | 0;
        $3 = Math_imul($25 & $24 | 0, $23);
        $18 = $18 + 4 | 0;
        if ($18 >>> 0 < $12 >>> 0) {
         continue label$24
        }
        break label$24;
       };
       $19 = HEAP32[$19 >> 2] | 0 ? $19 : $19 + 4 | 0;
       if (!$3) {
        break label$22
       }
       HEAP32[$12 >> 2] = $3;
       $12 = $12 + 4 | 0;
      }
      $3 = (HEAP32[($6 + 44 | 0) >> 2] | 0) + $11 | 0;
      HEAP32[($6 + 44 | 0) >> 2] = $3;
      $18 = $22 ? $17 : $19;
      $12 = (($12 - $18 | 0) >> 2 | 0 | 0) > ($21 | 0) ? $18 + ($21 << 2 | 0) | 0 : $12;
      if (($3 | 0) < (0 | 0)) {
       continue label$21
      }
      break label$21;
     };
    }
    $18 = 0;
    label$25 : {
     if ($19 >>> 0 >= $12 >>> 0) {
      break label$25
     }
     $18 = Math_imul(($17 - $19 | 0) >> 2 | 0, 9);
     $3 = 10;
     $25 = HEAP32[$19 >> 2] | 0;
     if ($25 >>> 0 < 10 >>> 0) {
      break label$25
     }
     label$26 : while (1) {
      $18 = $18 + 1 | 0;
      $3 = Math_imul($3, 10);
      if ($25 >>> 0 >= $3 >>> 0) {
       continue label$26
      }
      break label$26;
     };
    }
    label$27 : {
     $3 = ($15 - (($14 | 0) == (102 | 0) ? 0 : $18) | 0) - (($15 | 0) != (0 | 0) & ($14 | 0) == (103 | 0) | 0) | 0;
     if (($3 | 0) >= (Math_imul(($12 - $17 | 0) >> 2 | 0, 9) + -9 | 0 | 0)) {
      break label$27
     }
     $25 = $3 + 9216 | 0;
     $23 = ($25 | 0) / (9 | 0) | 0;
     $11 = (($23 << 2 | 0) + (($16 | 0) < (0 | 0) ? $6 + 48 | 0 | 4 | 0 : $6 + 340 | 0) | 0) + -4096 | 0;
     $3 = 10;
     label$28 : {
      $25 = $25 - Math_imul($23, 9) | 0;
      if (($25 | 0) > (7 | 0)) {
       break label$28
      }
      label$29 : while (1) {
       $3 = Math_imul($3, 10);
       $25 = $25 + 1 | 0;
       if (($25 | 0) != (8 | 0)) {
        continue label$29
       }
       break label$29;
      };
     }
     $23 = HEAP32[$11 >> 2] | 0;
     $24 = ($23 >>> 0) / ($3 >>> 0) | 0;
     $25 = $23 - Math_imul($24, $3) | 0;
     label$30 : {
      label$31 : {
       $21 = $11 + 4 | 0;
       if (($21 | 0) != ($12 | 0)) {
        break label$31
       }
       if (!$25) {
        break label$30
       }
      }
      $22 = $3 >>> 1 | 0;
      $26 = $25 >>> 0 < $22 >>> 0 ? .5 : ($21 | 0) == ($12 | 0) ? (($25 | 0) == ($22 | 0) ? 1.0 : 1.5) : 1.5;
      $1 = $24 & 1 | 0 ? 9007199254740994.0 : 9007199254740992.0;
      label$32 : {
       if ($7) {
        break label$32
       }
       if ((HEAPU8[$10 >> 0] | 0 | 0) != (45 | 0)) {
        break label$32
       }
       $26 = -$26;
       $1 = -$1;
      }
      $25 = $23 - $25 | 0;
      HEAP32[$11 >> 2] = $25;
      if ($1 + $26 == $1) {
       break label$30
      }
      $18 = $25 + $3 | 0;
      HEAP32[$11 >> 2] = $18;
      label$33 : {
       if ($18 >>> 0 < 1e9 >>> 0) {
        break label$33
       }
       label$34 : while (1) {
        HEAP32[$11 >> 2] = 0;
        label$35 : {
         $11 = $11 + -4 | 0;
         if ($11 >>> 0 >= $19 >>> 0) {
          break label$35
         }
         $19 = $19 + -4 | 0;
         HEAP32[$19 >> 2] = 0;
        }
        $18 = (HEAP32[$11 >> 2] | 0) + 1 | 0;
        HEAP32[$11 >> 2] = $18;
        if ($18 >>> 0 > 999999999 >>> 0) {
         continue label$34
        }
        break label$34;
       };
      }
      $18 = Math_imul(($17 - $19 | 0) >> 2 | 0, 9);
      $3 = 10;
      $25 = HEAP32[$19 >> 2] | 0;
      if ($25 >>> 0 < 10 >>> 0) {
       break label$30
      }
      label$36 : while (1) {
       $18 = $18 + 1 | 0;
       $3 = Math_imul($3, 10);
       if ($25 >>> 0 >= $3 >>> 0) {
        continue label$36
       }
       break label$36;
      };
     }
     $3 = $11 + 4 | 0;
     $12 = $12 >>> 0 > $3 >>> 0 ? $3 : $12;
    }
    label$37 : {
     label$38 : while (1) {
      $3 = $12;
      $25 = $12 >>> 0 <= $19 >>> 0;
      if ($25) {
       break label$37
      }
      $12 = $3 + -4 | 0;
      if (!(HEAP32[$12 >> 2] | 0)) {
       continue label$38
      }
      break label$38;
     };
    }
    label$39 : {
     label$40 : {
      if (($14 | 0) == (103 | 0)) {
       break label$40
      }
      $24 = $4 & 8 | 0;
      break label$39;
     }
     $12 = $15 ? $15 : 1;
     $11 = ($12 | 0) > ($18 | 0) & ($18 | 0) > (-5 | 0) | 0;
     $15 = ($11 ? $18 ^ -1 | 0 : -1) + $12 | 0;
     $5 = ($11 ? -1 : -2) + $5 | 0;
     $24 = $4 & 8 | 0;
     if ($24) {
      break label$39
     }
     $12 = -9;
     label$41 : {
      if ($25) {
       break label$41
      }
      $11 = HEAP32[($3 + -4 | 0) >> 2] | 0;
      if (!$11) {
       break label$41
      }
      $25 = 10;
      $12 = 0;
      if (($11 >>> 0) % (10 >>> 0) | 0) {
       break label$41
      }
      label$42 : while (1) {
       $23 = $12;
       $12 = $12 + 1 | 0;
       $25 = Math_imul($25, 10);
       if (!(($11 >>> 0) % ($25 >>> 0) | 0)) {
        continue label$42
       }
       break label$42;
      };
      $12 = $23 ^ -1 | 0;
     }
     $25 = Math_imul(($3 - $17 | 0) >> 2 | 0, 9);
     label$43 : {
      if (($5 & -33 | 0 | 0) != (70 | 0)) {
       break label$43
      }
      $24 = 0;
      $12 = ($25 + $12 | 0) + -9 | 0;
      $12 = ($12 | 0) > (0 | 0) ? $12 : 0;
      $15 = ($15 | 0) < ($12 | 0) ? $15 : $12;
      break label$39;
     }
     $24 = 0;
     $12 = (($18 + $25 | 0) + $12 | 0) + -9 | 0;
     $12 = ($12 | 0) > (0 | 0) ? $12 : 0;
     $15 = ($15 | 0) < ($12 | 0) ? $15 : $12;
    }
    $22 = $15 | $24 | 0;
    $25 = ($22 | 0) != (0 | 0);
    label$44 : {
     label$45 : {
      $23 = $5 & -33 | 0;
      if (($23 | 0) != (70 | 0)) {
       break label$45
      }
      $12 = ($18 | 0) > (0 | 0) ? $18 : 0;
      break label$44;
     }
     label$46 : {
      $12 = $18 >> 31 | 0;
      i64toi32_i32$4 = 0;
      $12 = fmt_u(($18 + $12 | 0) ^ $12 | 0 | 0, i64toi32_i32$4 | 0, $13 | 0) | 0;
      if (($13 - $12 | 0 | 0) > (1 | 0)) {
       break label$46
      }
      label$47 : while (1) {
       $12 = $12 + -1 | 0;
       HEAP8[$12 >> 0] = 48;
       if (($13 - $12 | 0 | 0) < (2 | 0)) {
        continue label$47
       }
       break label$47;
      };
     }
     $21 = $12 + -2 | 0;
     HEAP8[$21 >> 0] = $5;
     HEAP8[($12 + -1 | 0) >> 0] = ($18 | 0) < (0 | 0) ? 45 : 43;
     $12 = $13 - $21 | 0;
    }
    $11 = ((($9 + $15 | 0) + $25 | 0) + $12 | 0) + 1 | 0;
    pad($0 | 0, 32 | 0, $2 | 0, $11 | 0, $4 | 0);
    out($0 | 0, $10 | 0, $9 | 0);
    pad($0 | 0, 48 | 0, $2 | 0, $11 | 0, $4 ^ 65536 | 0 | 0);
    label$48 : {
     label$49 : {
      label$50 : {
       label$51 : {
        if (($23 | 0) != (70 | 0)) {
         break label$51
        }
        $23 = $6 + 16 | 0 | 8 | 0;
        $18 = $6 + 16 | 0 | 9 | 0;
        $25 = $19 >>> 0 > $17 >>> 0 ? $17 : $19;
        $19 = $25;
        label$52 : while (1) {
         i64toi32_i32$5 = $19;
         i64toi32_i32$4 = HEAP32[$19 >> 2] | 0;
         i64toi32_i32$0 = 0;
         $12 = fmt_u(i64toi32_i32$4 | 0, i64toi32_i32$0 | 0, $18 | 0) | 0;
         label$53 : {
          label$54 : {
           if (($19 | 0) == ($25 | 0)) {
            break label$54
           }
           if ($12 >>> 0 <= ($6 + 16 | 0) >>> 0) {
            break label$53
           }
           label$55 : while (1) {
            $12 = $12 + -1 | 0;
            HEAP8[$12 >> 0] = 48;
            if ($12 >>> 0 > ($6 + 16 | 0) >>> 0) {
             continue label$55
            }
            break label$53;
           };
          }
          if (($12 | 0) != ($18 | 0)) {
           break label$53
          }
          HEAP8[($6 + 24 | 0) >> 0] = 48;
          $12 = $23;
         }
         out($0 | 0, $12 | 0, $18 - $12 | 0 | 0);
         $19 = $19 + 4 | 0;
         if ($19 >>> 0 <= $17 >>> 0) {
          continue label$52
         }
         break label$52;
        };
        label$56 : {
         if (!$22) {
          break label$56
         }
         out($0 | 0, 10419 | 0, 1 | 0);
        }
        if ($19 >>> 0 >= $3 >>> 0) {
         break label$50
        }
        if (($15 | 0) < (1 | 0)) {
         break label$50
        }
        label$57 : while (1) {
         label$58 : {
          i64toi32_i32$5 = $19;
          i64toi32_i32$0 = HEAP32[$19 >> 2] | 0;
          i64toi32_i32$4 = 0;
          $12 = fmt_u(i64toi32_i32$0 | 0, i64toi32_i32$4 | 0, $18 | 0) | 0;
          if ($12 >>> 0 <= ($6 + 16 | 0) >>> 0) {
           break label$58
          }
          label$59 : while (1) {
           $12 = $12 + -1 | 0;
           HEAP8[$12 >> 0] = 48;
           if ($12 >>> 0 > ($6 + 16 | 0) >>> 0) {
            continue label$59
           }
           break label$59;
          };
         }
         out($0 | 0, $12 | 0, (($15 | 0) < (9 | 0) ? $15 : 9) | 0);
         $12 = $15 + -9 | 0;
         $19 = $19 + 4 | 0;
         if ($19 >>> 0 >= $3 >>> 0) {
          break label$49
         }
         $25 = ($15 | 0) > (9 | 0);
         $15 = $12;
         if ($25) {
          continue label$57
         }
         break label$49;
        };
       }
       label$60 : {
        if (($15 | 0) < (0 | 0)) {
         break label$60
        }
        $23 = $3 >>> 0 > $19 >>> 0 ? $3 : $19 + 4 | 0;
        $17 = $6 + 16 | 0 | 8 | 0;
        $3 = $6 + 16 | 0 | 9 | 0;
        $18 = $19;
        label$61 : while (1) {
         label$62 : {
          i64toi32_i32$5 = $18;
          i64toi32_i32$4 = HEAP32[$18 >> 2] | 0;
          i64toi32_i32$0 = 0;
          $12 = fmt_u(i64toi32_i32$4 | 0, i64toi32_i32$0 | 0, $3 | 0) | 0;
          if (($12 | 0) != ($3 | 0)) {
           break label$62
          }
          HEAP8[($6 + 24 | 0) >> 0] = 48;
          $12 = $17;
         }
         label$63 : {
          label$64 : {
           if (($18 | 0) == ($19 | 0)) {
            break label$64
           }
           if ($12 >>> 0 <= ($6 + 16 | 0) >>> 0) {
            break label$63
           }
           label$65 : while (1) {
            $12 = $12 + -1 | 0;
            HEAP8[$12 >> 0] = 48;
            if ($12 >>> 0 > ($6 + 16 | 0) >>> 0) {
             continue label$65
            }
            break label$63;
           };
          }
          out($0 | 0, $12 | 0, 1 | 0);
          $12 = $12 + 1 | 0;
          label$66 : {
           if ($24) {
            break label$66
           }
           if (($15 | 0) < (1 | 0)) {
            break label$63
           }
          }
          out($0 | 0, 10419 | 0, 1 | 0);
         }
         $25 = $3 - $12 | 0;
         out($0 | 0, $12 | 0, (($15 | 0) > ($25 | 0) ? $25 : $15) | 0);
         $15 = $15 - $25 | 0;
         $18 = $18 + 4 | 0;
         if ($18 >>> 0 >= $23 >>> 0) {
          break label$60
         }
         if (($15 | 0) > (-1 | 0)) {
          continue label$61
         }
         break label$61;
        };
       }
       pad($0 | 0, 48 | 0, $15 + 18 | 0 | 0, 18 | 0, 0 | 0);
       out($0 | 0, $21 | 0, $13 - $21 | 0 | 0);
       break label$48;
      }
      $12 = $15;
     }
     pad($0 | 0, 48 | 0, $12 + 9 | 0 | 0, 9 | 0, 0 | 0);
    }
    pad($0 | 0, 32 | 0, $2 | 0, $11 | 0, $4 ^ 8192 | 0 | 0);
    break label$4;
   }
   $18 = $5 & 32 | 0;
   $15 = $18 ? $10 + 9 | 0 : $10;
   label$67 : {
    if ($3 >>> 0 > 11 >>> 0) {
     break label$67
    }
    $12 = 12 - $3 | 0;
    if (!$12) {
     break label$67
    }
    $26 = 8.0;
    label$68 : while (1) {
     $26 = $26 * 16.0;
     $12 = $12 + -1 | 0;
     if ($12) {
      continue label$68
     }
     break label$68;
    };
    label$69 : {
     if ((HEAPU8[$15 >> 0] | 0 | 0) != (45 | 0)) {
      break label$69
     }
     $1 = -($26 + (-$1 - $26));
     break label$67;
    }
    $1 = $1 + $26 - $26;
   }
   label$70 : {
    $12 = HEAP32[($6 + 44 | 0) >> 2] | 0;
    $818 = $12;
    $12 = $12 >> 31 | 0;
    i64toi32_i32$0 = 0;
    $12 = fmt_u(($818 + $12 | 0) ^ $12 | 0 | 0, i64toi32_i32$0 | 0, $13 | 0) | 0;
    if (($12 | 0) != ($13 | 0)) {
     break label$70
    }
    HEAP8[($6 + 15 | 0) >> 0] = 48;
    $12 = $6 + 15 | 0;
   }
   $24 = $9 | 2 | 0;
   $19 = HEAP32[($6 + 44 | 0) >> 2] | 0;
   $23 = $12 + -2 | 0;
   HEAP8[$23 >> 0] = $5 + 15 | 0;
   HEAP8[($12 + -1 | 0) >> 0] = ($19 | 0) < (0 | 0) ? 45 : 43;
   $25 = $4 & 8 | 0;
   $19 = $6 + 16 | 0;
   label$71 : while (1) {
    $12 = $19;
    label$72 : {
     label$73 : {
      if (!(Math_abs($1) < 2147483648.0)) {
       break label$73
      }
      $19 = ~~$1;
      break label$72;
     }
     $19 = -2147483648;
    }
    HEAP8[$12 >> 0] = HEAPU8[($19 + 10368 | 0) >> 0] | 0 | $18 | 0;
    $1 = ($1 - +($19 | 0)) * 16.0;
    label$74 : {
     $19 = $12 + 1 | 0;
     if (($19 - ($6 + 16 | 0) | 0 | 0) != (1 | 0)) {
      break label$74
     }
     label$75 : {
      if ($25) {
       break label$75
      }
      if (($3 | 0) > (0 | 0)) {
       break label$75
      }
      if ($1 == 0.0) {
       break label$74
      }
     }
     HEAP8[($12 + 1 | 0) >> 0] = 46;
     $19 = $12 + 2 | 0;
    }
    if ($1 != 0.0) {
     continue label$71
    }
    break label$71;
   };
   label$76 : {
    label$77 : {
     if (!$3) {
      break label$77
     }
     if ((($19 - ($6 + 16 | 0) | 0) + -2 | 0 | 0) >= ($3 | 0)) {
      break label$77
     }
     $12 = (($3 + $13 | 0) - $23 | 0) + 2 | 0;
     break label$76;
    }
    $12 = (($13 - ($6 + 16 | 0) | 0) - $23 | 0) + $19 | 0;
   }
   $11 = $12 + $24 | 0;
   pad($0 | 0, 32 | 0, $2 | 0, $11 | 0, $4 | 0);
   out($0 | 0, $15 | 0, $24 | 0);
   pad($0 | 0, 48 | 0, $2 | 0, $11 | 0, $4 ^ 65536 | 0 | 0);
   $19 = $19 - ($6 + 16 | 0) | 0;
   out($0 | 0, $6 + 16 | 0 | 0, $19 | 0);
   $18 = $13 - $23 | 0;
   pad($0 | 0, 48 | 0, $12 - ($19 + $18 | 0) | 0 | 0, 0 | 0, 0 | 0);
   out($0 | 0, $23 | 0, $18 | 0);
   pad($0 | 0, 32 | 0, $2 | 0, $11 | 0, $4 ^ 8192 | 0 | 0);
  }
  __stack_pointer = $6 + 560 | 0;
  return (($11 | 0) < ($2 | 0) ? $2 : $11) | 0;
 }
 
 function pop_arg_long_double($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $2 = 0, $12 = 0, $12$hi = 0, $14 = 0, $14$hi = 0;
  $2 = ((HEAP32[$1 >> 2] | 0) + 15 | 0) & -16 | 0;
  HEAP32[$1 >> 2] = $2 + 16 | 0;
  i64toi32_i32$2 = $2;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  $12 = i64toi32_i32$0;
  $12$hi = i64toi32_i32$1;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 8 | 0) >> 2] | 0;
  i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 12 | 0) >> 2] | 0;
  $14 = i64toi32_i32$1;
  $14$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $12$hi;
  i64toi32_i32$1 = $14$hi;
  HEAPF64[$0 >> 3] = +__trunctfdf2($12 | 0, i64toi32_i32$0 | 0, $14 | 0, i64toi32_i32$1 | 0);
 }
 
 function __DOUBLE_BITS($0) {
  $0 = +$0;
  var i64toi32_i32$0 = 0, $2 = 0;
  wasm2js_scratch_store_f64(+$0);
  i64toi32_i32$0 = wasm2js_scratch_load_i32(1 | 0) | 0;
  $2 = wasm2js_scratch_load_i32(0 | 0) | 0;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$0;
  return $2 | 0;
 }
 
 function vsnprintf($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, $5 = 0;
  $4 = __stack_pointer - 160 | 0;
  __stack_pointer = $4;
  memcpy($4 + 8 | 0 | 0, 10424 | 0, 144 | 0) | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     if (($1 + -1 | 0) >>> 0 < 2147483647 >>> 0) {
      break label$3
     }
     if ($1) {
      break label$2
     }
     $0 = $4 + 159 | 0;
     $1 = 1;
    }
    HEAP32[($4 + 52 | 0) >> 2] = $0;
    HEAP32[($4 + 28 | 0) >> 2] = $0;
    $5 = -2 - $0 | 0;
    $1 = $1 >>> 0 > $5 >>> 0 ? $5 : $1;
    HEAP32[($4 + 56 | 0) >> 2] = $1;
    $0 = $0 + $1 | 0;
    HEAP32[($4 + 36 | 0) >> 2] = $0;
    HEAP32[($4 + 24 | 0) >> 2] = $0;
    $0 = vfprintf($4 + 8 | 0 | 0, $2 | 0, $3 | 0) | 0;
    if (!$1) {
     break label$1
    }
    $1 = HEAP32[($4 + 28 | 0) >> 2] | 0;
    HEAP8[($1 - (($1 | 0) == (HEAP32[($4 + 24 | 0) >> 2] | 0 | 0)) | 0) >> 0] = 0;
    break label$1;
   }
   HEAP32[(__errno_location() | 0) >> 2] = 61;
   $0 = -1;
  }
  __stack_pointer = $4 + 160 | 0;
  return $0 | 0;
 }
 
 function sn_write($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $6 = 0;
  $3 = HEAP32[($0 + 20 | 0) >> 2] | 0;
  $6 = $3;
  $3 = (HEAP32[($0 + 16 | 0) >> 2] | 0) - $3 | 0;
  $3 = $3 >>> 0 > $2 >>> 0 ? $2 : $3;
  memcpy($6 | 0, $1 | 0, $3 | 0) | 0;
  HEAP32[($0 + 20 | 0) >> 2] = (HEAP32[($0 + 20 | 0) >> 2] | 0) + $3 | 0;
  return $2 | 0;
 }
 
 function snprintf($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  HEAP32[($4 + 12 | 0) >> 2] = $3;
  $3 = vsnprintf($0 | 0, $1 | 0, $2 | 0, $3 | 0) | 0;
  __stack_pointer = $4 + 16 | 0;
  return $3 | 0;
 }
 
 function __lock($0) {
  $0 = $0 | 0;
 }
 
 function __unlock($0) {
  $0 = $0 | 0;
 }
 
 function __ofl_lock() {
  __lock(13036 | 0);
  return 13044 | 0;
 }
 
 function __ofl_unlock() {
  __unlock(13036 | 0);
 }
 
 function std____2____itoa____u32toa_28unsigned_20int_2c_20char__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $12 = 0;
  label$1 : {
   if ($0 >>> 0 > 99999999 >>> 0) {
    break label$1
   }
   return char__20std____2____itoa__append8_no_zeros_unsigned_20int__28char__2c_20unsigned_20int_29($1 | 0, $0 | 0) | 0 | 0;
  }
  $2 = ($0 >>> 0) / (1e8 >>> 0) | 0;
  $12 = char__20std____2____itoa__append2_no_zeros_unsigned_20int__28char__2c_20unsigned_20int_29($1 | 0, $2 | 0) | 0;
  $0 = $0 - Math_imul($2, 1e8) | 0;
  $1 = ($0 >>> 0) / (1e4 >>> 0) | 0;
  return char__20std____2____itoa__append4_unsigned_20int__28char__2c_20unsigned_20int_29(char__20std____2____itoa__append4_unsigned_20int__28char__2c_20unsigned_20int_29($12 | 0, $1 | 0) | 0 | 0, $0 - Math_imul($1, 1e4) | 0 | 0) | 0 | 0;
 }
 
 function char__20std____2____itoa__append8_no_zeros_unsigned_20int__28char__2c_20unsigned_20int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  label$1 : {
   if ($1 >>> 0 > 9999 >>> 0) {
    break label$1
   }
   return char__20std____2____itoa__append4_no_zeros_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $1 | 0) | 0 | 0;
  }
  $2 = ($1 >>> 0) / (1e4 >>> 0) | 0;
  return char__20std____2____itoa__append4_unsigned_20int__28char__2c_20unsigned_20int_29(char__20std____2____itoa__append4_no_zeros_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $2 | 0) | 0 | 0, $1 - Math_imul($2, 1e4) | 0 | 0) | 0 | 0;
 }
 
 function char__20std____2____itoa__append2_no_zeros_unsigned_20int__28char__2c_20unsigned_20int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   if ($1 >>> 0 > 9 >>> 0) {
    break label$1
   }
   return char__20std____2____itoa__append1_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $1 | 0) | 0 | 0;
  }
  return char__20std____2____itoa__append2_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function char__20std____2____itoa__append4_unsigned_20int__28char__2c_20unsigned_20int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = ($1 >>> 0) / (100 >>> 0) | 0;
  return char__20std____2____itoa__append2_unsigned_20int__28char__2c_20unsigned_20int_29(char__20std____2____itoa__append2_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $2 | 0) | 0 | 0, $1 - Math_imul($2, 100) | 0 | 0) | 0 | 0;
 }
 
 function char__20std____2____itoa__append4_no_zeros_unsigned_20int__28char__2c_20unsigned_20int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   if ($1 >>> 0 > 99 >>> 0) {
    break label$1
   }
   return char__20std____2____itoa__append2_no_zeros_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $1 | 0) | 0 | 0;
  }
  label$2 : {
   if ($1 >>> 0 > 999 >>> 0) {
    break label$2
   }
   return char__20std____2____itoa__append3_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $1 | 0) | 0 | 0;
  }
  return char__20std____2____itoa__append4_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function char__20std____2____itoa__append1_unsigned_20int__28char__2c_20unsigned_20int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  HEAP8[$0 >> 0] = $1 + 48 | 0;
  return $0 + 1 | 0 | 0;
 }
 
 function char__20std____2____itoa__append2_unsigned_20int__28char__2c_20unsigned_20int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = HEAPU16[(($1 << 1 | 0) + 10576 | 0) >> 1] | 0;
  HEAP8[$0 >> 0] = $2;
  HEAP8[($0 + 1 | 0) >> 0] = $2 >>> 8 | 0;
  return $0 + 2 | 0 | 0;
 }
 
 function char__20std____2____itoa__append3_unsigned_20int__28char__2c_20unsigned_20int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = ($1 >>> 0) / (100 >>> 0) | 0;
  return char__20std____2____itoa__append2_unsigned_20int__28char__2c_20unsigned_20int_29(char__20std____2____itoa__append1_unsigned_20int__28char__2c_20unsigned_20int_29($0 | 0, $2 | 0) | 0 | 0, $1 - Math_imul($2, 100) | 0 | 0) | 0 | 0;
 }
 
 function std____2____basic_string_common_true_____throw_length_error_28_29_20const($0) {
  $0 = $0 | 0;
  std____2____throw_length_error_28char_20const__29(10776 | 0);
  abort();
 }
 
 function std____2____basic_string_common_true_____throw_out_of_range_28_29_20const($0) {
  $0 = $0 | 0;
  std____2____throw_out_of_range_28char_20const__29(10776 | 0);
  abort();
 }
 
 function std____2____throw_out_of_range_28char_20const__29($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = __cxa_allocate_exception(8 | 0) | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  invoke_iii(122 | 0, $1 | 0, $0 | 0) | 0;
  $0 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   if (($0 | 0) == (1 | 0)) {
    break label$1
   }
   __cxa_throw($1 | 0, 11580 | 0, 1 | 0);
   abort();
  }
  $0 = __cxa_find_matching_catch_2() | 0;
  getTempRet0() | 0;
  __cxa_free_exception($1 | 0);
  __resumeException($0 | 0);
  abort();
 }
 
 function std__out_of_range__out_of_range_28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  std__logic_error__logic_error_28char_20const__29($0 | 0, $1 | 0) | 0;
  HEAP32[$0 >> 2] = 11540 + 8 | 0;
  return $0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29_20const($0) {
  $0 = $0 | 0;
  return std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___second_28_29_20const($0 | 0) | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____init_28char_20const__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $4 = 0, $3 = 0, $5 = 0, $23 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  label$1 : {
   if ((std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___max_size_28_29_20const($0 | 0) | 0) >>> 0 < $2 >>> 0) {
    break label$1
   }
   label$2 : {
    label$3 : {
     if ($2 >>> 0 > 10 >>> 0) {
      break label$3
     }
     std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_short_size_28unsigned_20long_29($0 | 0, $2 | 0);
     $4 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_pointer_28_29($0 | 0) | 0;
     break label$2;
    }
    $4 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____recommend_28unsigned_20long_29($2 | 0) | 0;
    $23 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29($0 | 0) | 0;
    $5 = $4 + 1 | 0;
    $4 = std____2__allocator_traits_std____2__allocator_char__20___allocate_28std____2__allocator_char___2c_20unsigned_20long_29($23 | 0, $5 | 0) | 0;
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_pointer_28char__29($0 | 0, $4 | 0);
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_cap_28unsigned_20long_29($0 | 0, $5 | 0);
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_size_28unsigned_20long_29($0 | 0, $2 | 0);
   }
   std____2__char_traits_char___copy_28char__2c_20char_20const__2c_20unsigned_20long_29(char__20std____2____to_address_char__28char__29($4 | 0) | 0 | 0, $1 | 0, $2 | 0) | 0;
   HEAP8[($3 + 15 | 0) >> 0] = 0;
   std____2__char_traits_char___assign_28char__2c_20char_20const__29($4 + $2 | 0 | 0, $3 + 15 | 0 | 0);
   __stack_pointer = $3 + 16 | 0;
   return;
  }
  std____2____basic_string_common_true_____throw_length_error_28_29_20const($0 | 0);
  abort();
 }
 
 function std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___second_28_29_20const($0) {
  $0 = $0 | 0;
  return std____2____compressed_pair_elem_std____2__allocator_char__2c_201_2c_20true_____get_28_29_20const($0 | 0) | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  return (std____2__allocator_traits_std____2__allocator_char__20___max_size_28std____2__allocator_char__20const__29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29_20const($0 | 0) | 0 | 0) | 0) + -16 | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_short_size_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  HEAP8[((std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29($0 | 0) | 0) + 11 | 0) >> 0] = $1;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_pointer_28_29($0) {
  $0 = $0 | 0;
  return std____2__pointer_traits_char____pointer_to_28char__29(std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29($0 | 0) | 0 | 0) | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____recommend_28unsigned_20long_29($0) {
  $0 = $0 | 0;
  var $1 = 0, $7 = 0;
  $1 = 10;
  label$1 : {
   if ($0 >>> 0 < 11 >>> 0) {
    break label$1
   }
   $0 = unsigned_20long_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____align_it_16ul__28unsigned_20long_29($0 + 1 | 0 | 0) | 0;
   $7 = $0;
   $0 = $0 + -1 | 0;
   $1 = ($0 | 0) == (11 | 0) ? $7 : $0;
  }
  return $1 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29($0) {
  $0 = $0 | 0;
  return std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___second_28_29($0 | 0) | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_char__20___allocate_28std____2__allocator_char___2c_20unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return std____2__allocator_char___allocate_28unsigned_20long_2c_20void_20const__29($0 | 0, $1 | 0, 0 | 0) | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_pointer_28char__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  HEAP32[(std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29($0 | 0) | 0) >> 2] = $1;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_cap_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  HEAP32[((std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29($0 | 0) | 0) + 8 | 0) >> 2] = $1 | -2147483648 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_size_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  HEAP32[((std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29($0 | 0) | 0) + 4 | 0) >> 2] = $1;
 }
 
 function char__20std____2____to_address_char__28char__29($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function std____2__char_traits_char___copy_28char__2c_20char_20const__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   if (!$2) {
    break label$1
   }
   memcpy($0 | 0, $1 | 0, $2 | 0) | 0;
  }
  return $0 | 0;
 }
 
 function std____2__char_traits_char___assign_28char__2c_20char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  HEAP8[$0 >> 0] = HEAPU8[$1 >> 0] | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____basic_string_28_29($0) {
  $0 = $0 | 0;
  label$1 : {
   if (!(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____is_long_28_29_20const($0 | 0) | 0)) {
    break label$1
   }
   std____2__allocator_traits_std____2__allocator_char__20___deallocate_28std____2__allocator_char___2c_20char__2c_20unsigned_20long_29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29($0 | 0) | 0 | 0, std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_pointer_28_29($0 | 0) | 0 | 0, std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_cap_28_29_20const($0 | 0) | 0 | 0);
  }
  return $0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_pointer_28_29($0) {
  $0 = $0 | 0;
  return HEAP32[(std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29($0 | 0) | 0) >> 2] | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_cap_28_29_20const($0) {
  $0 = $0 | 0;
  return (HEAP32[((std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___first_28_29_20const($0 | 0) | 0) + 8 | 0) >> 2] | 0) & 2147483647 | 0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_char__20___deallocate_28std____2__allocator_char___2c_20char__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  std____2__allocator_char___deallocate_28char__2c_20unsigned_20long_29($0 | 0, $1 | 0, $2 | 0);
 }
 
 function std____2__allocator_char___deallocate_28char__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  invoke_viii(123 | 0, $1 | 0, $2 | 0, 1 | 0);
  $1 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   if (($1 | 0) == (1 | 0)) {
    break label$1
   }
   return;
  }
  __cxa_find_matching_catch_3(0 | 0) | 0;
  getTempRet0() | 0;
  std__terminate_28_29();
  abort();
 }
 
 function std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20___second_28_29($0) {
  $0 = $0 | 0;
  return std____2____compressed_pair_elem_std____2__allocator_char__2c_201_2c_20true_____get_28_29($0 | 0) | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___capacity_28_29_20const($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = 10;
  label$1 : {
   if (!(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____is_long_28_29_20const($0 | 0) | 0)) {
    break label$1
   }
   $1 = (std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_cap_28_29_20const($0 | 0) | 0) + -1 | 0;
  }
  return $1 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29($0) {
  $0 = $0 | 0;
  label$1 : {
   if (!(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____is_long_28_29_20const($0 | 0) | 0)) {
    break label$1
   }
   return std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_pointer_28_29($0 | 0) | 0 | 0;
  }
  return std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_pointer_28_29($0 | 0) | 0 | 0;
 }
 
 function std____2__char_traits_char___move_28char__2c_20char_20const__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   if (!$2) {
    break label$1
   }
   memmove($0 | 0, $1 | 0, $2 | 0) | 0;
  }
  return $0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_size_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   if (!(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____is_long_28_29_20const($0 | 0) | 0)) {
    break label$1
   }
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_size_28unsigned_20long_29($0 | 0, $1 | 0);
   return;
  }
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_short_size_28unsigned_20long_29($0 | 0, $1 | 0);
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____invalidate_iterators_past_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____grow_by_and_replace_28unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20char_20const__29($0, $1, $2, $3, $4, $5, $6, $7) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  $7 = $7 | 0;
  var $8 = 0, $9 = 0, $10 = 0, $46 = 0;
  $8 = __stack_pointer - 16 | 0;
  __stack_pointer = $8;
  label$1 : {
   $9 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___max_size_28_29_20const($0 | 0) | 0;
   if (($9 + ($1 ^ -1 | 0) | 0) >>> 0 < $2 >>> 0) {
    break label$1
   }
   $10 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29($0 | 0) | 0;
   label$2 : {
    label$3 : {
     if ((($9 >>> 1 | 0) + -16 | 0) >>> 0 <= $1 >>> 0) {
      break label$3
     }
     HEAP32[($8 + 8 | 0) >> 2] = $1 << 1 | 0;
     HEAP32[($8 + 12 | 0) >> 2] = $2 + $1 | 0;
     $2 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____recommend_28unsigned_20long_29(HEAP32[(unsigned_20long_20const__20std____2__max_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($8 + 12 | 0 | 0, $8 + 8 | 0 | 0) | 0) >> 2] | 0 | 0) | 0;
     break label$2;
    }
    $2 = $9 + -1 | 0;
   }
   $46 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29($0 | 0) | 0;
   $9 = $2 + 1 | 0;
   $2 = std____2__allocator_traits_std____2__allocator_char__20___allocate_28std____2__allocator_char___2c_20unsigned_20long_29($46 | 0, $9 | 0) | 0;
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____invalidate_all_iterators_28_29($0 | 0);
   label$4 : {
    if (!$4) {
     break label$4
    }
    std____2__char_traits_char___copy_28char__2c_20char_20const__2c_20unsigned_20long_29(char__20std____2____to_address_char__28char__29($2 | 0) | 0 | 0, char__20std____2____to_address_char__28char__29($10 | 0) | 0 | 0, $4 | 0) | 0;
   }
   label$5 : {
    if (!$6) {
     break label$5
    }
    std____2__char_traits_char___copy_28char__2c_20char_20const__2c_20unsigned_20long_29((char__20std____2____to_address_char__28char__29($2 | 0) | 0) + $4 | 0 | 0, $7 | 0, $6 | 0) | 0;
   }
   label$6 : {
    $3 = $3 - $5 | 0;
    $7 = $3 - $4 | 0;
    if (!$7) {
     break label$6
    }
    std____2__char_traits_char___copy_28char__2c_20char_20const__2c_20unsigned_20long_29(((char__20std____2____to_address_char__28char__29($2 | 0) | 0) + $4 | 0) + $6 | 0 | 0, ((char__20std____2____to_address_char__28char__29($10 | 0) | 0) + $4 | 0) + $5 | 0 | 0, $7 | 0) | 0;
   }
   label$7 : {
    $4 = $1 + 1 | 0;
    if (($4 | 0) == (11 | 0)) {
     break label$7
    }
    std____2__allocator_traits_std____2__allocator_char__20___deallocate_28std____2__allocator_char___2c_20char__2c_20unsigned_20long_29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29($0 | 0) | 0 | 0, $10 | 0, $4 | 0);
   }
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_pointer_28char__29($0 | 0, $2 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_cap_28unsigned_20long_29($0 | 0, $9 | 0);
   $4 = $3 + $6 | 0;
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_size_28unsigned_20long_29($0 | 0, $4 | 0);
   HEAP8[($8 + 7 | 0) >> 0] = 0;
   std____2__char_traits_char___assign_28char__2c_20char_20const__29($2 + $4 | 0 | 0, $8 + 7 | 0 | 0);
   __stack_pointer = $8 + 16 | 0;
   return;
  }
  std____2____basic_string_common_true_____throw_length_error_28_29_20const($0 | 0);
  abort();
 }
 
 function std____2__pointer_traits_char____pointer_to_28char__29($0) {
  $0 = $0 | 0;
  return char__20std____2__addressof_char__28char__29($0 | 0) | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___resize_28unsigned_20long_2c_20char_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0;
  label$1 : {
   $3 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___size_28_29_20const($0 | 0) | 0;
   if ($3 >>> 0 >= $1 >>> 0) {
    break label$1
   }
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28unsigned_20long_2c_20char_29($0 | 0, $1 - $3 | 0 | 0, $2 | 0) | 0;
   return;
  }
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____erase_to_end_28unsigned_20long_29($0 | 0, $1 | 0);
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28unsigned_20long_2c_20char_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $4 = 0, $5 = 0, $3 = 0, $6 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  label$1 : {
   if (!$1) {
    break label$1
   }
   $4 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___capacity_28_29_20const($0 | 0) | 0;
   $5 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___size_28_29_20const($0 | 0) | 0;
   $6 = $5 + $1 | 0;
   label$2 : {
    if (($4 - $5 | 0) >>> 0 >= $1 >>> 0) {
     break label$2
    }
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____grow_by_28unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_29($0 | 0, $4 | 0, $6 - $4 | 0 | 0, $5 | 0, $5 | 0, 0 | 0, 0 | 0);
   }
   $4 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29($0 | 0) | 0;
   std____2__char_traits_char___assign_28char__2c_20unsigned_20long_2c_20char_29((char__20std____2____to_address_char__28char__29($4 | 0) | 0) + $5 | 0 | 0, $1 | 0, $2 | 0) | 0;
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_size_28unsigned_20long_29($0 | 0, $6 | 0);
   HEAP8[($3 + 15 | 0) >> 0] = 0;
   std____2__char_traits_char___assign_28char__2c_20char_20const__29($4 + $6 | 0 | 0, $3 + 15 | 0 | 0);
  }
  __stack_pointer = $3 + 16 | 0;
  return $0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____erase_to_end_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0;
  $2 = __stack_pointer - 16 | 0;
  __stack_pointer = $2;
  label$1 : {
   label$2 : {
    if (!(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____is_long_28_29_20const($0 | 0) | 0)) {
     break label$2
    }
    $3 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_long_pointer_28_29($0 | 0) | 0;
    HEAP8[($2 + 15 | 0) >> 0] = 0;
    std____2__char_traits_char___assign_28char__2c_20char_20const__29($3 + $1 | 0 | 0, $2 + 15 | 0 | 0);
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_size_28unsigned_20long_29($0 | 0, $1 | 0);
    break label$1;
   }
   $3 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_pointer_28_29($0 | 0) | 0;
   HEAP8[($2 + 14 | 0) >> 0] = 0;
   std____2__char_traits_char___assign_28char__2c_20char_20const__29($3 + $1 | 0 | 0, $2 + 14 | 0 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_short_size_28unsigned_20long_29($0 | 0, $1 | 0);
  }
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____invalidate_iterators_past_28unsigned_20long_29($0 | 0, $1 | 0);
  __stack_pointer = $2 + 16 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____grow_by_28unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_29($0, $1, $2, $3, $4, $5, $6) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  $6 = $6 | 0;
  var $7 = 0, $8 = 0, $9 = 0, $44 = 0;
  $7 = __stack_pointer - 16 | 0;
  __stack_pointer = $7;
  label$1 : {
   $8 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___max_size_28_29_20const($0 | 0) | 0;
   if (($8 - $1 | 0) >>> 0 < $2 >>> 0) {
    break label$1
   }
   $9 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29($0 | 0) | 0;
   label$2 : {
    label$3 : {
     if ((($8 >>> 1 | 0) + -16 | 0) >>> 0 <= $1 >>> 0) {
      break label$3
     }
     HEAP32[($7 + 8 | 0) >> 2] = $1 << 1 | 0;
     HEAP32[($7 + 12 | 0) >> 2] = $2 + $1 | 0;
     $2 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____recommend_28unsigned_20long_29(HEAP32[(unsigned_20long_20const__20std____2__max_unsigned_20long__28unsigned_20long_20const__2c_20unsigned_20long_20const__29($7 + 12 | 0 | 0, $7 + 8 | 0 | 0) | 0) >> 2] | 0 | 0) | 0;
     break label$2;
    }
    $2 = $8 + -1 | 0;
   }
   $44 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29($0 | 0) | 0;
   $8 = $2 + 1 | 0;
   $2 = std____2__allocator_traits_std____2__allocator_char__20___allocate_28std____2__allocator_char___2c_20unsigned_20long_29($44 | 0, $8 | 0) | 0;
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____invalidate_all_iterators_28_29($0 | 0);
   label$4 : {
    if (!$4) {
     break label$4
    }
    std____2__char_traits_char___copy_28char__2c_20char_20const__2c_20unsigned_20long_29(char__20std____2____to_address_char__28char__29($2 | 0) | 0 | 0, char__20std____2____to_address_char__28char__29($9 | 0) | 0 | 0, $4 | 0) | 0;
   }
   label$5 : {
    $3 = ($3 - $5 | 0) - $4 | 0;
    if (!$3) {
     break label$5
    }
    std____2__char_traits_char___copy_28char__2c_20char_20const__2c_20unsigned_20long_29(((char__20std____2____to_address_char__28char__29($2 | 0) | 0) + $4 | 0) + $6 | 0 | 0, ((char__20std____2____to_address_char__28char__29($9 | 0) | 0) + $4 | 0) + $5 | 0 | 0, $3 | 0) | 0;
   }
   label$6 : {
    $1 = $1 + 1 | 0;
    if (($1 | 0) == (11 | 0)) {
     break label$6
    }
    std____2__allocator_traits_std____2__allocator_char__20___deallocate_28std____2__allocator_char___2c_20char__2c_20unsigned_20long_29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29($0 | 0) | 0 | 0, $9 | 0, $1 | 0);
   }
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_pointer_28char__29($0 | 0, $2 | 0);
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_cap_28unsigned_20long_29($0 | 0, $8 | 0);
   __stack_pointer = $7 + 16 | 0;
   return;
  }
  std____2____basic_string_common_true_____throw_length_error_28_29_20const($0 | 0);
  abort();
 }
 
 function std____2__char_traits_char___assign_28char__2c_20unsigned_20long_2c_20char_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   if (!$1) {
    break label$1
   }
   memset($0 | 0, std____2__char_traits_char___to_int_type_28char_29($2 | 0) | 0 | 0, $1 | 0) | 0;
  }
  return $0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____invalidate_all_iterators_28_29($0) {
  $0 = $0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_char__20___max_size_28std____2__allocator_char__20const__29($0) {
  $0 = $0 | 0;
  return std____2__allocator_traits_std____2__allocator_char__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_char__20const__29($0 | 0) | 0 | 0;
 }
 
 function unsigned_20long_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____align_it_16ul__28unsigned_20long_29($0) {
  $0 = $0 | 0;
  return ($0 + 15 | 0) & -16 | 0 | 0;
 }
 
 function std____2__allocator_char___allocate_28unsigned_20long_2c_20void_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   if ((std____2__allocator_char___max_size_28_29_20const($0 | 0) | 0) >>> 0 >= $1 >>> 0) {
    break label$1
   }
   std____2____throw_length_error_28char_20const__29(10792 | 0);
   abort();
  }
  return std____2____libcpp_allocate_28unsigned_20long_2c_20unsigned_20long_29($1 | 0, 1 | 0) | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___operator_5b_5d_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return (std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29($0 | 0) | 0) + $1 | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28char_20const__2c_20unsigned_20long_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $4 = 0, $5 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  label$1 : {
   label$2 : {
    $4 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___capacity_28_29_20const($0 | 0) | 0;
    $5 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___size_28_29_20const($0 | 0) | 0;
    if (($4 - $5 | 0) >>> 0 < $2 >>> 0) {
     break label$2
    }
    if (!$2) {
     break label$1
    }
    $4 = char__20std____2____to_address_char__28char__29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29($0 | 0) | 0 | 0) | 0;
    std____2__char_traits_char___copy_28char__2c_20char_20const__2c_20unsigned_20long_29($4 + $5 | 0 | 0, $1 | 0, $2 | 0) | 0;
    $2 = $5 + $2 | 0;
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_size_28unsigned_20long_29($0 | 0, $2 | 0);
    HEAP8[($3 + 15 | 0) >> 0] = 0;
    std____2__char_traits_char___assign_28char__2c_20char_20const__29($4 + $2 | 0 | 0, $3 + 15 | 0 | 0);
    break label$1;
   }
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____grow_by_and_replace_28unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20char_20const__29($0 | 0, $4 | 0, ($5 + $2 | 0) - $4 | 0 | 0, $5 | 0, $5 | 0, 0 | 0, $2 | 0, $1 | 0);
  }
  __stack_pointer = $3 + 16 | 0;
  return $0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28char_20const__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___append_28char_20const__2c_20unsigned_20long_29($0 | 0, $1 | 0, std____2__char_traits_char___length_28char_20const__29($1 | 0) | 0 | 0) | 0 | 0;
 }
 
 function std____2__char_traits_char___to_int_type_28char_29($0) {
  $0 = $0 | 0;
  return $0 & 255 | 0 | 0;
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___insert_28unsigned_20long_2c_20char_20const__2c_20unsigned_20long_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $6 = 0, $5 = 0, $4 = 0, $8 = 0, $7 = 0;
  $4 = __stack_pointer - 16 | 0;
  __stack_pointer = $4;
  label$1 : {
   $5 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___size_28_29_20const($0 | 0) | 0;
   if ($5 >>> 0 < $1 >>> 0) {
    break label$1
   }
   label$2 : {
    label$3 : {
     $6 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___capacity_28_29_20const($0 | 0) | 0;
     if (($6 - $5 | 0) >>> 0 < $3 >>> 0) {
      break label$3
     }
     if (!$3) {
      break label$2
     }
     $6 = char__20std____2____to_address_char__28char__29(std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_pointer_28_29($0 | 0) | 0 | 0) | 0;
     label$4 : {
      $7 = $5 - $1 | 0;
      if (!$7) {
       break label$4
      }
      $8 = $6 + $1 | 0;
      std____2__char_traits_char___move_28char__2c_20char_20const__2c_20unsigned_20long_29($8 + $3 | 0 | 0, $8 | 0, $7 | 0) | 0;
      $2 = $8 >>> 0 <= $2 >>> 0 ? (($6 + $5 | 0) >>> 0 > $2 >>> 0 ? $2 + $3 | 0 : $2) : $2;
     }
     std____2__char_traits_char___move_28char__2c_20char_20const__2c_20unsigned_20long_29($6 + $1 | 0 | 0, $2 | 0, $3 | 0) | 0;
     $3 = $5 + $3 | 0;
     std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_size_28unsigned_20long_29($0 | 0, $3 | 0);
     HEAP8[($4 + 15 | 0) >> 0] = 0;
     std____2__char_traits_char___assign_28char__2c_20char_20const__29($6 + $3 | 0 | 0, $4 + 15 | 0 | 0);
     break label$2;
    }
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____grow_by_and_replace_28unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20unsigned_20long_2c_20char_20const__29($0 | 0, $6 | 0, ($5 + $3 | 0) - $6 | 0 | 0, $5 | 0, $1 | 0, 0 | 0, $3 | 0, $2 | 0);
   }
   __stack_pointer = $4 + 16 | 0;
   return $0 | 0;
  }
  std____2____basic_string_common_true_____throw_out_of_range_28_29_20const($0 | 0);
  abort();
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___insert_28unsigned_20long_2c_20char_20const__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  return std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___insert_28unsigned_20long_2c_20char_20const__2c_20unsigned_20long_29($0 | 0, $1 | 0, $2 | 0, std____2__char_traits_char___length_28char_20const__29($2 | 0) | 0 | 0) | 0 | 0;
 }
 
 function std____2__to_string_28int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2___28anonymous_20namespace_29__i_to_string_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20int__28int_29($0 | 0, $1 | 0);
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2___28anonymous_20namespace_29__i_to_string_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20int__28int_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = __stack_pointer - 32 | 0;
  __stack_pointer = $2;
  std____2__to_chars_result_20std____2__to_chars_int_2c_200__28char__2c_20char__2c_20int_29($2 + 8 | 0 | 0, $2 + 21 | 0 | 0, $2 + 32 | 0 | 0, $1 | 0);
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_char__2c_20void__28char__2c_20char__29($0 | 0, $2 + 21 | 0 | 0, HEAP32[($2 + 8 | 0) >> 2] | 0 | 0) | 0;
  __stack_pointer = $2 + 32 | 0;
 }
 
 function std____2__to_chars_result_20std____2__to_chars_int_2c_200__28char__2c_20char__2c_20int_29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  std____2__to_chars_result_20std____2____to_chars_itoa_int__28char__2c_20char__2c_20int_2c_20std____2__integral_constant_bool_2c_20true__29($0 | 0, $1 | 0, $2 | 0, $3 | 0);
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_char__2c_20void__28char__2c_20char__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20_____compressed_pair_std____2____default_init_tag_2c_20std____2____default_init_tag__28std____2____default_init_tag___2c_20std____2____default_init_tag___29($0 | 0, $3 + 8 | 0 | 0, $3 | 0) | 0;
  std____2__enable_if___is_cpp17_forward_iterator_char____value_2c_20void___type_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____init_char___28char__2c_20char__29($0 | 0, $1 | 0, $2 | 0);
  __stack_pointer = $3 + 16 | 0;
  return $0 | 0;
 }
 
 function std____2___28anonymous_20namespace_29__initial_string_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20___operator_28_29_28_29_20const($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $0 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_28_29($0 | 0) | 0;
  $1 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___capacity_28_29_20const($0 | 0) | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  invoke_vii(124 | 0, $0 | 0, $1 | 0);
  $1 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   if (($1 | 0) != (1 | 0)) {
    break label$1
   }
   $1 = __cxa_find_matching_catch_2() | 0;
   getTempRet0() | 0;
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____basic_string_28_29($0 | 0) | 0;
   __resumeException($1 | 0);
   abort();
  }
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___resize_28unsigned_20long_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___resize_28unsigned_20long_2c_20char_29($0 | 0, $1 | 0, 0 | 0);
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_28_29($0) {
  $0 = $0 | 0;
  var $1 = 0, $2 = 0;
  $1 = __stack_pointer - 16 | 0;
  __stack_pointer = $1;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  invoke_iiii(125 | 0, $0 | 0, $1 + 8 | 0 | 0, $1 | 0) | 0;
  $2 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   if (($2 | 0) == (1 | 0)) {
    break label$1
   }
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____zero_28_29($0 | 0);
   __stack_pointer = $1 + 16 | 0;
   return $0 | 0;
  }
  __cxa_find_matching_catch_3(0 | 0) | 0;
  getTempRet0() | 0;
  std__terminate_28_29();
  abort();
 }
 
 function std____2__to_string_28double_29($0, $1) {
  $0 = $0 | 0;
  $1 = +$1;
  var $2 = 0;
  $2 = __stack_pointer - 16 | 0;
  __stack_pointer = $2;
  std____2___28anonymous_20namespace_29__initial_string_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20___operator_28_29_28_29_20const($2 | 0);
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  invoke_viid(126 | 0, $0 | 0, $2 | 0, +$1);
  $0 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   if (($0 | 0) == (1 | 0)) {
    break label$1
   }
   std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____basic_string_28_29($2 | 0) | 0;
   __stack_pointer = $2 + 16 | 0;
   return;
  }
  $0 = __cxa_find_matching_catch_2() | 0;
  getTempRet0() | 0;
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____basic_string_28_29($2 | 0) | 0;
  __resumeException($0 | 0);
  abort();
 }
 
 function std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2___28anonymous_20namespace_29__as_string_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20int_20_28__29_28char__2c_20unsigned_20long_2c_20char_20const__2c_20____29_2c_20double__28int_20_28__29_28char__2c_20unsigned_20long_2c_20char_20const__2c_20____29_2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___value_type_20const__2c_20double_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = +$2;
  var $4 = 0, $5 = 0, $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  $4 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___size_28_29_20const($1 | 0) | 0;
  label$1 : {
   label$2 : while (1) {
    $5 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___operator_5b_5d_28unsigned_20long_29($1 | 0, 0 | 0) | 0;
    HEAPF64[$3 >> 3] = $2;
    label$3 : {
     label$4 : {
      $5 = snprintf($5 | 0, $4 + 1 | 0 | 0, 10789 | 0, $3 | 0) | 0;
      if (($5 | 0) < (0 | 0)) {
       break label$4
      }
      if ($5 >>> 0 <= $4 >>> 0) {
       break label$1
      }
      $4 = $5;
      break label$3;
     }
     $4 = $4 << 1 | 0 | 1 | 0;
    }
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___resize_28unsigned_20long_29($1 | 0, $4 | 0);
    continue label$2;
   };
  }
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___resize_28unsigned_20long_29($1 | 0, $5 | 0);
  std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___basic_string_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20____29($0 | 0, $1 | 0) | 0;
  __stack_pointer = $3 + 16 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_char__2c_201_2c_20true_____get_28_29_20const($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function std____2____compressed_pair_elem_std____2__allocator_char__2c_201_2c_20true_____get_28_29($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function char__20std____2__addressof_char__28char__29($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function std____2__allocator_traits_std____2__allocator_char__20_____max_size_28std____2__integral_constant_bool_2c_20true__2c_20std____2__allocator_char__20const__29($0) {
  $0 = $0 | 0;
  return std____2__allocator_char___max_size_28_29_20const($0 | 0) | 0 | 0;
 }
 
 function std____2__allocator_char___max_size_28_29_20const($0) {
  $0 = $0 | 0;
  return -1 | 0;
 }
 
 function std____2__to_chars_result_20std____2____to_chars_itoa_int__28char__2c_20char__2c_20int_2c_20std____2__integral_constant_bool_2c_20true__29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0;
  $4 = std____2__make_unsigned_int___type_20std____2____to_unsigned_int__28int_29($3 | 0) | 0;
  label$1 : {
   if (($1 | 0) == ($2 | 0)) {
    break label$1
   }
   if (($3 | 0) > (-1 | 0)) {
    break label$1
   }
   HEAP8[$1 >> 0] = 45;
   $1 = $1 + 1 | 0;
   $4 = unsigned_20int_20std____2____complement_unsigned_20int__28unsigned_20int_29($4 | 0) | 0;
  }
  std____2__to_chars_result_20std____2____to_chars_itoa_unsigned_20int__28char__2c_20char__2c_20unsigned_20int_2c_20std____2__integral_constant_bool_2c_20false__29($0 | 0, $1 | 0, $2 | 0, $4 | 0);
 }
 
 function std____2__enable_if___is_cpp17_forward_iterator_char____value_2c_20void___type_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____init_char___28char__2c_20char__29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $4 = 0, $3 = 0, $6 = 0, $27 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  label$1 : {
   $4 = std____2__iterator_traits_char____difference_type_20std____2__distance_char___28char__2c_20char__29($1 | 0, $2 | 0) | 0;
   if ($4 >>> 0 > (std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___max_size_28_29_20const($0 | 0) | 0) >>> 0) {
    break label$1
   }
   label$2 : {
    label$3 : {
     if ($4 >>> 0 > 10 >>> 0) {
      break label$3
     }
     std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_short_size_28unsigned_20long_29($0 | 0, $4 | 0);
     $5 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____get_short_pointer_28_29($0 | 0) | 0;
     break label$2;
    }
    $5 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____recommend_28unsigned_20long_29($4 | 0) | 0;
    $27 = std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____alloc_28_29($0 | 0) | 0;
    $6 = $5 + 1 | 0;
    $5 = std____2__allocator_traits_std____2__allocator_char__20___allocate_28std____2__allocator_char___2c_20unsigned_20long_29($27 | 0, $6 | 0) | 0;
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_pointer_28char__29($0 | 0, $5 | 0);
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_cap_28unsigned_20long_29($0 | 0, $6 | 0);
    std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____set_long_size_28unsigned_20long_29($0 | 0, $4 | 0);
   }
   label$4 : {
    label$5 : while (1) {
     if (($1 | 0) == ($2 | 0)) {
      break label$4
     }
     std____2__char_traits_char___assign_28char__2c_20char_20const__29($5 | 0, $1 | 0);
     $5 = $5 + 1 | 0;
     $1 = $1 + 1 | 0;
     continue label$5;
    };
   }
   HEAP8[($3 + 15 | 0) >> 0] = 0;
   std____2__char_traits_char___assign_28char__2c_20char_20const__29($5 | 0, $3 + 15 | 0 | 0);
   __stack_pointer = $3 + 16 | 0;
   return;
  }
  std____2____basic_string_common_true_____throw_length_error_28_29_20const($0 | 0);
  abort();
 }
 
 function std____2__make_unsigned_int___type_20std____2____to_unsigned_int__28int_29($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function unsigned_20int_20std____2____complement_unsigned_20int__28unsigned_20int_29($0) {
  $0 = $0 | 0;
  return 0 - $0 | 0 | 0;
 }
 
 function std____2__to_chars_result_20std____2____to_chars_itoa_unsigned_20int__28char__2c_20char__2c_20unsigned_20int_2c_20std____2__integral_constant_bool_2c_20false__29($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     $4 = $2 - $1 | 0;
     if (($4 | 0) > (9 | 0)) {
      break label$3
     }
     if ((std____2____itoa____traits_base_unsigned_20int_2c_20void_____width_28unsigned_20int_29($3 | 0) | 0 | 0) > ($4 | 0)) {
      break label$2
     }
    }
    HEAP32[$0 >> 2] = std____2____itoa____traits_base_unsigned_20int_2c_20void_____convert_28unsigned_20int_2c_20char__29($3 | 0, $1 | 0) | 0;
    $1 = 0;
    break label$1;
   }
   HEAP32[$0 >> 2] = $2;
   $1 = 61;
  }
  HEAP32[($0 + 4 | 0) >> 2] = $1;
 }
 
 function std____2____itoa____traits_base_unsigned_20int_2c_20void_____width_28unsigned_20int_29($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = Math_imul(32 - Math_clz32($0 | 1 | 0) | 0, 1233) >>> 12 | 0;
  return ($1 - ((HEAP32[(($1 << 2 | 0) + 10864 | 0) >> 2] | 0) >>> 0 > $0 >>> 0) | 0) + 1 | 0 | 0;
 }
 
 function std____2____itoa____traits_base_unsigned_20int_2c_20void_____convert_28unsigned_20int_2c_20char__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return std____2____itoa____u32toa_28unsigned_20int_2c_20char__29($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function std____2__iterator_traits_char____difference_type_20std____2__distance_char___28char__2c_20char__29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return std____2__iterator_traits_char____difference_type_20std____2____distance_char___28char__2c_20char__2c_20std____2__random_access_iterator_tag_29($0 | 0, $1 | 0) | 0 | 0;
 }
 
 function std____2__iterator_traits_char____difference_type_20std____2____distance_char___28char__2c_20char__2c_20std____2__random_access_iterator_tag_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  return $1 - $0 | 0 | 0;
 }
 
 function operator_20new_28unsigned_20long_29($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = $0 ? $0 : 1;
  label$1 : {
   label$2 : while (1) {
    $0 = dlmalloc($1 | 0) | 0;
    if ($0) {
     break label$1
    }
    label$3 : {
     $0 = std__get_new_handler_28_29() | 0;
     if (!$0) {
      break label$3
     }
     FUNCTION_TABLE[$0 | 0]();
     continue label$2;
    }
    break label$2;
   };
   $0 = __cxa_allocate_exception(4 | 0) | 0;
   std__bad_alloc__bad_alloc_28_29($0 | 0) | 0;
   __cxa_throw($0 | 0, 11372 | 0, 127 | 0);
   abort();
  }
  return $0 | 0;
 }
 
 function operator_20delete_28void__29($0) {
  $0 = $0 | 0;
  dlfree($0 | 0);
 }
 
 function operator_20new_28unsigned_20long_2c_20std__align_val_t_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0;
  $2 = __stack_pointer - 16 | 0;
  __stack_pointer = $2;
  $1 = $1 >>> 0 > 4 >>> 0 ? $1 : 4;
  $3 = $0 ? $0 : 1;
  label$1 : {
   label$2 : while (1) {
    if (!(dlposix_memalign($2 + 12 | 0 | 0, $1 | 0, $3 | 0) | 0)) {
     break label$1
    }
    label$3 : {
     $0 = std__get_new_handler_28_29() | 0;
     if (!$0) {
      break label$3
     }
     FUNCTION_TABLE[$0 | 0]();
     continue label$2;
    }
    break label$2;
   };
   $0 = __cxa_allocate_exception(4 | 0) | 0;
   std__bad_alloc__bad_alloc_28_29($0 | 0) | 0;
   __cxa_throw($0 | 0, 11372 | 0, 127 | 0);
   abort();
  }
  $0 = HEAP32[($2 + 12 | 0) >> 2] | 0;
  __stack_pointer = $2 + 16 | 0;
  return $0 | 0;
 }
 
 function operator_20delete_28void__2c_20std__align_val_t_29($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  dlfree($0 | 0);
 }
 
 function std____2____vector_base_common_true_____throw_length_error_28_29_20const($0) {
  $0 = $0 | 0;
  std____2____throw_length_error_28char_20const__29(10904 | 0);
  abort();
 }
 
 function std____2__bad_function_call___bad_function_call_28_29($0) {
  $0 = $0 | 0;
  std__exception___exception_28_29($0 | 0) | 0;
  return $0 | 0;
 }
 
 function std____2__bad_function_call___bad_function_call_28_29_1($0) {
  $0 = $0 | 0;
  operator_20delete_28void__29(std____2__bad_function_call___bad_function_call_28_29($0 | 0) | 0 | 0);
 }
 
 function std____2__bad_function_call__what_28_29_20const($0) {
  $0 = $0 | 0;
  return 10911 | 0;
 }
 
 function __cxa_get_globals_fast() {
  return 13048 | 0;
 }
 
 function abort_message($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  abort();
 }
 
 function demangling_terminate_handler_28_29() {
  var $0 = 0, $1 = 0, $2 = 0, i64toi32_i32$0 = 0, $3 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0;
  $0 = __stack_pointer - 48 | 0;
  __stack_pointer = $0;
  label$1 : {
   label$2 : {
    $1 = __cxa_get_globals_fast() | 0;
    if (!$1) {
     break label$2
    }
    $1 = HEAP32[$1 >> 2] | 0;
    if (!$1) {
     break label$2
    }
    label$3 : {
     $2 = $1 + 48 | 0;
     if (!(__cxxabiv1____isOurExceptionClass_28_Unwind_Exception_20const__29($2 | 0) | 0)) {
      break label$3
     }
     label$4 : {
      label$5 : {
       i64toi32_i32$0 = __cxxabiv1____getExceptionClass_28_Unwind_Exception_20const__29($2 | 0) | 0;
       i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
       i64toi32_i32$2 = i64toi32_i32$0;
       i64toi32_i32$0 = 1129074247;
       if ((i64toi32_i32$2 | 0) != (1126902529 | 0) | (i64toi32_i32$1 | 0) != (i64toi32_i32$0 | 0) | 0) {
        break label$5
       }
       $2 = HEAP32[($1 + 44 | 0) >> 2] | 0;
       break label$4;
      }
      $2 = $1 + 80 | 0;
     }
     HEAP32[($0 + 44 | 0) >> 2] = $2;
     $2 = HEAP32[$1 >> 2] | 0;
     $1 = std__type_info__name_28_29_20const($2 | 0) | 0;
     if (FUNCTION_TABLE[HEAP32[((HEAP32[(0 + 11348 | 0) >> 2] | 0) + 16 | 0) >> 2] | 0 | 0](11348, $2, $0 + 44 | 0) | 0) {
      break label$1
     }
     HEAP32[($0 + 20 | 0) >> 2] = $1;
     HEAP32[($0 + 16 | 0) >> 2] = HEAP32[(0 + 12796 | 0) >> 2] | 0;
     abort_message(11041 | 0, $0 + 16 | 0 | 0);
     abort();
    }
    HEAP32[($0 + 32 | 0) >> 2] = HEAP32[(0 + 12796 | 0) >> 2] | 0;
    abort_message(11082 | 0, $0 + 32 | 0 | 0);
    abort();
   }
   abort_message(11120 | 0, 0 | 0);
   abort();
  }
  $2 = HEAP32[(0 + 12796 | 0) >> 2] | 0;
  $3 = HEAP32[($0 + 44 | 0) >> 2] | 0;
  HEAP32[($0 + 8 | 0) >> 2] = FUNCTION_TABLE[HEAP32[((HEAP32[$3 >> 2] | 0) + 8 | 0) >> 2] | 0 | 0]($3) | 0;
  HEAP32[($0 + 4 | 0) >> 2] = $1;
  HEAP32[$0 >> 2] = $2;
  abort_message(10996 | 0, $0 | 0);
  abort();
 }
 
 function __cxxabiv1____getExceptionClass_28_Unwind_Exception_20const__29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0;
  i64toi32_i32$2 = $0;
  i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;
  i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
  return i64toi32_i32$0 | 0;
 }
 
 function __cxxabiv1____isOurExceptionClass_28_Unwind_Exception_20const__29($0) {
  $0 = $0 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0;
  i64toi32_i32$0 = __cxxabiv1____getExceptionClass_28_Unwind_Exception_20const__29($0 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  i64toi32_i32$2 = i64toi32_i32$0;
  i64toi32_i32$0 = -1;
  i64toi32_i32$3 = -256;
  i64toi32_i32$0 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
  i64toi32_i32$1 = i64toi32_i32$2 & i64toi32_i32$3 | 0;
  i64toi32_i32$2 = 1129074247;
  i64toi32_i32$3 = 1126902528;
  return (i64toi32_i32$1 | 0) == (i64toi32_i32$3 | 0) & (i64toi32_i32$0 | 0) == (i64toi32_i32$2 | 0) | 0 | 0;
 }
 
 function void_20_28_std____2___28anonymous_20namespace_29____libcpp_atomic_load_void_20_28__29_28_29__28void_20_28__20const__29_28_29_2c_20int_29_29_28_29($0) {
  $0 = $0 | 0;
  return HEAP32[$0 >> 2] | 0 | 0;
 }
 
 function std__terminate_28_29() {
  var $1 = 0, $0 = 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  $0 = invoke_i(131 | 0) | 0;
  $1 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   label$2 : {
    if (($1 | 0) == (1 | 0)) {
     break label$2
    }
    if (!$0) {
     break label$1
    }
    $1 = HEAP32[$0 >> 2] | 0;
    if (!$1) {
     break label$1
    }
    if (!(__cxxabiv1____isOurExceptionClass_28_Unwind_Exception_20const__29($1 + 48 | 0 | 0) | 0)) {
     break label$1
    }
    std____terminate_28void_20_28__29_28_29_29(HEAP32[($1 + 12 | 0) >> 2] | 0 | 0);
    abort();
   }
   __cxa_find_matching_catch_3(0 | 0) | 0;
   getTempRet0() | 0;
   std__terminate_28_29();
   abort();
  }
  std____terminate_28void_20_28__29_28_29_29(std__get_terminate_28_29() | 0 | 0);
  abort();
 }
 
 function std____terminate_28void_20_28__29_28_29_29($0) {
  $0 = $0 | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  invoke_v($0 | 0);
  $0 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
  HEAP32[(0 + 12964 | 0) >> 2] = 0;
  label$1 : {
   label$2 : {
    if (($0 | 0) == (1 | 0)) {
     break label$2
    }
    HEAP32[(0 + 12964 | 0) >> 2] = 0;
    invoke_vii(132 | 0, 11141 | 0, 0 | 0);
    $0 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
    HEAP32[(0 + 12964 | 0) >> 2] = 0;
    if (($0 | 0) != (1 | 0)) {
     break label$1
    }
   }
   $0 = __cxa_find_matching_catch_3(0 | 0) | 0;
   getTempRet0() | 0;
   __cxa_begin_catch($0 | 0) | 0;
   HEAP32[(0 + 12964 | 0) >> 2] = 0;
   invoke_vii(132 | 0, 11181 | 0, 0 | 0);
   $0 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
   HEAP32[(0 + 12964 | 0) >> 2] = 0;
   if (($0 | 0) != (1 | 0)) {
    break label$1
   }
   __cxa_find_matching_catch_3(0 | 0) | 0;
   getTempRet0() | 0;
   HEAP32[(0 + 12964 | 0) >> 2] = 0;
   invoke_v(133 | 0);
   $0 = HEAP32[(0 + 12964 | 0) >> 2] | 0;
   HEAP32[(0 + 12964 | 0) >> 2] = 0;
   label$3 : {
    if (($0 | 0) != (1 | 0)) {
     break label$3
    }
    __cxa_find_matching_catch_3(0 | 0) | 0;
    getTempRet0() | 0;
   }
   std__terminate_28_29();
  }
  abort();
 }
 
 function std__get_terminate_28_29() {
  return void_20_28_std____2___28anonymous_20namespace_29____libcpp_atomic_load_void_20_28__29_28_29__28void_20_28__20const__29_28_29_2c_20int_29_29_28_29(12792 | 0) | 0 | 0;
 }
 
 function std__get_new_handler_28_29() {
  return void_20_28_std____2___28anonymous_20namespace_29____libcpp_atomic_load_void_20_28__29_28_29__28void_20_28__20const__29_28_29_2c_20int_29_29_28_29(13056 | 0) | 0 | 0;
 }
 
 function __cxa_pure_virtual() {
  abort_message(11231 | 0, 0 | 0);
  abort();
 }
 
 function std__exception___exception_28_29($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function std__exception___exception_28_29_1($0) {
  $0 = $0 | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function std__exception__what_28_29_20const($0) {
  $0 = $0 | 0;
  return 11261 | 0;
 }
 
 function std__bad_alloc__bad_alloc_28_29($0) {
  $0 = $0 | 0;
  std__exception__exception_28_29($0 | 0) | 0;
  HEAP32[$0 >> 2] = 11284;
  return $0 | 0;
 }
 
 function std__bad_alloc___bad_alloc_28_29($0) {
  $0 = $0 | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function std__bad_alloc__what_28_29_20const($0) {
  $0 = $0 | 0;
  return 11296 | 0;
 }
 
 function std__logic_error___logic_error_28_29($0) {
  $0 = $0 | 0;
  HEAP32[$0 >> 2] = 11392;
  std____2____libcpp_refstring_____libcpp_refstring_28_29($0 + 4 | 0 | 0) | 0;
  std__exception___exception_28_29($0 | 0) | 0;
  return $0 | 0;
 }
 
 function std____2____libcpp_refstring_____libcpp_refstring_28_29($0) {
  $0 = $0 | 0;
  var $1 = 0;
  label$1 : {
   if (!(std____2____libcpp_refstring____uses_refcount_28_29_20const($0 | 0) | 0)) {
    break label$1
   }
   $1 = std____2____refstring_imp___28anonymous_20namespace_29__rep_from_data_28char_20const__29(HEAP32[$0 >> 2] | 0 | 0) | 0;
   if ((int_20std____2___28anonymous_20namespace_29____libcpp_atomic_add_int_2c_20int__28int__2c_20int_2c_20int_29($1 + 8 | 0 | 0) | 0 | 0) > (-1 | 0)) {
    break label$1
   }
   operator_20delete_28void__29($1 | 0);
  }
  return $0 | 0;
 }
 
 function std____2____refstring_imp___28anonymous_20namespace_29__rep_from_data_28char_20const__29($0) {
  $0 = $0 | 0;
  return $0 + -12 | 0 | 0;
 }
 
 function int_20std____2___28anonymous_20namespace_29____libcpp_atomic_add_int_2c_20int__28int__2c_20int_2c_20int_29($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = (HEAP32[$0 >> 2] | 0) + -1 | 0;
  HEAP32[$0 >> 2] = $1;
  return $1 | 0;
 }
 
 function std__logic_error___logic_error_28_29_1($0) {
  $0 = $0 | 0;
  operator_20delete_28void__29(std__logic_error___logic_error_28_29($0 | 0) | 0 | 0);
 }
 
 function std__logic_error__what_28_29_20const($0) {
  $0 = $0 | 0;
  return std____2____libcpp_refstring__c_str_28_29_20const($0 + 4 | 0 | 0) | 0 | 0;
 }
 
 function std____2____libcpp_refstring__c_str_28_29_20const($0) {
  $0 = $0 | 0;
  return HEAP32[$0 >> 2] | 0 | 0;
 }
 
 function std__invalid_argument___invalid_argument_28_29($0) {
  $0 = $0 | 0;
  std__logic_error___logic_error_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function std__length_error___length_error_28_29($0) {
  $0 = $0 | 0;
  std__logic_error___logic_error_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function std__out_of_range___out_of_range_28_29($0) {
  $0 = $0 | 0;
  std__logic_error___logic_error_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function std__type_info___type_info_28_29($0) {
  $0 = $0 | 0;
  return $0 | 0;
 }
 
 function strcmp($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $2 = 0;
  $2 = HEAPU8[$1 >> 0] | 0;
  label$1 : {
   $3 = HEAPU8[$0 >> 0] | 0;
   if (!$3) {
    break label$1
   }
   if (($3 | 0) != ($2 & 255 | 0 | 0)) {
    break label$1
   }
   label$2 : while (1) {
    $2 = HEAPU8[($1 + 1 | 0) >> 0] | 0;
    $3 = HEAPU8[($0 + 1 | 0) >> 0] | 0;
    if (!$3) {
     break label$1
    }
    $1 = $1 + 1 | 0;
    $0 = $0 + 1 | 0;
    if (($3 | 0) == ($2 & 255 | 0 | 0)) {
     continue label$2
    }
    break label$2;
   };
  }
  return $3 - ($2 & 255 | 0) | 0 | 0;
 }
 
 function __cxxabiv1____shim_type_info_____shim_type_info_28_29($0) {
  $0 = $0 | 0;
  std__type_info___type_info_28_29($0 | 0) | 0;
  return $0 | 0;
 }
 
 function __cxxabiv1____shim_type_info__noop1_28_29_20const($0) {
  $0 = $0 | 0;
 }
 
 function __cxxabiv1____shim_type_info__noop2_28_29_20const($0) {
  $0 = $0 | 0;
 }
 
 function __cxxabiv1____fundamental_type_info_____fundamental_type_info_28_29($0) {
  $0 = $0 | 0;
  __cxxabiv1____shim_type_info_____shim_type_info_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function __cxxabiv1____enum_type_info_____enum_type_info_28_29($0) {
  $0 = $0 | 0;
  __cxxabiv1____shim_type_info_____shim_type_info_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function __cxxabiv1____class_type_info_____class_type_info_28_29($0) {
  $0 = $0 | 0;
  __cxxabiv1____shim_type_info_____shim_type_info_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function __cxxabiv1____si_class_type_info_____si_class_type_info_28_29($0) {
  $0 = $0 | 0;
  __cxxabiv1____shim_type_info_____shim_type_info_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function __cxxabiv1____vmi_class_type_info_____vmi_class_type_info_28_29($0) {
  $0 = $0 | 0;
  __cxxabiv1____shim_type_info_____shim_type_info_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function __cxxabiv1____pointer_type_info_____pointer_type_info_28_29($0) {
  $0 = $0 | 0;
  __cxxabiv1____shim_type_info_____shim_type_info_28_29($0 | 0) | 0;
  operator_20delete_28void__29($0 | 0);
 }
 
 function __cxxabiv1____fundamental_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  return is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, $1 | 0, 0 | 0) | 0 | 0;
 }
 
 function is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  label$1 : {
   if ($2) {
    break label$1
   }
   return (HEAP32[($0 + 4 | 0) >> 2] | 0 | 0) == (HEAP32[($1 + 4 | 0) >> 2] | 0 | 0) | 0;
  }
  label$2 : {
   if (($0 | 0) != ($1 | 0)) {
    break label$2
   }
   return 1 | 0;
  }
  return !(strcmp(std__type_info__name_28_29_20const($0 | 0) | 0 | 0, std__type_info__name_28_29_20const($1 | 0) | 0 | 0) | 0) | 0;
 }
 
 function __cxxabiv1____enum_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  return is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, $1 | 0, 0 | 0) | 0 | 0;
 }
 
 function __cxxabiv1____class_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $4 = 0;
  $3 = __stack_pointer - 64 | 0;
  __stack_pointer = $3;
  $4 = 1;
  label$1 : {
   if (is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, $1 | 0, 0 | 0) | 0) {
    break label$1
   }
   $4 = 0;
   if (!$1) {
    break label$1
   }
   $4 = 0;
   $1 = __dynamic_cast($1 | 0, 11652 | 0, 11700 | 0, 0 | 0) | 0;
   if (!$1) {
    break label$1
   }
   memset($3 + 8 | 0 | 4 | 0 | 0, 0 | 0, 52 | 0) | 0;
   HEAP32[($3 + 56 | 0) >> 2] = 1;
   HEAP32[($3 + 20 | 0) >> 2] = -1;
   HEAP32[($3 + 16 | 0) >> 2] = $0;
   HEAP32[($3 + 8 | 0) >> 2] = $1;
   FUNCTION_TABLE[HEAP32[((HEAP32[$1 >> 2] | 0) + 28 | 0) >> 2] | 0 | 0]($1, $3 + 8 | 0, HEAP32[$2 >> 2] | 0, 1);
   label$2 : {
    $4 = HEAP32[($3 + 32 | 0) >> 2] | 0;
    if (($4 | 0) != (1 | 0)) {
     break label$2
    }
    HEAP32[$2 >> 2] = HEAP32[($3 + 24 | 0) >> 2] | 0;
   }
   $4 = ($4 | 0) == (1 | 0);
  }
  __stack_pointer = $3 + 64 | 0;
  return $4 | 0;
 }
 
 function __dynamic_cast($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, $6 = 0, $5 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0, wasm2js_i32$3 = 0, wasm2js_i32$4 = 0, wasm2js_i32$5 = 0, wasm2js_i32$6 = 0, wasm2js_i32$7 = 0, wasm2js_i32$8 = 0;
  $4 = __stack_pointer - 64 | 0;
  __stack_pointer = $4;
  $5 = HEAP32[$0 >> 2] | 0;
  $6 = HEAP32[($5 + -4 | 0) >> 2] | 0;
  $5 = HEAP32[($5 + -8 | 0) >> 2] | 0;
  HEAP32[($4 + 20 | 0) >> 2] = $3;
  HEAP32[($4 + 16 | 0) >> 2] = $1;
  HEAP32[($4 + 12 | 0) >> 2] = $0;
  HEAP32[($4 + 8 | 0) >> 2] = $2;
  $1 = 0;
  memset($4 + 24 | 0 | 0, 0 | 0, 39 | 0) | 0;
  $0 = $0 + $5 | 0;
  label$1 : {
   label$2 : {
    if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($6 | 0, $2 | 0, 0 | 0) | 0)) {
     break label$2
    }
    HEAP32[($4 + 56 | 0) >> 2] = 1;
    FUNCTION_TABLE[HEAP32[((HEAP32[$6 >> 2] | 0) + 20 | 0) >> 2] | 0 | 0]($6, $4 + 8 | 0, $0, $0, 1, 0);
    $1 = (HEAP32[($4 + 32 | 0) >> 2] | 0 | 0) == (1 | 0) ? $0 : 0;
    break label$1;
   }
   FUNCTION_TABLE[HEAP32[((HEAP32[$6 >> 2] | 0) + 24 | 0) >> 2] | 0 | 0]($6, $4 + 8 | 0, $0, 1, 0);
   label$3 : {
    switch (HEAP32[($4 + 44 | 0) >> 2] | 0 | 0) {
    case 0:
     $1 = (wasm2js_i32$0 = (wasm2js_i32$3 = (wasm2js_i32$6 = HEAP32[($4 + 28 | 0) >> 2] | 0, wasm2js_i32$7 = 0, wasm2js_i32$8 = (HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) == (1 | 0), wasm2js_i32$8 ? wasm2js_i32$6 : wasm2js_i32$7), wasm2js_i32$4 = 0, wasm2js_i32$5 = (HEAP32[($4 + 36 | 0) >> 2] | 0 | 0) == (1 | 0), wasm2js_i32$5 ? wasm2js_i32$3 : wasm2js_i32$4), wasm2js_i32$1 = 0, wasm2js_i32$2 = (HEAP32[($4 + 48 | 0) >> 2] | 0 | 0) == (1 | 0), wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1);
     break label$1;
    case 1:
     break label$3;
    default:
     break label$1;
    };
   }
   label$5 : {
    if ((HEAP32[($4 + 32 | 0) >> 2] | 0 | 0) == (1 | 0)) {
     break label$5
    }
    if (HEAP32[($4 + 48 | 0) >> 2] | 0) {
     break label$1
    }
    if ((HEAP32[($4 + 36 | 0) >> 2] | 0 | 0) != (1 | 0)) {
     break label$1
    }
    if ((HEAP32[($4 + 40 | 0) >> 2] | 0 | 0) != (1 | 0)) {
     break label$1
    }
   }
   $1 = HEAP32[($4 + 24 | 0) >> 2] | 0;
  }
  __stack_pointer = $4 + 64 | 0;
  return $1 | 0;
 }
 
 function __cxxabiv1____class_type_info__process_found_base_class_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0;
  label$1 : {
   $4 = HEAP32[($1 + 16 | 0) >> 2] | 0;
   if ($4) {
    break label$1
   }
   HEAP32[($1 + 36 | 0) >> 2] = 1;
   HEAP32[($1 + 24 | 0) >> 2] = $3;
   HEAP32[($1 + 16 | 0) >> 2] = $2;
   return;
  }
  label$2 : {
   label$3 : {
    if (($4 | 0) != ($2 | 0)) {
     break label$3
    }
    if ((HEAP32[($1 + 24 | 0) >> 2] | 0 | 0) != (2 | 0)) {
     break label$2
    }
    HEAP32[($1 + 24 | 0) >> 2] = $3;
    return;
   }
   HEAP8[($1 + 54 | 0) >> 0] = 1;
   HEAP32[($1 + 24 | 0) >> 2] = 2;
   HEAP32[($1 + 36 | 0) >> 2] = (HEAP32[($1 + 36 | 0) >> 2] | 0) + 1 | 0;
  }
 }
 
 function __cxxabiv1____class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, 0 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_found_base_class_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($1 | 0, $1 | 0, $2 | 0, $3 | 0);
  }
 }
 
 function __cxxabiv1____si_class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, 0 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_found_base_class_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($1 | 0, $1 | 0, $2 | 0, $3 | 0);
   return;
  }
  $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
  FUNCTION_TABLE[HEAP32[((HEAP32[$0 >> 2] | 0) + 28 | 0) >> 2] | 0 | 0]($0, $1, $2, $3);
 }
 
 function __cxxabiv1____base_class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $5 = 0, $4 = 0;
  $4 = HEAP32[($0 + 4 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    if ($2) {
     break label$2
    }
    $5 = 0;
    break label$1;
   }
   $5 = $4 >> 8 | 0;
   if (!($4 & 1 | 0)) {
    break label$1
   }
   $5 = HEAP32[((HEAP32[$2 >> 2] | 0) + $5 | 0) >> 2] | 0;
  }
  $0 = HEAP32[$0 >> 2] | 0;
  FUNCTION_TABLE[HEAP32[((HEAP32[$0 >> 2] | 0) + 28 | 0) >> 2] | 0 | 0]($0, $1, $2 + $5 | 0, $4 & 2 | 0 ? $3 : 2);
 }
 
 function __cxxabiv1____vmi_class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  var $4 = 0, $5 = 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, 0 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_found_base_class_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($0 | 0, $1 | 0, $2 | 0, $3 | 0);
   return;
  }
  $4 = HEAP32[($0 + 12 | 0) >> 2] | 0;
  $5 = $0 + 16 | 0;
  __cxxabiv1____base_class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($5 | 0, $1 | 0, $2 | 0, $3 | 0);
  label$2 : {
   if (($4 | 0) < (2 | 0)) {
    break label$2
   }
   $4 = $5 + ($4 << 3 | 0) | 0;
   $0 = $0 + 24 | 0;
   label$3 : while (1) {
    __cxxabiv1____base_class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const($0 | 0, $1 | 0, $2 | 0, $3 | 0);
    $0 = $0 + 8 | 0;
    if ($0 >>> 0 >= $4 >>> 0) {
     break label$2
    }
    if (!((HEAPU8[($1 + 54 | 0) >> 0] | 0) & 255 | 0)) {
     continue label$3
    }
    break label$3;
   };
  }
 }
 
 function __cxxabiv1____pbase_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $4 = 0;
  $3 = 1;
  label$1 : {
   label$2 : {
    if ((HEAPU8[($0 + 8 | 0) >> 0] | 0) & 24 | 0) {
     break label$2
    }
    $3 = 0;
    if (!$1) {
     break label$1
    }
    $4 = __dynamic_cast($1 | 0, 11652 | 0, 11748 | 0, 0 | 0) | 0;
    if (!$4) {
     break label$1
    }
    $3 = ((HEAPU8[($4 + 8 | 0) >> 0] | 0) & 24 | 0 | 0) != (0 | 0);
   }
   $3 = is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, $1 | 0, $3 | 0) | 0;
  }
  return $3 | 0;
 }
 
 function __cxxabiv1____pointer_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $5 = 0, $4 = 0, $3 = 0, $6 = 0;
  $3 = __stack_pointer - 64 | 0;
  __stack_pointer = $3;
  label$1 : {
   label$2 : {
    if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($1 | 0, 12016 | 0, 0 | 0) | 0)) {
     break label$2
    }
    HEAP32[$2 >> 2] = 0;
    $4 = 1;
    break label$1;
   }
   label$3 : {
    if (!(__cxxabiv1____pbase_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const($0 | 0, $1 | 0, $1 | 0) | 0)) {
     break label$3
    }
    $4 = 1;
    $1 = HEAP32[$2 >> 2] | 0;
    if (!$1) {
     break label$1
    }
    HEAP32[$2 >> 2] = HEAP32[$1 >> 2] | 0;
    break label$1;
   }
   label$4 : {
    if (!$1) {
     break label$4
    }
    $4 = 0;
    $1 = __dynamic_cast($1 | 0, 11652 | 0, 11796 | 0, 0 | 0) | 0;
    if (!$1) {
     break label$1
    }
    label$5 : {
     $5 = HEAP32[$2 >> 2] | 0;
     if (!$5) {
      break label$5
     }
     HEAP32[$2 >> 2] = HEAP32[$5 >> 2] | 0;
    }
    $5 = HEAP32[($1 + 8 | 0) >> 2] | 0;
    $6 = HEAP32[($0 + 8 | 0) >> 2] | 0;
    if (($5 & ($6 ^ -1 | 0) | 0) & 7 | 0) {
     break label$1
    }
    if ((($5 ^ -1 | 0) & $6 | 0) & 96 | 0) {
     break label$1
    }
    $4 = 1;
    if (is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29(HEAP32[($0 + 12 | 0) >> 2] | 0 | 0, HEAP32[($1 + 12 | 0) >> 2] | 0 | 0, 0 | 0) | 0) {
     break label$1
    }
    label$6 : {
     if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29(HEAP32[($0 + 12 | 0) >> 2] | 0 | 0, 12004 | 0, 0 | 0) | 0)) {
      break label$6
     }
     $1 = HEAP32[($1 + 12 | 0) >> 2] | 0;
     if (!$1) {
      break label$1
     }
     $4 = !(__dynamic_cast($1 | 0, 11652 | 0, 11848 | 0, 0 | 0) | 0);
     break label$1;
    }
    $5 = HEAP32[($0 + 12 | 0) >> 2] | 0;
    if (!$5) {
     break label$4
    }
    $4 = 0;
    label$7 : {
     $5 = __dynamic_cast($5 | 0, 11652 | 0, 11796 | 0, 0 | 0) | 0;
     if (!$5) {
      break label$7
     }
     if (!((HEAPU8[($0 + 8 | 0) >> 0] | 0) & 1 | 0)) {
      break label$1
     }
     $4 = __cxxabiv1____pointer_type_info__can_catch_nested_28__cxxabiv1____shim_type_info_20const__29_20const($5 | 0, HEAP32[($1 + 12 | 0) >> 2] | 0 | 0) | 0;
     break label$1;
    }
    $5 = HEAP32[($0 + 12 | 0) >> 2] | 0;
    if (!$5) {
     break label$1
    }
    $4 = 0;
    label$8 : {
     $5 = __dynamic_cast($5 | 0, 11652 | 0, 11908 | 0, 0 | 0) | 0;
     if (!$5) {
      break label$8
     }
     if (!((HEAPU8[($0 + 8 | 0) >> 0] | 0) & 1 | 0)) {
      break label$1
     }
     $4 = __cxxabiv1____pointer_to_member_type_info__can_catch_nested_28__cxxabiv1____shim_type_info_20const__29_20const($5 | 0, HEAP32[($1 + 12 | 0) >> 2] | 0 | 0) | 0;
     break label$1;
    }
    $0 = HEAP32[($0 + 12 | 0) >> 2] | 0;
    if (!$0) {
     break label$1
    }
    $4 = 0;
    $0 = __dynamic_cast($0 | 0, 11652 | 0, 11700 | 0, 0 | 0) | 0;
    if (!$0) {
     break label$1
    }
    $1 = HEAP32[($1 + 12 | 0) >> 2] | 0;
    if (!$1) {
     break label$1
    }
    $4 = 0;
    $1 = __dynamic_cast($1 | 0, 11652 | 0, 11700 | 0, 0 | 0) | 0;
    if (!$1) {
     break label$1
    }
    memset($3 + 8 | 0 | 4 | 0 | 0, 0 | 0, 52 | 0) | 0;
    HEAP32[($3 + 56 | 0) >> 2] = 1;
    HEAP32[($3 + 20 | 0) >> 2] = -1;
    HEAP32[($3 + 16 | 0) >> 2] = $0;
    HEAP32[($3 + 8 | 0) >> 2] = $1;
    FUNCTION_TABLE[HEAP32[((HEAP32[$1 >> 2] | 0) + 28 | 0) >> 2] | 0 | 0]($1, $3 + 8 | 0, HEAP32[$2 >> 2] | 0, 1);
    label$9 : {
     $1 = HEAP32[($3 + 32 | 0) >> 2] | 0;
     if (($1 | 0) != (1 | 0)) {
      break label$9
     }
     if (!(HEAP32[$2 >> 2] | 0)) {
      break label$9
     }
     HEAP32[$2 >> 2] = HEAP32[($3 + 24 | 0) >> 2] | 0;
    }
    $4 = ($1 | 0) == (1 | 0);
    break label$1;
   }
   $4 = 0;
  }
  __stack_pointer = $3 + 64 | 0;
  return $4 | 0;
 }
 
 function __cxxabiv1____pointer_type_info__can_catch_nested_28__cxxabiv1____shim_type_info_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $2 = 0;
  label$1 : {
   label$2 : while (1) {
    label$3 : {
     if ($1) {
      break label$3
     }
     return 0 | 0;
    }
    $2 = 0;
    $1 = __dynamic_cast($1 | 0, 11652 | 0, 11796 | 0, 0 | 0) | 0;
    if (!$1) {
     break label$1
    }
    if ((HEAP32[($1 + 8 | 0) >> 2] | 0) & ((HEAP32[($0 + 8 | 0) >> 2] | 0) ^ -1 | 0) | 0) {
     break label$1
    }
    label$4 : {
     if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29(HEAP32[($0 + 12 | 0) >> 2] | 0 | 0, HEAP32[($1 + 12 | 0) >> 2] | 0 | 0, 0 | 0) | 0)) {
      break label$4
     }
     return 1 | 0;
    }
    if (!((HEAPU8[($0 + 8 | 0) >> 0] | 0) & 1 | 0)) {
     break label$1
    }
    $3 = HEAP32[($0 + 12 | 0) >> 2] | 0;
    if (!$3) {
     break label$1
    }
    label$5 : {
     $3 = __dynamic_cast($3 | 0, 11652 | 0, 11796 | 0, 0 | 0) | 0;
     if (!$3) {
      break label$5
     }
     $1 = HEAP32[($1 + 12 | 0) >> 2] | 0;
     $0 = $3;
     continue label$2;
    }
    break label$2;
   };
   $0 = HEAP32[($0 + 12 | 0) >> 2] | 0;
   if (!$0) {
    break label$1
   }
   $2 = 0;
   $0 = __dynamic_cast($0 | 0, 11652 | 0, 11908 | 0, 0 | 0) | 0;
   if (!$0) {
    break label$1
   }
   $2 = __cxxabiv1____pointer_to_member_type_info__can_catch_nested_28__cxxabiv1____shim_type_info_20const__29_20const($0 | 0, HEAP32[($1 + 12 | 0) >> 2] | 0 | 0) | 0;
  }
  return $2 | 0;
 }
 
 function __cxxabiv1____pointer_to_member_type_info__can_catch_nested_28__cxxabiv1____shim_type_info_20const__29_20const($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  label$1 : {
   if (!$1) {
    break label$1
   }
   $1 = __dynamic_cast($1 | 0, 11652 | 0, 11908 | 0, 0 | 0) | 0;
   if (!$1) {
    break label$1
   }
   if ((HEAP32[($1 + 8 | 0) >> 2] | 0) & ((HEAP32[($0 + 8 | 0) >> 2] | 0) ^ -1 | 0) | 0) {
    break label$1
   }
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29(HEAP32[($0 + 12 | 0) >> 2] | 0 | 0, HEAP32[($1 + 12 | 0) >> 2] | 0 | 0, 0 | 0) | 0)) {
    break label$1
   }
   return is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29(HEAP32[($0 + 16 | 0) >> 2] | 0 | 0, HEAP32[($1 + 16 | 0) >> 2] | 0 | 0, 0 | 0) | 0 | 0;
  }
  return 0 | 0;
 }
 
 function __cxxabiv1____class_type_info__process_static_type_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  HEAP8[($1 + 53 | 0) >> 0] = 1;
  label$1 : {
   if ((HEAP32[($1 + 4 | 0) >> 2] | 0 | 0) != ($3 | 0)) {
    break label$1
   }
   HEAP8[($1 + 52 | 0) >> 0] = 1;
   label$2 : {
    $3 = HEAP32[($1 + 16 | 0) >> 2] | 0;
    if ($3) {
     break label$2
    }
    HEAP32[($1 + 36 | 0) >> 2] = 1;
    HEAP32[($1 + 24 | 0) >> 2] = $4;
    HEAP32[($1 + 16 | 0) >> 2] = $2;
    if (($4 | 0) != (1 | 0)) {
     break label$1
    }
    if ((HEAP32[($1 + 48 | 0) >> 2] | 0 | 0) != (1 | 0)) {
     break label$1
    }
    HEAP8[($1 + 54 | 0) >> 0] = 1;
    return;
   }
   label$3 : {
    if (($3 | 0) != ($2 | 0)) {
     break label$3
    }
    label$4 : {
     $3 = HEAP32[($1 + 24 | 0) >> 2] | 0;
     if (($3 | 0) != (2 | 0)) {
      break label$4
     }
     HEAP32[($1 + 24 | 0) >> 2] = $4;
     $3 = $4;
    }
    if ((HEAP32[($1 + 48 | 0) >> 2] | 0 | 0) != (1 | 0)) {
     break label$1
    }
    if (($3 | 0) != (1 | 0)) {
     break label$1
    }
    HEAP8[($1 + 54 | 0) >> 0] = 1;
    return;
   }
   HEAP8[($1 + 54 | 0) >> 0] = 1;
   HEAP32[($1 + 36 | 0) >> 2] = (HEAP32[($1 + 36 | 0) >> 2] | 0) + 1 | 0;
  }
 }
 
 function __cxxabiv1____class_type_info__process_static_type_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_29_20const($0, $1, $2, $3) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  label$1 : {
   if ((HEAP32[($1 + 4 | 0) >> 2] | 0 | 0) != ($2 | 0)) {
    break label$1
   }
   if ((HEAP32[($1 + 28 | 0) >> 2] | 0 | 0) == (1 | 0)) {
    break label$1
   }
   HEAP32[($1 + 28 | 0) >> 2] = $3;
  }
 }
 
 function __cxxabiv1____vmi_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $5 = 0, $8 = 0, $6 = 0, $7 = 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, $4 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_static_type_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_29_20const($1 | 0, $1 | 0, $2 | 0, $3 | 0);
   return;
  }
  label$2 : {
   label$3 : {
    if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[$1 >> 2] | 0 | 0, $4 | 0) | 0)) {
     break label$3
    }
    label$4 : {
     label$5 : {
      if ((HEAP32[($1 + 16 | 0) >> 2] | 0 | 0) == ($2 | 0)) {
       break label$5
      }
      if ((HEAP32[($1 + 20 | 0) >> 2] | 0 | 0) != ($2 | 0)) {
       break label$4
      }
     }
     if (($3 | 0) != (1 | 0)) {
      break label$2
     }
     HEAP32[($1 + 32 | 0) >> 2] = 1;
     return;
    }
    HEAP32[($1 + 32 | 0) >> 2] = $3;
    label$6 : {
     if ((HEAP32[($1 + 44 | 0) >> 2] | 0 | 0) == (4 | 0)) {
      break label$6
     }
     $5 = $0 + 16 | 0;
     $3 = $5 + ((HEAP32[($0 + 12 | 0) >> 2] | 0) << 3 | 0) | 0;
     $6 = 0;
     $7 = 0;
     label$7 : {
      label$8 : {
       label$9 : {
        label$10 : while (1) {
         if ($5 >>> 0 >= $3 >>> 0) {
          break label$9
         }
         HEAP16[($1 + 52 | 0) >> 1] = 0;
         __cxxabiv1____base_class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const($5 | 0, $1 | 0, $2 | 0, $2 | 0, 1 | 0, $4 | 0);
         if (HEAPU8[($1 + 54 | 0) >> 0] | 0) {
          break label$9
         }
         label$11 : {
          if (!(HEAPU8[($1 + 53 | 0) >> 0] | 0)) {
           break label$11
          }
          label$12 : {
           if (!(HEAPU8[($1 + 52 | 0) >> 0] | 0)) {
            break label$12
           }
           $8 = 1;
           if ((HEAP32[($1 + 24 | 0) >> 2] | 0 | 0) == (1 | 0)) {
            break label$8
           }
           $6 = 1;
           $7 = 1;
           $8 = 1;
           if ((HEAPU8[($0 + 8 | 0) >> 0] | 0) & 2 | 0) {
            break label$11
           }
           break label$8;
          }
          $6 = 1;
          $8 = $7;
          if (!((HEAPU8[($0 + 8 | 0) >> 0] | 0) & 1 | 0)) {
           break label$8
          }
         }
         $5 = $5 + 8 | 0;
         continue label$10;
        };
       }
       $5 = 4;
       $8 = $7;
       if (!($6 & 1 | 0)) {
        break label$7
       }
      }
      $5 = 3;
     }
     HEAP32[($1 + 44 | 0) >> 2] = $5;
     if ($8 & 1 | 0) {
      break label$2
     }
    }
    HEAP32[($1 + 20 | 0) >> 2] = $2;
    HEAP32[($1 + 40 | 0) >> 2] = (HEAP32[($1 + 40 | 0) >> 2] | 0) + 1 | 0;
    if ((HEAP32[($1 + 36 | 0) >> 2] | 0 | 0) != (1 | 0)) {
     break label$2
    }
    if ((HEAP32[($1 + 24 | 0) >> 2] | 0 | 0) != (2 | 0)) {
     break label$2
    }
    HEAP8[($1 + 54 | 0) >> 0] = 1;
    return;
   }
   $5 = HEAP32[($0 + 12 | 0) >> 2] | 0;
   $8 = $0 + 16 | 0;
   __cxxabiv1____base_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const($8 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0);
   if (($5 | 0) < (2 | 0)) {
    break label$2
   }
   $8 = $8 + ($5 << 3 | 0) | 0;
   $5 = $0 + 24 | 0;
   label$13 : {
    label$14 : {
     $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
     if ($0 & 2 | 0) {
      break label$14
     }
     if ((HEAP32[($1 + 36 | 0) >> 2] | 0 | 0) != (1 | 0)) {
      break label$13
     }
    }
    label$15 : while (1) {
     if (HEAPU8[($1 + 54 | 0) >> 0] | 0) {
      break label$2
     }
     __cxxabiv1____base_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const($5 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0);
     $5 = $5 + 8 | 0;
     if ($5 >>> 0 < $8 >>> 0) {
      continue label$15
     }
     break label$2;
    };
   }
   label$16 : {
    if ($0 & 1 | 0) {
     break label$16
    }
    label$17 : while (1) {
     if (HEAPU8[($1 + 54 | 0) >> 0] | 0) {
      break label$2
     }
     if ((HEAP32[($1 + 36 | 0) >> 2] | 0 | 0) == (1 | 0)) {
      break label$2
     }
     __cxxabiv1____base_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const($5 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0);
     $5 = $5 + 8 | 0;
     if ($5 >>> 0 < $8 >>> 0) {
      continue label$17
     }
     break label$2;
    };
   }
   label$18 : while (1) {
    if (HEAPU8[($1 + 54 | 0) >> 0] | 0) {
     break label$2
    }
    label$19 : {
     if ((HEAP32[($1 + 36 | 0) >> 2] | 0 | 0) != (1 | 0)) {
      break label$19
     }
     if ((HEAP32[($1 + 24 | 0) >> 2] | 0 | 0) == (1 | 0)) {
      break label$2
     }
    }
    __cxxabiv1____base_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const($5 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0);
    $5 = $5 + 8 | 0;
    if ($5 >>> 0 < $8 >>> 0) {
     continue label$18
    }
    break label$18;
   };
  }
 }
 
 function __cxxabiv1____base_class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  var $6 = 0, $7 = 0;
  $6 = HEAP32[($0 + 4 | 0) >> 2] | 0;
  $7 = $6 >> 8 | 0;
  label$1 : {
   if (!($6 & 1 | 0)) {
    break label$1
   }
   $7 = HEAP32[((HEAP32[$3 >> 2] | 0) + $7 | 0) >> 2] | 0;
  }
  $0 = HEAP32[$0 >> 2] | 0;
  FUNCTION_TABLE[HEAP32[((HEAP32[$0 >> 2] | 0) + 20 | 0) >> 2] | 0 | 0]($0, $1, $2, $3 + $7 | 0, $6 & 2 | 0 ? $4 : 2, $5);
 }
 
 function __cxxabiv1____base_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var $5 = 0, $6 = 0;
  $5 = HEAP32[($0 + 4 | 0) >> 2] | 0;
  $6 = $5 >> 8 | 0;
  label$1 : {
   if (!($5 & 1 | 0)) {
    break label$1
   }
   $6 = HEAP32[((HEAP32[$2 >> 2] | 0) + $6 | 0) >> 2] | 0;
  }
  $0 = HEAP32[$0 >> 2] | 0;
  FUNCTION_TABLE[HEAP32[((HEAP32[$0 >> 2] | 0) + 24 | 0) >> 2] | 0 | 0]($0, $1, $2 + $6 | 0, $5 & 2 | 0 ? $3 : 2, $4);
 }
 
 function __cxxabiv1____si_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, $4 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_static_type_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_29_20const($1 | 0, $1 | 0, $2 | 0, $3 | 0);
   return;
  }
  label$2 : {
   label$3 : {
    if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[$1 >> 2] | 0 | 0, $4 | 0) | 0)) {
     break label$3
    }
    label$4 : {
     label$5 : {
      if ((HEAP32[($1 + 16 | 0) >> 2] | 0 | 0) == ($2 | 0)) {
       break label$5
      }
      if ((HEAP32[($1 + 20 | 0) >> 2] | 0 | 0) != ($2 | 0)) {
       break label$4
      }
     }
     if (($3 | 0) != (1 | 0)) {
      break label$2
     }
     HEAP32[($1 + 32 | 0) >> 2] = 1;
     return;
    }
    HEAP32[($1 + 32 | 0) >> 2] = $3;
    label$6 : {
     if ((HEAP32[($1 + 44 | 0) >> 2] | 0 | 0) == (4 | 0)) {
      break label$6
     }
     HEAP16[($1 + 52 | 0) >> 1] = 0;
     $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
     FUNCTION_TABLE[HEAP32[((HEAP32[$0 >> 2] | 0) + 20 | 0) >> 2] | 0 | 0]($0, $1, $2, $2, 1, $4);
     label$7 : {
      if (!(HEAPU8[($1 + 53 | 0) >> 0] | 0)) {
       break label$7
      }
      HEAP32[($1 + 44 | 0) >> 2] = 3;
      if (!(HEAPU8[($1 + 52 | 0) >> 0] | 0)) {
       break label$6
      }
      break label$2;
     }
     HEAP32[($1 + 44 | 0) >> 2] = 4;
    }
    HEAP32[($1 + 20 | 0) >> 2] = $2;
    HEAP32[($1 + 40 | 0) >> 2] = (HEAP32[($1 + 40 | 0) >> 2] | 0) + 1 | 0;
    if ((HEAP32[($1 + 36 | 0) >> 2] | 0 | 0) != (1 | 0)) {
     break label$2
    }
    if ((HEAP32[($1 + 24 | 0) >> 2] | 0 | 0) != (2 | 0)) {
     break label$2
    }
    HEAP8[($1 + 54 | 0) >> 0] = 1;
    return;
   }
   $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
   FUNCTION_TABLE[HEAP32[((HEAP32[$0 >> 2] | 0) + 24 | 0) >> 2] | 0 | 0]($0, $1, $2, $3, $4);
  }
 }
 
 function __cxxabiv1____class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, $4 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_static_type_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_29_20const($1 | 0, $1 | 0, $2 | 0, $3 | 0);
   return;
  }
  label$2 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[$1 >> 2] | 0 | 0, $4 | 0) | 0)) {
    break label$2
   }
   label$3 : {
    label$4 : {
     if ((HEAP32[($1 + 16 | 0) >> 2] | 0 | 0) == ($2 | 0)) {
      break label$4
     }
     if ((HEAP32[($1 + 20 | 0) >> 2] | 0 | 0) != ($2 | 0)) {
      break label$3
     }
    }
    if (($3 | 0) != (1 | 0)) {
     break label$2
    }
    HEAP32[($1 + 32 | 0) >> 2] = 1;
    return;
   }
   HEAP32[($1 + 20 | 0) >> 2] = $2;
   HEAP32[($1 + 32 | 0) >> 2] = $3;
   HEAP32[($1 + 40 | 0) >> 2] = (HEAP32[($1 + 40 | 0) >> 2] | 0) + 1 | 0;
   label$5 : {
    if ((HEAP32[($1 + 36 | 0) >> 2] | 0 | 0) != (1 | 0)) {
     break label$5
    }
    if ((HEAP32[($1 + 24 | 0) >> 2] | 0 | 0) != (2 | 0)) {
     break label$5
    }
    HEAP8[($1 + 54 | 0) >> 0] = 1;
   }
   HEAP32[($1 + 44 | 0) >> 2] = 4;
  }
 }
 
 function __cxxabiv1____vmi_class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  var $7 = 0, $6 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, $5 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_static_type_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_29_20const($1 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0);
   return;
  }
  $6 = HEAPU8[($1 + 53 | 0) >> 0] | 0;
  $7 = HEAP32[($0 + 12 | 0) >> 2] | 0;
  HEAP8[($1 + 53 | 0) >> 0] = 0;
  $8 = HEAPU8[($1 + 52 | 0) >> 0] | 0;
  HEAP8[($1 + 52 | 0) >> 0] = 0;
  $9 = $0 + 16 | 0;
  __cxxabiv1____base_class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const($9 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0, $5 | 0);
  $10 = HEAPU8[($1 + 53 | 0) >> 0] | 0;
  $6 = $6 | $10 | 0;
  $11 = HEAPU8[($1 + 52 | 0) >> 0] | 0;
  $8 = $8 | $11 | 0;
  label$2 : {
   if (($7 | 0) < (2 | 0)) {
    break label$2
   }
   $9 = $9 + ($7 << 3 | 0) | 0;
   $7 = $0 + 24 | 0;
   label$3 : while (1) {
    if (HEAPU8[($1 + 54 | 0) >> 0] | 0) {
     break label$2
    }
    label$4 : {
     label$5 : {
      if (!($11 & 255 | 0)) {
       break label$5
      }
      if ((HEAP32[($1 + 24 | 0) >> 2] | 0 | 0) == (1 | 0)) {
       break label$2
      }
      if ((HEAPU8[($0 + 8 | 0) >> 0] | 0) & 2 | 0) {
       break label$4
      }
      break label$2;
     }
     if (!($10 & 255 | 0)) {
      break label$4
     }
     if (!((HEAPU8[($0 + 8 | 0) >> 0] | 0) & 1 | 0)) {
      break label$2
     }
    }
    HEAP16[($1 + 52 | 0) >> 1] = 0;
    __cxxabiv1____base_class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const($7 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0, $5 | 0);
    $10 = HEAPU8[($1 + 53 | 0) >> 0] | 0;
    $6 = $10 | $6 | 0;
    $11 = HEAPU8[($1 + 52 | 0) >> 0] | 0;
    $8 = $11 | $8 | 0;
    $7 = $7 + 8 | 0;
    if ($7 >>> 0 < $9 >>> 0) {
     continue label$3
    }
    break label$3;
   };
  }
  HEAP8[($1 + 53 | 0) >> 0] = ($6 & 255 | 0 | 0) != (0 | 0);
  HEAP8[($1 + 52 | 0) >> 0] = ($8 & 255 | 0 | 0) != (0 | 0);
 }
 
 function __cxxabiv1____si_class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, $5 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_static_type_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_29_20const($1 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0);
   return;
  }
  $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
  FUNCTION_TABLE[HEAP32[((HEAP32[$0 >> 2] | 0) + 20 | 0) >> 2] | 0 | 0]($0, $1, $2, $3, $4, $5);
 }
 
 function __cxxabiv1____class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const($0, $1, $2, $3, $4, $5) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  $5 = $5 | 0;
  label$1 : {
   if (!(is_equal_28std__type_info_20const__2c_20std__type_info_20const__2c_20bool_29($0 | 0, HEAP32[($1 + 8 | 0) >> 2] | 0 | 0, $5 | 0) | 0)) {
    break label$1
   }
   __cxxabiv1____class_type_info__process_static_type_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_29_20const($1 | 0, $1 | 0, $2 | 0, $3 | 0, $4 | 0);
  }
 }
 
 function __cxa_can_catch($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0;
  $3 = __stack_pointer - 16 | 0;
  __stack_pointer = $3;
  HEAP32[($3 + 12 | 0) >> 2] = HEAP32[$2 >> 2] | 0;
  label$1 : {
   $0 = FUNCTION_TABLE[HEAP32[((HEAP32[$0 >> 2] | 0) + 16 | 0) >> 2] | 0 | 0]($0, $1, $3 + 12 | 0) | 0;
   if (!$0) {
    break label$1
   }
   HEAP32[$2 >> 2] = HEAP32[($3 + 12 | 0) >> 2] | 0;
  }
  __stack_pointer = $3 + 16 | 0;
  return $0 | 0;
 }
 
 function __cxa_is_pointer_type($0) {
  $0 = $0 | 0;
  label$1 : {
   if ($0) {
    break label$1
   }
   return 0 | 0;
  }
  return (__dynamic_cast($0 | 0, 11652 | 0, 11796 | 0, 0 | 0) | 0 | 0) != (0 | 0) | 0;
 }
 
 function dlmalloc($0) {
  $0 = $0 | 0;
  var $4 = 0, $5 = 0, $6 = 0, $3 = 0, $8 = 0, $2 = 0, $12 = 0, $7 = 0, $9 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $10 = 0, $11 = 0, $1 = 0, $80 = 0, $93 = 0, $104 = 0, $112 = 0, $120 = 0, $211 = 0, $222 = 0, $230 = 0, $238 = 0, $273 = 0, $344 = 0, $351 = 0, $358 = 0, $449 = 0, $460 = 0, $468 = 0, $476 = 0, $1170 = 0, $1177 = 0, $1184 = 0, $1306 = 0, $1308 = 0, $1369 = 0, $1376 = 0, $1383 = 0, $1616 = 0, $1623 = 0, $1630 = 0;
  $1 = __stack_pointer - 16 | 0;
  __stack_pointer = $1;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               if ($0 >>> 0 > 244 >>> 0) {
                break label$13
               }
               label$14 : {
                $2 = HEAP32[(0 + 13060 | 0) >> 2] | 0;
                $3 = $0 >>> 0 < 11 >>> 0 ? 16 : ($0 + 11 | 0) & -8 | 0;
                $4 = $3 >>> 3 | 0;
                $0 = $2 >>> $4 | 0;
                if (!($0 & 3 | 0)) {
                 break label$14
                }
                $5 = (($0 ^ -1 | 0) & 1 | 0) + $4 | 0;
                $6 = $5 << 3 | 0;
                $4 = HEAP32[($6 + 13108 | 0) >> 2] | 0;
                $0 = $4 + 8 | 0;
                label$15 : {
                 label$16 : {
                  $3 = HEAP32[($4 + 8 | 0) >> 2] | 0;
                  $6 = $6 + 13100 | 0;
                  if (($3 | 0) != ($6 | 0)) {
                   break label$16
                  }
                  HEAP32[(0 + 13060 | 0) >> 2] = $2 & (__wasm_rotl_i32(-2 | 0, $5 | 0) | 0) | 0;
                  break label$15;
                 }
                 HEAP32[($3 + 12 | 0) >> 2] = $6;
                 HEAP32[($6 + 8 | 0) >> 2] = $3;
                }
                $5 = $5 << 3 | 0;
                HEAP32[($4 + 4 | 0) >> 2] = $5 | 3 | 0;
                $4 = $4 + $5 | 0;
                HEAP32[($4 + 4 | 0) >> 2] = HEAP32[($4 + 4 | 0) >> 2] | 0 | 1 | 0;
                break label$1;
               }
               $7 = HEAP32[(0 + 13068 | 0) >> 2] | 0;
               if ($3 >>> 0 <= $7 >>> 0) {
                break label$12
               }
               label$17 : {
                if (!$0) {
                 break label$17
                }
                label$18 : {
                 label$19 : {
                  $80 = $0 << $4 | 0;
                  $0 = 2 << $4 | 0;
                  $0 = $80 & ($0 | (0 - $0 | 0) | 0) | 0;
                  $0 = ($0 & (0 - $0 | 0) | 0) + -1 | 0;
                  $93 = $0;
                  $0 = ($0 >>> 12 | 0) & 16 | 0;
                  $4 = $93 >>> $0 | 0;
                  $5 = ($4 >>> 5 | 0) & 8 | 0;
                  $104 = $5 | $0 | 0;
                  $0 = $4 >>> $5 | 0;
                  $4 = ($0 >>> 2 | 0) & 4 | 0;
                  $112 = $104 | $4 | 0;
                  $0 = $0 >>> $4 | 0;
                  $4 = ($0 >>> 1 | 0) & 2 | 0;
                  $120 = $112 | $4 | 0;
                  $0 = $0 >>> $4 | 0;
                  $4 = ($0 >>> 1 | 0) & 1 | 0;
                  $5 = ($120 | $4 | 0) + ($0 >>> $4 | 0) | 0;
                  $6 = $5 << 3 | 0;
                  $4 = HEAP32[($6 + 13108 | 0) >> 2] | 0;
                  $0 = HEAP32[($4 + 8 | 0) >> 2] | 0;
                  $6 = $6 + 13100 | 0;
                  if (($0 | 0) != ($6 | 0)) {
                   break label$19
                  }
                  $2 = $2 & (__wasm_rotl_i32(-2 | 0, $5 | 0) | 0) | 0;
                  HEAP32[(0 + 13060 | 0) >> 2] = $2;
                  break label$18;
                 }
                 HEAP32[($0 + 12 | 0) >> 2] = $6;
                 HEAP32[($6 + 8 | 0) >> 2] = $0;
                }
                $0 = $4 + 8 | 0;
                HEAP32[($4 + 4 | 0) >> 2] = $3 | 3 | 0;
                $6 = $4 + $3 | 0;
                $8 = $5 << 3 | 0;
                $5 = $8 - $3 | 0;
                HEAP32[($6 + 4 | 0) >> 2] = $5 | 1 | 0;
                HEAP32[($4 + $8 | 0) >> 2] = $5;
                label$20 : {
                 if (!$7) {
                  break label$20
                 }
                 $8 = $7 >>> 3 | 0;
                 $3 = ($8 << 3 | 0) + 13100 | 0;
                 $4 = HEAP32[(0 + 13080 | 0) >> 2] | 0;
                 label$21 : {
                  label$22 : {
                   $8 = 1 << $8 | 0;
                   if ($2 & $8 | 0) {
                    break label$22
                   }
                   HEAP32[(0 + 13060 | 0) >> 2] = $2 | $8 | 0;
                   $8 = $3;
                   break label$21;
                  }
                  $8 = HEAP32[($3 + 8 | 0) >> 2] | 0;
                 }
                 HEAP32[($3 + 8 | 0) >> 2] = $4;
                 HEAP32[($8 + 12 | 0) >> 2] = $4;
                 HEAP32[($4 + 12 | 0) >> 2] = $3;
                 HEAP32[($4 + 8 | 0) >> 2] = $8;
                }
                HEAP32[(0 + 13080 | 0) >> 2] = $6;
                HEAP32[(0 + 13068 | 0) >> 2] = $5;
                break label$1;
               }
               $9 = HEAP32[(0 + 13064 | 0) >> 2] | 0;
               if (!$9) {
                break label$12
               }
               $0 = ($9 & (0 - $9 | 0) | 0) + -1 | 0;
               $211 = $0;
               $0 = ($0 >>> 12 | 0) & 16 | 0;
               $4 = $211 >>> $0 | 0;
               $5 = ($4 >>> 5 | 0) & 8 | 0;
               $222 = $5 | $0 | 0;
               $0 = $4 >>> $5 | 0;
               $4 = ($0 >>> 2 | 0) & 4 | 0;
               $230 = $222 | $4 | 0;
               $0 = $0 >>> $4 | 0;
               $4 = ($0 >>> 1 | 0) & 2 | 0;
               $238 = $230 | $4 | 0;
               $0 = $0 >>> $4 | 0;
               $4 = ($0 >>> 1 | 0) & 1 | 0;
               $6 = HEAP32[(((($238 | $4 | 0) + ($0 >>> $4 | 0) | 0) << 2 | 0) + 13364 | 0) >> 2] | 0;
               $4 = ((HEAP32[($6 + 4 | 0) >> 2] | 0) & -8 | 0) - $3 | 0;
               $5 = $6;
               label$23 : {
                label$24 : while (1) {
                 label$25 : {
                  $0 = HEAP32[($5 + 16 | 0) >> 2] | 0;
                  if ($0) {
                   break label$25
                  }
                  $0 = HEAP32[($5 + 20 | 0) >> 2] | 0;
                  if (!$0) {
                   break label$23
                  }
                 }
                 $5 = ((HEAP32[($0 + 4 | 0) >> 2] | 0) & -8 | 0) - $3 | 0;
                 $273 = $5;
                 $5 = $5 >>> 0 < $4 >>> 0;
                 $4 = $5 ? $273 : $4;
                 $6 = $5 ? $0 : $6;
                 $5 = $0;
                 continue label$24;
                };
               }
               $10 = $6 + $3 | 0;
               if ($10 >>> 0 <= $6 >>> 0) {
                break label$11
               }
               $11 = HEAP32[($6 + 24 | 0) >> 2] | 0;
               label$26 : {
                $8 = HEAP32[($6 + 12 | 0) >> 2] | 0;
                if (($8 | 0) == ($6 | 0)) {
                 break label$26
                }
                $0 = HEAP32[($6 + 8 | 0) >> 2] | 0;
                HEAP32[(0 + 13076 | 0) >> 2] | 0;
                HEAP32[($0 + 12 | 0) >> 2] = $8;
                HEAP32[($8 + 8 | 0) >> 2] = $0;
                break label$2;
               }
               label$27 : {
                $5 = $6 + 20 | 0;
                $0 = HEAP32[$5 >> 2] | 0;
                if ($0) {
                 break label$27
                }
                $0 = HEAP32[($6 + 16 | 0) >> 2] | 0;
                if (!$0) {
                 break label$10
                }
                $5 = $6 + 16 | 0;
               }
               label$28 : while (1) {
                $12 = $5;
                $8 = $0;
                $5 = $0 + 20 | 0;
                $0 = HEAP32[$5 >> 2] | 0;
                if ($0) {
                 continue label$28
                }
                $5 = $8 + 16 | 0;
                $0 = HEAP32[($8 + 16 | 0) >> 2] | 0;
                if ($0) {
                 continue label$28
                }
                break label$28;
               };
               HEAP32[$12 >> 2] = 0;
               break label$2;
              }
              $3 = -1;
              if ($0 >>> 0 > -65 >>> 0) {
               break label$12
              }
              $0 = $0 + 11 | 0;
              $3 = $0 & -8 | 0;
              $7 = HEAP32[(0 + 13064 | 0) >> 2] | 0;
              if (!$7) {
               break label$12
              }
              $12 = 31;
              label$29 : {
               if ($3 >>> 0 > 16777215 >>> 0) {
                break label$29
               }
               $0 = $0 >>> 8 | 0;
               $344 = $0;
               $0 = (($0 + 1048320 | 0) >>> 16 | 0) & 8 | 0;
               $4 = $344 << $0 | 0;
               $351 = $4;
               $4 = (($4 + 520192 | 0) >>> 16 | 0) & 4 | 0;
               $5 = $351 << $4 | 0;
               $358 = $5;
               $5 = (($5 + 245760 | 0) >>> 16 | 0) & 2 | 0;
               $0 = (($358 << $5 | 0) >>> 15 | 0) - ($0 | $4 | 0 | $5 | 0) | 0;
               $12 = ($0 << 1 | 0 | (($3 >>> ($0 + 21 | 0) | 0) & 1 | 0) | 0) + 28 | 0;
              }
              $4 = 0 - $3 | 0;
              label$30 : {
               label$31 : {
                label$32 : {
                 label$33 : {
                  $5 = HEAP32[(($12 << 2 | 0) + 13364 | 0) >> 2] | 0;
                  if ($5) {
                   break label$33
                  }
                  $0 = 0;
                  $8 = 0;
                  break label$32;
                 }
                 $0 = 0;
                 $6 = $3 << (($12 | 0) == (31 | 0) ? 0 : 25 - ($12 >>> 1 | 0) | 0) | 0;
                 $8 = 0;
                 label$34 : while (1) {
                  label$35 : {
                   $2 = ((HEAP32[($5 + 4 | 0) >> 2] | 0) & -8 | 0) - $3 | 0;
                   if ($2 >>> 0 >= $4 >>> 0) {
                    break label$35
                   }
                   $4 = $2;
                   $8 = $5;
                   if ($4) {
                    break label$35
                   }
                   $4 = 0;
                   $8 = $5;
                   $0 = $5;
                   break label$31;
                  }
                  $2 = HEAP32[($5 + 20 | 0) >> 2] | 0;
                  $5 = HEAP32[(($5 + (($6 >>> 29 | 0) & 4 | 0) | 0) + 16 | 0) >> 2] | 0;
                  $0 = $2 ? (($2 | 0) == ($5 | 0) ? $0 : $2) : $0;
                  $6 = $6 << 1 | 0;
                  if ($5) {
                   continue label$34
                  }
                  break label$34;
                 };
                }
                label$36 : {
                 if ($0 | $8 | 0) {
                  break label$36
                 }
                 $0 = 2 << $12 | 0;
                 $0 = ($0 | (0 - $0 | 0) | 0) & $7 | 0;
                 if (!$0) {
                  break label$12
                 }
                 $0 = ($0 & (0 - $0 | 0) | 0) + -1 | 0;
                 $449 = $0;
                 $0 = ($0 >>> 12 | 0) & 16 | 0;
                 $5 = $449 >>> $0 | 0;
                 $6 = ($5 >>> 5 | 0) & 8 | 0;
                 $460 = $6 | $0 | 0;
                 $0 = $5 >>> $6 | 0;
                 $5 = ($0 >>> 2 | 0) & 4 | 0;
                 $468 = $460 | $5 | 0;
                 $0 = $0 >>> $5 | 0;
                 $5 = ($0 >>> 1 | 0) & 2 | 0;
                 $476 = $468 | $5 | 0;
                 $0 = $0 >>> $5 | 0;
                 $5 = ($0 >>> 1 | 0) & 1 | 0;
                 $0 = HEAP32[(((($476 | $5 | 0) + ($0 >>> $5 | 0) | 0) << 2 | 0) + 13364 | 0) >> 2] | 0;
                }
                if (!$0) {
                 break label$30
                }
               }
               label$37 : while (1) {
                $2 = ((HEAP32[($0 + 4 | 0) >> 2] | 0) & -8 | 0) - $3 | 0;
                $6 = $2 >>> 0 < $4 >>> 0;
                label$38 : {
                 $5 = HEAP32[($0 + 16 | 0) >> 2] | 0;
                 if ($5) {
                  break label$38
                 }
                 $5 = HEAP32[($0 + 20 | 0) >> 2] | 0;
                }
                $4 = $6 ? $2 : $4;
                $8 = $6 ? $0 : $8;
                $0 = $5;
                if ($0) {
                 continue label$37
                }
                break label$37;
               };
              }
              if (!$8) {
               break label$12
              }
              if ($4 >>> 0 >= ((HEAP32[(0 + 13068 | 0) >> 2] | 0) - $3 | 0) >>> 0) {
               break label$12
              }
              $12 = $8 + $3 | 0;
              if ($12 >>> 0 <= $8 >>> 0) {
               break label$11
              }
              $9 = HEAP32[($8 + 24 | 0) >> 2] | 0;
              label$39 : {
               $6 = HEAP32[($8 + 12 | 0) >> 2] | 0;
               if (($6 | 0) == ($8 | 0)) {
                break label$39
               }
               $0 = HEAP32[($8 + 8 | 0) >> 2] | 0;
               HEAP32[(0 + 13076 | 0) >> 2] | 0;
               HEAP32[($0 + 12 | 0) >> 2] = $6;
               HEAP32[($6 + 8 | 0) >> 2] = $0;
               break label$3;
              }
              label$40 : {
               $5 = $8 + 20 | 0;
               $0 = HEAP32[$5 >> 2] | 0;
               if ($0) {
                break label$40
               }
               $0 = HEAP32[($8 + 16 | 0) >> 2] | 0;
               if (!$0) {
                break label$9
               }
               $5 = $8 + 16 | 0;
              }
              label$41 : while (1) {
               $2 = $5;
               $6 = $0;
               $5 = $0 + 20 | 0;
               $0 = HEAP32[$5 >> 2] | 0;
               if ($0) {
                continue label$41
               }
               $5 = $6 + 16 | 0;
               $0 = HEAP32[($6 + 16 | 0) >> 2] | 0;
               if ($0) {
                continue label$41
               }
               break label$41;
              };
              HEAP32[$2 >> 2] = 0;
              break label$3;
             }
             label$42 : {
              $0 = HEAP32[(0 + 13068 | 0) >> 2] | 0;
              if ($0 >>> 0 < $3 >>> 0) {
               break label$42
              }
              $4 = HEAP32[(0 + 13080 | 0) >> 2] | 0;
              label$43 : {
               label$44 : {
                $5 = $0 - $3 | 0;
                if ($5 >>> 0 < 16 >>> 0) {
                 break label$44
                }
                HEAP32[(0 + 13068 | 0) >> 2] = $5;
                $6 = $4 + $3 | 0;
                HEAP32[(0 + 13080 | 0) >> 2] = $6;
                HEAP32[($6 + 4 | 0) >> 2] = $5 | 1 | 0;
                HEAP32[($4 + $0 | 0) >> 2] = $5;
                HEAP32[($4 + 4 | 0) >> 2] = $3 | 3 | 0;
                break label$43;
               }
               HEAP32[(0 + 13080 | 0) >> 2] = 0;
               HEAP32[(0 + 13068 | 0) >> 2] = 0;
               HEAP32[($4 + 4 | 0) >> 2] = $0 | 3 | 0;
               $0 = $4 + $0 | 0;
               HEAP32[($0 + 4 | 0) >> 2] = HEAP32[($0 + 4 | 0) >> 2] | 0 | 1 | 0;
              }
              $0 = $4 + 8 | 0;
              break label$1;
             }
             label$45 : {
              $6 = HEAP32[(0 + 13072 | 0) >> 2] | 0;
              if ($6 >>> 0 <= $3 >>> 0) {
               break label$45
              }
              $4 = $6 - $3 | 0;
              HEAP32[(0 + 13072 | 0) >> 2] = $4;
              $0 = HEAP32[(0 + 13084 | 0) >> 2] | 0;
              $5 = $0 + $3 | 0;
              HEAP32[(0 + 13084 | 0) >> 2] = $5;
              HEAP32[($5 + 4 | 0) >> 2] = $4 | 1 | 0;
              HEAP32[($0 + 4 | 0) >> 2] = $3 | 3 | 0;
              $0 = $0 + 8 | 0;
              break label$1;
             }
             label$46 : {
              label$47 : {
               if (!(HEAP32[(0 + 13532 | 0) >> 2] | 0)) {
                break label$47
               }
               $4 = HEAP32[(0 + 13540 | 0) >> 2] | 0;
               break label$46;
              }
              i64toi32_i32$1 = 0;
              i64toi32_i32$0 = -1;
              HEAP32[(i64toi32_i32$1 + 13544 | 0) >> 2] = -1;
              HEAP32[(i64toi32_i32$1 + 13548 | 0) >> 2] = i64toi32_i32$0;
              i64toi32_i32$1 = 0;
              i64toi32_i32$0 = 4096;
              HEAP32[(i64toi32_i32$1 + 13536 | 0) >> 2] = 4096;
              HEAP32[(i64toi32_i32$1 + 13540 | 0) >> 2] = i64toi32_i32$0;
              HEAP32[(0 + 13532 | 0) >> 2] = (($1 + 12 | 0) & -16 | 0) ^ 1431655768 | 0;
              HEAP32[(0 + 13552 | 0) >> 2] = 0;
              HEAP32[(0 + 13504 | 0) >> 2] = 0;
              $4 = 4096;
             }
             $0 = 0;
             $7 = $3 + 47 | 0;
             $2 = $4 + $7 | 0;
             $12 = 0 - $4 | 0;
             $8 = $2 & $12 | 0;
             if ($8 >>> 0 <= $3 >>> 0) {
              break label$1
             }
             $0 = 0;
             label$48 : {
              $4 = HEAP32[(0 + 13500 | 0) >> 2] | 0;
              if (!$4) {
               break label$48
              }
              $5 = HEAP32[(0 + 13492 | 0) >> 2] | 0;
              $9 = $5 + $8 | 0;
              if ($9 >>> 0 <= $5 >>> 0) {
               break label$1
              }
              if ($9 >>> 0 > $4 >>> 0) {
               break label$1
              }
             }
             if ((HEAPU8[(0 + 13504 | 0) >> 0] | 0) & 4 | 0) {
              break label$6
             }
             label$49 : {
              label$50 : {
               label$51 : {
                $4 = HEAP32[(0 + 13084 | 0) >> 2] | 0;
                if (!$4) {
                 break label$51
                }
                $0 = 13508;
                label$52 : while (1) {
                 label$53 : {
                  $5 = HEAP32[$0 >> 2] | 0;
                  if ($5 >>> 0 > $4 >>> 0) {
                   break label$53
                  }
                  if (($5 + (HEAP32[($0 + 4 | 0) >> 2] | 0) | 0) >>> 0 > $4 >>> 0) {
                   break label$50
                  }
                 }
                 $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
                 if ($0) {
                  continue label$52
                 }
                 break label$52;
                };
               }
               $6 = sbrk(0 | 0) | 0;
               if (($6 | 0) == (-1 | 0)) {
                break label$7
               }
               $2 = $8;
               label$54 : {
                $0 = HEAP32[(0 + 13536 | 0) >> 2] | 0;
                $4 = $0 + -1 | 0;
                if (!($4 & $6 | 0)) {
                 break label$54
                }
                $2 = ($8 - $6 | 0) + (($4 + $6 | 0) & (0 - $0 | 0) | 0) | 0;
               }
               if ($2 >>> 0 <= $3 >>> 0) {
                break label$7
               }
               if ($2 >>> 0 > 2147483646 >>> 0) {
                break label$7
               }
               label$55 : {
                $0 = HEAP32[(0 + 13500 | 0) >> 2] | 0;
                if (!$0) {
                 break label$55
                }
                $4 = HEAP32[(0 + 13492 | 0) >> 2] | 0;
                $5 = $4 + $2 | 0;
                if ($5 >>> 0 <= $4 >>> 0) {
                 break label$7
                }
                if ($5 >>> 0 > $0 >>> 0) {
                 break label$7
                }
               }
               $0 = sbrk($2 | 0) | 0;
               if (($0 | 0) != ($6 | 0)) {
                break label$49
               }
               break label$5;
              }
              $2 = ($2 - $6 | 0) & $12 | 0;
              if ($2 >>> 0 > 2147483646 >>> 0) {
               break label$7
              }
              $6 = sbrk($2 | 0) | 0;
              if (($6 | 0) == ((HEAP32[$0 >> 2] | 0) + (HEAP32[($0 + 4 | 0) >> 2] | 0) | 0 | 0)) {
               break label$8
              }
              $0 = $6;
             }
             label$56 : {
              if (($3 + 48 | 0) >>> 0 <= $2 >>> 0) {
               break label$56
              }
              if (($0 | 0) == (-1 | 0)) {
               break label$56
              }
              label$57 : {
               $4 = HEAP32[(0 + 13540 | 0) >> 2] | 0;
               $4 = (($7 - $2 | 0) + $4 | 0) & (0 - $4 | 0) | 0;
               if ($4 >>> 0 <= 2147483646 >>> 0) {
                break label$57
               }
               $6 = $0;
               break label$5;
              }
              label$58 : {
               if ((sbrk($4 | 0) | 0 | 0) == (-1 | 0)) {
                break label$58
               }
               $2 = $4 + $2 | 0;
               $6 = $0;
               break label$5;
              }
              sbrk(0 - $2 | 0 | 0) | 0;
              break label$7;
             }
             $6 = $0;
             if (($0 | 0) != (-1 | 0)) {
              break label$5
             }
             break label$7;
            }
            abort();
           }
           $8 = 0;
           break label$2;
          }
          $6 = 0;
          break label$3;
         }
         if (($6 | 0) != (-1 | 0)) {
          break label$5
         }
        }
        HEAP32[(0 + 13504 | 0) >> 2] = HEAP32[(0 + 13504 | 0) >> 2] | 0 | 4 | 0;
       }
       if ($8 >>> 0 > 2147483646 >>> 0) {
        break label$4
       }
       $6 = sbrk($8 | 0) | 0;
       $0 = sbrk(0 | 0) | 0;
       if ($6 >>> 0 >= $0 >>> 0) {
        break label$4
       }
       if (($6 | 0) == (-1 | 0)) {
        break label$4
       }
       if (($0 | 0) == (-1 | 0)) {
        break label$4
       }
       $2 = $0 - $6 | 0;
       if ($2 >>> 0 <= ($3 + 40 | 0) >>> 0) {
        break label$4
       }
      }
      $0 = (HEAP32[(0 + 13492 | 0) >> 2] | 0) + $2 | 0;
      HEAP32[(0 + 13492 | 0) >> 2] = $0;
      label$59 : {
       if ($0 >>> 0 <= (HEAP32[(0 + 13496 | 0) >> 2] | 0) >>> 0) {
        break label$59
       }
       HEAP32[(0 + 13496 | 0) >> 2] = $0;
      }
      label$60 : {
       label$61 : {
        label$62 : {
         label$63 : {
          $4 = HEAP32[(0 + 13084 | 0) >> 2] | 0;
          if (!$4) {
           break label$63
          }
          $0 = 13508;
          label$64 : while (1) {
           $5 = HEAP32[$0 >> 2] | 0;
           $8 = HEAP32[($0 + 4 | 0) >> 2] | 0;
           if (($6 | 0) == ($5 + $8 | 0 | 0)) {
            break label$62
           }
           $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
           if ($0) {
            continue label$64
           }
           break label$61;
          };
         }
         label$65 : {
          label$66 : {
           $0 = HEAP32[(0 + 13076 | 0) >> 2] | 0;
           if (!$0) {
            break label$66
           }
           if ($6 >>> 0 >= $0 >>> 0) {
            break label$65
           }
          }
          HEAP32[(0 + 13076 | 0) >> 2] = $6;
         }
         $0 = 0;
         HEAP32[(0 + 13512 | 0) >> 2] = $2;
         HEAP32[(0 + 13508 | 0) >> 2] = $6;
         HEAP32[(0 + 13092 | 0) >> 2] = -1;
         HEAP32[(0 + 13096 | 0) >> 2] = HEAP32[(0 + 13532 | 0) >> 2] | 0;
         HEAP32[(0 + 13520 | 0) >> 2] = 0;
         label$67 : while (1) {
          $4 = $0 << 3 | 0;
          $5 = $4 + 13100 | 0;
          HEAP32[($4 + 13108 | 0) >> 2] = $5;
          HEAP32[($4 + 13112 | 0) >> 2] = $5;
          $0 = $0 + 1 | 0;
          if (($0 | 0) != (32 | 0)) {
           continue label$67
          }
          break label$67;
         };
         $0 = $2 + -40 | 0;
         $4 = ($6 + 8 | 0) & 7 | 0 ? (-8 - $6 | 0) & 7 | 0 : 0;
         $5 = $0 - $4 | 0;
         HEAP32[(0 + 13072 | 0) >> 2] = $5;
         $4 = $6 + $4 | 0;
         HEAP32[(0 + 13084 | 0) >> 2] = $4;
         HEAP32[($4 + 4 | 0) >> 2] = $5 | 1 | 0;
         HEAP32[(($6 + $0 | 0) + 4 | 0) >> 2] = 40;
         HEAP32[(0 + 13088 | 0) >> 2] = HEAP32[(0 + 13548 | 0) >> 2] | 0;
         break label$60;
        }
        if ($6 >>> 0 <= $4 >>> 0) {
         break label$61
        }
        if ($5 >>> 0 > $4 >>> 0) {
         break label$61
        }
        if ((HEAP32[($0 + 12 | 0) >> 2] | 0) & 8 | 0) {
         break label$61
        }
        HEAP32[($0 + 4 | 0) >> 2] = $8 + $2 | 0;
        $0 = ($4 + 8 | 0) & 7 | 0 ? (-8 - $4 | 0) & 7 | 0 : 0;
        $5 = $4 + $0 | 0;
        HEAP32[(0 + 13084 | 0) >> 2] = $5;
        $6 = (HEAP32[(0 + 13072 | 0) >> 2] | 0) + $2 | 0;
        $0 = $6 - $0 | 0;
        HEAP32[(0 + 13072 | 0) >> 2] = $0;
        HEAP32[($5 + 4 | 0) >> 2] = $0 | 1 | 0;
        HEAP32[(($4 + $6 | 0) + 4 | 0) >> 2] = 40;
        HEAP32[(0 + 13088 | 0) >> 2] = HEAP32[(0 + 13548 | 0) >> 2] | 0;
        break label$60;
       }
       label$68 : {
        $8 = HEAP32[(0 + 13076 | 0) >> 2] | 0;
        if ($6 >>> 0 >= $8 >>> 0) {
         break label$68
        }
        HEAP32[(0 + 13076 | 0) >> 2] = $6;
        $8 = $6;
       }
       $5 = $6 + $2 | 0;
       $0 = 13508;
       label$69 : {
        label$70 : {
         label$71 : {
          label$72 : {
           label$73 : {
            label$74 : {
             label$75 : {
              label$76 : while (1) {
               if ((HEAP32[$0 >> 2] | 0 | 0) == ($5 | 0)) {
                break label$75
               }
               $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
               if ($0) {
                continue label$76
               }
               break label$74;
              };
             }
             if (!((HEAPU8[($0 + 12 | 0) >> 0] | 0) & 8 | 0)) {
              break label$73
             }
            }
            $0 = 13508;
            label$77 : while (1) {
             label$78 : {
              $5 = HEAP32[$0 >> 2] | 0;
              if ($5 >>> 0 > $4 >>> 0) {
               break label$78
              }
              $5 = $5 + (HEAP32[($0 + 4 | 0) >> 2] | 0) | 0;
              if ($5 >>> 0 > $4 >>> 0) {
               break label$72
              }
             }
             $0 = HEAP32[($0 + 8 | 0) >> 2] | 0;
             continue label$77;
            };
           }
           HEAP32[$0 >> 2] = $6;
           HEAP32[($0 + 4 | 0) >> 2] = (HEAP32[($0 + 4 | 0) >> 2] | 0) + $2 | 0;
           $12 = $6 + (($6 + 8 | 0) & 7 | 0 ? (-8 - $6 | 0) & 7 | 0 : 0) | 0;
           HEAP32[($12 + 4 | 0) >> 2] = $3 | 3 | 0;
           $2 = $5 + (($5 + 8 | 0) & 7 | 0 ? (-8 - $5 | 0) & 7 | 0 : 0) | 0;
           $5 = ($2 - $12 | 0) - $3 | 0;
           $3 = $12 + $3 | 0;
           label$79 : {
            if (($4 | 0) != ($2 | 0)) {
             break label$79
            }
            HEAP32[(0 + 13084 | 0) >> 2] = $3;
            $0 = (HEAP32[(0 + 13072 | 0) >> 2] | 0) + $5 | 0;
            HEAP32[(0 + 13072 | 0) >> 2] = $0;
            HEAP32[($3 + 4 | 0) >> 2] = $0 | 1 | 0;
            break label$70;
           }
           label$80 : {
            if ((HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0) != ($2 | 0)) {
             break label$80
            }
            HEAP32[(0 + 13080 | 0) >> 2] = $3;
            $0 = (HEAP32[(0 + 13068 | 0) >> 2] | 0) + $5 | 0;
            HEAP32[(0 + 13068 | 0) >> 2] = $0;
            HEAP32[($3 + 4 | 0) >> 2] = $0 | 1 | 0;
            HEAP32[($3 + $0 | 0) >> 2] = $0;
            break label$70;
           }
           label$81 : {
            $0 = HEAP32[($2 + 4 | 0) >> 2] | 0;
            if (($0 & 3 | 0 | 0) != (1 | 0)) {
             break label$81
            }
            $7 = $0 & -8 | 0;
            label$82 : {
             label$83 : {
              if ($0 >>> 0 > 255 >>> 0) {
               break label$83
              }
              $4 = HEAP32[($2 + 8 | 0) >> 2] | 0;
              $8 = $0 >>> 3 | 0;
              $6 = ($8 << 3 | 0) + 13100 | 0;
              label$84 : {
               $0 = HEAP32[($2 + 12 | 0) >> 2] | 0;
               if (($0 | 0) != ($4 | 0)) {
                break label$84
               }
               HEAP32[(0 + 13060 | 0) >> 2] = (HEAP32[(0 + 13060 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $8 | 0) | 0) | 0;
               break label$82;
              }
              HEAP32[($4 + 12 | 0) >> 2] = $0;
              HEAP32[($0 + 8 | 0) >> 2] = $4;
              break label$82;
             }
             $9 = HEAP32[($2 + 24 | 0) >> 2] | 0;
             label$85 : {
              label$86 : {
               $6 = HEAP32[($2 + 12 | 0) >> 2] | 0;
               if (($6 | 0) == ($2 | 0)) {
                break label$86
               }
               $0 = HEAP32[($2 + 8 | 0) >> 2] | 0;
               HEAP32[($0 + 12 | 0) >> 2] = $6;
               HEAP32[($6 + 8 | 0) >> 2] = $0;
               break label$85;
              }
              label$87 : {
               $0 = $2 + 20 | 0;
               $4 = HEAP32[$0 >> 2] | 0;
               if ($4) {
                break label$87
               }
               $0 = $2 + 16 | 0;
               $4 = HEAP32[$0 >> 2] | 0;
               if ($4) {
                break label$87
               }
               $6 = 0;
               break label$85;
              }
              label$88 : while (1) {
               $8 = $0;
               $6 = $4;
               $0 = $4 + 20 | 0;
               $4 = HEAP32[$0 >> 2] | 0;
               if ($4) {
                continue label$88
               }
               $0 = $6 + 16 | 0;
               $4 = HEAP32[($6 + 16 | 0) >> 2] | 0;
               if ($4) {
                continue label$88
               }
               break label$88;
              };
              HEAP32[$8 >> 2] = 0;
             }
             if (!$9) {
              break label$82
             }
             label$89 : {
              label$90 : {
               $4 = HEAP32[($2 + 28 | 0) >> 2] | 0;
               $0 = ($4 << 2 | 0) + 13364 | 0;
               if ((HEAP32[$0 >> 2] | 0 | 0) != ($2 | 0)) {
                break label$90
               }
               HEAP32[$0 >> 2] = $6;
               if ($6) {
                break label$89
               }
               HEAP32[(0 + 13064 | 0) >> 2] = (HEAP32[(0 + 13064 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $4 | 0) | 0) | 0;
               break label$82;
              }
              HEAP32[($9 + ((HEAP32[($9 + 16 | 0) >> 2] | 0 | 0) == ($2 | 0) ? 16 : 20) | 0) >> 2] = $6;
              if (!$6) {
               break label$82
              }
             }
             HEAP32[($6 + 24 | 0) >> 2] = $9;
             label$91 : {
              $0 = HEAP32[($2 + 16 | 0) >> 2] | 0;
              if (!$0) {
               break label$91
              }
              HEAP32[($6 + 16 | 0) >> 2] = $0;
              HEAP32[($0 + 24 | 0) >> 2] = $6;
             }
             $0 = HEAP32[($2 + 20 | 0) >> 2] | 0;
             if (!$0) {
              break label$82
             }
             HEAP32[($6 + 20 | 0) >> 2] = $0;
             HEAP32[($0 + 24 | 0) >> 2] = $6;
            }
            $5 = $7 + $5 | 0;
            $2 = $2 + $7 | 0;
           }
           HEAP32[($2 + 4 | 0) >> 2] = (HEAP32[($2 + 4 | 0) >> 2] | 0) & -2 | 0;
           HEAP32[($3 + 4 | 0) >> 2] = $5 | 1 | 0;
           HEAP32[($3 + $5 | 0) >> 2] = $5;
           label$92 : {
            if ($5 >>> 0 > 255 >>> 0) {
             break label$92
            }
            $4 = $5 >>> 3 | 0;
            $0 = ($4 << 3 | 0) + 13100 | 0;
            label$93 : {
             label$94 : {
              $5 = HEAP32[(0 + 13060 | 0) >> 2] | 0;
              $4 = 1 << $4 | 0;
              if ($5 & $4 | 0) {
               break label$94
              }
              HEAP32[(0 + 13060 | 0) >> 2] = $5 | $4 | 0;
              $4 = $0;
              break label$93;
             }
             $4 = HEAP32[($0 + 8 | 0) >> 2] | 0;
            }
            HEAP32[($0 + 8 | 0) >> 2] = $3;
            HEAP32[($4 + 12 | 0) >> 2] = $3;
            HEAP32[($3 + 12 | 0) >> 2] = $0;
            HEAP32[($3 + 8 | 0) >> 2] = $4;
            break label$70;
           }
           $0 = 31;
           label$95 : {
            if ($5 >>> 0 > 16777215 >>> 0) {
             break label$95
            }
            $0 = $5 >>> 8 | 0;
            $1170 = $0;
            $0 = (($0 + 1048320 | 0) >>> 16 | 0) & 8 | 0;
            $4 = $1170 << $0 | 0;
            $1177 = $4;
            $4 = (($4 + 520192 | 0) >>> 16 | 0) & 4 | 0;
            $6 = $1177 << $4 | 0;
            $1184 = $6;
            $6 = (($6 + 245760 | 0) >>> 16 | 0) & 2 | 0;
            $0 = (($1184 << $6 | 0) >>> 15 | 0) - ($0 | $4 | 0 | $6 | 0) | 0;
            $0 = ($0 << 1 | 0 | (($5 >>> ($0 + 21 | 0) | 0) & 1 | 0) | 0) + 28 | 0;
           }
           HEAP32[($3 + 28 | 0) >> 2] = $0;
           i64toi32_i32$1 = $3;
           i64toi32_i32$0 = 0;
           HEAP32[($3 + 16 | 0) >> 2] = 0;
           HEAP32[($3 + 20 | 0) >> 2] = i64toi32_i32$0;
           $4 = ($0 << 2 | 0) + 13364 | 0;
           label$96 : {
            label$97 : {
             $6 = HEAP32[(0 + 13064 | 0) >> 2] | 0;
             $8 = 1 << $0 | 0;
             if ($6 & $8 | 0) {
              break label$97
             }
             HEAP32[(0 + 13064 | 0) >> 2] = $6 | $8 | 0;
             HEAP32[$4 >> 2] = $3;
             HEAP32[($3 + 24 | 0) >> 2] = $4;
             break label$96;
            }
            $0 = $5 << (($0 | 0) == (31 | 0) ? 0 : 25 - ($0 >>> 1 | 0) | 0) | 0;
            $6 = HEAP32[$4 >> 2] | 0;
            label$98 : while (1) {
             $4 = $6;
             if (((HEAP32[($4 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($5 | 0)) {
              break label$71
             }
             $6 = $0 >>> 29 | 0;
             $0 = $0 << 1 | 0;
             $8 = ($4 + ($6 & 4 | 0) | 0) + 16 | 0;
             $6 = HEAP32[$8 >> 2] | 0;
             if ($6) {
              continue label$98
             }
             break label$98;
            };
            HEAP32[$8 >> 2] = $3;
            HEAP32[($3 + 24 | 0) >> 2] = $4;
           }
           HEAP32[($3 + 12 | 0) >> 2] = $3;
           HEAP32[($3 + 8 | 0) >> 2] = $3;
           break label$70;
          }
          $0 = $2 + -40 | 0;
          $8 = ($6 + 8 | 0) & 7 | 0 ? (-8 - $6 | 0) & 7 | 0 : 0;
          $12 = $0 - $8 | 0;
          HEAP32[(0 + 13072 | 0) >> 2] = $12;
          $8 = $6 + $8 | 0;
          HEAP32[(0 + 13084 | 0) >> 2] = $8;
          HEAP32[($8 + 4 | 0) >> 2] = $12 | 1 | 0;
          HEAP32[(($6 + $0 | 0) + 4 | 0) >> 2] = 40;
          HEAP32[(0 + 13088 | 0) >> 2] = HEAP32[(0 + 13548 | 0) >> 2] | 0;
          $0 = ($5 + (($5 + -39 | 0) & 7 | 0 ? (39 - $5 | 0) & 7 | 0 : 0) | 0) + -47 | 0;
          $8 = $0 >>> 0 < ($4 + 16 | 0) >>> 0 ? $4 : $0;
          HEAP32[($8 + 4 | 0) >> 2] = 27;
          i64toi32_i32$2 = 0;
          i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 13516 | 0) >> 2] | 0;
          i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 13520 | 0) >> 2] | 0;
          $1306 = i64toi32_i32$0;
          i64toi32_i32$0 = $8 + 16 | 0;
          HEAP32[i64toi32_i32$0 >> 2] = $1306;
          HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;
          i64toi32_i32$2 = 0;
          i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 13508 | 0) >> 2] | 0;
          i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 13512 | 0) >> 2] | 0;
          $1308 = i64toi32_i32$1;
          i64toi32_i32$1 = $8;
          HEAP32[($8 + 8 | 0) >> 2] = $1308;
          HEAP32[($8 + 12 | 0) >> 2] = i64toi32_i32$0;
          HEAP32[(0 + 13516 | 0) >> 2] = $8 + 8 | 0;
          HEAP32[(0 + 13512 | 0) >> 2] = $2;
          HEAP32[(0 + 13508 | 0) >> 2] = $6;
          HEAP32[(0 + 13520 | 0) >> 2] = 0;
          $0 = $8 + 24 | 0;
          label$99 : while (1) {
           HEAP32[($0 + 4 | 0) >> 2] = 7;
           $6 = $0 + 8 | 0;
           $0 = $0 + 4 | 0;
           if ($5 >>> 0 > $6 >>> 0) {
            continue label$99
           }
           break label$99;
          };
          if (($8 | 0) == ($4 | 0)) {
           break label$60
          }
          HEAP32[($8 + 4 | 0) >> 2] = (HEAP32[($8 + 4 | 0) >> 2] | 0) & -2 | 0;
          $2 = $8 - $4 | 0;
          HEAP32[($4 + 4 | 0) >> 2] = $2 | 1 | 0;
          HEAP32[$8 >> 2] = $2;
          label$100 : {
           if ($2 >>> 0 > 255 >>> 0) {
            break label$100
           }
           $5 = $2 >>> 3 | 0;
           $0 = ($5 << 3 | 0) + 13100 | 0;
           label$101 : {
            label$102 : {
             $6 = HEAP32[(0 + 13060 | 0) >> 2] | 0;
             $5 = 1 << $5 | 0;
             if ($6 & $5 | 0) {
              break label$102
             }
             HEAP32[(0 + 13060 | 0) >> 2] = $6 | $5 | 0;
             $5 = $0;
             break label$101;
            }
            $5 = HEAP32[($0 + 8 | 0) >> 2] | 0;
           }
           HEAP32[($0 + 8 | 0) >> 2] = $4;
           HEAP32[($5 + 12 | 0) >> 2] = $4;
           HEAP32[($4 + 12 | 0) >> 2] = $0;
           HEAP32[($4 + 8 | 0) >> 2] = $5;
           break label$60;
          }
          $0 = 31;
          label$103 : {
           if ($2 >>> 0 > 16777215 >>> 0) {
            break label$103
           }
           $0 = $2 >>> 8 | 0;
           $1369 = $0;
           $0 = (($0 + 1048320 | 0) >>> 16 | 0) & 8 | 0;
           $5 = $1369 << $0 | 0;
           $1376 = $5;
           $5 = (($5 + 520192 | 0) >>> 16 | 0) & 4 | 0;
           $6 = $1376 << $5 | 0;
           $1383 = $6;
           $6 = (($6 + 245760 | 0) >>> 16 | 0) & 2 | 0;
           $0 = (($1383 << $6 | 0) >>> 15 | 0) - ($0 | $5 | 0 | $6 | 0) | 0;
           $0 = ($0 << 1 | 0 | (($2 >>> ($0 + 21 | 0) | 0) & 1 | 0) | 0) + 28 | 0;
          }
          i64toi32_i32$1 = $4;
          i64toi32_i32$0 = 0;
          HEAP32[($4 + 16 | 0) >> 2] = 0;
          HEAP32[($4 + 20 | 0) >> 2] = i64toi32_i32$0;
          HEAP32[($4 + 28 | 0) >> 2] = $0;
          $5 = ($0 << 2 | 0) + 13364 | 0;
          label$104 : {
           label$105 : {
            $6 = HEAP32[(0 + 13064 | 0) >> 2] | 0;
            $8 = 1 << $0 | 0;
            if ($6 & $8 | 0) {
             break label$105
            }
            HEAP32[(0 + 13064 | 0) >> 2] = $6 | $8 | 0;
            HEAP32[$5 >> 2] = $4;
            HEAP32[($4 + 24 | 0) >> 2] = $5;
            break label$104;
           }
           $0 = $2 << (($0 | 0) == (31 | 0) ? 0 : 25 - ($0 >>> 1 | 0) | 0) | 0;
           $6 = HEAP32[$5 >> 2] | 0;
           label$106 : while (1) {
            $5 = $6;
            if (((HEAP32[($5 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($2 | 0)) {
             break label$69
            }
            $6 = $0 >>> 29 | 0;
            $0 = $0 << 1 | 0;
            $8 = ($5 + ($6 & 4 | 0) | 0) + 16 | 0;
            $6 = HEAP32[$8 >> 2] | 0;
            if ($6) {
             continue label$106
            }
            break label$106;
           };
           HEAP32[$8 >> 2] = $4;
           HEAP32[($4 + 24 | 0) >> 2] = $5;
          }
          HEAP32[($4 + 12 | 0) >> 2] = $4;
          HEAP32[($4 + 8 | 0) >> 2] = $4;
          break label$60;
         }
         $0 = HEAP32[($4 + 8 | 0) >> 2] | 0;
         HEAP32[($0 + 12 | 0) >> 2] = $3;
         HEAP32[($4 + 8 | 0) >> 2] = $3;
         HEAP32[($3 + 24 | 0) >> 2] = 0;
         HEAP32[($3 + 12 | 0) >> 2] = $4;
         HEAP32[($3 + 8 | 0) >> 2] = $0;
        }
        $0 = $12 + 8 | 0;
        break label$1;
       }
       $0 = HEAP32[($5 + 8 | 0) >> 2] | 0;
       HEAP32[($0 + 12 | 0) >> 2] = $4;
       HEAP32[($5 + 8 | 0) >> 2] = $4;
       HEAP32[($4 + 24 | 0) >> 2] = 0;
       HEAP32[($4 + 12 | 0) >> 2] = $5;
       HEAP32[($4 + 8 | 0) >> 2] = $0;
      }
      $0 = HEAP32[(0 + 13072 | 0) >> 2] | 0;
      if ($0 >>> 0 <= $3 >>> 0) {
       break label$4
      }
      $4 = $0 - $3 | 0;
      HEAP32[(0 + 13072 | 0) >> 2] = $4;
      $0 = HEAP32[(0 + 13084 | 0) >> 2] | 0;
      $5 = $0 + $3 | 0;
      HEAP32[(0 + 13084 | 0) >> 2] = $5;
      HEAP32[($5 + 4 | 0) >> 2] = $4 | 1 | 0;
      HEAP32[($0 + 4 | 0) >> 2] = $3 | 3 | 0;
      $0 = $0 + 8 | 0;
      break label$1;
     }
     HEAP32[(__errno_location() | 0) >> 2] = 48;
     $0 = 0;
     break label$1;
    }
    label$107 : {
     if (!$9) {
      break label$107
     }
     label$108 : {
      label$109 : {
       $5 = HEAP32[($8 + 28 | 0) >> 2] | 0;
       $0 = ($5 << 2 | 0) + 13364 | 0;
       if (($8 | 0) != (HEAP32[$0 >> 2] | 0 | 0)) {
        break label$109
       }
       HEAP32[$0 >> 2] = $6;
       if ($6) {
        break label$108
       }
       $7 = $7 & (__wasm_rotl_i32(-2 | 0, $5 | 0) | 0) | 0;
       HEAP32[(0 + 13064 | 0) >> 2] = $7;
       break label$107;
      }
      HEAP32[($9 + ((HEAP32[($9 + 16 | 0) >> 2] | 0 | 0) == ($8 | 0) ? 16 : 20) | 0) >> 2] = $6;
      if (!$6) {
       break label$107
      }
     }
     HEAP32[($6 + 24 | 0) >> 2] = $9;
     label$110 : {
      $0 = HEAP32[($8 + 16 | 0) >> 2] | 0;
      if (!$0) {
       break label$110
      }
      HEAP32[($6 + 16 | 0) >> 2] = $0;
      HEAP32[($0 + 24 | 0) >> 2] = $6;
     }
     $0 = HEAP32[($8 + 20 | 0) >> 2] | 0;
     if (!$0) {
      break label$107
     }
     HEAP32[($6 + 20 | 0) >> 2] = $0;
     HEAP32[($0 + 24 | 0) >> 2] = $6;
    }
    label$111 : {
     label$112 : {
      if ($4 >>> 0 > 15 >>> 0) {
       break label$112
      }
      $0 = $4 + $3 | 0;
      HEAP32[($8 + 4 | 0) >> 2] = $0 | 3 | 0;
      $0 = $8 + $0 | 0;
      HEAP32[($0 + 4 | 0) >> 2] = HEAP32[($0 + 4 | 0) >> 2] | 0 | 1 | 0;
      break label$111;
     }
     HEAP32[($8 + 4 | 0) >> 2] = $3 | 3 | 0;
     HEAP32[($12 + 4 | 0) >> 2] = $4 | 1 | 0;
     HEAP32[($12 + $4 | 0) >> 2] = $4;
     label$113 : {
      if ($4 >>> 0 > 255 >>> 0) {
       break label$113
      }
      $4 = $4 >>> 3 | 0;
      $0 = ($4 << 3 | 0) + 13100 | 0;
      label$114 : {
       label$115 : {
        $5 = HEAP32[(0 + 13060 | 0) >> 2] | 0;
        $4 = 1 << $4 | 0;
        if ($5 & $4 | 0) {
         break label$115
        }
        HEAP32[(0 + 13060 | 0) >> 2] = $5 | $4 | 0;
        $4 = $0;
        break label$114;
       }
       $4 = HEAP32[($0 + 8 | 0) >> 2] | 0;
      }
      HEAP32[($0 + 8 | 0) >> 2] = $12;
      HEAP32[($4 + 12 | 0) >> 2] = $12;
      HEAP32[($12 + 12 | 0) >> 2] = $0;
      HEAP32[($12 + 8 | 0) >> 2] = $4;
      break label$111;
     }
     $0 = 31;
     label$116 : {
      if ($4 >>> 0 > 16777215 >>> 0) {
       break label$116
      }
      $0 = $4 >>> 8 | 0;
      $1616 = $0;
      $0 = (($0 + 1048320 | 0) >>> 16 | 0) & 8 | 0;
      $5 = $1616 << $0 | 0;
      $1623 = $5;
      $5 = (($5 + 520192 | 0) >>> 16 | 0) & 4 | 0;
      $3 = $1623 << $5 | 0;
      $1630 = $3;
      $3 = (($3 + 245760 | 0) >>> 16 | 0) & 2 | 0;
      $0 = (($1630 << $3 | 0) >>> 15 | 0) - ($0 | $5 | 0 | $3 | 0) | 0;
      $0 = ($0 << 1 | 0 | (($4 >>> ($0 + 21 | 0) | 0) & 1 | 0) | 0) + 28 | 0;
     }
     HEAP32[($12 + 28 | 0) >> 2] = $0;
     i64toi32_i32$1 = $12;
     i64toi32_i32$0 = 0;
     HEAP32[($12 + 16 | 0) >> 2] = 0;
     HEAP32[($12 + 20 | 0) >> 2] = i64toi32_i32$0;
     $5 = ($0 << 2 | 0) + 13364 | 0;
     label$117 : {
      label$118 : {
       label$119 : {
        $3 = 1 << $0 | 0;
        if ($7 & $3 | 0) {
         break label$119
        }
        HEAP32[(0 + 13064 | 0) >> 2] = $7 | $3 | 0;
        HEAP32[$5 >> 2] = $12;
        HEAP32[($12 + 24 | 0) >> 2] = $5;
        break label$118;
       }
       $0 = $4 << (($0 | 0) == (31 | 0) ? 0 : 25 - ($0 >>> 1 | 0) | 0) | 0;
       $3 = HEAP32[$5 >> 2] | 0;
       label$120 : while (1) {
        $5 = $3;
        if (((HEAP32[($5 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($4 | 0)) {
         break label$117
        }
        $3 = $0 >>> 29 | 0;
        $0 = $0 << 1 | 0;
        $6 = ($5 + ($3 & 4 | 0) | 0) + 16 | 0;
        $3 = HEAP32[$6 >> 2] | 0;
        if ($3) {
         continue label$120
        }
        break label$120;
       };
       HEAP32[$6 >> 2] = $12;
       HEAP32[($12 + 24 | 0) >> 2] = $5;
      }
      HEAP32[($12 + 12 | 0) >> 2] = $12;
      HEAP32[($12 + 8 | 0) >> 2] = $12;
      break label$111;
     }
     $0 = HEAP32[($5 + 8 | 0) >> 2] | 0;
     HEAP32[($0 + 12 | 0) >> 2] = $12;
     HEAP32[($5 + 8 | 0) >> 2] = $12;
     HEAP32[($12 + 24 | 0) >> 2] = 0;
     HEAP32[($12 + 12 | 0) >> 2] = $5;
     HEAP32[($12 + 8 | 0) >> 2] = $0;
    }
    $0 = $8 + 8 | 0;
    break label$1;
   }
   label$121 : {
    if (!$11) {
     break label$121
    }
    label$122 : {
     label$123 : {
      $5 = HEAP32[($6 + 28 | 0) >> 2] | 0;
      $0 = ($5 << 2 | 0) + 13364 | 0;
      if (($6 | 0) != (HEAP32[$0 >> 2] | 0 | 0)) {
       break label$123
      }
      HEAP32[$0 >> 2] = $8;
      if ($8) {
       break label$122
      }
      HEAP32[(0 + 13064 | 0) >> 2] = $9 & (__wasm_rotl_i32(-2 | 0, $5 | 0) | 0) | 0;
      break label$121;
     }
     HEAP32[($11 + ((HEAP32[($11 + 16 | 0) >> 2] | 0 | 0) == ($6 | 0) ? 16 : 20) | 0) >> 2] = $8;
     if (!$8) {
      break label$121
     }
    }
    HEAP32[($8 + 24 | 0) >> 2] = $11;
    label$124 : {
     $0 = HEAP32[($6 + 16 | 0) >> 2] | 0;
     if (!$0) {
      break label$124
     }
     HEAP32[($8 + 16 | 0) >> 2] = $0;
     HEAP32[($0 + 24 | 0) >> 2] = $8;
    }
    $0 = HEAP32[($6 + 20 | 0) >> 2] | 0;
    if (!$0) {
     break label$121
    }
    HEAP32[($8 + 20 | 0) >> 2] = $0;
    HEAP32[($0 + 24 | 0) >> 2] = $8;
   }
   label$125 : {
    label$126 : {
     if ($4 >>> 0 > 15 >>> 0) {
      break label$126
     }
     $0 = $4 + $3 | 0;
     HEAP32[($6 + 4 | 0) >> 2] = $0 | 3 | 0;
     $0 = $6 + $0 | 0;
     HEAP32[($0 + 4 | 0) >> 2] = HEAP32[($0 + 4 | 0) >> 2] | 0 | 1 | 0;
     break label$125;
    }
    HEAP32[($6 + 4 | 0) >> 2] = $3 | 3 | 0;
    HEAP32[($10 + 4 | 0) >> 2] = $4 | 1 | 0;
    HEAP32[($10 + $4 | 0) >> 2] = $4;
    label$127 : {
     if (!$7) {
      break label$127
     }
     $3 = $7 >>> 3 | 0;
     $5 = ($3 << 3 | 0) + 13100 | 0;
     $0 = HEAP32[(0 + 13080 | 0) >> 2] | 0;
     label$128 : {
      label$129 : {
       $3 = 1 << $3 | 0;
       if ($3 & $2 | 0) {
        break label$129
       }
       HEAP32[(0 + 13060 | 0) >> 2] = $3 | $2 | 0;
       $3 = $5;
       break label$128;
      }
      $3 = HEAP32[($5 + 8 | 0) >> 2] | 0;
     }
     HEAP32[($5 + 8 | 0) >> 2] = $0;
     HEAP32[($3 + 12 | 0) >> 2] = $0;
     HEAP32[($0 + 12 | 0) >> 2] = $5;
     HEAP32[($0 + 8 | 0) >> 2] = $3;
    }
    HEAP32[(0 + 13080 | 0) >> 2] = $10;
    HEAP32[(0 + 13068 | 0) >> 2] = $4;
   }
   $0 = $6 + 8 | 0;
  }
  __stack_pointer = $1 + 16 | 0;
  return $0 | 0;
 }
 
 function dlfree($0) {
  $0 = $0 | 0;
  var $2 = 0, $6 = 0, $1 = 0, $4 = 0, $3 = 0, $5 = 0, $7 = 0, $379 = 0, $386 = 0, $393 = 0;
  label$1 : {
   if (!$0) {
    break label$1
   }
   $1 = $0 + -8 | 0;
   $2 = HEAP32[($0 + -4 | 0) >> 2] | 0;
   $0 = $2 & -8 | 0;
   $3 = $1 + $0 | 0;
   label$2 : {
    if ($2 & 1 | 0) {
     break label$2
    }
    if (!($2 & 3 | 0)) {
     break label$1
    }
    $2 = HEAP32[$1 >> 2] | 0;
    $1 = $1 - $2 | 0;
    $4 = HEAP32[(0 + 13076 | 0) >> 2] | 0;
    if ($1 >>> 0 < $4 >>> 0) {
     break label$1
    }
    $0 = $2 + $0 | 0;
    label$3 : {
     if ((HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0) == ($1 | 0)) {
      break label$3
     }
     label$4 : {
      if ($2 >>> 0 > 255 >>> 0) {
       break label$4
      }
      $4 = HEAP32[($1 + 8 | 0) >> 2] | 0;
      $5 = $2 >>> 3 | 0;
      $6 = ($5 << 3 | 0) + 13100 | 0;
      label$5 : {
       $2 = HEAP32[($1 + 12 | 0) >> 2] | 0;
       if (($2 | 0) != ($4 | 0)) {
        break label$5
       }
       HEAP32[(0 + 13060 | 0) >> 2] = (HEAP32[(0 + 13060 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $5 | 0) | 0) | 0;
       break label$2;
      }
      HEAP32[($4 + 12 | 0) >> 2] = $2;
      HEAP32[($2 + 8 | 0) >> 2] = $4;
      break label$2;
     }
     $7 = HEAP32[($1 + 24 | 0) >> 2] | 0;
     label$6 : {
      label$7 : {
       $6 = HEAP32[($1 + 12 | 0) >> 2] | 0;
       if (($6 | 0) == ($1 | 0)) {
        break label$7
       }
       $2 = HEAP32[($1 + 8 | 0) >> 2] | 0;
       HEAP32[($2 + 12 | 0) >> 2] = $6;
       HEAP32[($6 + 8 | 0) >> 2] = $2;
       break label$6;
      }
      label$8 : {
       $2 = $1 + 20 | 0;
       $4 = HEAP32[$2 >> 2] | 0;
       if ($4) {
        break label$8
       }
       $2 = $1 + 16 | 0;
       $4 = HEAP32[$2 >> 2] | 0;
       if ($4) {
        break label$8
       }
       $6 = 0;
       break label$6;
      }
      label$9 : while (1) {
       $5 = $2;
       $6 = $4;
       $2 = $6 + 20 | 0;
       $4 = HEAP32[$2 >> 2] | 0;
       if ($4) {
        continue label$9
       }
       $2 = $6 + 16 | 0;
       $4 = HEAP32[($6 + 16 | 0) >> 2] | 0;
       if ($4) {
        continue label$9
       }
       break label$9;
      };
      HEAP32[$5 >> 2] = 0;
     }
     if (!$7) {
      break label$2
     }
     label$10 : {
      label$11 : {
       $4 = HEAP32[($1 + 28 | 0) >> 2] | 0;
       $2 = ($4 << 2 | 0) + 13364 | 0;
       if ((HEAP32[$2 >> 2] | 0 | 0) != ($1 | 0)) {
        break label$11
       }
       HEAP32[$2 >> 2] = $6;
       if ($6) {
        break label$10
       }
       HEAP32[(0 + 13064 | 0) >> 2] = (HEAP32[(0 + 13064 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $4 | 0) | 0) | 0;
       break label$2;
      }
      HEAP32[($7 + ((HEAP32[($7 + 16 | 0) >> 2] | 0 | 0) == ($1 | 0) ? 16 : 20) | 0) >> 2] = $6;
      if (!$6) {
       break label$2
      }
     }
     HEAP32[($6 + 24 | 0) >> 2] = $7;
     label$12 : {
      $2 = HEAP32[($1 + 16 | 0) >> 2] | 0;
      if (!$2) {
       break label$12
      }
      HEAP32[($6 + 16 | 0) >> 2] = $2;
      HEAP32[($2 + 24 | 0) >> 2] = $6;
     }
     $2 = HEAP32[($1 + 20 | 0) >> 2] | 0;
     if (!$2) {
      break label$2
     }
     HEAP32[($6 + 20 | 0) >> 2] = $2;
     HEAP32[($2 + 24 | 0) >> 2] = $6;
     break label$2;
    }
    $2 = HEAP32[($3 + 4 | 0) >> 2] | 0;
    if (($2 & 3 | 0 | 0) != (3 | 0)) {
     break label$2
    }
    HEAP32[(0 + 13068 | 0) >> 2] = $0;
    HEAP32[($3 + 4 | 0) >> 2] = $2 & -2 | 0;
    HEAP32[($1 + 4 | 0) >> 2] = $0 | 1 | 0;
    HEAP32[($1 + $0 | 0) >> 2] = $0;
    return;
   }
   if ($3 >>> 0 <= $1 >>> 0) {
    break label$1
   }
   $2 = HEAP32[($3 + 4 | 0) >> 2] | 0;
   if (!($2 & 1 | 0)) {
    break label$1
   }
   label$13 : {
    label$14 : {
     if ($2 & 2 | 0) {
      break label$14
     }
     label$15 : {
      if ((HEAP32[(0 + 13084 | 0) >> 2] | 0 | 0) != ($3 | 0)) {
       break label$15
      }
      HEAP32[(0 + 13084 | 0) >> 2] = $1;
      $0 = (HEAP32[(0 + 13072 | 0) >> 2] | 0) + $0 | 0;
      HEAP32[(0 + 13072 | 0) >> 2] = $0;
      HEAP32[($1 + 4 | 0) >> 2] = $0 | 1 | 0;
      if (($1 | 0) != (HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0)) {
       break label$1
      }
      HEAP32[(0 + 13068 | 0) >> 2] = 0;
      HEAP32[(0 + 13080 | 0) >> 2] = 0;
      return;
     }
     label$16 : {
      if ((HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0) != ($3 | 0)) {
       break label$16
      }
      HEAP32[(0 + 13080 | 0) >> 2] = $1;
      $0 = (HEAP32[(0 + 13068 | 0) >> 2] | 0) + $0 | 0;
      HEAP32[(0 + 13068 | 0) >> 2] = $0;
      HEAP32[($1 + 4 | 0) >> 2] = $0 | 1 | 0;
      HEAP32[($1 + $0 | 0) >> 2] = $0;
      return;
     }
     $0 = ($2 & -8 | 0) + $0 | 0;
     label$17 : {
      label$18 : {
       if ($2 >>> 0 > 255 >>> 0) {
        break label$18
       }
       $4 = HEAP32[($3 + 8 | 0) >> 2] | 0;
       $5 = $2 >>> 3 | 0;
       $6 = ($5 << 3 | 0) + 13100 | 0;
       label$19 : {
        $2 = HEAP32[($3 + 12 | 0) >> 2] | 0;
        if (($2 | 0) != ($4 | 0)) {
         break label$19
        }
        HEAP32[(0 + 13060 | 0) >> 2] = (HEAP32[(0 + 13060 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $5 | 0) | 0) | 0;
        break label$17;
       }
       HEAP32[($4 + 12 | 0) >> 2] = $2;
       HEAP32[($2 + 8 | 0) >> 2] = $4;
       break label$17;
      }
      $7 = HEAP32[($3 + 24 | 0) >> 2] | 0;
      label$20 : {
       label$21 : {
        $6 = HEAP32[($3 + 12 | 0) >> 2] | 0;
        if (($6 | 0) == ($3 | 0)) {
         break label$21
        }
        $2 = HEAP32[($3 + 8 | 0) >> 2] | 0;
        HEAP32[(0 + 13076 | 0) >> 2] | 0;
        HEAP32[($2 + 12 | 0) >> 2] = $6;
        HEAP32[($6 + 8 | 0) >> 2] = $2;
        break label$20;
       }
       label$22 : {
        $2 = $3 + 20 | 0;
        $4 = HEAP32[$2 >> 2] | 0;
        if ($4) {
         break label$22
        }
        $2 = $3 + 16 | 0;
        $4 = HEAP32[$2 >> 2] | 0;
        if ($4) {
         break label$22
        }
        $6 = 0;
        break label$20;
       }
       label$23 : while (1) {
        $5 = $2;
        $6 = $4;
        $2 = $6 + 20 | 0;
        $4 = HEAP32[$2 >> 2] | 0;
        if ($4) {
         continue label$23
        }
        $2 = $6 + 16 | 0;
        $4 = HEAP32[($6 + 16 | 0) >> 2] | 0;
        if ($4) {
         continue label$23
        }
        break label$23;
       };
       HEAP32[$5 >> 2] = 0;
      }
      if (!$7) {
       break label$17
      }
      label$24 : {
       label$25 : {
        $4 = HEAP32[($3 + 28 | 0) >> 2] | 0;
        $2 = ($4 << 2 | 0) + 13364 | 0;
        if ((HEAP32[$2 >> 2] | 0 | 0) != ($3 | 0)) {
         break label$25
        }
        HEAP32[$2 >> 2] = $6;
        if ($6) {
         break label$24
        }
        HEAP32[(0 + 13064 | 0) >> 2] = (HEAP32[(0 + 13064 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $4 | 0) | 0) | 0;
        break label$17;
       }
       HEAP32[($7 + ((HEAP32[($7 + 16 | 0) >> 2] | 0 | 0) == ($3 | 0) ? 16 : 20) | 0) >> 2] = $6;
       if (!$6) {
        break label$17
       }
      }
      HEAP32[($6 + 24 | 0) >> 2] = $7;
      label$26 : {
       $2 = HEAP32[($3 + 16 | 0) >> 2] | 0;
       if (!$2) {
        break label$26
       }
       HEAP32[($6 + 16 | 0) >> 2] = $2;
       HEAP32[($2 + 24 | 0) >> 2] = $6;
      }
      $2 = HEAP32[($3 + 20 | 0) >> 2] | 0;
      if (!$2) {
       break label$17
      }
      HEAP32[($6 + 20 | 0) >> 2] = $2;
      HEAP32[($2 + 24 | 0) >> 2] = $6;
     }
     HEAP32[($1 + 4 | 0) >> 2] = $0 | 1 | 0;
     HEAP32[($1 + $0 | 0) >> 2] = $0;
     if (($1 | 0) != (HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0)) {
      break label$13
     }
     HEAP32[(0 + 13068 | 0) >> 2] = $0;
     return;
    }
    HEAP32[($3 + 4 | 0) >> 2] = $2 & -2 | 0;
    HEAP32[($1 + 4 | 0) >> 2] = $0 | 1 | 0;
    HEAP32[($1 + $0 | 0) >> 2] = $0;
   }
   label$27 : {
    if ($0 >>> 0 > 255 >>> 0) {
     break label$27
    }
    $2 = $0 >>> 3 | 0;
    $0 = ($2 << 3 | 0) + 13100 | 0;
    label$28 : {
     label$29 : {
      $4 = HEAP32[(0 + 13060 | 0) >> 2] | 0;
      $2 = 1 << $2 | 0;
      if ($4 & $2 | 0) {
       break label$29
      }
      HEAP32[(0 + 13060 | 0) >> 2] = $4 | $2 | 0;
      $2 = $0;
      break label$28;
     }
     $2 = HEAP32[($0 + 8 | 0) >> 2] | 0;
    }
    HEAP32[($0 + 8 | 0) >> 2] = $1;
    HEAP32[($2 + 12 | 0) >> 2] = $1;
    HEAP32[($1 + 12 | 0) >> 2] = $0;
    HEAP32[($1 + 8 | 0) >> 2] = $2;
    return;
   }
   $2 = 31;
   label$30 : {
    if ($0 >>> 0 > 16777215 >>> 0) {
     break label$30
    }
    $2 = $0 >>> 8 | 0;
    $379 = $2;
    $2 = (($2 + 1048320 | 0) >>> 16 | 0) & 8 | 0;
    $4 = $379 << $2 | 0;
    $386 = $4;
    $4 = (($4 + 520192 | 0) >>> 16 | 0) & 4 | 0;
    $6 = $386 << $4 | 0;
    $393 = $6;
    $6 = (($6 + 245760 | 0) >>> 16 | 0) & 2 | 0;
    $2 = (($393 << $6 | 0) >>> 15 | 0) - ($2 | $4 | 0 | $6 | 0) | 0;
    $2 = ($2 << 1 | 0 | (($0 >>> ($2 + 21 | 0) | 0) & 1 | 0) | 0) + 28 | 0;
   }
   HEAP32[($1 + 16 | 0) >> 2] = 0;
   HEAP32[($1 + 20 | 0) >> 2] = 0;
   HEAP32[($1 + 28 | 0) >> 2] = $2;
   $4 = ($2 << 2 | 0) + 13364 | 0;
   label$31 : {
    label$32 : {
     label$33 : {
      label$34 : {
       $6 = HEAP32[(0 + 13064 | 0) >> 2] | 0;
       $3 = 1 << $2 | 0;
       if ($6 & $3 | 0) {
        break label$34
       }
       HEAP32[(0 + 13064 | 0) >> 2] = $6 | $3 | 0;
       HEAP32[$4 >> 2] = $1;
       HEAP32[($1 + 24 | 0) >> 2] = $4;
       break label$33;
      }
      $2 = $0 << (($2 | 0) == (31 | 0) ? 0 : 25 - ($2 >>> 1 | 0) | 0) | 0;
      $6 = HEAP32[$4 >> 2] | 0;
      label$35 : while (1) {
       $4 = $6;
       if (((HEAP32[($6 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($0 | 0)) {
        break label$32
       }
       $6 = $2 >>> 29 | 0;
       $2 = $2 << 1 | 0;
       $3 = ($4 + ($6 & 4 | 0) | 0) + 16 | 0;
       $6 = HEAP32[$3 >> 2] | 0;
       if ($6) {
        continue label$35
       }
       break label$35;
      };
      HEAP32[$3 >> 2] = $1;
      HEAP32[($1 + 24 | 0) >> 2] = $4;
     }
     HEAP32[($1 + 12 | 0) >> 2] = $1;
     HEAP32[($1 + 8 | 0) >> 2] = $1;
     break label$31;
    }
    $0 = HEAP32[($4 + 8 | 0) >> 2] | 0;
    HEAP32[($0 + 12 | 0) >> 2] = $1;
    HEAP32[($4 + 8 | 0) >> 2] = $1;
    HEAP32[($1 + 24 | 0) >> 2] = 0;
    HEAP32[($1 + 12 | 0) >> 2] = $4;
    HEAP32[($1 + 8 | 0) >> 2] = $0;
   }
   $1 = (HEAP32[(0 + 13092 | 0) >> 2] | 0) + -1 | 0;
   HEAP32[(0 + 13092 | 0) >> 2] = $1 ? $1 : -1;
  }
 }
 
 function internal_memalign($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0, $3 = 0, $6 = 0, $4 = 0, $5 = 0;
  $2 = 16;
  label$1 : {
   label$2 : {
    $3 = $0 >>> 0 > 16 >>> 0 ? $0 : 16;
    if ($3 & ($3 + -1 | 0) | 0) {
     break label$2
    }
    $0 = $3;
    break label$1;
   }
   label$3 : while (1) {
    $0 = $2;
    $2 = $0 << 1 | 0;
    if ($0 >>> 0 < $3 >>> 0) {
     continue label$3
    }
    break label$3;
   };
  }
  label$4 : {
   if ((-64 - $0 | 0) >>> 0 > $1 >>> 0) {
    break label$4
   }
   HEAP32[(__errno_location() | 0) >> 2] = 48;
   return 0 | 0;
  }
  label$5 : {
   $1 = $1 >>> 0 < 11 >>> 0 ? 16 : ($1 + 11 | 0) & -8 | 0;
   $2 = dlmalloc(($1 + $0 | 0) + 12 | 0 | 0) | 0;
   if ($2) {
    break label$5
   }
   return 0 | 0;
  }
  $3 = $2 + -8 | 0;
  label$6 : {
   label$7 : {
    if (($0 + -1 | 0) & $2 | 0) {
     break label$7
    }
    $0 = $3;
    break label$6;
   }
   $4 = $2 + -4 | 0;
   $5 = HEAP32[$4 >> 2] | 0;
   $2 = ((($2 + $0 | 0) + -1 | 0) & (0 - $0 | 0) | 0) + -8 | 0;
   $0 = ($2 - $3 | 0) >>> 0 > 15 >>> 0 ? $2 : $2 + $0 | 0;
   $2 = $0 - $3 | 0;
   $6 = ($5 & -8 | 0) - $2 | 0;
   label$8 : {
    if ($5 & 3 | 0) {
     break label$8
    }
    $3 = HEAP32[$3 >> 2] | 0;
    HEAP32[($0 + 4 | 0) >> 2] = $6;
    HEAP32[$0 >> 2] = $3 + $2 | 0;
    break label$6;
   }
   HEAP32[($0 + 4 | 0) >> 2] = $6 | ((HEAP32[($0 + 4 | 0) >> 2] | 0) & 1 | 0) | 0 | 2 | 0;
   $6 = $0 + $6 | 0;
   HEAP32[($6 + 4 | 0) >> 2] = HEAP32[($6 + 4 | 0) >> 2] | 0 | 1 | 0;
   HEAP32[$4 >> 2] = $2 | ((HEAP32[$4 >> 2] | 0) & 1 | 0) | 0 | 2 | 0;
   $6 = $3 + $2 | 0;
   HEAP32[($6 + 4 | 0) >> 2] = HEAP32[($6 + 4 | 0) >> 2] | 0 | 1 | 0;
   dispose_chunk($3 | 0, $2 | 0);
  }
  label$9 : {
   $2 = HEAP32[($0 + 4 | 0) >> 2] | 0;
   if (!($2 & 3 | 0)) {
    break label$9
   }
   $3 = $2 & -8 | 0;
   if ($3 >>> 0 <= ($1 + 16 | 0) >>> 0) {
    break label$9
   }
   HEAP32[($0 + 4 | 0) >> 2] = $1 | ($2 & 1 | 0) | 0 | 2 | 0;
   $2 = $0 + $1 | 0;
   $1 = $3 - $1 | 0;
   HEAP32[($2 + 4 | 0) >> 2] = $1 | 3 | 0;
   $3 = $0 + $3 | 0;
   HEAP32[($3 + 4 | 0) >> 2] = HEAP32[($3 + 4 | 0) >> 2] | 0 | 1 | 0;
   dispose_chunk($2 | 0, $1 | 0);
  }
  return $0 + 8 | 0 | 0;
 }
 
 function dlposix_memalign($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     if (($1 | 0) != (8 | 0)) {
      break label$3
     }
     $1 = dlmalloc($2 | 0) | 0;
     break label$2;
    }
    $3 = 28;
    if ($1 & 3 | 0) {
     break label$1
    }
    if ((__wasm_popcnt_i32($1 >>> 2 | 0 | 0) | 0 | 0) != (1 | 0)) {
     break label$1
    }
    $3 = 48;
    if ((-64 - $1 | 0) >>> 0 < $2 >>> 0) {
     break label$1
    }
    $1 = internal_memalign(($1 >>> 0 > 16 >>> 0 ? $1 : 16) | 0, $2 | 0) | 0;
   }
   label$4 : {
    if ($1) {
     break label$4
    }
    return 48 | 0;
   }
   HEAP32[$0 >> 2] = $1;
   $3 = 0;
  }
  return $3 | 0;
 }
 
 function dispose_chunk($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $3 = 0, $6 = 0, $4 = 0, $2 = 0, $5 = 0, $7 = 0, $360 = 0, $367 = 0, $374 = 0;
  $2 = $0 + $1 | 0;
  label$1 : {
   label$2 : {
    $3 = HEAP32[($0 + 4 | 0) >> 2] | 0;
    if ($3 & 1 | 0) {
     break label$2
    }
    if (!($3 & 3 | 0)) {
     break label$1
    }
    $3 = HEAP32[$0 >> 2] | 0;
    $1 = $3 + $1 | 0;
    label$3 : {
     label$4 : {
      $0 = $0 - $3 | 0;
      if ((HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0) == ($0 | 0)) {
       break label$4
      }
      label$5 : {
       if ($3 >>> 0 > 255 >>> 0) {
        break label$5
       }
       $4 = HEAP32[($0 + 8 | 0) >> 2] | 0;
       $5 = $3 >>> 3 | 0;
       $6 = ($5 << 3 | 0) + 13100 | 0;
       $3 = HEAP32[($0 + 12 | 0) >> 2] | 0;
       if (($3 | 0) != ($4 | 0)) {
        break label$3
       }
       HEAP32[(0 + 13060 | 0) >> 2] = (HEAP32[(0 + 13060 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $5 | 0) | 0) | 0;
       break label$2;
      }
      $7 = HEAP32[($0 + 24 | 0) >> 2] | 0;
      label$6 : {
       label$7 : {
        $6 = HEAP32[($0 + 12 | 0) >> 2] | 0;
        if (($6 | 0) == ($0 | 0)) {
         break label$7
        }
        $3 = HEAP32[($0 + 8 | 0) >> 2] | 0;
        HEAP32[(0 + 13076 | 0) >> 2] | 0;
        HEAP32[($3 + 12 | 0) >> 2] = $6;
        HEAP32[($6 + 8 | 0) >> 2] = $3;
        break label$6;
       }
       label$8 : {
        $3 = $0 + 20 | 0;
        $4 = HEAP32[$3 >> 2] | 0;
        if ($4) {
         break label$8
        }
        $3 = $0 + 16 | 0;
        $4 = HEAP32[$3 >> 2] | 0;
        if ($4) {
         break label$8
        }
        $6 = 0;
        break label$6;
       }
       label$9 : while (1) {
        $5 = $3;
        $6 = $4;
        $3 = $6 + 20 | 0;
        $4 = HEAP32[$3 >> 2] | 0;
        if ($4) {
         continue label$9
        }
        $3 = $6 + 16 | 0;
        $4 = HEAP32[($6 + 16 | 0) >> 2] | 0;
        if ($4) {
         continue label$9
        }
        break label$9;
       };
       HEAP32[$5 >> 2] = 0;
      }
      if (!$7) {
       break label$2
      }
      label$10 : {
       label$11 : {
        $4 = HEAP32[($0 + 28 | 0) >> 2] | 0;
        $3 = ($4 << 2 | 0) + 13364 | 0;
        if ((HEAP32[$3 >> 2] | 0 | 0) != ($0 | 0)) {
         break label$11
        }
        HEAP32[$3 >> 2] = $6;
        if ($6) {
         break label$10
        }
        HEAP32[(0 + 13064 | 0) >> 2] = (HEAP32[(0 + 13064 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $4 | 0) | 0) | 0;
        break label$2;
       }
       HEAP32[($7 + ((HEAP32[($7 + 16 | 0) >> 2] | 0 | 0) == ($0 | 0) ? 16 : 20) | 0) >> 2] = $6;
       if (!$6) {
        break label$2
       }
      }
      HEAP32[($6 + 24 | 0) >> 2] = $7;
      label$12 : {
       $3 = HEAP32[($0 + 16 | 0) >> 2] | 0;
       if (!$3) {
        break label$12
       }
       HEAP32[($6 + 16 | 0) >> 2] = $3;
       HEAP32[($3 + 24 | 0) >> 2] = $6;
      }
      $3 = HEAP32[($0 + 20 | 0) >> 2] | 0;
      if (!$3) {
       break label$2
      }
      HEAP32[($6 + 20 | 0) >> 2] = $3;
      HEAP32[($3 + 24 | 0) >> 2] = $6;
      break label$2;
     }
     $3 = HEAP32[($2 + 4 | 0) >> 2] | 0;
     if (($3 & 3 | 0 | 0) != (3 | 0)) {
      break label$2
     }
     HEAP32[(0 + 13068 | 0) >> 2] = $1;
     HEAP32[($2 + 4 | 0) >> 2] = $3 & -2 | 0;
     HEAP32[($0 + 4 | 0) >> 2] = $1 | 1 | 0;
     HEAP32[$2 >> 2] = $1;
     return;
    }
    HEAP32[($4 + 12 | 0) >> 2] = $3;
    HEAP32[($3 + 8 | 0) >> 2] = $4;
   }
   label$13 : {
    label$14 : {
     $3 = HEAP32[($2 + 4 | 0) >> 2] | 0;
     if ($3 & 2 | 0) {
      break label$14
     }
     label$15 : {
      if ((HEAP32[(0 + 13084 | 0) >> 2] | 0 | 0) != ($2 | 0)) {
       break label$15
      }
      HEAP32[(0 + 13084 | 0) >> 2] = $0;
      $1 = (HEAP32[(0 + 13072 | 0) >> 2] | 0) + $1 | 0;
      HEAP32[(0 + 13072 | 0) >> 2] = $1;
      HEAP32[($0 + 4 | 0) >> 2] = $1 | 1 | 0;
      if (($0 | 0) != (HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0)) {
       break label$1
      }
      HEAP32[(0 + 13068 | 0) >> 2] = 0;
      HEAP32[(0 + 13080 | 0) >> 2] = 0;
      return;
     }
     label$16 : {
      if ((HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0) != ($2 | 0)) {
       break label$16
      }
      HEAP32[(0 + 13080 | 0) >> 2] = $0;
      $1 = (HEAP32[(0 + 13068 | 0) >> 2] | 0) + $1 | 0;
      HEAP32[(0 + 13068 | 0) >> 2] = $1;
      HEAP32[($0 + 4 | 0) >> 2] = $1 | 1 | 0;
      HEAP32[($0 + $1 | 0) >> 2] = $1;
      return;
     }
     $1 = ($3 & -8 | 0) + $1 | 0;
     label$17 : {
      label$18 : {
       if ($3 >>> 0 > 255 >>> 0) {
        break label$18
       }
       $4 = HEAP32[($2 + 8 | 0) >> 2] | 0;
       $5 = $3 >>> 3 | 0;
       $6 = ($5 << 3 | 0) + 13100 | 0;
       label$19 : {
        $3 = HEAP32[($2 + 12 | 0) >> 2] | 0;
        if (($3 | 0) != ($4 | 0)) {
         break label$19
        }
        HEAP32[(0 + 13060 | 0) >> 2] = (HEAP32[(0 + 13060 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $5 | 0) | 0) | 0;
        break label$17;
       }
       HEAP32[($4 + 12 | 0) >> 2] = $3;
       HEAP32[($3 + 8 | 0) >> 2] = $4;
       break label$17;
      }
      $7 = HEAP32[($2 + 24 | 0) >> 2] | 0;
      label$20 : {
       label$21 : {
        $6 = HEAP32[($2 + 12 | 0) >> 2] | 0;
        if (($6 | 0) == ($2 | 0)) {
         break label$21
        }
        $3 = HEAP32[($2 + 8 | 0) >> 2] | 0;
        HEAP32[(0 + 13076 | 0) >> 2] | 0;
        HEAP32[($3 + 12 | 0) >> 2] = $6;
        HEAP32[($6 + 8 | 0) >> 2] = $3;
        break label$20;
       }
       label$22 : {
        $4 = $2 + 20 | 0;
        $3 = HEAP32[$4 >> 2] | 0;
        if ($3) {
         break label$22
        }
        $4 = $2 + 16 | 0;
        $3 = HEAP32[$4 >> 2] | 0;
        if ($3) {
         break label$22
        }
        $6 = 0;
        break label$20;
       }
       label$23 : while (1) {
        $5 = $4;
        $6 = $3;
        $4 = $3 + 20 | 0;
        $3 = HEAP32[$4 >> 2] | 0;
        if ($3) {
         continue label$23
        }
        $4 = $6 + 16 | 0;
        $3 = HEAP32[($6 + 16 | 0) >> 2] | 0;
        if ($3) {
         continue label$23
        }
        break label$23;
       };
       HEAP32[$5 >> 2] = 0;
      }
      if (!$7) {
       break label$17
      }
      label$24 : {
       label$25 : {
        $4 = HEAP32[($2 + 28 | 0) >> 2] | 0;
        $3 = ($4 << 2 | 0) + 13364 | 0;
        if ((HEAP32[$3 >> 2] | 0 | 0) != ($2 | 0)) {
         break label$25
        }
        HEAP32[$3 >> 2] = $6;
        if ($6) {
         break label$24
        }
        HEAP32[(0 + 13064 | 0) >> 2] = (HEAP32[(0 + 13064 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $4 | 0) | 0) | 0;
        break label$17;
       }
       HEAP32[($7 + ((HEAP32[($7 + 16 | 0) >> 2] | 0 | 0) == ($2 | 0) ? 16 : 20) | 0) >> 2] = $6;
       if (!$6) {
        break label$17
       }
      }
      HEAP32[($6 + 24 | 0) >> 2] = $7;
      label$26 : {
       $3 = HEAP32[($2 + 16 | 0) >> 2] | 0;
       if (!$3) {
        break label$26
       }
       HEAP32[($6 + 16 | 0) >> 2] = $3;
       HEAP32[($3 + 24 | 0) >> 2] = $6;
      }
      $3 = HEAP32[($2 + 20 | 0) >> 2] | 0;
      if (!$3) {
       break label$17
      }
      HEAP32[($6 + 20 | 0) >> 2] = $3;
      HEAP32[($3 + 24 | 0) >> 2] = $6;
     }
     HEAP32[($0 + 4 | 0) >> 2] = $1 | 1 | 0;
     HEAP32[($0 + $1 | 0) >> 2] = $1;
     if (($0 | 0) != (HEAP32[(0 + 13080 | 0) >> 2] | 0 | 0)) {
      break label$13
     }
     HEAP32[(0 + 13068 | 0) >> 2] = $1;
     return;
    }
    HEAP32[($2 + 4 | 0) >> 2] = $3 & -2 | 0;
    HEAP32[($0 + 4 | 0) >> 2] = $1 | 1 | 0;
    HEAP32[($0 + $1 | 0) >> 2] = $1;
   }
   label$27 : {
    if ($1 >>> 0 > 255 >>> 0) {
     break label$27
    }
    $3 = $1 >>> 3 | 0;
    $1 = ($3 << 3 | 0) + 13100 | 0;
    label$28 : {
     label$29 : {
      $4 = HEAP32[(0 + 13060 | 0) >> 2] | 0;
      $3 = 1 << $3 | 0;
      if ($4 & $3 | 0) {
       break label$29
      }
      HEAP32[(0 + 13060 | 0) >> 2] = $4 | $3 | 0;
      $3 = $1;
      break label$28;
     }
     $3 = HEAP32[($1 + 8 | 0) >> 2] | 0;
    }
    HEAP32[($1 + 8 | 0) >> 2] = $0;
    HEAP32[($3 + 12 | 0) >> 2] = $0;
    HEAP32[($0 + 12 | 0) >> 2] = $1;
    HEAP32[($0 + 8 | 0) >> 2] = $3;
    return;
   }
   $3 = 31;
   label$30 : {
    if ($1 >>> 0 > 16777215 >>> 0) {
     break label$30
    }
    $3 = $1 >>> 8 | 0;
    $360 = $3;
    $3 = (($3 + 1048320 | 0) >>> 16 | 0) & 8 | 0;
    $4 = $360 << $3 | 0;
    $367 = $4;
    $4 = (($4 + 520192 | 0) >>> 16 | 0) & 4 | 0;
    $6 = $367 << $4 | 0;
    $374 = $6;
    $6 = (($6 + 245760 | 0) >>> 16 | 0) & 2 | 0;
    $3 = (($374 << $6 | 0) >>> 15 | 0) - ($3 | $4 | 0 | $6 | 0) | 0;
    $3 = ($3 << 1 | 0 | (($1 >>> ($3 + 21 | 0) | 0) & 1 | 0) | 0) + 28 | 0;
   }
   HEAP32[($0 + 16 | 0) >> 2] = 0;
   HEAP32[($0 + 20 | 0) >> 2] = 0;
   HEAP32[($0 + 28 | 0) >> 2] = $3;
   $4 = ($3 << 2 | 0) + 13364 | 0;
   label$31 : {
    label$32 : {
     label$33 : {
      $6 = HEAP32[(0 + 13064 | 0) >> 2] | 0;
      $2 = 1 << $3 | 0;
      if ($6 & $2 | 0) {
       break label$33
      }
      HEAP32[(0 + 13064 | 0) >> 2] = $6 | $2 | 0;
      HEAP32[$4 >> 2] = $0;
      HEAP32[($0 + 24 | 0) >> 2] = $4;
      break label$32;
     }
     $3 = $1 << (($3 | 0) == (31 | 0) ? 0 : 25 - ($3 >>> 1 | 0) | 0) | 0;
     $6 = HEAP32[$4 >> 2] | 0;
     label$34 : while (1) {
      $4 = $6;
      if (((HEAP32[($6 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($1 | 0)) {
       break label$31
      }
      $6 = $3 >>> 29 | 0;
      $3 = $3 << 1 | 0;
      $2 = ($4 + ($6 & 4 | 0) | 0) + 16 | 0;
      $6 = HEAP32[$2 >> 2] | 0;
      if ($6) {
       continue label$34
      }
      break label$34;
     };
     HEAP32[$2 >> 2] = $0;
     HEAP32[($0 + 24 | 0) >> 2] = $4;
    }
    HEAP32[($0 + 12 | 0) >> 2] = $0;
    HEAP32[($0 + 8 | 0) >> 2] = $0;
    return;
   }
   $1 = HEAP32[($4 + 8 | 0) >> 2] | 0;
   HEAP32[($1 + 12 | 0) >> 2] = $0;
   HEAP32[($4 + 8 | 0) >> 2] = $0;
   HEAP32[($0 + 24 | 0) >> 2] = 0;
   HEAP32[($0 + 12 | 0) >> 2] = $4;
   HEAP32[($0 + 8 | 0) >> 2] = $1;
  }
 }
 
 function sbrk($0) {
  $0 = $0 | 0;
  var $1 = 0, $2 = 0;
  $1 = HEAP32[(0 + 12800 | 0) >> 2] | 0;
  $2 = ($0 + 3 | 0) & -4 | 0;
  $0 = $1 + $2 | 0;
  label$1 : {
   label$2 : {
    if (($2 | 0) < (1 | 0)) {
     break label$2
    }
    if ($0 >>> 0 <= $1 >>> 0) {
     break label$1
    }
   }
   label$3 : {
    if ($0 >>> 0 <= (__wasm_memory_size() << 16 | 0) >>> 0) {
     break label$3
    }
    if (!(emscripten_resize_heap($0 | 0) | 0)) {
     break label$1
    }
   }
   HEAP32[(0 + 12800 | 0) >> 2] = $0;
   return $1 | 0;
  }
  HEAP32[(__errno_location() | 0) >> 2] = 48;
  return -1 | 0;
 }
 
 function scalbn($0, $1) {
  $0 = +$0;
  $1 = $1 | 0;
  var i64toi32_i32$4 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $8 = 0, $32 = 0.0, i64toi32_i32$0 = 0;
  label$1 : {
   label$2 : {
    if (($1 | 0) < (1024 | 0)) {
     break label$2
    }
    $0 = $0 * 8988465674311579538646525.0e283;
    label$3 : {
     if (($1 | 0) >= (2047 | 0)) {
      break label$3
     }
     $1 = $1 + -1023 | 0;
     break label$1;
    }
    $0 = $0 * 8988465674311579538646525.0e283;
    $1 = (($1 | 0) < (3069 | 0) ? $1 : 3069) + -2046 | 0;
    break label$1;
   }
   if (($1 | 0) > (-1023 | 0)) {
    break label$1
   }
   $0 = $0 * 2.2250738585072014e-308;
   label$4 : {
    if (($1 | 0) <= (-2045 | 0)) {
     break label$4
    }
    $1 = $1 + 1022 | 0;
    break label$1;
   }
   $0 = $0 * 2.2250738585072014e-308;
   $1 = (($1 | 0) > (-3066 | 0) ? $1 : -3066) + 2044 | 0;
  }
  $32 = $0;
  i64toi32_i32$0 = 0;
  i64toi32_i32$2 = $1 + 1023 | 0;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 52;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
   $8 = 0;
  } else {
   i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
   $8 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
  }
  wasm2js_scratch_store_i32(0 | 0, $8 | 0);
  wasm2js_scratch_store_i32(1 | 0, i64toi32_i32$1 | 0);
  return +($32 * +wasm2js_scratch_load_f64());
 }
 
 function memcpy($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $4 = 0, $3 = 0, $5 = 0;
  label$1 : {
   if ($2 >>> 0 < 512 >>> 0) {
    break label$1
   }
   emscripten_memcpy_big($0 | 0, $1 | 0, $2 | 0) | 0;
   return $0 | 0;
  }
  $3 = $0 + $2 | 0;
  label$2 : {
   label$3 : {
    if (($1 ^ $0 | 0) & 3 | 0) {
     break label$3
    }
    label$4 : {
     label$5 : {
      if (($2 | 0) >= (1 | 0)) {
       break label$5
      }
      $2 = $0;
      break label$4;
     }
     label$6 : {
      if ($0 & 3 | 0) {
       break label$6
      }
      $2 = $0;
      break label$4;
     }
     $2 = $0;
     label$7 : while (1) {
      HEAP8[$2 >> 0] = HEAPU8[$1 >> 0] | 0;
      $1 = $1 + 1 | 0;
      $2 = $2 + 1 | 0;
      if ($2 >>> 0 >= $3 >>> 0) {
       break label$4
      }
      if ($2 & 3 | 0) {
       continue label$7
      }
      break label$7;
     };
    }
    label$8 : {
     $4 = $3 & -4 | 0;
     if ($4 >>> 0 < 64 >>> 0) {
      break label$8
     }
     $5 = $4 + -64 | 0;
     if ($2 >>> 0 > $5 >>> 0) {
      break label$8
     }
     label$9 : while (1) {
      HEAP32[$2 >> 2] = HEAP32[$1 >> 2] | 0;
      HEAP32[($2 + 4 | 0) >> 2] = HEAP32[($1 + 4 | 0) >> 2] | 0;
      HEAP32[($2 + 8 | 0) >> 2] = HEAP32[($1 + 8 | 0) >> 2] | 0;
      HEAP32[($2 + 12 | 0) >> 2] = HEAP32[($1 + 12 | 0) >> 2] | 0;
      HEAP32[($2 + 16 | 0) >> 2] = HEAP32[($1 + 16 | 0) >> 2] | 0;
      HEAP32[($2 + 20 | 0) >> 2] = HEAP32[($1 + 20 | 0) >> 2] | 0;
      HEAP32[($2 + 24 | 0) >> 2] = HEAP32[($1 + 24 | 0) >> 2] | 0;
      HEAP32[($2 + 28 | 0) >> 2] = HEAP32[($1 + 28 | 0) >> 2] | 0;
      HEAP32[($2 + 32 | 0) >> 2] = HEAP32[($1 + 32 | 0) >> 2] | 0;
      HEAP32[($2 + 36 | 0) >> 2] = HEAP32[($1 + 36 | 0) >> 2] | 0;
      HEAP32[($2 + 40 | 0) >> 2] = HEAP32[($1 + 40 | 0) >> 2] | 0;
      HEAP32[($2 + 44 | 0) >> 2] = HEAP32[($1 + 44 | 0) >> 2] | 0;
      HEAP32[($2 + 48 | 0) >> 2] = HEAP32[($1 + 48 | 0) >> 2] | 0;
      HEAP32[($2 + 52 | 0) >> 2] = HEAP32[($1 + 52 | 0) >> 2] | 0;
      HEAP32[($2 + 56 | 0) >> 2] = HEAP32[($1 + 56 | 0) >> 2] | 0;
      HEAP32[($2 + 60 | 0) >> 2] = HEAP32[($1 + 60 | 0) >> 2] | 0;
      $1 = $1 + 64 | 0;
      $2 = $2 + 64 | 0;
      if ($2 >>> 0 <= $5 >>> 0) {
       continue label$9
      }
      break label$9;
     };
    }
    if ($2 >>> 0 >= $4 >>> 0) {
     break label$2
    }
    label$10 : while (1) {
     HEAP32[$2 >> 2] = HEAP32[$1 >> 2] | 0;
     $1 = $1 + 4 | 0;
     $2 = $2 + 4 | 0;
     if ($2 >>> 0 < $4 >>> 0) {
      continue label$10
     }
     break label$2;
    };
   }
   label$11 : {
    if ($3 >>> 0 >= 4 >>> 0) {
     break label$11
    }
    $2 = $0;
    break label$2;
   }
   label$12 : {
    $4 = $3 + -4 | 0;
    if ($4 >>> 0 >= $0 >>> 0) {
     break label$12
    }
    $2 = $0;
    break label$2;
   }
   $2 = $0;
   label$13 : while (1) {
    HEAP8[$2 >> 0] = HEAPU8[$1 >> 0] | 0;
    HEAP8[($2 + 1 | 0) >> 0] = HEAPU8[($1 + 1 | 0) >> 0] | 0;
    HEAP8[($2 + 2 | 0) >> 0] = HEAPU8[($1 + 2 | 0) >> 0] | 0;
    HEAP8[($2 + 3 | 0) >> 0] = HEAPU8[($1 + 3 | 0) >> 0] | 0;
    $1 = $1 + 4 | 0;
    $2 = $2 + 4 | 0;
    if ($2 >>> 0 <= $4 >>> 0) {
     continue label$13
    }
    break label$13;
   };
  }
  label$14 : {
   if ($2 >>> 0 >= $3 >>> 0) {
    break label$14
   }
   label$15 : while (1) {
    HEAP8[$2 >> 0] = HEAPU8[$1 >> 0] | 0;
    $1 = $1 + 1 | 0;
    $2 = $2 + 1 | 0;
    if (($2 | 0) != ($3 | 0)) {
     continue label$15
    }
    break label$15;
   };
  }
  return $0 | 0;
 }
 
 function memset($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, i64toi32_i32$0 = 0, $4 = 0, i64toi32_i32$1 = 0, $6 = 0, $5 = 0, $6$hi = 0;
  label$1 : {
   if (!$2) {
    break label$1
   }
   $3 = $2 + $0 | 0;
   HEAP8[($3 + -1 | 0) >> 0] = $1;
   HEAP8[$0 >> 0] = $1;
   if ($2 >>> 0 < 3 >>> 0) {
    break label$1
   }
   HEAP8[($3 + -2 | 0) >> 0] = $1;
   HEAP8[($0 + 1 | 0) >> 0] = $1;
   HEAP8[($3 + -3 | 0) >> 0] = $1;
   HEAP8[($0 + 2 | 0) >> 0] = $1;
   if ($2 >>> 0 < 7 >>> 0) {
    break label$1
   }
   HEAP8[($3 + -4 | 0) >> 0] = $1;
   HEAP8[($0 + 3 | 0) >> 0] = $1;
   if ($2 >>> 0 < 9 >>> 0) {
    break label$1
   }
   $4 = (0 - $0 | 0) & 3 | 0;
   $3 = $0 + $4 | 0;
   $1 = Math_imul($1 & 255 | 0, 16843009);
   HEAP32[$3 >> 2] = $1;
   $4 = ($2 - $4 | 0) & -4 | 0;
   $2 = $3 + $4 | 0;
   HEAP32[($2 + -4 | 0) >> 2] = $1;
   if ($4 >>> 0 < 9 >>> 0) {
    break label$1
   }
   HEAP32[($3 + 8 | 0) >> 2] = $1;
   HEAP32[($3 + 4 | 0) >> 2] = $1;
   HEAP32[($2 + -8 | 0) >> 2] = $1;
   HEAP32[($2 + -12 | 0) >> 2] = $1;
   if ($4 >>> 0 < 25 >>> 0) {
    break label$1
   }
   HEAP32[($3 + 24 | 0) >> 2] = $1;
   HEAP32[($3 + 20 | 0) >> 2] = $1;
   HEAP32[($3 + 16 | 0) >> 2] = $1;
   HEAP32[($3 + 12 | 0) >> 2] = $1;
   HEAP32[($2 + -16 | 0) >> 2] = $1;
   HEAP32[($2 + -20 | 0) >> 2] = $1;
   HEAP32[($2 + -24 | 0) >> 2] = $1;
   HEAP32[($2 + -28 | 0) >> 2] = $1;
   $5 = $3 & 4 | 0 | 24 | 0;
   $2 = $4 - $5 | 0;
   if ($2 >>> 0 < 32 >>> 0) {
    break label$1
   }
   i64toi32_i32$0 = 0;
   i64toi32_i32$1 = 1;
   i64toi32_i32$1 = __wasm_i64_mul($1 | 0, i64toi32_i32$0 | 0, 1 | 0, i64toi32_i32$1 | 0) | 0;
   i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
   $6 = i64toi32_i32$1;
   $6$hi = i64toi32_i32$0;
   $1 = $3 + $5 | 0;
   label$2 : while (1) {
    i64toi32_i32$0 = $6$hi;
    i64toi32_i32$1 = $1;
    HEAP32[($1 + 24 | 0) >> 2] = $6;
    HEAP32[($1 + 28 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$1 = $1;
    HEAP32[($1 + 16 | 0) >> 2] = $6;
    HEAP32[($1 + 20 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$1 = $1;
    HEAP32[($1 + 8 | 0) >> 2] = $6;
    HEAP32[($1 + 12 | 0) >> 2] = i64toi32_i32$0;
    i64toi32_i32$1 = $1;
    HEAP32[$1 >> 2] = $6;
    HEAP32[($1 + 4 | 0) >> 2] = i64toi32_i32$0;
    $1 = $1 + 32 | 0;
    $2 = $2 + -32 | 0;
    if ($2 >>> 0 > 31 >>> 0) {
     continue label$2
    }
    break label$2;
   };
  }
  return $0 | 0;
 }
 
 function memmove($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0;
  label$1 : {
   if (($0 | 0) == ($1 | 0)) {
    break label$1
   }
   label$2 : {
    if ((($1 - $0 | 0) - $2 | 0) >>> 0 > (0 - ($2 << 1 | 0) | 0) >>> 0) {
     break label$2
    }
    return memcpy($0 | 0, $1 | 0, $2 | 0) | 0 | 0;
   }
   $3 = ($1 ^ $0 | 0) & 3 | 0;
   label$3 : {
    label$4 : {
     label$5 : {
      if ($0 >>> 0 >= $1 >>> 0) {
       break label$5
      }
      label$6 : {
       if (!$3) {
        break label$6
       }
       $3 = $0;
       break label$3;
      }
      label$7 : {
       if ($0 & 3 | 0) {
        break label$7
       }
       $3 = $0;
       break label$4;
      }
      $3 = $0;
      label$8 : while (1) {
       if (!$2) {
        break label$1
       }
       HEAP8[$3 >> 0] = HEAPU8[$1 >> 0] | 0;
       $1 = $1 + 1 | 0;
       $2 = $2 + -1 | 0;
       $3 = $3 + 1 | 0;
       if (!($3 & 3 | 0)) {
        break label$4
       }
       continue label$8;
      };
     }
     label$9 : {
      if ($3) {
       break label$9
      }
      label$10 : {
       if (!(($0 + $2 | 0) & 3 | 0)) {
        break label$10
       }
       label$11 : while (1) {
        if (!$2) {
         break label$1
        }
        $2 = $2 + -1 | 0;
        $3 = $0 + $2 | 0;
        HEAP8[$3 >> 0] = HEAPU8[($1 + $2 | 0) >> 0] | 0;
        if ($3 & 3 | 0) {
         continue label$11
        }
        break label$11;
       };
      }
      if ($2 >>> 0 <= 3 >>> 0) {
       break label$9
      }
      label$12 : while (1) {
       $2 = $2 + -4 | 0;
       HEAP32[($0 + $2 | 0) >> 2] = HEAP32[($1 + $2 | 0) >> 2] | 0;
       if ($2 >>> 0 > 3 >>> 0) {
        continue label$12
       }
       break label$12;
      };
     }
     if (!$2) {
      break label$1
     }
     label$13 : while (1) {
      $2 = $2 + -1 | 0;
      HEAP8[($0 + $2 | 0) >> 0] = HEAPU8[($1 + $2 | 0) >> 0] | 0;
      if ($2) {
       continue label$13
      }
      break label$1;
     };
    }
    if ($2 >>> 0 <= 3 >>> 0) {
     break label$3
    }
    label$14 : while (1) {
     HEAP32[$3 >> 2] = HEAP32[$1 >> 2] | 0;
     $1 = $1 + 4 | 0;
     $3 = $3 + 4 | 0;
     $2 = $2 + -4 | 0;
     if ($2 >>> 0 > 3 >>> 0) {
      continue label$14
     }
     break label$14;
    };
   }
   if (!$2) {
    break label$1
   }
   label$15 : while (1) {
    HEAP8[$3 >> 0] = HEAPU8[$1 >> 0] | 0;
    $3 = $3 + 1 | 0;
    $1 = $1 + 1 | 0;
    $2 = $2 + -1 | 0;
    if ($2) {
     continue label$15
    }
    break label$15;
   };
  }
  return $0 | 0;
 }
 
 function __towrite($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = HEAPU8[($0 + 74 | 0) >> 0] | 0;
  HEAP8[($0 + 74 | 0) >> 0] = $1 + -1 | 0 | $1 | 0;
  label$1 : {
   $1 = HEAP32[$0 >> 2] | 0;
   if (!($1 & 8 | 0)) {
    break label$1
   }
   HEAP32[$0 >> 2] = $1 | 32 | 0;
   return -1 | 0;
  }
  HEAP32[($0 + 4 | 0) >> 2] = 0;
  HEAP32[($0 + 8 | 0) >> 2] = 0;
  $1 = HEAP32[($0 + 44 | 0) >> 2] | 0;
  HEAP32[($0 + 28 | 0) >> 2] = $1;
  HEAP32[($0 + 20 | 0) >> 2] = $1;
  HEAP32[($0 + 16 | 0) >> 2] = $1 + (HEAP32[($0 + 48 | 0) >> 2] | 0) | 0;
  return 0 | 0;
 }
 
 function __fwritex($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $3 = 0, $4 = 0, $5 = 0;
  label$1 : {
   label$2 : {
    $3 = HEAP32[($2 + 16 | 0) >> 2] | 0;
    if ($3) {
     break label$2
    }
    $4 = 0;
    if (__towrite($2 | 0) | 0) {
     break label$1
    }
    $3 = HEAP32[($2 + 16 | 0) >> 2] | 0;
   }
   label$3 : {
    $5 = HEAP32[($2 + 20 | 0) >> 2] | 0;
    if (($3 - $5 | 0) >>> 0 >= $1 >>> 0) {
     break label$3
    }
    return FUNCTION_TABLE[HEAP32[($2 + 36 | 0) >> 2] | 0 | 0]($2, $0, $1) | 0 | 0;
   }
   label$4 : {
    label$5 : {
     if ((HEAP8[($2 + 75 | 0) >> 0] | 0 | 0) >= (0 | 0)) {
      break label$5
     }
     $3 = 0;
     break label$4;
    }
    $4 = $1;
    label$6 : while (1) {
     label$7 : {
      $3 = $4;
      if ($3) {
       break label$7
      }
      $3 = 0;
      break label$4;
     }
     $4 = $3 + -1 | 0;
     if ((HEAPU8[($0 + $4 | 0) >> 0] | 0 | 0) != (10 | 0)) {
      continue label$6
     }
     break label$6;
    };
    $4 = FUNCTION_TABLE[HEAP32[($2 + 36 | 0) >> 2] | 0 | 0]($2, $0, $3) | 0;
    if ($4 >>> 0 < $3 >>> 0) {
     break label$1
    }
    $0 = $0 + $3 | 0;
    $1 = $1 - $3 | 0;
    $5 = HEAP32[($2 + 20 | 0) >> 2] | 0;
   }
   memcpy($5 | 0, $0 | 0, $1 | 0) | 0;
   HEAP32[($2 + 20 | 0) >> 2] = (HEAP32[($2 + 20 | 0) >> 2] | 0) + $1 | 0;
   $4 = $3 + $1 | 0;
  }
  return $4 | 0;
 }
 
 function __wasi_syscall_ret($0) {
  $0 = $0 | 0;
  label$1 : {
   if ($0) {
    break label$1
   }
   return 0 | 0;
  }
  HEAP32[(__errno_location() | 0) >> 2] = $0;
  return -1 | 0;
 }
 
 function __stdio_write($0, $1, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  var $4 = 0, $3 = 0, $5 = 0, $8 = 0, $9 = 0, $6 = 0, $7 = 0;
  $3 = __stack_pointer - 32 | 0;
  __stack_pointer = $3;
  $4 = HEAP32[($0 + 28 | 0) >> 2] | 0;
  HEAP32[($3 + 16 | 0) >> 2] = $4;
  $5 = HEAP32[($0 + 20 | 0) >> 2] | 0;
  HEAP32[($3 + 28 | 0) >> 2] = $2;
  HEAP32[($3 + 24 | 0) >> 2] = $1;
  $1 = $5 - $4 | 0;
  HEAP32[($3 + 20 | 0) >> 2] = $1;
  $6 = $1 + $2 | 0;
  $7 = 2;
  $1 = $3 + 16 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      if (__wasi_syscall_ret(__wasi_fd_write(HEAP32[($0 + 60 | 0) >> 2] | 0 | 0, $3 + 16 | 0 | 0, 2 | 0, $3 + 12 | 0 | 0) | 0 | 0) | 0) {
       break label$4
      }
      label$5 : while (1) {
       $4 = HEAP32[($3 + 12 | 0) >> 2] | 0;
       if (($6 | 0) == ($4 | 0)) {
        break label$3
       }
       if (($4 | 0) <= (-1 | 0)) {
        break label$2
       }
       $8 = HEAP32[($1 + 4 | 0) >> 2] | 0;
       $5 = $4 >>> 0 > $8 >>> 0;
       $9 = $1 + ($5 << 3 | 0) | 0;
       $8 = $4 - ($5 ? $8 : 0) | 0;
       HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + $8 | 0;
       $9 = $1 + ($5 ? 12 : 4) | 0;
       HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) - $8 | 0;
       $6 = $6 - $4 | 0;
       $1 = $5 ? $1 + 8 | 0 : $1;
       $7 = $7 - $5 | 0;
       if (!(__wasi_syscall_ret(__wasi_fd_write(HEAP32[($0 + 60 | 0) >> 2] | 0 | 0, $1 | 0, $7 | 0, $3 + 12 | 0 | 0) | 0 | 0) | 0)) {
        continue label$5
       }
       break label$5;
      };
     }
     if (($6 | 0) != (-1 | 0)) {
      break label$2
     }
    }
    $1 = HEAP32[($0 + 44 | 0) >> 2] | 0;
    HEAP32[($0 + 28 | 0) >> 2] = $1;
    HEAP32[($0 + 20 | 0) >> 2] = $1;
    HEAP32[($0 + 16 | 0) >> 2] = $1 + (HEAP32[($0 + 48 | 0) >> 2] | 0) | 0;
    $4 = $2;
    break label$1;
   }
   $4 = 0;
   HEAP32[($0 + 28 | 0) >> 2] = 0;
   HEAP32[($0 + 16 | 0) >> 2] = 0;
   HEAP32[($0 + 20 | 0) >> 2] = 0;
   HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 0 | 32 | 0;
   if (($7 | 0) == (2 | 0)) {
    break label$1
   }
   $4 = $2 - (HEAP32[($1 + 4 | 0) >> 2] | 0) | 0;
  }
  __stack_pointer = $3 + 32 | 0;
  return $4 | 0;
 }
 
 function __emscripten_stdout_close($0) {
  $0 = $0 | 0;
  return 0 | 0;
 }
 
 function __emscripten_stdout_seek($0, $1, $1$hi, $2) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  i64toi32_i32$HIGH_BITS = 0;
  return 0 | 0;
 }
 
 function printf($0, $1) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  var $2 = 0;
  $2 = __stack_pointer - 16 | 0;
  __stack_pointer = $2;
  HEAP32[($2 + 12 | 0) >> 2] = $1;
  $1 = vfprintf(HEAP32[(0 + 12496 | 0) >> 2] | 0 | 0, $0 | 0, $1 | 0) | 0;
  __stack_pointer = $2 + 16 | 0;
  return $1 | 0;
 }
 
 function __lockfile($0) {
  $0 = $0 | 0;
  return 1 | 0;
 }
 
 function __unlockfile($0) {
  $0 = $0 | 0;
 }
 
 function strlen($0) {
  $0 = $0 | 0;
  var $1 = 0, $2 = 0, $3 = 0;
  $1 = $0;
  label$1 : {
   label$2 : {
    if (!($0 & 3 | 0)) {
     break label$2
    }
    label$3 : {
     if (HEAPU8[$0 >> 0] | 0) {
      break label$3
     }
     return $0 - $0 | 0 | 0;
    }
    $1 = $0;
    label$4 : while (1) {
     $1 = $1 + 1 | 0;
     if (!($1 & 3 | 0)) {
      break label$2
     }
     if (HEAPU8[$1 >> 0] | 0) {
      continue label$4
     }
     break label$1;
    };
   }
   label$5 : while (1) {
    $2 = $1;
    $1 = $1 + 4 | 0;
    $3 = HEAP32[$2 >> 2] | 0;
    if (!((($3 ^ -1 | 0) & ($3 + -16843009 | 0) | 0) & -2139062144 | 0)) {
     continue label$5
    }
    break label$5;
   };
   label$6 : {
    if ($3 & 255 | 0) {
     break label$6
    }
    return $2 - $0 | 0 | 0;
   }
   label$7 : while (1) {
    $3 = HEAPU8[($2 + 1 | 0) >> 0] | 0;
    $1 = $2 + 1 | 0;
    $2 = $1;
    if ($3) {
     continue label$7
    }
    break label$7;
   };
  }
  return $1 - $0 | 0 | 0;
 }
 
 function emscripten_stack_init() {
  __stack_base = 5257488;
  __stack_end = (14600 + 15 | 0) & -16 | 0;
 }
 
 function emscripten_stack_get_free() {
  return __stack_pointer - __stack_end | 0 | 0;
 }
 
 function emscripten_stack_get_end() {
  return __stack_end | 0;
 }
 
 function stackSave() {
  return __stack_pointer | 0;
 }
 
 function stackRestore($0) {
  $0 = $0 | 0;
  __stack_pointer = $0;
 }
 
 function stackAlloc($0) {
  $0 = $0 | 0;
  var $1 = 0;
  $1 = (__stack_pointer - $0 | 0) & -16 | 0;
  __stack_pointer = $1;
  return $1 | 0;
 }
 
 function fflush($0) {
  $0 = $0 | 0;
  var $2 = 0, $1 = 0;
  label$1 : {
   label$2 : {
    if (!$0) {
     break label$2
    }
    label$3 : {
     if ((HEAP32[($0 + 76 | 0) >> 2] | 0 | 0) > (-1 | 0)) {
      break label$3
     }
     return __fflush_unlocked($0 | 0) | 0 | 0;
    }
    $1 = __lockfile($0 | 0) | 0;
    $2 = __fflush_unlocked($0 | 0) | 0;
    if (!$1) {
     break label$1
    }
    __unlockfile($0 | 0);
    return $2 | 0;
   }
   $2 = 0;
   label$4 : {
    if (!(HEAP32[(0 + 12952 | 0) >> 2] | 0)) {
     break label$4
    }
    $2 = fflush(HEAP32[(0 + 12952 | 0) >> 2] | 0 | 0) | 0;
   }
   label$5 : {
    $0 = HEAP32[(__ofl_lock() | 0) >> 2] | 0;
    if (!$0) {
     break label$5
    }
    label$6 : while (1) {
     $1 = 0;
     label$7 : {
      if ((HEAP32[($0 + 76 | 0) >> 2] | 0 | 0) < (0 | 0)) {
       break label$7
      }
      $1 = __lockfile($0 | 0) | 0;
     }
     label$8 : {
      if ((HEAP32[($0 + 20 | 0) >> 2] | 0) >>> 0 <= (HEAP32[($0 + 28 | 0) >> 2] | 0) >>> 0) {
       break label$8
      }
      $2 = __fflush_unlocked($0 | 0) | 0 | $2 | 0;
     }
     label$9 : {
      if (!$1) {
       break label$9
      }
      __unlockfile($0 | 0);
     }
     $0 = HEAP32[($0 + 56 | 0) >> 2] | 0;
     if ($0) {
      continue label$6
     }
     break label$6;
    };
   }
   __ofl_unlock();
  }
  return $2 | 0;
 }
 
 function __fflush_unlocked($0) {
  $0 = $0 | 0;
  var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $1 = 0, $2 = 0;
  label$1 : {
   if ((HEAP32[($0 + 20 | 0) >> 2] | 0) >>> 0 <= (HEAP32[($0 + 28 | 0) >> 2] | 0) >>> 0) {
    break label$1
   }
   FUNCTION_TABLE[HEAP32[($0 + 36 | 0) >> 2] | 0 | 0]($0, 0, 0) | 0;
   if (HEAP32[($0 + 20 | 0) >> 2] | 0) {
    break label$1
   }
   return -1 | 0;
  }
  label$2 : {
   $1 = HEAP32[($0 + 4 | 0) >> 2] | 0;
   $2 = HEAP32[($0 + 8 | 0) >> 2] | 0;
   if ($1 >>> 0 >= $2 >>> 0) {
    break label$2
   }
   i64toi32_i32$1 = $1 - $2 | 0;
   i64toi32_i32$0 = i64toi32_i32$1 >> 31 | 0;
   i64toi32_i32$0 = FUNCTION_TABLE[HEAP32[($0 + 40 | 0) >> 2] | 0 | 0]($0, i64toi32_i32$1, i64toi32_i32$0, 1) | 0;
   i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  }
  HEAP32[($0 + 28 | 0) >> 2] = 0;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = 0;
  HEAP32[($0 + 16 | 0) >> 2] = 0;
  HEAP32[($0 + 20 | 0) >> 2] = i64toi32_i32$1;
  i64toi32_i32$0 = $0;
  i64toi32_i32$1 = 0;
  HEAP32[($0 + 4 | 0) >> 2] = 0;
  HEAP32[($0 + 8 | 0) >> 2] = i64toi32_i32$1;
  return 0 | 0;
 }
 
 function dynCall_jiji(fptr, $0, $1, $1$hi, $2) {
  fptr = fptr | 0;
  $0 = $0 | 0;
  $1 = $1 | 0;
  $1$hi = $1$hi | 0;
  $2 = $2 | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0;
  i64toi32_i32$0 = $1$hi;
  i64toi32_i32$0 = FUNCTION_TABLE[fptr | 0]($0, $1, i64toi32_i32$0, $2) | 0;
  i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
  return i64toi32_i32$0 | 0;
 }
 
 function legalstub$dynCall_jiji($0, $1, $2, $3, $4) {
  $0 = $0 | 0;
  $1 = $1 | 0;
  $2 = $2 | 0;
  $3 = $3 | 0;
  $4 = $4 | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$3 = 0, $17 = 0, $18 = 0, $6 = 0, $7 = 0, $9 = 0, $9$hi = 0, $12$hi = 0, $5 = 0, $5$hi = 0;
  $6 = $0;
  $7 = $1;
  i64toi32_i32$0 = 0;
  $9 = $2;
  $9$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  i64toi32_i32$2 = $3;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
   $17 = 0;
  } else {
   i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
   $17 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
  }
  $12$hi = i64toi32_i32$1;
  i64toi32_i32$1 = $9$hi;
  i64toi32_i32$0 = $9;
  i64toi32_i32$2 = $12$hi;
  i64toi32_i32$3 = $17;
  i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
  i64toi32_i32$2 = dynCall_jiji($6 | 0, $7 | 0, i64toi32_i32$0 | i64toi32_i32$3 | 0 | 0, i64toi32_i32$2 | 0, $4 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  $5 = i64toi32_i32$2;
  $5$hi = i64toi32_i32$0;
  i64toi32_i32$1 = i64toi32_i32$2;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = 0;
   $18 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$2 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   $18 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$1 >>> i64toi32_i32$4 | 0) | 0;
  }
  setTempRet0($18 | 0);
  i64toi32_i32$2 = $5$hi;
  return $5 | 0;
 }
 
 function _ZN17compiler_builtins3int3mul3Mul3mul17h070e9a1c69faec5bE(var$0, var$0$hi, var$1, var$1$hi) {
  var$0 = var$0 | 0;
  var$0$hi = var$0$hi | 0;
  var$1 = var$1 | 0;
  var$1$hi = var$1$hi | 0;
  var i64toi32_i32$4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, var$2 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, var$3 = 0, var$4 = 0, var$5 = 0, $21 = 0, $22 = 0, var$6 = 0, $24 = 0, $17 = 0, $18 = 0, $23 = 0, $29 = 0, $45 = 0, $56$hi = 0, $62$hi = 0;
  i64toi32_i32$0 = var$1$hi;
  var$2 = var$1;
  var$4 = var$2 >>> 16 | 0;
  i64toi32_i32$0 = var$0$hi;
  var$3 = var$0;
  var$5 = var$3 >>> 16 | 0;
  $17 = Math_imul(var$4, var$5);
  $18 = var$2;
  i64toi32_i32$2 = var$3;
  i64toi32_i32$1 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$1 = 0;
   $21 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
   $21 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
  }
  $23 = $17 + Math_imul($18, $21) | 0;
  i64toi32_i32$1 = var$1$hi;
  i64toi32_i32$0 = var$1;
  i64toi32_i32$2 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$2 = 0;
   $22 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
  } else {
   i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
   $22 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
  }
  $29 = $23 + Math_imul($22, var$3) | 0;
  var$2 = var$2 & 65535 | 0;
  var$3 = var$3 & 65535 | 0;
  var$6 = Math_imul(var$2, var$3);
  var$2 = (var$6 >>> 16 | 0) + Math_imul(var$2, var$5) | 0;
  $45 = $29 + (var$2 >>> 16 | 0) | 0;
  var$2 = (var$2 & 65535 | 0) + Math_imul(var$4, var$3) | 0;
  i64toi32_i32$2 = 0;
  i64toi32_i32$1 = $45 + (var$2 >>> 16 | 0) | 0;
  i64toi32_i32$0 = 0;
  i64toi32_i32$3 = 32;
  i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
  if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
   i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
   $24 = 0;
  } else {
   i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;
   $24 = i64toi32_i32$1 << i64toi32_i32$4 | 0;
  }
  $56$hi = i64toi32_i32$0;
  i64toi32_i32$0 = 0;
  $62$hi = i64toi32_i32$0;
  i64toi32_i32$0 = $56$hi;
  i64toi32_i32$2 = $24;
  i64toi32_i32$1 = $62$hi;
  i64toi32_i32$3 = var$2 << 16 | 0 | (var$6 & 65535 | 0) | 0;
  i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;
  i64toi32_i32$2 = i64toi32_i32$2 | i64toi32_i32$3 | 0;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
  return i64toi32_i32$2 | 0;
 }
 
 function _ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E(var$0, var$0$hi, var$1, var$1$hi) {
  var$0 = var$0 | 0;
  var$0$hi = var$0$hi | 0;
  var$1 = var$1 | 0;
  var$1$hi = var$1$hi | 0;
  var i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$4 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$5 = 0, var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, var$5$hi = 0, var$6 = 0, var$6$hi = 0, i64toi32_i32$6 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, var$8$hi = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, var$7$hi = 0, $51 = 0, $63$hi = 0, $65 = 0, $65$hi = 0, $70 = 0, $119 = 0, $120$hi = 0, $129$hi = 0, $134$hi = 0, var$8 = 0, $140 = 0, $140$hi = 0, $142$hi = 0, $144 = 0, $144$hi = 0, $151 = 0, $151$hi = 0, $154$hi = 0, var$7 = 0, $165$hi = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             i64toi32_i32$0 = var$0$hi;
             i64toi32_i32$2 = var$0;
             i64toi32_i32$1 = 0;
             i64toi32_i32$3 = 32;
             i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
             if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
              i64toi32_i32$1 = 0;
              $39 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
             } else {
              i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;
              $39 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
             }
             var$2 = $39;
             if (var$2) {
              block : {
               i64toi32_i32$1 = var$1$hi;
               var$3 = var$1;
               if (!var$3) {
                break label$11
               }
               i64toi32_i32$1 = var$1$hi;
               i64toi32_i32$0 = var$1;
               i64toi32_i32$2 = 0;
               i64toi32_i32$3 = 32;
               i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
               if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
                i64toi32_i32$2 = 0;
                $40 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
               } else {
                i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;
                $40 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;
               }
               var$4 = $40;
               if (!var$4) {
                break label$9
               }
               var$2 = Math_clz32(var$4) - Math_clz32(var$2) | 0;
               if (var$2 >>> 0 <= 31 >>> 0) {
                break label$8
               }
               break label$2;
              }
             }
             i64toi32_i32$2 = var$1$hi;
             i64toi32_i32$1 = var$1;
             i64toi32_i32$0 = 1;
             i64toi32_i32$3 = 0;
             if (i64toi32_i32$2 >>> 0 > i64toi32_i32$0 >>> 0 | ((i64toi32_i32$2 | 0) == (i64toi32_i32$0 | 0) & i64toi32_i32$1 >>> 0 >= i64toi32_i32$3 >>> 0 | 0) | 0) {
              break label$2
             }
             i64toi32_i32$1 = var$0$hi;
             var$2 = var$0;
             i64toi32_i32$1 = var$1$hi;
             var$3 = var$1;
             var$2 = (var$2 >>> 0) / (var$3 >>> 0) | 0;
             i64toi32_i32$1 = 0;
             __wasm_intrinsics_temp_i64 = var$0 - Math_imul(var$2, var$3) | 0;
             __wasm_intrinsics_temp_i64$hi = i64toi32_i32$1;
             i64toi32_i32$1 = 0;
             i64toi32_i32$2 = var$2;
             i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
             return i64toi32_i32$2 | 0;
            }
            i64toi32_i32$2 = var$1$hi;
            i64toi32_i32$3 = var$1;
            i64toi32_i32$1 = 0;
            i64toi32_i32$0 = 32;
            i64toi32_i32$4 = i64toi32_i32$0 & 31 | 0;
            if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
             i64toi32_i32$1 = 0;
             $41 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
            } else {
             i64toi32_i32$1 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
             $41 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$4 | 0) | 0;
            }
            var$3 = $41;
            i64toi32_i32$1 = var$0$hi;
            if (!var$0) {
             break label$7
            }
            if (!var$3) {
             break label$6
            }
            var$4 = var$3 + -1 | 0;
            if (var$4 & var$3 | 0) {
             break label$6
            }
            i64toi32_i32$1 = 0;
            i64toi32_i32$2 = var$4 & var$2 | 0;
            i64toi32_i32$3 = 0;
            i64toi32_i32$0 = 32;
            i64toi32_i32$4 = i64toi32_i32$0 & 31 | 0;
            if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
             i64toi32_i32$3 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
             $42 = 0;
            } else {
             i64toi32_i32$3 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
             $42 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
            }
            $63$hi = i64toi32_i32$3;
            i64toi32_i32$3 = var$0$hi;
            i64toi32_i32$1 = var$0;
            i64toi32_i32$2 = 0;
            i64toi32_i32$0 = -1;
            i64toi32_i32$2 = i64toi32_i32$3 & i64toi32_i32$2 | 0;
            $65 = i64toi32_i32$1 & i64toi32_i32$0 | 0;
            $65$hi = i64toi32_i32$2;
            i64toi32_i32$2 = $63$hi;
            i64toi32_i32$3 = $42;
            i64toi32_i32$1 = $65$hi;
            i64toi32_i32$0 = $65;
            i64toi32_i32$1 = i64toi32_i32$2 | i64toi32_i32$1 | 0;
            __wasm_intrinsics_temp_i64 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
            __wasm_intrinsics_temp_i64$hi = i64toi32_i32$1;
            $70 = (__wasm_ctz_i32(var$3 | 0) | 0) & 31 | 0;
            i64toi32_i32$1 = 0;
            i64toi32_i32$3 = var$2 >>> $70 | 0;
            i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
            return i64toi32_i32$3 | 0;
           }
          }
          var$4 = var$3 + -1 | 0;
          if (!(var$4 & var$3 | 0)) {
           break label$5
          }
          var$2 = (Math_clz32(var$3) + 33 | 0) - Math_clz32(var$2) | 0;
          var$3 = 0 - var$2 | 0;
          break label$3;
         }
         var$3 = 63 - var$2 | 0;
         var$2 = var$2 + 1 | 0;
         break label$3;
        }
        var$4 = (var$2 >>> 0) / (var$3 >>> 0) | 0;
        i64toi32_i32$3 = 0;
        i64toi32_i32$2 = var$2 - Math_imul(var$4, var$3) | 0;
        i64toi32_i32$1 = 0;
        i64toi32_i32$0 = 32;
        i64toi32_i32$4 = i64toi32_i32$0 & 31 | 0;
        if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
         i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
         $43 = 0;
        } else {
         i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$4 | 0) | 0;
         $43 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
        }
        __wasm_intrinsics_temp_i64 = $43;
        __wasm_intrinsics_temp_i64$hi = i64toi32_i32$1;
        i64toi32_i32$1 = 0;
        i64toi32_i32$2 = var$4;
        i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
        return i64toi32_i32$2 | 0;
       }
       var$2 = Math_clz32(var$3) - Math_clz32(var$2) | 0;
       if (var$2 >>> 0 < 31 >>> 0) {
        break label$4
       }
       break label$2;
      }
      i64toi32_i32$2 = var$0$hi;
      i64toi32_i32$2 = 0;
      __wasm_intrinsics_temp_i64 = var$4 & var$0 | 0;
      __wasm_intrinsics_temp_i64$hi = i64toi32_i32$2;
      if ((var$3 | 0) == (1 | 0)) {
       break label$1
      }
      i64toi32_i32$2 = var$0$hi;
      $119 = __wasm_ctz_i32(var$3 | 0) | 0;
      i64toi32_i32$2 = 0;
      $120$hi = i64toi32_i32$2;
      i64toi32_i32$2 = var$0$hi;
      i64toi32_i32$3 = var$0;
      i64toi32_i32$1 = $120$hi;
      i64toi32_i32$0 = $119;
      i64toi32_i32$4 = i64toi32_i32$0 & 31 | 0;
      if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
       i64toi32_i32$1 = 0;
       $44 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
      } else {
       i64toi32_i32$1 = i64toi32_i32$2 >>> i64toi32_i32$4 | 0;
       $44 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$2 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$3 >>> i64toi32_i32$4 | 0) | 0;
      }
      i64toi32_i32$3 = $44;
      i64toi32_i32$HIGH_BITS = i64toi32_i32$1;
      return i64toi32_i32$3 | 0;
     }
     var$3 = 63 - var$2 | 0;
     var$2 = var$2 + 1 | 0;
    }
    i64toi32_i32$3 = var$0$hi;
    i64toi32_i32$3 = 0;
    $129$hi = i64toi32_i32$3;
    i64toi32_i32$3 = var$0$hi;
    i64toi32_i32$2 = var$0;
    i64toi32_i32$1 = $129$hi;
    i64toi32_i32$0 = var$2 & 63 | 0;
    i64toi32_i32$4 = i64toi32_i32$0 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = 0;
     $45 = i64toi32_i32$3 >>> i64toi32_i32$4 | 0;
    } else {
     i64toi32_i32$1 = i64toi32_i32$3 >>> i64toi32_i32$4 | 0;
     $45 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$3 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;
    }
    var$5 = $45;
    var$5$hi = i64toi32_i32$1;
    i64toi32_i32$1 = var$0$hi;
    i64toi32_i32$1 = 0;
    $134$hi = i64toi32_i32$1;
    i64toi32_i32$1 = var$0$hi;
    i64toi32_i32$3 = var$0;
    i64toi32_i32$2 = $134$hi;
    i64toi32_i32$0 = var$3 & 63 | 0;
    i64toi32_i32$4 = i64toi32_i32$0 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$3 << i64toi32_i32$4 | 0;
     $46 = 0;
    } else {
     i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$3 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$1 << i64toi32_i32$4 | 0) | 0;
     $46 = i64toi32_i32$3 << i64toi32_i32$4 | 0;
    }
    var$0 = $46;
    var$0$hi = i64toi32_i32$2;
    label$13 : {
     if (var$2) {
      block3 : {
       i64toi32_i32$2 = var$1$hi;
       i64toi32_i32$1 = var$1;
       i64toi32_i32$3 = -1;
       i64toi32_i32$0 = -1;
       i64toi32_i32$4 = i64toi32_i32$1 + i64toi32_i32$0 | 0;
       i64toi32_i32$5 = i64toi32_i32$2 + i64toi32_i32$3 | 0;
       if (i64toi32_i32$4 >>> 0 < i64toi32_i32$0 >>> 0) {
        i64toi32_i32$5 = i64toi32_i32$5 + 1 | 0
       }
       var$8 = i64toi32_i32$4;
       var$8$hi = i64toi32_i32$5;
       label$15 : while (1) {
        i64toi32_i32$5 = var$5$hi;
        i64toi32_i32$2 = var$5;
        i64toi32_i32$1 = 0;
        i64toi32_i32$0 = 1;
        i64toi32_i32$3 = i64toi32_i32$0 & 31 | 0;
        if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
         i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
         $47 = 0;
        } else {
         i64toi32_i32$1 = ((1 << i64toi32_i32$3 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$3 | 0) | 0) | 0 | (i64toi32_i32$5 << i64toi32_i32$3 | 0) | 0;
         $47 = i64toi32_i32$2 << i64toi32_i32$3 | 0;
        }
        $140 = $47;
        $140$hi = i64toi32_i32$1;
        i64toi32_i32$1 = var$0$hi;
        i64toi32_i32$5 = var$0;
        i64toi32_i32$2 = 0;
        i64toi32_i32$0 = 63;
        i64toi32_i32$3 = i64toi32_i32$0 & 31 | 0;
        if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
         i64toi32_i32$2 = 0;
         $48 = i64toi32_i32$1 >>> i64toi32_i32$3 | 0;
        } else {
         i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$3 | 0;
         $48 = (((1 << i64toi32_i32$3 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$3 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$3 | 0) | 0;
        }
        $142$hi = i64toi32_i32$2;
        i64toi32_i32$2 = $140$hi;
        i64toi32_i32$1 = $140;
        i64toi32_i32$5 = $142$hi;
        i64toi32_i32$0 = $48;
        i64toi32_i32$5 = i64toi32_i32$2 | i64toi32_i32$5 | 0;
        var$5 = i64toi32_i32$1 | i64toi32_i32$0 | 0;
        var$5$hi = i64toi32_i32$5;
        $144 = var$5;
        $144$hi = i64toi32_i32$5;
        i64toi32_i32$5 = var$8$hi;
        i64toi32_i32$5 = var$5$hi;
        i64toi32_i32$5 = var$8$hi;
        i64toi32_i32$2 = var$8;
        i64toi32_i32$1 = var$5$hi;
        i64toi32_i32$0 = var$5;
        i64toi32_i32$3 = i64toi32_i32$2 - i64toi32_i32$0 | 0;
        i64toi32_i32$6 = i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0;
        i64toi32_i32$4 = i64toi32_i32$6 + i64toi32_i32$1 | 0;
        i64toi32_i32$4 = i64toi32_i32$5 - i64toi32_i32$4 | 0;
        i64toi32_i32$5 = i64toi32_i32$3;
        i64toi32_i32$2 = 0;
        i64toi32_i32$0 = 63;
        i64toi32_i32$1 = i64toi32_i32$0 & 31 | 0;
        if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
         i64toi32_i32$2 = i64toi32_i32$4 >> 31 | 0;
         $49 = i64toi32_i32$4 >> i64toi32_i32$1 | 0;
        } else {
         i64toi32_i32$2 = i64toi32_i32$4 >> i64toi32_i32$1 | 0;
         $49 = (((1 << i64toi32_i32$1 | 0) - 1 | 0) & i64toi32_i32$4 | 0) << (32 - i64toi32_i32$1 | 0) | 0 | (i64toi32_i32$5 >>> i64toi32_i32$1 | 0) | 0;
        }
        var$6 = $49;
        var$6$hi = i64toi32_i32$2;
        i64toi32_i32$2 = var$1$hi;
        i64toi32_i32$2 = var$6$hi;
        i64toi32_i32$4 = var$6;
        i64toi32_i32$5 = var$1$hi;
        i64toi32_i32$0 = var$1;
        i64toi32_i32$5 = i64toi32_i32$2 & i64toi32_i32$5 | 0;
        $151 = i64toi32_i32$4 & i64toi32_i32$0 | 0;
        $151$hi = i64toi32_i32$5;
        i64toi32_i32$5 = $144$hi;
        i64toi32_i32$2 = $144;
        i64toi32_i32$4 = $151$hi;
        i64toi32_i32$0 = $151;
        i64toi32_i32$1 = i64toi32_i32$2 - i64toi32_i32$0 | 0;
        i64toi32_i32$6 = i64toi32_i32$2 >>> 0 < i64toi32_i32$0 >>> 0;
        i64toi32_i32$3 = i64toi32_i32$6 + i64toi32_i32$4 | 0;
        i64toi32_i32$3 = i64toi32_i32$5 - i64toi32_i32$3 | 0;
        var$5 = i64toi32_i32$1;
        var$5$hi = i64toi32_i32$3;
        i64toi32_i32$3 = var$0$hi;
        i64toi32_i32$5 = var$0;
        i64toi32_i32$2 = 0;
        i64toi32_i32$0 = 1;
        i64toi32_i32$4 = i64toi32_i32$0 & 31 | 0;
        if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
         i64toi32_i32$2 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
         $50 = 0;
        } else {
         i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$4 | 0) | 0;
         $50 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
        }
        $154$hi = i64toi32_i32$2;
        i64toi32_i32$2 = var$7$hi;
        i64toi32_i32$2 = $154$hi;
        i64toi32_i32$3 = $50;
        i64toi32_i32$5 = var$7$hi;
        i64toi32_i32$0 = var$7;
        i64toi32_i32$5 = i64toi32_i32$2 | i64toi32_i32$5 | 0;
        var$0 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
        var$0$hi = i64toi32_i32$5;
        i64toi32_i32$5 = var$6$hi;
        i64toi32_i32$2 = var$6;
        i64toi32_i32$3 = 0;
        i64toi32_i32$0 = 1;
        i64toi32_i32$3 = i64toi32_i32$5 & i64toi32_i32$3 | 0;
        var$6 = i64toi32_i32$2 & i64toi32_i32$0 | 0;
        var$6$hi = i64toi32_i32$3;
        var$7 = var$6;
        var$7$hi = i64toi32_i32$3;
        var$2 = var$2 + -1 | 0;
        if (var$2) {
         continue label$15
        }
        break label$15;
       };
       break label$13;
      }
     }
    }
    i64toi32_i32$3 = var$5$hi;
    __wasm_intrinsics_temp_i64 = var$5;
    __wasm_intrinsics_temp_i64$hi = i64toi32_i32$3;
    i64toi32_i32$3 = var$0$hi;
    i64toi32_i32$5 = var$0;
    i64toi32_i32$2 = 0;
    i64toi32_i32$0 = 1;
    i64toi32_i32$4 = i64toi32_i32$0 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$0 & 63 | 0) >>> 0) {
     i64toi32_i32$2 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
     $51 = 0;
    } else {
     i64toi32_i32$2 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$5 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$3 << i64toi32_i32$4 | 0) | 0;
     $51 = i64toi32_i32$5 << i64toi32_i32$4 | 0;
    }
    $165$hi = i64toi32_i32$2;
    i64toi32_i32$2 = var$6$hi;
    i64toi32_i32$2 = $165$hi;
    i64toi32_i32$3 = $51;
    i64toi32_i32$5 = var$6$hi;
    i64toi32_i32$0 = var$6;
    i64toi32_i32$5 = i64toi32_i32$2 | i64toi32_i32$5 | 0;
    i64toi32_i32$3 = i64toi32_i32$3 | i64toi32_i32$0 | 0;
    i64toi32_i32$HIGH_BITS = i64toi32_i32$5;
    return i64toi32_i32$3 | 0;
   }
   i64toi32_i32$3 = var$0$hi;
   __wasm_intrinsics_temp_i64 = var$0;
   __wasm_intrinsics_temp_i64$hi = i64toi32_i32$3;
   i64toi32_i32$3 = 0;
   var$0 = 0;
   var$0$hi = i64toi32_i32$3;
  }
  i64toi32_i32$3 = var$0$hi;
  i64toi32_i32$5 = var$0;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$3;
  return i64toi32_i32$5 | 0;
 }
 
 function __wasm_i64_mul(var$0, var$0$hi, var$1, var$1$hi) {
  var$0 = var$0 | 0;
  var$0$hi = var$0$hi | 0;
  var$1 = var$1 | 0;
  var$1$hi = var$1$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0;
  i64toi32_i32$0 = var$0$hi;
  i64toi32_i32$0 = var$1$hi;
  i64toi32_i32$0 = var$0$hi;
  i64toi32_i32$1 = var$1$hi;
  i64toi32_i32$1 = _ZN17compiler_builtins3int3mul3Mul3mul17h070e9a1c69faec5bE(var$0 | 0, i64toi32_i32$0 | 0, var$1 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$0;
  return i64toi32_i32$1 | 0;
 }
 
 function __wasm_i64_udiv(var$0, var$0$hi, var$1, var$1$hi) {
  var$0 = var$0 | 0;
  var$0$hi = var$0$hi | 0;
  var$1 = var$1 | 0;
  var$1$hi = var$1$hi | 0;
  var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0;
  i64toi32_i32$0 = var$0$hi;
  i64toi32_i32$0 = var$1$hi;
  i64toi32_i32$0 = var$0$hi;
  i64toi32_i32$1 = var$1$hi;
  i64toi32_i32$1 = _ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E(var$0 | 0, i64toi32_i32$0 | 0, var$1 | 0, i64toi32_i32$1 | 0) | 0;
  i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;
  i64toi32_i32$HIGH_BITS = i64toi32_i32$0;
  return i64toi32_i32$1 | 0;
 }
 
 function __wasm_popcnt_i32(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $5 = 0;
  label$1 : {
   label$2 : while (1) {
    $5 = var$1;
    if (!var$0) {
     break label$1
    }
    var$0 = var$0 & (var$0 - 1 | 0) | 0;
    var$1 = var$1 + 1 | 0;
    continue label$2;
   };
  }
  return $5 | 0;
 }
 
 function __wasm_rotl_i32(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0;
  var$2 = var$1 & 31 | 0;
  var$1 = (0 - var$1 | 0) & 31 | 0;
  return ((-1 >>> var$2 | 0) & var$0 | 0) << var$2 | 0 | (((-1 << var$1 | 0) & var$0 | 0) >>> var$1 | 0) | 0 | 0;
 }
 
 function __wasm_ctz_i32(var$0) {
  var$0 = var$0 | 0;
  if (var$0) {
   return 31 - Math_clz32((var$0 + -1 | 0) ^ var$0 | 0) | 0 | 0
  }
  return 32 | 0;
 }
 
 // EMSCRIPTEN_END_FUNCS
;
 bufferView = HEAPU8;
 initActiveSegments(env);
 var FUNCTION_TABLE = Table([null, std__logic_error___logic_error_28_29, EmscriptenBindingInitializer_icosahedron__EmscriptenBindingInitializer_icosahedron_28_29, getExceptionMessage_28long_29, void_20const__20emscripten__internal__getActualType_Icosahedron__28Icosahedron__29, void_20emscripten__internal__raw_destructor_Icosahedron__28Icosahedron__29, Icosahedron__20emscripten__internal__operator_new_Icosahedron_2c_20ico__map_orientation_2c_20ico__rotation_method__28ico__map_orientation___2c_20ico__rotation_method___29, Icosahedron__20emscripten__internal__operator_new_Icosahedron__28_29, Icosahedron__point_from_coords_28double_2c_20double_29_20const, Icosahedron__hash_28Point3_2c_20int_29, Icosahedron__parse_hash_28Icosahedron__hash_properties_29_20const, void_20const__20emscripten__internal__getActualType_Point3__28Point3__29, void_20emscripten__internal__raw_destructor_Point3__28Point3__29, Point3__20emscripten__internal__operator_new_Point3_2c_20double_2c_20double_2c_20double_2c_20bool_2c_20int__28double___2c_20double___2c_20double___2c_20bool___2c_20int___29, double_20emscripten__internal__MemberAccess_Point3_2c_20double___getWire_Point3__28double_20Point3____20const__2c_20Point3_20const__29, void_20emscripten__internal__MemberAccess_Point3_2c_20double___setWire_Point3__28double_20Point3____20const__2c_20Point3__2c_20double_29, int_20emscripten__internal__MemberAccess_Point3_2c_20int___getWire_Point3__28int_20Point3____20const__2c_20Point3_20const__29, void_20emscripten__internal__MemberAccess_Point3_2c_20int___setWire_Point3__28int_20Point3____20const__2c_20Point3__2c_20int_29, bool_20emscripten__internal__MemberAccess_Point3_2c_20bool___getWire_Point3__28bool_20Point3____20const__2c_20Point3_20const__29, void_20emscripten__internal__MemberAccess_Point3_2c_20bool___setWire_Point3__28bool_20Point3____20const__2c_20Point3__2c_20bool_29, void_20const__20emscripten__internal__getActualType_GPoint3__28GPoint3__29, void_20emscripten__internal__raw_destructor_GPoint3__28GPoint3__29, GPoint3__20emscripten__internal__operator_new_GPoint3_2c_20double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int__28double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int___29, GPoint3__get_x_28_29_20const, double_20emscripten__internal__GetterPolicy_double_20_28GPoint3____29_28_29_20const___get_GPoint3__28double_20_28GPoint3____20const__29_28_29_20const_2c_20GPoint3_20const__29, GPoint3__get_y_28_29_20const, GPoint3__get_z_28_29_20const, GPoint3__get_tri_num_28_29_20const, int_20emscripten__internal__GetterPolicy_int_20_28GPoint3____29_28_29_20const___get_GPoint3__28int_20_28GPoint3____20const__29_28_29_20const_2c_20GPoint3_20const__29, GPoint3__get_is_pc_28_29_20const, bool_20emscripten__internal__GetterPolicy_bool_20_28GPoint3____29_28_29_20const___get_GPoint3__28bool_20_28GPoint3____20const__29_28_29_20const_2c_20GPoint3_20const__29, int_20emscripten__internal__MemberAccess_GPoint3_2c_20int___getWire_GPoint3__28int_20GPoint3____20const__2c_20GPoint3_20const__29, void_20emscripten__internal__MemberAccess_GPoint3_2c_20int___setWire_GPoint3__28int_20GPoint3____20const__2c_20GPoint3__2c_20int_29, ico__map_orientation_20emscripten__internal__MemberAccess_GPoint3_2c_20ico__map_orientation___getWire_GPoint3__28ico__map_orientation_20GPoint3____20const__2c_20GPoint3_20const__29, void_20emscripten__internal__MemberAccess_GPoint3_2c_20ico__map_orientation___setWire_GPoint3__28ico__map_orientation_20GPoint3____20const__2c_20GPoint3__2c_20ico__map_orientation_29, ico__rotation_method_20emscripten__internal__MemberAccess_GPoint3_2c_20ico__rotation_method___getWire_GPoint3__28ico__rotation_method_20GPoint3____20const__2c_20GPoint3_20const__29, void_20emscripten__internal__MemberAccess_GPoint3_2c_20ico__rotation_method___setWire_GPoint3__28ico__rotation_method_20GPoint3____20const__2c_20GPoint3__2c_20ico__rotation_method_29, emscripten__internal__Invoker_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20long___invoke_28std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20_28__29_28long_29_2c_20long_29, Icosahedron__Icosahedron_28ico__map_orientation_2c_20ico__rotation_method_29, emscripten__internal__Invoker_Icosahedron__2c_20ico__map_orientation___2c_20ico__rotation_method_____invoke_28Icosahedron__20_28__29_28ico__map_orientation___2c_20ico__rotation_method___29_2c_20ico__map_orientation_2c_20ico__rotation_method_29, emscripten__internal__Invoker_Icosahedron____invoke_28Icosahedron__20_28__29_28_29_29, emscripten__internal__MethodInvoker_Point3_20_28Icosahedron____29_28double_2c_20double_29_20const_2c_20Point3_2c_20Icosahedron_20const__2c_20double_2c_20double___invoke_28Point3_20_28Icosahedron____20const__29_28double_2c_20double_29_20const_2c_20Icosahedron_20const__2c_20double_2c_20double_29, emscripten__internal__MethodInvoker_Icosahedron__hash_properties_20_28Icosahedron____29_28Point3_2c_20int_29_2c_20Icosahedron__hash_properties_2c_20Icosahedron__2c_20Point3_2c_20int___invoke_28Icosahedron__hash_properties_20_28Icosahedron____20const__29_28Point3_2c_20int_29_2c_20Icosahedron__2c_20Point3__2c_20int_29, emscripten__internal__MethodInvoker_GPoint3_20_28Icosahedron____29_28Icosahedron__hash_properties_29_20const_2c_20GPoint3_2c_20Icosahedron_20const__2c_20Icosahedron__hash_properties___invoke_28GPoint3_20_28Icosahedron____20const__29_28Icosahedron__hash_properties_29_20const_2c_20Icosahedron_20const__2c_20Icosahedron__hash_properties__29, Icosahedron__hash_properties__20emscripten__internal__raw_constructor_Icosahedron__hash_properties__28_29, void_20emscripten__internal__raw_destructor_Icosahedron__hash_properties__28Icosahedron__hash_properties__29, ico__map_orientation_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20ico__map_orientation___getWire_Icosahedron__hash_properties__28ico__map_orientation_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties_20const__29, void_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20ico__map_orientation___setWire_Icosahedron__hash_properties__28ico__map_orientation_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties__2c_20ico__map_orientation_29, ico__rotation_method_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20ico__rotation_method___getWire_Icosahedron__hash_properties__28ico__rotation_method_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties_20const__29, void_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20ico__rotation_method___setWire_Icosahedron__hash_properties__28ico__rotation_method_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties__2c_20ico__rotation_method_29, int_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20int___getWire_Icosahedron__hash_properties__28int_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties_20const__29, void_20emscripten__internal__MemberAccess_Icosahedron__hash_properties_2c_20int___setWire_Icosahedron__hash_properties__28int_20Icosahedron__hash_properties____20const__2c_20Icosahedron__hash_properties__2c_20int_29, emscripten__internal__Invoker_Point3__2c_20double___2c_20double___2c_20double___2c_20bool___2c_20int_____invoke_28Point3__20_28__29_28double___2c_20double___2c_20double___2c_20bool___2c_20int___29_2c_20double_2c_20double_2c_20double_2c_20bool_2c_20int_29, emscripten__internal__Invoker_GPoint3__2c_20double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int_____invoke_28GPoint3__20_28__29_28double___2c_20double___2c_20double___2c_20int___2c_20int___2c_20int___2c_20ico__map_orientation___2c_20ico__rotation_method___2c_20bool___2c_20int___29_2c_20double_2c_20double_2c_20double_2c_20int_2c_20int_2c_20int_2c_20ico__map_orientation_2c_20ico__rotation_method_2c_20bool_2c_20int_29, std____2__bad_function_call___bad_function_call_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29_1, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28_29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_deallocate_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_28std__type_info_20const__29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_0__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_type_28_29_20const, std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______base_28_29, std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______base_28_29_1, __cxa_pure_virtual, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29_1, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28_29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_deallocate_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_28std__type_info_20const__29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_1__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_type_28_29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29_1, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28_29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_deallocate_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_28std__type_info_20const__29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_2__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_type_28_29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29______func_28_29_1, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28_29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29_____clone_28std____2____function____base_std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___destroy_deallocate_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___operator_28_29_28_29, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_28std__type_info_20const__29_20const, std____2____function____func_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3_2c_20std____2__allocator_Icosahedron__lazy_points_around_28Point3_2c_20int_29_20const__$_3__2c_20std____2__vector_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__2c_20std____2__allocator_std____2__vector_GPoint3_2c_20std____2__allocator_GPoint3__20__20__20__20_28_29___target_type_28_29_20const, Point3___Point3_28_29, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______func_28_29, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______func_28_29_1, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____clone_28_29_20const, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29_____clone_28std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___29_20const, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___destroy_28_29, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___destroy_deallocate_28_29, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___operator_28_29_28Point3_20const__2c_20Point3_20const__29, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___target_28std__type_info_20const__29_20const, std____2____function____func_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0_2c_20std____2__allocator_Point3__lazy_side_points_gnomonic_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_0__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29___target_type_28_29_20const, std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______base_28_29, std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_20const__2c_20Point3_20const__29______base_28_29_1, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______func_28_29, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______func_28_29_1, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____clone_28_29_20const, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29_____clone_28std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___29_20const, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___destroy_28_29, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___destroy_deallocate_28_29, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___operator_28_29_28Point3___2c_20Point3___29, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___target_28std__type_info_20const__29_20const, std____2____function____func_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1_2c_20std____2__allocator_Point3__lazy_side_points_quaternion_28Triangle_20const__2c_20int_2c_20int_2c_20int_2c_20int_2c_20int_29__$_1__2c_20std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29___target_type_28_29_20const, std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______base_28_29, std____2____function____base_std____2__vector_Point3_2c_20std____2__allocator_Point3__20__20_28Point3_2c_20Point3_29______base_28_29_1, EmscriptenBindingInitializer_native_and_builtin_types__EmscriptenBindingInitializer_native_and_builtin_types_28_29, std____2____libcpp_refstring____libcpp_refstring_28char_20const__29, fmt_fp, pop_arg_long_double, sn_write, std__out_of_range__out_of_range_28char_20const__29, std____2____libcpp_deallocate_28void__2c_20unsigned_20long_2c_20unsigned_20long_29, std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___resize_28unsigned_20long_29, std____2____compressed_pair_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20_____rep_2c_20std____2__allocator_char__20_____compressed_pair_std____2____default_init_tag_2c_20std____2____default_init_tag__28std____2____default_init_tag___2c_20std____2____default_init_tag___29, std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__20std____2___28anonymous_20namespace_29__as_string_std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20int_20_28__29_28char__2c_20unsigned_20long_2c_20char_20const__2c_20____29_2c_20double__28int_20_28__29_28char__2c_20unsigned_20long_2c_20char_20const__2c_20____29_2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20__2c_20std____2__basic_string_char_2c_20std____2__char_traits_char__2c_20std____2__allocator_char__20___value_type_20const__2c_20double_29, std__exception___exception_28_29, std____2__bad_function_call___bad_function_call_28_29_1, std____2__bad_function_call__what_28_29_20const, demangling_terminate_handler_28_29, __cxa_get_globals_fast, abort_message, __cxa_end_catch, std__bad_alloc___bad_alloc_28_29, std__bad_alloc__what_28_29_20const, std__exception___exception_28_29_1, std__exception__what_28_29_20const, std__logic_error___logic_error_28_29_1, std__logic_error__what_28_29_20const, std__invalid_argument___invalid_argument_28_29, std__length_error___length_error_28_29, std__out_of_range___out_of_range_28_29, __cxxabiv1____shim_type_info_____shim_type_info_28_29, __cxxabiv1____fundamental_type_info_____fundamental_type_info_28_29, __cxxabiv1____shim_type_info__noop1_28_29_20const, __cxxabiv1____shim_type_info__noop2_28_29_20const, __cxxabiv1____fundamental_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const, __cxxabiv1____enum_type_info_____enum_type_info_28_29, __cxxabiv1____enum_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const, __cxxabiv1____class_type_info_____class_type_info_28_29, __cxxabiv1____class_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const, __cxxabiv1____class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const, __cxxabiv1____class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const, __cxxabiv1____class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const, __cxxabiv1____si_class_type_info_____si_class_type_info_28_29, __cxxabiv1____si_class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const, __cxxabiv1____si_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const, __cxxabiv1____si_class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const, __cxxabiv1____vmi_class_type_info_____vmi_class_type_info_28_29, __cxxabiv1____vmi_class_type_info__search_above_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20void_20const__2c_20int_2c_20bool_29_20const, __cxxabiv1____vmi_class_type_info__search_below_dst_28__cxxabiv1____dynamic_cast_info__2c_20void_20const__2c_20int_2c_20bool_29_20const, __cxxabiv1____vmi_class_type_info__has_unambiguous_public_base_28__cxxabiv1____dynamic_cast_info__2c_20void__2c_20int_29_20const, __cxxabiv1____pointer_type_info_____pointer_type_info_28_29, __cxxabiv1____pointer_type_info__can_catch_28__cxxabiv1____shim_type_info_20const__2c_20void___29_20const, __emscripten_stdout_close, __stdio_write, __emscripten_stdout_seek]);
 function __wasm_memory_size() {
  return buffer.byteLength / 65536 | 0;
 }
 
 return {
  "__wasm_call_ctors": __wasm_call_ctors, 
  "malloc": dlmalloc, 
  "__indirect_function_table": FUNCTION_TABLE, 
  "__getTypeName": __getTypeName, 
  "__embind_register_native_and_builtin_types": __embind_register_native_and_builtin_types, 
  "__errno_location": __errno_location, 
  "fflush": fflush, 
  "stackSave": stackSave, 
  "stackRestore": stackRestore, 
  "stackAlloc": stackAlloc, 
  "emscripten_stack_init": emscripten_stack_init, 
  "emscripten_stack_get_free": emscripten_stack_get_free, 
  "emscripten_stack_get_end": emscripten_stack_get_end, 
  "free": dlfree, 
  "__cxa_can_catch": __cxa_can_catch, 
  "__cxa_is_pointer_type": __cxa_is_pointer_type, 
  "dynCall_jiji": legalstub$dynCall_jiji
 };
}

  return asmFunc(asmLibraryArg);
}

)(asmLibraryArg);
  },

  instantiate: /** @suppress{checkTypes} */ function(binary, info) {
    return {
      then: function(ok) {
        var module = new WebAssembly.Module(binary);
        ok({
          'instance': new WebAssembly.Instance(module)
        });
        // Emulate a simple WebAssembly.instantiate(..).then(()=>{}).catch(()=>{}) syntax.
        return { catch: function() {} };
      }
    };
  },

  RuntimeError: Error
};

// We don't need to actually download a wasm binary, mark it as present but empty.
wasmBinary = [];

// end include: wasm2js.js
if (typeof WebAssembly !== 'object') {
  abort('no native wasm support detected');
}

// include: runtime_safe_heap.js


// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.
// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)

/** @param {number} ptr
    @param {number} value
    @param {string} type
    @param {number|boolean=} noSafe */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch (type) {
      case 'i1': HEAP8[((ptr)>>0)] = value; break;
      case 'i8': HEAP8[((ptr)>>0)] = value; break;
      case 'i16': HEAP16[((ptr)>>1)] = value; break;
      case 'i32': HEAP32[((ptr)>>2)] = value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)] = value; break;
      case 'double': HEAPF64[((ptr)>>3)] = value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}

/** @param {number} ptr
    @param {string} type
    @param {number|boolean=} noSafe */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch (type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}

// end include: runtime_safe_heap.js
// Wasm globals

var wasmMemory;

//========================================
// Runtime essentials
//========================================

// whether we are quitting the application. no code should run after this.
// set in exit() and abort()
var ABORT = false;

// set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.
var EXITSTATUS;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

// C calling interface.
/** @param {string|null=} returnType
    @param {Array=} argTypes
    @param {Arguments|Array=} args
    @param {Object=} opts */
function ccall(ident, returnType, argTypes, args, opts) {
  // For fast lookup of conversion functions
  var toC = {
    'string': function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    },
    'array': function(arr) {
      var ret = stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    }
  };

  function convertReturnValue(ret) {
    if (returnType === 'string') return UTF8ToString(ret);
    if (returnType === 'boolean') return Boolean(ret);
    return ret;
  }

  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  assert(returnType !== 'array', 'Return type should not be "array".');
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);

  ret = convertReturnValue(ret);
  if (stack !== 0) stackRestore(stack);
  return ret;
}

/** @param {string=} returnType
    @param {Array=} argTypes
    @param {Object=} opts */
function cwrap(ident, returnType, argTypes, opts) {
  return function() {
    return ccall(ident, returnType, argTypes, arguments, opts);
  }
}

// We used to include malloc/free by default in the past. Show a helpful error in
// builds with assertions.

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((Uint8Array|Array<number>), number)} */
function allocate(slab, allocator) {
  var ret;
  assert(typeof allocator === 'number', 'allocate no longer takes a type argument')
  assert(typeof slab !== 'number', 'allocate no longer takes a number as arg0')

  if (allocator == ALLOC_STACK) {
    ret = stackAlloc(slab.length);
  } else {
    ret = _malloc(slab.length);
  }

  if (slab.subarray || slab.slice) {
    HEAPU8.set(/** @type {!Uint8Array} */(slab), ret);
  } else {
    HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
}

// include: runtime_strings.js


// runtime_strings.js: Strings related runtime functions that are part of both MINIMAL_RUNTIME and regular runtime.

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;

/**
 * @param {number} idx
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ArrayToString(heap, idx, maxBytesToRead) {
  var endIdx = idx + maxBytesToRead;
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)
  while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;

  if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(heap.subarray(idx, endPtr));
  } else {
    var str = '';
    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that
    while (idx < endPtr) {
      // For UTF8 byte structure, see:
      // http://en.wikipedia.org/wiki/UTF-8#Description
      // https://www.ietf.org/rfc/rfc2279.txt
      // https://tools.ietf.org/html/rfc3629
      var u0 = heap[idx++];
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      var u1 = heap[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      var u2 = heap[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heap[idx++] & 63);
      }

      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
  return str;
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a
// copy of that string as a Javascript String object.
// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit
//                 this parameter to scan the string until the first \0 byte. If maxBytesToRead is
//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the
//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will
//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)
//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may
//                 throw JS JIT optimizations off, so it is worth to consider consistently using one
//                 style or the other.
/**
 * @param {number} ptr
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ToString(ptr, maxBytesToRead) {
  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';
}

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   heap: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array.
//                    This count should include the null terminator,
//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) {
      var u1 = str.charCodeAt(++i);
      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);
    }
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      heap[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      heap[outIdx++] = 0xC0 | (u >> 6);
      heap[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      heap[outIdx++] = 0xE0 | (u >> 12);
      heap[outIdx++] = 0x80 | ((u >> 6) & 63);
      heap[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 3 >= endIdx) break;
      if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x1FFFFF).');
      heap[outIdx++] = 0xF0 | (u >> 18);
      heap[outIdx++] = 0x80 | ((u >> 12) & 63);
      heap[outIdx++] = 0x80 | ((u >> 6) & 63);
      heap[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  heap[outIdx] = 0;
  return outIdx - startIdx;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.
function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) ++len;
    else if (u <= 0x7FF) len += 2;
    else if (u <= 0xFFFF) len += 3;
    else len += 4;
  }
  return len;
}

// end include: runtime_strings.js
// include: runtime_strings_extra.js


// runtime_strings_extra.js: Strings related runtime functions that are available only in regular runtime.

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAPU8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;

function UTF16ToString(ptr, maxBytesToRead) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  var maxIdx = idx + maxBytesToRead / 2;
  // If maxBytesToRead is not passed explicitly, it will be undefined, and this
  // will always evaluate to true. This saves on code size.
  while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var str = '';

    // If maxBytesToRead is not passed explicitly, it will be undefined, and the for-loop's condition
    // will always evaluate to true. The loop is then terminated on the first null char.
    for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) break;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }

    return str;
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)] = codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)] = 0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}

function UTF32ToString(ptr, maxBytesToRead) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  // If maxBytesToRead is not passed explicitly, it will be undefined, and this
  // will always evaluate to true. This saves on code size.
  while (!(i >= maxBytesToRead / 4)) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0) break;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
  return str;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)] = codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)] = 0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}

// Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.
function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = _malloc(size);
  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Allocate stack space for a JS string, and write it there.
function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated
    @param {boolean=} dontAddNull */
function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}

/** @param {boolean=} dontAddNull */
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)] = str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)] = 0;
}

// end include: runtime_strings_extra.js
// Memory management

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBufferAndViews(buf) {
  buffer = buf;
  Module['HEAP8'] = HEAP8 = new Int8Array(buf);
  Module['HEAP16'] = HEAP16 = new Int16Array(buf);
  Module['HEAP32'] = HEAP32 = new Int32Array(buf);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);
}

var TOTAL_STACK = 5242880;
if (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')

var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;
if (!Object.getOwnPropertyDescriptor(Module, 'INITIAL_MEMORY')) {
  Object.defineProperty(Module, 'INITIAL_MEMORY', {
    configurable: true,
    get: function() {
      abort('Module.INITIAL_MEMORY has been replaced with plain INITIAL_MEMORY (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')
    }
  });
}

assert(INITIAL_MEMORY >= TOTAL_STACK, 'INITIAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');

// In non-standalone/normal mode, we create the memory here.
// include: runtime_init_memory.js


// Create the wasm memory. (Note: this only applies if IMPORTED_MEMORY is defined)

  if (Module['wasmMemory']) {
    wasmMemory = Module['wasmMemory'];
  } else
  {
    wasmMemory = new WebAssembly.Memory({
      'initial': INITIAL_MEMORY / 65536
      ,
      'maximum': INITIAL_MEMORY / 65536
    });
  }

if (wasmMemory) {
  buffer = wasmMemory.buffer;
}

// If the user provides an incorrect length, just use that length instead rather than providing the user to
// specifically provide the memory length with Module['INITIAL_MEMORY'].
INITIAL_MEMORY = buffer.byteLength;
assert(INITIAL_MEMORY % 65536 === 0);
updateGlobalBufferAndViews(buffer);

// end include: runtime_init_memory.js

// include: runtime_init_table.js
// In regular non-RELOCATABLE mode the table is exported
// from the wasm module and this will be assigned once
// the exports are available.
var wasmTable;

// end include: runtime_init_table.js
// include: runtime_stack_check.js


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  var max = _emscripten_stack_get_end();
  assert((max & 3) == 0);
  // The stack grows downwards
  HEAPU32[(max >> 2)+1] = 0x2135467;
  HEAPU32[(max >> 2)+2] = 0x89BACDFE;
  // Also test the global address 0 for integrity.
  HEAP32[0] = 0x63736d65; /* 'emsc' */
}

function checkStackCookie() {
  if (ABORT) return;
  var max = _emscripten_stack_get_end();
  var cookie1 = HEAPU32[(max >> 2)+1];
  var cookie2 = HEAPU32[(max >> 2)+2];
  if (cookie1 != 0x2135467 || cookie2 != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x' + cookie2.toString(16) + ' ' + cookie1.toString(16));
  }
  // Also test the global address 0 for integrity.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) abort('Runtime error: The application has corrupted its heap memory area (address zero)!');
}

// end include: runtime_stack_check.js
// include: runtime_assertions.js


// Endianness check
(function() {
  var h16 = new Int16Array(1);
  var h8 = new Int8Array(h16.buffer);
  h16[0] = 0x6373;
  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -s SUPPORT_BIG_ENDIAN=1 to bypass)';
})();

function abortFnPtrError(ptr, sig) {
	abort("Invalid function pointer " + ptr + " called with signature '" + sig + "'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). Build with ASSERTIONS=2 for more info.");
}

// end include: runtime_assertions.js
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the main() is called

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {

  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }

  callRuntimeCallbacks(__ATPRERUN__);
}

function initRuntime() {
  checkStackCookie();
  assert(!runtimeInitialized);
  runtimeInitialized = true;

  
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();

  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }

  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}

// include: runtime_math.js


// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc

assert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');

// end include: runtime_math.js
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
}

function addRunDependency(id) {
  runDependencies++;

  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }

  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            err('still waiting on run dependencies:');
          }
          err('dependency: ' + dep);
        }
        if (shown) {
          err('(end of list)');
        }
      }, 10000);
    }
  } else {
    err('warning: run dependency added without ID');
  }
}

function removeRunDependency(id) {
  runDependencies--;

  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }

  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    err('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data

/** @param {string|number=} what */
function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  what += '';
  err(what);

  ABORT = true;
  EXITSTATUS = 1;

  var output = 'abort(' + what + ') at ' + stackTrace();
  what = output;

  // Use a wasm runtime error, because a JS error might be seen as a foreign
  // exception, which means we'd run destructors on it. We need the error to
  // simply make the program stop.
  var e = new WebAssembly.RuntimeError(what);

  // Throw the error whether or not MODULARIZE is set because abort is used
  // in code paths apart from instantiation where an exception is expected
  // to be thrown when abort is called.
  throw e;
}

// {{MEM_INITIALIZER}}

// include: memoryprofiler.js


// end include: memoryprofiler.js
// show errors on likely calls to FS when it was not included
var FS = {
  error: function() {
    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');
  },
  init: function() { FS.error() },
  createDataFile: function() { FS.error() },
  createPreloadedFile: function() { FS.error() },
  createLazyFile: function() { FS.error() },
  open: function() { FS.error() },
  mkdev: function() { FS.error() },
  registerDevice: function() { FS.error() },
  analyzePath: function() { FS.error() },
  loadFilesFromDB: function() { FS.error() },

  ErrnoError: function ErrnoError() { FS.error() },
};
Module['FS_createDataFile'] = FS.createDataFile;
Module['FS_createPreloadedFile'] = FS.createPreloadedFile;

// include: URIUtils.js


function hasPrefix(str, prefix) {
  return String.prototype.startsWith ?
      str.startsWith(prefix) :
      str.indexOf(prefix) === 0;
}

// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix = 'data:application/octet-stream;base64,';

// Indicates whether filename is a base64 data URI.
function isDataURI(filename) {
  return hasPrefix(filename, dataURIPrefix);
}

var fileURIPrefix = "file://";

// Indicates whether filename is delivered via file protocol (as opposed to http/https)
function isFileURI(filename) {
  return hasPrefix(filename, fileURIPrefix);
}

// end include: URIUtils.js
function createExportWrapper(name, fixedasm) {
  return function() {
    var displayName = name;
    var asm = fixedasm;
    if (!fixedasm) {
      asm = Module['asm'];
    }
    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');
    assert(!runtimeExited, 'native function `' + displayName + '` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
    if (!asm[name]) {
      assert(asm[name], 'exported native function `' + displayName + '` not found');
    }
    return asm[name].apply(null, arguments);
  };
}

var wasmBinaryFile = 'geocomb-web.wasm';
if (!isDataURI(wasmBinaryFile)) {
  wasmBinaryFile = locateFile(wasmBinaryFile);
}

function getBinary(file) {
  try {
    if (file == wasmBinaryFile && wasmBinary) {
      return new Uint8Array(wasmBinary);
    }
    var binary = tryParseAsDataURI(file);
    if (binary) {
      return binary;
    }
    if (readBinary) {
      return readBinary(file);
    } else {
      throw "both async and sync fetching of the wasm failed";
    }
  }
  catch (err) {
    abort(err);
  }
}

function getBinaryPromise() {
  // If we don't have the binary yet, try to to load it asynchronously.
  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.
  // See https://github.com/github/fetch/pull/92#issuecomment-140665932
  // Cordova or Electron apps are typically loaded from a file:// url.
  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.
  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {
    if (typeof fetch === 'function'
      && !isFileURI(wasmBinaryFile)
    ) {
      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {
        if (!response['ok']) {
          throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
        }
        return response['arrayBuffer']();
      }).catch(function () {
          return getBinary(wasmBinaryFile);
      });
    }
    else {
      if (readAsync) {
        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)
        return new Promise(function(resolve, reject) {
          readAsync(wasmBinaryFile, function(response) { resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response))) }, reject)
        });
      }
    }
  }
    
  // Otherwise, getBinary should be able to get it synchronously
  return Promise.resolve().then(function() { return getBinary(wasmBinaryFile); });
}

// Create the wasm instance.
// Receives the wasm imports, returns the exports.
function createWasm() {
  // prepare imports
  var info = {
    'env': asmLibraryArg,
    'wasi_snapshot_preview1': asmLibraryArg,
  };
  // Load the wasm module and create an instance of using native support in the JS engine.
  // handle a generated wasm instance, receiving its exports and
  // performing other necessary setup
  /** @param {WebAssembly.Module=} module*/
  function receiveInstance(instance, module) {
    var exports = instance.exports;

    Module['asm'] = exports;

    wasmTable = Module['asm']['__indirect_function_table'];
    assert(wasmTable, "table not found in wasm exports");

    addOnInit(Module['asm']['__wasm_call_ctors']);

    removeRunDependency('wasm-instantiate');
  }
  // we can't run yet (except in a pthread, where we have a custom sync instantiator)
  addRunDependency('wasm-instantiate');

  // Async compilation can be confusing when an error on the page overwrites Module
  // (for example, if the order of elements is wrong, and the one defining Module is
  // later), so we save Module and check it later.
  var trueModule = Module;
  function receiveInstantiatedSource(output) {
    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.
    // receiveInstance() will swap in the exports (to Module.asm) so they can be called
    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');
    trueModule = null;
    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.
    // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.
    receiveInstance(output['instance']);
  }

  function instantiateArrayBuffer(receiver) {
    return getBinaryPromise().then(function(binary) {
      var result = WebAssembly.instantiate(binary, info);
      return result;
    }).then(receiver, function(reason) {
      err('failed to asynchronously prepare wasm: ' + reason);

      // Warn on some common problems.
      if (isFileURI(wasmBinaryFile)) {
        err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');
      }
      abort(reason);
    });
  }

  // Prefer streaming instantiation if available.
  function instantiateAsync() {
    if (!wasmBinary &&
        typeof WebAssembly.instantiateStreaming === 'function' &&
        !isDataURI(wasmBinaryFile) &&
        // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.
        !isFileURI(wasmBinaryFile) &&
        typeof fetch === 'function') {
      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {
        var result = WebAssembly.instantiateStreaming(response, info);
        return result.then(receiveInstantiatedSource, function(reason) {
            // We expect the most common failure cause to be a bad MIME type for the binary,
            // in which case falling back to ArrayBuffer instantiation should work.
            err('wasm streaming compile failed: ' + reason);
            err('falling back to ArrayBuffer instantiation');
            return instantiateArrayBuffer(receiveInstantiatedSource);
          });
      });
    } else {
      return instantiateArrayBuffer(receiveInstantiatedSource);
    }
  }

  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback
  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel
  // to any other async startup actions they are performing.
  if (Module['instantiateWasm']) {
    try {
      var exports = Module['instantiateWasm'](info, receiveInstance);
      return exports;
    } catch(e) {
      err('Module.instantiateWasm callback failed with error: ' + e);
      return false;
    }
  }

  instantiateAsync();
  return {}; // no exports yet; we'll fill them in later
}

// Globals used by JS i64 conversions (see makeSetValue)
var tempDouble;
var tempI64;

// === Body ===

var ASM_CONSTS = {
  
};






  function callRuntimeCallbacks(callbacks) {
      while (callbacks.length > 0) {
        var callback = callbacks.shift();
        if (typeof callback == 'function') {
          callback(Module); // Pass the module as the first argument.
          continue;
        }
        var func = callback.func;
        if (typeof func === 'number') {
          if (callback.arg === undefined) {
            wasmTable.get(func)();
          } else {
            wasmTable.get(func)(callback.arg);
          }
        } else {
          func(callback.arg === undefined ? null : callback.arg);
        }
      }
    }

  function demangle(func) {
      warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
      return func;
    }

  function demangleAll(text) {
      var regex =
        /\b_Z[\w\d_]+/g;
      return text.replace(regex,
        function(x) {
          var y = demangle(x);
          return x === y ? x : (y + ' [' + x + ']');
        });
    }

  function jsStackTrace() {
      var error = new Error();
      if (!error.stack) {
        // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
        // so try that as a special-case.
        try {
          throw new Error();
        } catch(e) {
          error = e;
        }
        if (!error.stack) {
          return '(no stack trace available)';
        }
      }
      return error.stack.toString();
    }

  var runtimeKeepaliveCounter=0;
  function keepRuntimeAlive() {
      return noExitRuntime || runtimeKeepaliveCounter > 0;
    }

  function stackTrace() {
      var js = jsStackTrace();
      if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
      return demangleAll(js);
    }

  var ExceptionInfoAttrs={DESTRUCTOR_OFFSET:0,REFCOUNT_OFFSET:4,TYPE_OFFSET:8,CAUGHT_OFFSET:12,RETHROWN_OFFSET:13,SIZE:16};
  function ___cxa_allocate_exception(size) {
      // Thrown object is prepended by exception metadata block
      return _malloc(size + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;
    }

  function ExceptionInfo(excPtr) {
      this.excPtr = excPtr;
      this.ptr = excPtr - ExceptionInfoAttrs.SIZE;
  
      this.set_type = function(type) {
        HEAP32[(((this.ptr)+(ExceptionInfoAttrs.TYPE_OFFSET))>>2)] = type;
      };
  
      this.get_type = function() {
        return HEAP32[(((this.ptr)+(ExceptionInfoAttrs.TYPE_OFFSET))>>2)];
      };
  
      this.set_destructor = function(destructor) {
        HEAP32[(((this.ptr)+(ExceptionInfoAttrs.DESTRUCTOR_OFFSET))>>2)] = destructor;
      };
  
      this.get_destructor = function() {
        return HEAP32[(((this.ptr)+(ExceptionInfoAttrs.DESTRUCTOR_OFFSET))>>2)];
      };
  
      this.set_refcount = function(refcount) {
        HEAP32[(((this.ptr)+(ExceptionInfoAttrs.REFCOUNT_OFFSET))>>2)] = refcount;
      };
  
      this.set_caught = function (caught) {
        caught = caught ? 1 : 0;
        HEAP8[(((this.ptr)+(ExceptionInfoAttrs.CAUGHT_OFFSET))>>0)] = caught;
      };
  
      this.get_caught = function () {
        return HEAP8[(((this.ptr)+(ExceptionInfoAttrs.CAUGHT_OFFSET))>>0)] != 0;
      };
  
      this.set_rethrown = function (rethrown) {
        rethrown = rethrown ? 1 : 0;
        HEAP8[(((this.ptr)+(ExceptionInfoAttrs.RETHROWN_OFFSET))>>0)] = rethrown;
      };
  
      this.get_rethrown = function () {
        return HEAP8[(((this.ptr)+(ExceptionInfoAttrs.RETHROWN_OFFSET))>>0)] != 0;
      };
  
      // Initialize native structure fields. Should be called once after allocated.
      this.init = function(type, destructor) {
        this.set_type(type);
        this.set_destructor(destructor);
        this.set_refcount(0);
        this.set_caught(false);
        this.set_rethrown(false);
      }
  
      this.add_ref = function() {
        var value = HEAP32[(((this.ptr)+(ExceptionInfoAttrs.REFCOUNT_OFFSET))>>2)];
        HEAP32[(((this.ptr)+(ExceptionInfoAttrs.REFCOUNT_OFFSET))>>2)] = value + 1;
      };
  
      // Returns true if last reference released.
      this.release_ref = function() {
        var prev = HEAP32[(((this.ptr)+(ExceptionInfoAttrs.REFCOUNT_OFFSET))>>2)];
        HEAP32[(((this.ptr)+(ExceptionInfoAttrs.REFCOUNT_OFFSET))>>2)] = prev - 1;
        assert(prev > 0);
        return prev === 1;
      };
    }
  function CatchInfo(ptr) {
  
      this.free = function() {
        _free(this.ptr);
        this.ptr = 0;
      };
  
      this.set_base_ptr = function(basePtr) {
        HEAP32[((this.ptr)>>2)] = basePtr;
      };
  
      this.get_base_ptr = function() {
        return HEAP32[((this.ptr)>>2)];
      };
  
      this.set_adjusted_ptr = function(adjustedPtr) {
        var ptrSize = 4;
        HEAP32[(((this.ptr)+(ptrSize))>>2)] = adjustedPtr;
      };
  
      this.get_adjusted_ptr = function() {
        var ptrSize = 4;
        return HEAP32[(((this.ptr)+(ptrSize))>>2)];
      };
  
      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted
      // when the pointer is casted to some of the exception object base classes (e.g. when virtual
      // inheritance is used). When a pointer is thrown this method should return the thrown pointer
      // itself.
      this.get_exception_ptr = function() {
        // Work around a fastcomp bug, this code is still included for some reason in a build without
        // exceptions support.
        var isPointer = ___cxa_is_pointer_type(
          this.get_exception_info().get_type());
        if (isPointer) {
          return HEAP32[((this.get_base_ptr())>>2)];
        }
        var adjusted = this.get_adjusted_ptr();
        if (adjusted !== 0) return adjusted;
        return this.get_base_ptr();
      };
  
      this.get_exception_info = function() {
        return new ExceptionInfo(this.get_base_ptr());
      };
  
      if (ptr === undefined) {
        this.ptr = _malloc(8);
        this.set_adjusted_ptr(0);
      } else {
        this.ptr = ptr;
      }
    }
  
  var exceptionCaught= [];
  
  function exception_addRef(info) {
      info.add_ref();
    }
  
  var uncaughtExceptionCount=0;
  function ___cxa_begin_catch(ptr) {
      var catchInfo = new CatchInfo(ptr);
      var info = catchInfo.get_exception_info();
      if (!info.get_caught()) {
        info.set_caught(true);
        uncaughtExceptionCount--;
      }
      info.set_rethrown(false);
      exceptionCaught.push(catchInfo);
      exception_addRef(info);
      return catchInfo.get_exception_ptr();
    }

  var exceptionLast=0;
  
  function ___cxa_free_exception(ptr) {
      try {
        return _free(new ExceptionInfo(ptr).ptr);
      } catch(e) {
        err('exception during cxa_free_exception: ' + e);
      }
    }
  function exception_decRef(info) {
      // A rethrown exception can reach refcount 0; it must not be discarded
      // Its next handler will clear the rethrown flag and addRef it, prior to
      // final decRef and destruction here
      if (info.release_ref() && !info.get_rethrown()) {
        var destructor = info.get_destructor();
        if (destructor) {
          // In Wasm, destructors return 'this' as in ARM
          wasmTable.get(destructor)(info.excPtr);
        }
        ___cxa_free_exception(info.excPtr);
      }
    }
  function ___cxa_end_catch() {
      // Clear state flag.
      _setThrew(0);
      assert(exceptionCaught.length > 0);
      // Call destructor if one is registered then clear it.
      var catchInfo = exceptionCaught.pop();
  
      exception_decRef(catchInfo.get_exception_info());
      catchInfo.free();
      exceptionLast = 0; // XXX in decRef?
    }

  function ___resumeException(catchInfoPtr) {
      var catchInfo = new CatchInfo(catchInfoPtr);
      var ptr = catchInfo.get_base_ptr();
      if (!exceptionLast) { exceptionLast = ptr; }
      catchInfo.free();
      throw ptr;
    }
  function ___cxa_find_matching_catch_2() {
      var thrown = exceptionLast;
      if (!thrown) {
        // just pass through the null ptr
        setTempRet0((0) | 0); return ((0)|0);
      }
      var info = new ExceptionInfo(thrown);
      var thrownType = info.get_type();
      var catchInfo = new CatchInfo();
      catchInfo.set_base_ptr(thrown);
      if (!thrownType) {
        // just pass through the thrown ptr
        setTempRet0((0) | 0); return ((catchInfo.ptr)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      // can_catch receives a **, add indirection
      var stackTop = stackSave();
      var exceptionThrowBuf = stackAlloc(4);
      HEAP32[((exceptionThrowBuf)>>2)] = thrown;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        var caughtType = typeArray[i];
        if (caughtType === 0 || caughtType === thrownType) {
          // Catch all clause matched or exactly the same type is caught
          break;
        }
        if (___cxa_can_catch(caughtType, thrownType, exceptionThrowBuf)) {
          var adjusted = HEAP32[((exceptionThrowBuf)>>2)];
          if (thrown !== adjusted) {
            catchInfo.set_adjusted_ptr(adjusted);
          }
          setTempRet0((caughtType) | 0); return ((catchInfo.ptr)|0);
        }
      }
      stackRestore(stackTop);
      setTempRet0((thrownType) | 0); return ((catchInfo.ptr)|0);
    }

  function ___cxa_find_matching_catch_3() {
      var thrown = exceptionLast;
      if (!thrown) {
        // just pass through the null ptr
        setTempRet0((0) | 0); return ((0)|0);
      }
      var info = new ExceptionInfo(thrown);
      var thrownType = info.get_type();
      var catchInfo = new CatchInfo();
      catchInfo.set_base_ptr(thrown);
      if (!thrownType) {
        // just pass through the thrown ptr
        setTempRet0((0) | 0); return ((catchInfo.ptr)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      // can_catch receives a **, add indirection
      var stackTop = stackSave();
      var exceptionThrowBuf = stackAlloc(4);
      HEAP32[((exceptionThrowBuf)>>2)] = thrown;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        var caughtType = typeArray[i];
        if (caughtType === 0 || caughtType === thrownType) {
          // Catch all clause matched or exactly the same type is caught
          break;
        }
        if (___cxa_can_catch(caughtType, thrownType, exceptionThrowBuf)) {
          var adjusted = HEAP32[((exceptionThrowBuf)>>2)];
          if (thrown !== adjusted) {
            catchInfo.set_adjusted_ptr(adjusted);
          }
          setTempRet0((caughtType) | 0); return ((catchInfo.ptr)|0);
        }
      }
      stackRestore(stackTop);
      setTempRet0((thrownType) | 0); return ((catchInfo.ptr)|0);
    }


  function ___cxa_throw(ptr, type, destructor) {
      var info = new ExceptionInfo(ptr);
      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.
      info.init(type, destructor);
      exceptionLast = ptr;
      uncaughtExceptionCount++;
      throw ptr;
    }


  var structRegistrations={};
  
  function runDestructors(destructors) {
      while (destructors.length) {
          var ptr = destructors.pop();
          var del = destructors.pop();
          del(ptr);
      }
    }
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  var char_0=48;
  
  var char_9=57;
  function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }
  function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }
  function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }
  var InternalError=undefined;
  function throwInternalError(message) {
      throw new InternalError(message);
    }
  function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }
  function __embind_finalize_value_object(structType) {
      var reg = structRegistrations[structType];
      delete structRegistrations[structType];
  
      var rawConstructor = reg.rawConstructor;
      var rawDestructor = reg.rawDestructor;
      var fieldRecords = reg.fields;
      var fieldTypes = fieldRecords.map(function(field) { return field.getterReturnType; }).
                concat(fieldRecords.map(function(field) { return field.setterArgumentType; }));
      whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes) {
          var fields = {};
          fieldRecords.forEach(function(field, i) {
              var fieldName = field.fieldName;
              var getterReturnType = fieldTypes[i];
              var getter = field.getter;
              var getterContext = field.getterContext;
              var setterArgumentType = fieldTypes[i + fieldRecords.length];
              var setter = field.setter;
              var setterContext = field.setterContext;
              fields[fieldName] = {
                  read: function(ptr) {
                      return getterReturnType['fromWireType'](
                          getter(getterContext, ptr));
                  },
                  write: function(ptr, o) {
                      var destructors = [];
                      setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, o));
                      runDestructors(destructors);
                  }
              };
          });
  
          return [{
              name: reg.name,
              'fromWireType': function(ptr) {
                  var rv = {};
                  for (var i in fields) {
                      rv[i] = fields[i].read(ptr);
                  }
                  rawDestructor(ptr);
                  return rv;
              },
              'toWireType': function(destructors, o) {
                  // todo: Here we have an opportunity for -O3 level "unsafe" optimizations:
                  // assume all fields are present without checking.
                  for (var fieldName in fields) {
                      if (!(fieldName in o)) {
                          throw new TypeError('Missing field:  "' + fieldName + '"');
                      }
                  }
                  var ptr = rawConstructor();
                  for (fieldName in fields) {
                      fields[fieldName].write(ptr, o[fieldName]);
                  }
                  if (destructors !== null) {
                      destructors.push(rawDestructor, ptr);
                  }
                  return ptr;
              },
              'argPackAdvance': 8,
              'readValueFromPointer': simpleReadValueFromPointer,
              destructorFunction: rawDestructor,
          }];
      });
    }

  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }
  var embind_charCodes=undefined;
  function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  var BindingError=undefined;
  function throwBindingError(message) {
      throw new BindingError(message);
    }
  /** @param {Object=} options */
  function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }
  function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function ClassHandle_isAliasOf(other) {
      if (!(this instanceof ClassHandle)) {
          return false;
      }
      if (!(other instanceof ClassHandle)) {
          return false;
      }
  
      var leftClass = this.$$.ptrType.registeredClass;
      var left = this.$$.ptr;
      var rightClass = other.$$.ptrType.registeredClass;
      var right = other.$$.ptr;
  
      while (leftClass.baseClass) {
          left = leftClass.upcast(left);
          leftClass = leftClass.baseClass;
      }
  
      while (rightClass.baseClass) {
          right = rightClass.upcast(right);
          rightClass = rightClass.baseClass;
      }
  
      return leftClass === rightClass && left === right;
    }
  
  function shallowCopyInternalPointer(o) {
      return {
          count: o.count,
          deleteScheduled: o.deleteScheduled,
          preservePointerOnDelete: o.preservePointerOnDelete,
          ptr: o.ptr,
          ptrType: o.ptrType,
          smartPtr: o.smartPtr,
          smartPtrType: o.smartPtrType,
      };
    }
  
  function throwInstanceAlreadyDeleted(obj) {
      function getInstanceTypeName(handle) {
        return handle.$$.ptrType.registeredClass.name;
      }
      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');
    }
  
  var finalizationGroup=false;
  
  function detachFinalizer(handle) {}
  
  function runDestructor($$) {
      if ($$.smartPtr) {
          $$.smartPtrType.rawDestructor($$.smartPtr);
      } else {
          $$.ptrType.registeredClass.rawDestructor($$.ptr);
      }
    }
  function releaseClassHandle($$) {
      $$.count.value -= 1;
      var toDelete = 0 === $$.count.value;
      if (toDelete) {
          runDestructor($$);
      }
    }
  function attachFinalizer(handle) {
      if ('undefined' === typeof FinalizationGroup) {
          attachFinalizer = function (handle) { return handle; };
          return handle;
      }
      // If the running environment has a FinalizationGroup (see
      // https://github.com/tc39/proposal-weakrefs), then attach finalizers
      // for class handles.  We check for the presence of FinalizationGroup
      // at run-time, not build-time.
      finalizationGroup = new FinalizationGroup(function (iter) {
          for (var result = iter.next(); !result.done; result = iter.next()) {
              var $$ = result.value;
              if (!$$.ptr) {
                  console.warn('object already deleted: ' + $$.ptr);
              } else {
                  releaseClassHandle($$);
              }
          }
      });
      attachFinalizer = function(handle) {
          finalizationGroup.register(handle, handle.$$, handle.$$);
          return handle;
      };
      detachFinalizer = function(handle) {
          finalizationGroup.unregister(handle.$$);
      };
      return attachFinalizer(handle);
    }
  function ClassHandle_clone() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
  
      if (this.$$.preservePointerOnDelete) {
          this.$$.count.value += 1;
          return this;
      } else {
          var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {
              $$: {
                  value: shallowCopyInternalPointer(this.$$),
              }
          }));
  
          clone.$$.count.value += 1;
          clone.$$.deleteScheduled = false;
          return clone;
      }
    }
  
  function ClassHandle_delete() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
  
      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
          throwBindingError('Object already scheduled for deletion');
      }
  
      detachFinalizer(this);
      releaseClassHandle(this.$$);
  
      if (!this.$$.preservePointerOnDelete) {
          this.$$.smartPtr = undefined;
          this.$$.ptr = undefined;
      }
    }
  
  function ClassHandle_isDeleted() {
      return !this.$$.ptr;
    }
  
  var delayFunction=undefined;
  
  var deletionQueue=[];
  
  function flushPendingDeletes() {
      while (deletionQueue.length) {
          var obj = deletionQueue.pop();
          obj.$$.deleteScheduled = false;
          obj['delete']();
      }
    }
  function ClassHandle_deleteLater() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
          throwBindingError('Object already scheduled for deletion');
      }
      deletionQueue.push(this);
      if (deletionQueue.length === 1 && delayFunction) {
          delayFunction(flushPendingDeletes);
      }
      this.$$.deleteScheduled = true;
      return this;
    }
  function init_ClassHandle() {
      ClassHandle.prototype['isAliasOf'] = ClassHandle_isAliasOf;
      ClassHandle.prototype['clone'] = ClassHandle_clone;
      ClassHandle.prototype['delete'] = ClassHandle_delete;
      ClassHandle.prototype['isDeleted'] = ClassHandle_isDeleted;
      ClassHandle.prototype['deleteLater'] = ClassHandle_deleteLater;
    }
  function ClassHandle() {
    }
  
  var registeredPointers={};
  
  function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
          var prevFunc = proto[methodName];
          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
          proto[methodName] = function() {
              // TODO This check can be removed in -O3 level "unsafe" optimizations.
              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                  throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
              }
              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
          };
          // Move the previous function into the overload table.
          proto[methodName].overloadTable = [];
          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }
  /** @param {number=} numArguments */
  function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
              throwBindingError("Cannot register public name '" + name + "' twice");
          }
  
          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
          // that routes between the two.
          ensureOverloadTable(Module, name, name);
          if (Module.hasOwnProperty(numArguments)) {
              throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
          }
          // Add the new function into the overload table.
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          if (undefined !== numArguments) {
              Module[name].numArguments = numArguments;
          }
      }
    }
  
  /** @constructor */
  function RegisteredClass(
      name,
      constructor,
      instancePrototype,
      rawDestructor,
      baseClass,
      getActualType,
      upcast,
      downcast
    ) {
      this.name = name;
      this.constructor = constructor;
      this.instancePrototype = instancePrototype;
      this.rawDestructor = rawDestructor;
      this.baseClass = baseClass;
      this.getActualType = getActualType;
      this.upcast = upcast;
      this.downcast = downcast;
      this.pureVirtualFunctions = [];
    }
  
  function upcastPointer(ptr, ptrClass, desiredClass) {
      while (ptrClass !== desiredClass) {
          if (!ptrClass.upcast) {
              throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
          }
          ptr = ptrClass.upcast(ptr);
          ptrClass = ptrClass.baseClass;
      }
      return ptr;
    }
  function constNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
          return 0;
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }
  
  function genericPointerToWireType(destructors, handle) {
      var ptr;
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
  
          if (this.isSmartPointer) {
              ptr = this.rawConstructor();
              if (destructors !== null) {
                  destructors.push(this.rawDestructor, ptr);
              }
              return ptr;
          } else {
              return 0;
          }
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      if (!this.isConst && handle.$$.ptrType.isConst) {
          throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
  
      if (this.isSmartPointer) {
          // TODO: this is not strictly true
          // We could support BY_EMVAL conversions from raw pointers to smart pointers
          // because the smart pointer can hold a reference to the handle
          if (undefined === handle.$$.smartPtr) {
              throwBindingError('Passing raw pointer to smart pointer is illegal');
          }
  
          switch (this.sharingPolicy) {
              case 0: // NONE
                  // no upcasting
                  if (handle.$$.smartPtrType === this) {
                      ptr = handle.$$.smartPtr;
                  } else {
                      throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
                  }
                  break;
  
              case 1: // INTRUSIVE
                  ptr = handle.$$.smartPtr;
                  break;
  
              case 2: // BY_EMVAL
                  if (handle.$$.smartPtrType === this) {
                      ptr = handle.$$.smartPtr;
                  } else {
                      var clonedHandle = handle['clone']();
                      ptr = this.rawShare(
                          ptr,
                          __emval_register(function() {
                              clonedHandle['delete']();
                          })
                      );
                      if (destructors !== null) {
                          destructors.push(this.rawDestructor, ptr);
                      }
                  }
                  break;
  
              default:
                  throwBindingError('Unsupporting sharing policy');
          }
      }
      return ptr;
    }
  
  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
          return 0;
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      if (handle.$$.ptrType.isConst) {
          throwBindingError('Cannot convert argument of type ' + handle.$$.ptrType.name + ' to parameter type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }
  
  function RegisteredPointer_getPointee(ptr) {
      if (this.rawGetPointee) {
          ptr = this.rawGetPointee(ptr);
      }
      return ptr;
    }
  
  function RegisteredPointer_destructor(ptr) {
      if (this.rawDestructor) {
          this.rawDestructor(ptr);
      }
    }
  
  function RegisteredPointer_deleteObject(handle) {
      if (handle !== null) {
          handle['delete']();
      }
    }
  
  function downcastPointer(ptr, ptrClass, desiredClass) {
      if (ptrClass === desiredClass) {
          return ptr;
      }
      if (undefined === desiredClass.baseClass) {
          return null; // no conversion
      }
  
      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
      if (rv === null) {
          return null;
      }
      return desiredClass.downcast(rv);
    }
  
  function getInheritedInstanceCount() {
      return Object.keys(registeredInstances).length;
    }
  
  function getLiveInheritedInstances() {
      var rv = [];
      for (var k in registeredInstances) {
          if (registeredInstances.hasOwnProperty(k)) {
              rv.push(registeredInstances[k]);
          }
      }
      return rv;
    }
  
  function setDelayFunction(fn) {
      delayFunction = fn;
      if (deletionQueue.length && delayFunction) {
          delayFunction(flushPendingDeletes);
      }
    }
  function init_embind() {
      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;
      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;
      Module['flushPendingDeletes'] = flushPendingDeletes;
      Module['setDelayFunction'] = setDelayFunction;
    }
  var registeredInstances={};
  
  function getBasestPointer(class_, ptr) {
      if (ptr === undefined) {
          throwBindingError('ptr should not be undefined');
      }
      while (class_.baseClass) {
          ptr = class_.upcast(ptr);
          class_ = class_.baseClass;
      }
      return ptr;
    }
  function getInheritedInstance(class_, ptr) {
      ptr = getBasestPointer(class_, ptr);
      return registeredInstances[ptr];
    }
  
  function makeClassHandle(prototype, record) {
      if (!record.ptrType || !record.ptr) {
          throwInternalError('makeClassHandle requires ptr and ptrType');
      }
      var hasSmartPtrType = !!record.smartPtrType;
      var hasSmartPtr = !!record.smartPtr;
      if (hasSmartPtrType !== hasSmartPtr) {
          throwInternalError('Both smartPtrType and smartPtr must be specified');
      }
      record.count = { value: 1 };
      return attachFinalizer(Object.create(prototype, {
          $$: {
              value: record,
          },
      }));
    }
  function RegisteredPointer_fromWireType(ptr) {
      // ptr is a raw pointer (or a raw smartpointer)
  
      // rawPointer is a maybe-null raw pointer
      var rawPointer = this.getPointee(ptr);
      if (!rawPointer) {
          this.destructor(ptr);
          return null;
      }
  
      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);
      if (undefined !== registeredInstance) {
          // JS object has been neutered, time to repopulate it
          if (0 === registeredInstance.$$.count.value) {
              registeredInstance.$$.ptr = rawPointer;
              registeredInstance.$$.smartPtr = ptr;
              return registeredInstance['clone']();
          } else {
              // else, just increment reference count on existing object
              // it already has a reference to the smart pointer
              var rv = registeredInstance['clone']();
              this.destructor(ptr);
              return rv;
          }
      }
  
      function makeDefaultHandle() {
          if (this.isSmartPointer) {
              return makeClassHandle(this.registeredClass.instancePrototype, {
                  ptrType: this.pointeeType,
                  ptr: rawPointer,
                  smartPtrType: this,
                  smartPtr: ptr,
              });
          } else {
              return makeClassHandle(this.registeredClass.instancePrototype, {
                  ptrType: this,
                  ptr: ptr,
              });
          }
      }
  
      var actualType = this.registeredClass.getActualType(rawPointer);
      var registeredPointerRecord = registeredPointers[actualType];
      if (!registeredPointerRecord) {
          return makeDefaultHandle.call(this);
      }
  
      var toType;
      if (this.isConst) {
          toType = registeredPointerRecord.constPointerType;
      } else {
          toType = registeredPointerRecord.pointerType;
      }
      var dp = downcastPointer(
          rawPointer,
          this.registeredClass,
          toType.registeredClass);
      if (dp === null) {
          return makeDefaultHandle.call(this);
      }
      if (this.isSmartPointer) {
          return makeClassHandle(toType.registeredClass.instancePrototype, {
              ptrType: toType,
              ptr: dp,
              smartPtrType: this,
              smartPtr: ptr,
          });
      } else {
          return makeClassHandle(toType.registeredClass.instancePrototype, {
              ptrType: toType,
              ptr: dp,
          });
      }
    }
  function init_RegisteredPointer() {
      RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
      RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
      RegisteredPointer.prototype['argPackAdvance'] = 8;
      RegisteredPointer.prototype['readValueFromPointer'] = simpleReadValueFromPointer;
      RegisteredPointer.prototype['deleteObject'] = RegisteredPointer_deleteObject;
      RegisteredPointer.prototype['fromWireType'] = RegisteredPointer_fromWireType;
    }
  /** @constructor
      @param {*=} pointeeType,
      @param {*=} sharingPolicy,
      @param {*=} rawGetPointee,
      @param {*=} rawConstructor,
      @param {*=} rawShare,
      @param {*=} rawDestructor,
       */
  function RegisteredPointer(
      name,
      registeredClass,
      isReference,
      isConst,
  
      // smart pointer properties
      isSmartPointer,
      pointeeType,
      sharingPolicy,
      rawGetPointee,
      rawConstructor,
      rawShare,
      rawDestructor
    ) {
      this.name = name;
      this.registeredClass = registeredClass;
      this.isReference = isReference;
      this.isConst = isConst;
  
      // smart pointer properties
      this.isSmartPointer = isSmartPointer;
      this.pointeeType = pointeeType;
      this.sharingPolicy = sharingPolicy;
      this.rawGetPointee = rawGetPointee;
      this.rawConstructor = rawConstructor;
      this.rawShare = rawShare;
      this.rawDestructor = rawDestructor;
  
      if (!isSmartPointer && registeredClass.baseClass === undefined) {
          if (isConst) {
              this['toWireType'] = constNoSmartPtrRawPointerToWireType;
              this.destructorFunction = null;
          } else {
              this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;
              this.destructorFunction = null;
          }
      } else {
          this['toWireType'] = genericPointerToWireType;
          // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns
          // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.
          // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in
          //       craftInvokerFunction altogether.
      }
    }
  
  /** @param {number=} numArguments */
  function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
          throwInternalError('Replacing nonexistant public symbol');
      }
      // If there's an overload table for this symbol, replace the symbol in the overload table instead.
      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          Module[name].argCount = numArguments;
      }
    }
  
  function dynCallLegacy(sig, ptr, args) {
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      if (args && args.length) {
        // j (64-bit integer) must be passed in as two numbers [low 32, high 32].
        assert(args.length === sig.substring(1).replace(/j/g, '--').length);
      } else {
        assert(sig.length == 1);
      }
      var f = Module["dynCall_" + sig];
      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);
    }
  function dynCall(sig, ptr, args) {
      // Without WASM_BIGINT support we cannot directly call function with i64 as
      // part of thier signature, so we rely the dynCall functions generated by
      // wasm-emscripten-finalize
      if (sig.indexOf('j') != -1) {
        return dynCallLegacy(sig, ptr, args);
      }
      assert(wasmTable.get(ptr), 'missing table entry in dynCall: ' + ptr);
      return wasmTable.get(ptr).apply(null, args)
    }
  function getDynCaller(sig, ptr) {
      assert(sig.indexOf('j') >= 0, 'getDynCaller should only be called with i64 sigs')
      var argCache = [];
      return function() {
        argCache.length = arguments.length;
        for (var i = 0; i < arguments.length; i++) {
          argCache[i] = arguments[i];
        }
        return dynCall(sig, ptr, argCache);
      };
    }
  function embind__requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);
  
      function makeDynCaller() {
        if (signature.indexOf('j') != -1) {
          return getDynCaller(signature, rawFunction);
        }
        return wasmTable.get(rawFunction);
      }
  
      var fp = makeDynCaller();
      if (typeof fp !== "function") {
          throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }
  
  var UnboundTypeError=undefined;
  
  function getTypeName(type) {
      var ptr = ___getTypeName(type);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }
  function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type) {
          if (seen[type]) {
              return;
          }
          if (registeredTypes[type]) {
              return;
          }
          if (typeDependencies[type]) {
              typeDependencies[type].forEach(visit);
              return;
          }
          unboundTypes.push(type);
          seen[type] = true;
      }
      types.forEach(visit);
  
      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
    }
  function __embind_register_class(
      rawType,
      rawPointerType,
      rawConstPointerType,
      baseClassRawType,
      getActualTypeSignature,
      getActualType,
      upcastSignature,
      upcast,
      downcastSignature,
      downcast,
      name,
      destructorSignature,
      rawDestructor
    ) {
      name = readLatin1String(name);
      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);
      if (upcast) {
          upcast = embind__requireFunction(upcastSignature, upcast);
      }
      if (downcast) {
          downcast = embind__requireFunction(downcastSignature, downcast);
      }
      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);
      var legalFunctionName = makeLegalFunctionName(name);
  
      exposePublicSymbol(legalFunctionName, function() {
          // this code cannot run if baseClassRawType is zero
          throwUnboundTypeError('Cannot construct ' + name + ' due to unbound types', [baseClassRawType]);
      });
  
      whenDependentTypesAreResolved(
          [rawType, rawPointerType, rawConstPointerType],
          baseClassRawType ? [baseClassRawType] : [],
          function(base) {
              base = base[0];
  
              var baseClass;
              var basePrototype;
              if (baseClassRawType) {
                  baseClass = base.registeredClass;
                  basePrototype = baseClass.instancePrototype;
              } else {
                  basePrototype = ClassHandle.prototype;
              }
  
              var constructor = createNamedFunction(legalFunctionName, function() {
                  if (Object.getPrototypeOf(this) !== instancePrototype) {
                      throw new BindingError("Use 'new' to construct " + name);
                  }
                  if (undefined === registeredClass.constructor_body) {
                      throw new BindingError(name + " has no accessible constructor");
                  }
                  var body = registeredClass.constructor_body[arguments.length];
                  if (undefined === body) {
                      throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
                  }
                  return body.apply(this, arguments);
              });
  
              var instancePrototype = Object.create(basePrototype, {
                  constructor: { value: constructor },
              });
  
              constructor.prototype = instancePrototype;
  
              var registeredClass = new RegisteredClass(
                  name,
                  constructor,
                  instancePrototype,
                  rawDestructor,
                  baseClass,
                  getActualType,
                  upcast,
                  downcast);
  
              var referenceConverter = new RegisteredPointer(
                  name,
                  registeredClass,
                  true,
                  false,
                  false);
  
              var pointerConverter = new RegisteredPointer(
                  name + '*',
                  registeredClass,
                  false,
                  false,
                  false);
  
              var constPointerConverter = new RegisteredPointer(
                  name + ' const*',
                  registeredClass,
                  false,
                  true,
                  false);
  
              registeredPointers[rawType] = {
                  pointerType: pointerConverter,
                  constPointerType: constPointerConverter
              };
  
              replacePublicSymbol(legalFunctionName, constructor);
  
              return [referenceConverter, pointerConverter, constPointerConverter];
          }
      );
    }

  function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i = 0; i < count; i++) {
          array.push(HEAP32[(firstElement >> 2) + i]);
      }
      return array;
    }
  function __embind_register_class_constructor(
      rawClassType,
      argCount,
      rawArgTypesAddr,
      invokerSignature,
      invoker,
      rawConstructor
    ) {
      assert(argCount > 0);
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      invoker = embind__requireFunction(invokerSignature, invoker);
      var args = [rawConstructor];
      var destructors = [];
  
      whenDependentTypesAreResolved([], [rawClassType], function(classType) {
          classType = classType[0];
          var humanName = 'constructor ' + classType.name;
  
          if (undefined === classType.registeredClass.constructor_body) {
              classType.registeredClass.constructor_body = [];
          }
          if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
              throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount-1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
          }
          classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {
              throwUnboundTypeError('Cannot construct ' + classType.name + ' due to unbound types', rawArgTypes);
          };
  
          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {
                  if (arguments.length !== argCount - 1) {
                      throwBindingError(humanName + ' called with ' + arguments.length + ' arguments, expected ' + (argCount-1));
                  }
                  destructors.length = 0;
                  args.length = argCount;
                  for (var i = 1; i < argCount; ++i) {
                      args[i] = argTypes[i]['toWireType'](destructors, arguments[i - 1]);
                  }
  
                  var ptr = invoker.apply(null, args);
                  runDestructors(destructors);
  
                  return argTypes[0]['fromWireType'](ptr);
              };
              return [];
          });
          return [];
      });
    }

  function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
      }
  
      /*
       * Previously, the following line was just:
  
       function dummy() {};
  
       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
       * to write a test for this behavior.  -NRD 2013.02.22
       */
      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});
      dummy.prototype = constructor.prototype;
      var obj = new dummy;
  
      var r = constructor.apply(obj, argumentList);
      return (r instanceof Object) ? r : obj;
    }
  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      // humanName: a human-readable string name for the function to be generated.
      // argTypes: An array that contains the embind type objects for all types in the function signature.
      //    argTypes[0] is the type object for the function return value.
      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
      //    argTypes[2...] are the actual function parameters.
      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
      var argCount = argTypes.length;
  
      if (argCount < 2) {
          throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }
  
      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);
  
      // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }
  
      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
      // TODO: Remove this completely once all function invokers are being dynamically generated.
      var needsDestructorStack = false;
  
      for (var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
              needsDestructorStack = true;
              break;
          }
      }
  
      var returns = (argTypes[0].name !== "void");
  
      var argsList = "";
      var argsListWired = "";
      for (var i = 0; i < argCount - 2; ++i) {
          argsList += (i!==0?", ":"")+"arg"+i;
          argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
      }
  
      var invokerFnBody =
          "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
          "if (arguments.length !== "+(argCount - 2)+") {\n" +
              "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
          "}\n";
  
      if (needsDestructorStack) {
          invokerFnBody +=
              "var destructors = [];\n";
      }
  
      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];
  
      if (isClassMethodFunc) {
          invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
      }
  
      for (var i = 0; i < argCount - 2; ++i) {
          invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
          args1.push("argType"+i);
          args2.push(argTypes[i+2]);
      }
  
      if (isClassMethodFunc) {
          argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }
  
      invokerFnBody +=
          (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";
  
      if (needsDestructorStack) {
          invokerFnBody += "runDestructors(destructors);\n";
      } else {
          for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
              var paramName = (i === 1 ? "thisWired" : ("arg"+(i - 2)+"Wired"));
              if (argTypes[i].destructorFunction !== null) {
                  invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                  args1.push(paramName+"_dtor");
                  args2.push(argTypes[i].destructorFunction);
              }
          }
      }
  
      if (returns) {
          invokerFnBody += "var ret = retType.fromWireType(rv);\n" +
                           "return ret;\n";
      } else {
      }
      invokerFnBody += "}\n";
  
      args1.push(invokerFnBody);
  
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }
  function __embind_register_class_function(
      rawClassType,
      methodName,
      argCount,
      rawArgTypesAddr, // [ReturnType, ThisType, Args...]
      invokerSignature,
      rawInvoker,
      context,
      isPureVirtual
    ) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      methodName = readLatin1String(methodName);
      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);
  
      whenDependentTypesAreResolved([], [rawClassType], function(classType) {
          classType = classType[0];
          var humanName = classType.name + '.' + methodName;
  
          if (isPureVirtual) {
              classType.registeredClass.pureVirtualFunctions.push(methodName);
          }
  
          function unboundTypesHandler() {
              throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);
          }
  
          var proto = classType.registeredClass.instancePrototype;
          var method = proto[methodName];
          if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {
              // This is the first overload to be registered, OR we are replacing a function in the base class with a function in the derived class.
              unboundTypesHandler.argCount = argCount - 2;
              unboundTypesHandler.className = classType.name;
              proto[methodName] = unboundTypesHandler;
          } else {
              // There was an existing function with the same name registered. Set up a function overload routing table.
              ensureOverloadTable(proto, methodName, humanName);
              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
          }
  
          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
  
              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);
  
              // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types
              // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.
              if (undefined === proto[methodName].overloadTable) {
                  // Set argCount in case an overload is registered later
                  memberFunction.argCount = argCount - 2;
                  proto[methodName] = memberFunction;
              } else {
                  proto[methodName].overloadTable[argCount - 2] = memberFunction;
              }
  
              return [];
          });
          return [];
      });
    }

  function validateThis(this_, classType, humanName) {
      if (!(this_ instanceof Object)) {
          throwBindingError(humanName + ' with invalid "this": ' + this_);
      }
      if (!(this_ instanceof classType.registeredClass.constructor)) {
          throwBindingError(humanName + ' incompatible with "this" of type ' + this_.constructor.name);
      }
      if (!this_.$$.ptr) {
          throwBindingError('cannot call emscripten binding method ' + humanName + ' on deleted object');
      }
  
      // todo: kill this
      return upcastPointer(
          this_.$$.ptr,
          this_.$$.ptrType.registeredClass,
          classType.registeredClass);
    }
  function __embind_register_class_property(
      classType,
      fieldName,
      getterReturnType,
      getterSignature,
      getter,
      getterContext,
      setterArgumentType,
      setterSignature,
      setter,
      setterContext
    ) {
      fieldName = readLatin1String(fieldName);
      getter = embind__requireFunction(getterSignature, getter);
  
      whenDependentTypesAreResolved([], [classType], function(classType) {
          classType = classType[0];
          var humanName = classType.name + '.' + fieldName;
          var desc = {
              get: function() {
                  throwUnboundTypeError('Cannot access ' + humanName + ' due to unbound types', [getterReturnType, setterArgumentType]);
              },
              enumerable: true,
              configurable: true
          };
          if (setter) {
              desc.set = function() {
                  throwUnboundTypeError('Cannot access ' + humanName + ' due to unbound types', [getterReturnType, setterArgumentType]);
              };
          } else {
              desc.set = function(v) {
                  throwBindingError(humanName + ' is a read-only property');
              };
          }
  
          Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
  
          whenDependentTypesAreResolved(
              [],
              (setter ? [getterReturnType, setterArgumentType] : [getterReturnType]),
          function(types) {
              var getterReturnType = types[0];
              var desc = {
                  get: function() {
                      var ptr = validateThis(this, classType, humanName + ' getter');
                      return getterReturnType['fromWireType'](getter(getterContext, ptr));
                  },
                  enumerable: true
              };
  
              if (setter) {
                  setter = embind__requireFunction(setterSignature, setter);
                  var setterArgumentType = types[1];
                  desc.set = function(v) {
                      var ptr = validateThis(this, classType, humanName + ' setter');
                      var destructors = [];
                      setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, v));
                      runDestructors(destructors);
                  };
              }
  
              Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
              return [];
          });
  
          return [];
      });
    }

  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];
  function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }
  function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }
  function __emval_register(value) {
      switch (value) {
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }
  function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  function enumReadValueFromPointer(name, shift, signed) {
      switch (shift) {
          case 0: return function(pointer) {
              var heap = signed ? HEAP8 : HEAPU8;
              return this['fromWireType'](heap[pointer]);
          };
          case 1: return function(pointer) {
              var heap = signed ? HEAP16 : HEAPU16;
              return this['fromWireType'](heap[pointer >> 1]);
          };
          case 2: return function(pointer) {
              var heap = signed ? HEAP32 : HEAPU32;
              return this['fromWireType'](heap[pointer >> 2]);
          };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }
  function __embind_register_enum(
      rawType,
      name,
      size,
      isSigned
    ) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
  
      function ctor() {
      }
      ctor.values = {};
  
      registerType(rawType, {
          name: name,
          constructor: ctor,
          'fromWireType': function(c) {
              return this.constructor.values[c];
          },
          'toWireType': function(destructors, c) {
              return c.value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': enumReadValueFromPointer(name, shift, isSigned),
          destructorFunction: null,
      });
      exposePublicSymbol(name, ctor);
    }

  function requireRegisteredType(rawType, humanName) {
      var impl = registeredTypes[rawType];
      if (undefined === impl) {
          throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
      }
      return impl;
    }
  function __embind_register_enum_value(
      rawEnumType,
      name,
      enumValue
    ) {
      var enumType = requireRegisteredType(rawEnumType, 'enum');
      name = readLatin1String(name);
  
      var Enum = enumType.constructor;
  
      var Value = Object.create(enumType.constructor.prototype, {
          value: {value: enumValue},
          constructor: {value: createNamedFunction(enumType.name + '_' + name, function() {})},
      });
      Enum.values[enumValue] = Value;
      Enum[name] = Value;
    }

  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }
  function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      name = readLatin1String(name);
  
      rawInvoker = embind__requireFunction(signature, rawInvoker);
  
      exposePublicSymbol(name, function() {
          throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);
      }, argCount - 1);
  
      whenDependentTypesAreResolved([], argTypes, function(argTypes) {
          var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);
          replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn), argCount - 1);
          return [];
      });
    }

  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }
  function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
  
      var fromWireType = function(value) {
          return value;
      };
  
      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }
  
      var isUnsignedType = (name.indexOf('unsigned') != -1);
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return isUnsignedType ? (value >>> 0) : (value | 0);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(buffer, data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      var stdStringIsUTF8
      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>
      = (name === "std::string");
  
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
  
              var str;
              if (stdStringIsUTF8) {
                  var decodeStartPtr = value + 4;
                  // Looping here to support possible embedded '0' bytes
                  for (var i = 0; i <= length; ++i) {
                      var currentBytePtr = value + 4 + i;
                      if (i == length || HEAPU8[currentBytePtr] == 0) {
                          var maxRead = currentBytePtr - decodeStartPtr;
                          var stringSegment = UTF8ToString(decodeStartPtr, maxRead);
                          if (str === undefined) {
                              str = stringSegment;
                          } else {
                              str += String.fromCharCode(0);
                              str += stringSegment;
                          }
                          decodeStartPtr = currentBytePtr + 1;
                      }
                  }
              } else {
                  var a = new Array(length);
                  for (var i = 0; i < length; ++i) {
                      a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
                  }
                  str = a.join('');
              }
  
              _free(value);
  
              return str;
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
  
              var getLength;
              var valueIsOfTypeString = (typeof value === 'string');
  
              if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
                  throwBindingError('Cannot pass non-string to std::string');
              }
              if (stdStringIsUTF8 && valueIsOfTypeString) {
                  getLength = function() {return lengthBytesUTF8(value);};
              } else {
                  getLength = function() {return value.length;};
              }
  
              // assumes 4-byte alignment
              var length = getLength();
              var ptr = _malloc(4 + length + 1);
              HEAPU32[ptr >> 2] = length;
              if (stdStringIsUTF8 && valueIsOfTypeString) {
                  stringToUTF8(value, ptr + 4, length + 1);
              } else {
                  if (valueIsOfTypeString) {
                      for (var i = 0; i < length; ++i) {
                          var charCode = value.charCodeAt(i);
                          if (charCode > 255) {
                              _free(ptr);
                              throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                          }
                          HEAPU8[ptr + 4 + i] = charCode;
                      }
                  } else {
                      for (var i = 0; i < length; ++i) {
                          HEAPU8[ptr + 4 + i] = value[i];
                      }
                  }
              }
  
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_std_wstring(rawType, charSize, name) {
      name = readLatin1String(name);
      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;
      if (charSize === 2) {
          decodeString = UTF16ToString;
          encodeString = stringToUTF16;
          lengthBytesUTF = lengthBytesUTF16;
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          decodeString = UTF32ToString;
          encodeString = stringToUTF32;
          lengthBytesUTF = lengthBytesUTF32;
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              // Code mostly taken from _embind_register_std_string fromWireType
              var length = HEAPU32[value >> 2];
              var HEAP = getHeap();
              var str;
  
              var decodeStartPtr = value + 4;
              // Looping here to support possible embedded '0' bytes
              for (var i = 0; i <= length; ++i) {
                  var currentBytePtr = value + 4 + i * charSize;
                  if (i == length || HEAP[currentBytePtr >> shift] == 0) {
                      var maxReadBytes = currentBytePtr - decodeStartPtr;
                      var stringSegment = decodeString(decodeStartPtr, maxReadBytes);
                      if (str === undefined) {
                          str = stringSegment;
                      } else {
                          str += String.fromCharCode(0);
                          str += stringSegment;
                      }
                      decodeStartPtr = currentBytePtr + charSize;
                  }
              }
  
              _free(value);
  
              return str;
          },
          'toWireType': function(destructors, value) {
              if (!(typeof value === 'string')) {
                  throwBindingError('Cannot pass non-string to C++ string type ' + name);
              }
  
              // assumes 4-byte alignment
              var length = lengthBytesUTF(value);
              var ptr = _malloc(4 + length + charSize);
              HEAPU32[ptr >> 2] = length >> shift;
  
              encodeString(value, ptr + 4, length + charSize);
  
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_value_object(
      rawType,
      name,
      constructorSignature,
      rawConstructor,
      destructorSignature,
      rawDestructor
    ) {
      structRegistrations[rawType] = {
          name: readLatin1String(name),
          rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),
          rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),
          fields: [],
      };
    }

  function __embind_register_value_object_field(
      structType,
      fieldName,
      getterReturnType,
      getterSignature,
      getter,
      getterContext,
      setterArgumentType,
      setterSignature,
      setter,
      setterContext
    ) {
      structRegistrations[structType].fields.push({
          fieldName: readLatin1String(fieldName),
          getterReturnType: getterReturnType,
          getter: embind__requireFunction(getterSignature, getter),
          getterContext: getterContext,
          setterArgumentType: setterArgumentType,
          setter: embind__requireFunction(setterSignature, setter),
          setterContext: setterContext,
      });
    }

  function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.copyWithin(dest, src, src + num);
    }

  function abortOnCannotGrowMemory(requestedSize) {
      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s INITIAL_MEMORY=X  with X higher than the current value ' + HEAP8.length + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
    }
  function _emscripten_resize_heap(requestedSize) {
      var oldSize = HEAPU8.length;
      abortOnCannotGrowMemory(requestedSize);
    }

  function flush_NO_FILESYSTEM() {
      // flush anything remaining in the buffers during shutdown
      if (typeof _fflush !== 'undefined') _fflush(0);
      var buffers = SYSCALLS.buffers;
      if (buffers[1].length) SYSCALLS.printChar(1, 10);
      if (buffers[2].length) SYSCALLS.printChar(2, 10);
    }
  
  var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream, curr) {
        var buffer = SYSCALLS.buffers[stream];
        assert(buffer);
        if (curr === 0 || curr === 10) {
          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));
          buffer.length = 0;
        } else {
          buffer.push(curr);
        }
      },varargs:undefined,get:function() {
        assert(SYSCALLS.varargs != undefined);
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function(ptr) {
        var ret = UTF8ToString(ptr);
        return ret;
      },get64:function(low, high) {
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      }};
  function _fd_write(fd, iov, iovcnt, pnum) {
      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0
      var num = 0;
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          SYSCALLS.printChar(fd, HEAPU8[ptr+j]);
        }
        num += len;
      }
      HEAP32[((pnum)>>2)] = num
      return 0;
    }

  function _getTempRet0() {
      return (getTempRet0() | 0);
    }

  function _setTempRet0($i) {
      setTempRet0(($i) | 0);
    }
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');;
embind_init_charCodes();
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');;
init_ClassHandle();
init_RegisteredPointer();
init_embind();;
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;
init_emval();;
var ASSERTIONS = true;



/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}


// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149

// This code was written by Tyler Akins and has been placed in the
// public domain.  It would be nice if you left this header intact.
// Base64 code from Tyler Akins -- http://rumkin.com

/**
 * Decodes a base64 string.
 * @param {string} input The string to decode.
 */
var decodeBase64 = typeof atob === 'function' ? atob : function (input) {
  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  var output = '';
  var chr1, chr2, chr3;
  var enc1, enc2, enc3, enc4;
  var i = 0;
  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
  do {
    enc1 = keyStr.indexOf(input.charAt(i++));
    enc2 = keyStr.indexOf(input.charAt(i++));
    enc3 = keyStr.indexOf(input.charAt(i++));
    enc4 = keyStr.indexOf(input.charAt(i++));

    chr1 = (enc1 << 2) | (enc2 >> 4);
    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
    chr3 = ((enc3 & 3) << 6) | enc4;

    output = output + String.fromCharCode(chr1);

    if (enc3 !== 64) {
      output = output + String.fromCharCode(chr2);
    }
    if (enc4 !== 64) {
      output = output + String.fromCharCode(chr3);
    }
  } while (i < input.length);
  return output;
};

// Converts a string of base64 into a byte array.
// Throws error on invalid input.
function intArrayFromBase64(s) {
  if (typeof ENVIRONMENT_IS_NODE === 'boolean' && ENVIRONMENT_IS_NODE) {
    var buf;
    try {
      // TODO: Update Node.js externs, Closure does not recognize the following Buffer.from()
      /**@suppress{checkTypes}*/
      buf = Buffer.from(s, 'base64');
    } catch (_) {
      buf = new Buffer(s, 'base64');
    }
    return new Uint8Array(buf['buffer'], buf['byteOffset'], buf['byteLength']);
  }

  try {
    var decoded = decodeBase64(s);
    var bytes = new Uint8Array(decoded.length);
    for (var i = 0 ; i < decoded.length ; ++i) {
      bytes[i] = decoded.charCodeAt(i);
    }
    return bytes;
  } catch (_) {
    throw new Error('Converting base64 string to bytes failed.');
  }
}

// If filename is a base64 data URI, parses and returns data (Buffer on node,
// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.
function tryParseAsDataURI(filename) {
  if (!isDataURI(filename)) {
    return;
  }

  return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}


var asmLibraryArg = {
  "__cxa_allocate_exception": ___cxa_allocate_exception,
  "__cxa_begin_catch": ___cxa_begin_catch,
  "__cxa_end_catch": ___cxa_end_catch,
  "__cxa_find_matching_catch_2": ___cxa_find_matching_catch_2,
  "__cxa_find_matching_catch_3": ___cxa_find_matching_catch_3,
  "__cxa_free_exception": ___cxa_free_exception,
  "__cxa_throw": ___cxa_throw,
  "__resumeException": ___resumeException,
  "_embind_finalize_value_object": __embind_finalize_value_object,
  "_embind_register_bool": __embind_register_bool,
  "_embind_register_class": __embind_register_class,
  "_embind_register_class_constructor": __embind_register_class_constructor,
  "_embind_register_class_function": __embind_register_class_function,
  "_embind_register_class_property": __embind_register_class_property,
  "_embind_register_emval": __embind_register_emval,
  "_embind_register_enum": __embind_register_enum,
  "_embind_register_enum_value": __embind_register_enum_value,
  "_embind_register_float": __embind_register_float,
  "_embind_register_function": __embind_register_function,
  "_embind_register_integer": __embind_register_integer,
  "_embind_register_memory_view": __embind_register_memory_view,
  "_embind_register_std_string": __embind_register_std_string,
  "_embind_register_std_wstring": __embind_register_std_wstring,
  "_embind_register_value_object": __embind_register_value_object,
  "_embind_register_value_object_field": __embind_register_value_object_field,
  "_embind_register_void": __embind_register_void,
  "emscripten_memcpy_big": _emscripten_memcpy_big,
  "emscripten_resize_heap": _emscripten_resize_heap,
  "fd_write": _fd_write,
  "getTempRet0": getTempRet0,
  "invoke_i": invoke_i,
  "invoke_iii": invoke_iii,
  "invoke_iiii": invoke_iiii,
  "invoke_v": invoke_v,
  "invoke_vii": invoke_vii,
  "invoke_viid": invoke_viid,
  "invoke_viii": invoke_viii,
  "memory": wasmMemory,
  "setTempRet0": setTempRet0
};
var asm = createWasm();
/** @type {function(...*):?} */
var ___wasm_call_ctors = Module["___wasm_call_ctors"] = createExportWrapper("__wasm_call_ctors");

/** @type {function(...*):?} */
var _malloc = Module["_malloc"] = createExportWrapper("malloc");

/** @type {function(...*):?} */
var ___getTypeName = Module["___getTypeName"] = createExportWrapper("__getTypeName");

/** @type {function(...*):?} */
var ___embind_register_native_and_builtin_types = Module["___embind_register_native_and_builtin_types"] = createExportWrapper("__embind_register_native_and_builtin_types");

/** @type {function(...*):?} */
var ___errno_location = Module["___errno_location"] = createExportWrapper("__errno_location");

/** @type {function(...*):?} */
var _fflush = Module["_fflush"] = createExportWrapper("fflush");

/** @type {function(...*):?} */
var stackSave = Module["stackSave"] = createExportWrapper("stackSave");

/** @type {function(...*):?} */
var stackRestore = Module["stackRestore"] = createExportWrapper("stackRestore");

/** @type {function(...*):?} */
var stackAlloc = Module["stackAlloc"] = createExportWrapper("stackAlloc");

/** @type {function(...*):?} */
var _emscripten_stack_init = Module["_emscripten_stack_init"] = function() {
  return (_emscripten_stack_init = Module["_emscripten_stack_init"] = Module["asm"]["emscripten_stack_init"]).apply(null, arguments);
};

/** @type {function(...*):?} */
var _emscripten_stack_get_free = Module["_emscripten_stack_get_free"] = function() {
  return (_emscripten_stack_get_free = Module["_emscripten_stack_get_free"] = Module["asm"]["emscripten_stack_get_free"]).apply(null, arguments);
};

/** @type {function(...*):?} */
var _emscripten_stack_get_end = Module["_emscripten_stack_get_end"] = function() {
  return (_emscripten_stack_get_end = Module["_emscripten_stack_get_end"] = Module["asm"]["emscripten_stack_get_end"]).apply(null, arguments);
};

/** @type {function(...*):?} */
var _free = Module["_free"] = createExportWrapper("free");

/** @type {function(...*):?} */
var ___cxa_can_catch = Module["___cxa_can_catch"] = createExportWrapper("__cxa_can_catch");

/** @type {function(...*):?} */
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = createExportWrapper("__cxa_is_pointer_type");

/** @type {function(...*):?} */
var dynCall_jiji = Module["dynCall_jiji"] = createExportWrapper("dynCall_jiji");


function invoke_iii(index,a1,a2) {
  var sp = stackSave();
  try {
    return wasmTable.get(index)(a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    return wasmTable.get(index)(a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  var sp = stackSave();
  try {
    wasmTable.get(index)(a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_viid(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    wasmTable.get(index)(a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    wasmTable.get(index)(a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_v(index) {
  var sp = stackSave();
  try {
    wasmTable.get(index)();
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_i(index) {
  var sp = stackSave();
  try {
    return wasmTable.get(index)();
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}




// === Auto-generated postamble setup entry stuff ===

if (!Object.getOwnPropertyDescriptor(Module, "intArrayFromString")) Module["intArrayFromString"] = function() { abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "intArrayToString")) Module["intArrayToString"] = function() { abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ccall")) Module["ccall"] = function() { abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "cwrap")) Module["cwrap"] = function() { abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setValue")) Module["setValue"] = function() { abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getValue")) Module["getValue"] = function() { abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "allocate")) Module["allocate"] = function() { abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UTF8ArrayToString")) Module["UTF8ArrayToString"] = function() { abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UTF8ToString")) Module["UTF8ToString"] = function() { abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF8Array")) Module["stringToUTF8Array"] = function() { abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF8")) Module["stringToUTF8"] = function() { abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "lengthBytesUTF8")) Module["lengthBytesUTF8"] = function() { abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackTrace")) Module["stackTrace"] = function() { abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnPreRun")) Module["addOnPreRun"] = function() { abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnInit")) Module["addOnInit"] = function() { abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnPreMain")) Module["addOnPreMain"] = function() { abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnExit")) Module["addOnExit"] = function() { abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnPostRun")) Module["addOnPostRun"] = function() { abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeStringToMemory")) Module["writeStringToMemory"] = function() { abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeArrayToMemory")) Module["writeArrayToMemory"] = function() { abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeAsciiToMemory")) Module["writeAsciiToMemory"] = function() { abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addRunDependency")) Module["addRunDependency"] = function() { abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "removeRunDependency")) Module["removeRunDependency"] = function() { abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createFolder")) Module["FS_createFolder"] = function() { abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createPath")) Module["FS_createPath"] = function() { abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createDataFile")) Module["FS_createDataFile"] = function() { abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createPreloadedFile")) Module["FS_createPreloadedFile"] = function() { abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createLazyFile")) Module["FS_createLazyFile"] = function() { abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createLink")) Module["FS_createLink"] = function() { abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createDevice")) Module["FS_createDevice"] = function() { abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_unlink")) Module["FS_unlink"] = function() { abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "getLEB")) Module["getLEB"] = function() { abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getFunctionTables")) Module["getFunctionTables"] = function() { abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "alignFunctionTables")) Module["alignFunctionTables"] = function() { abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerFunctions")) Module["registerFunctions"] = function() { abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addFunction")) Module["addFunction"] = function() { abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "removeFunction")) Module["removeFunction"] = function() { abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getFuncWrapper")) Module["getFuncWrapper"] = function() { abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "prettyPrint")) Module["prettyPrint"] = function() { abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "makeBigInt")) Module["makeBigInt"] = function() { abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "dynCall")) Module["dynCall"] = function() { abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getCompilerSetting")) Module["getCompilerSetting"] = function() { abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "print")) Module["print"] = function() { abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "printErr")) Module["printErr"] = function() { abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getTempRet0")) Module["getTempRet0"] = function() { abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setTempRet0")) Module["setTempRet0"] = function() { abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "callMain")) Module["callMain"] = function() { abort("'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "abort")) Module["abort"] = function() { abort("'abort' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToNewUTF8")) Module["stringToNewUTF8"] = function() { abort("'stringToNewUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setFileTime")) Module["setFileTime"] = function() { abort("'setFileTime' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "abortOnCannotGrowMemory")) Module["abortOnCannotGrowMemory"] = function() { abort("'abortOnCannotGrowMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emscripten_realloc_buffer")) Module["emscripten_realloc_buffer"] = function() { abort("'emscripten_realloc_buffer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ENV")) Module["ENV"] = function() { abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ERRNO_CODES")) Module["ERRNO_CODES"] = function() { abort("'ERRNO_CODES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ERRNO_MESSAGES")) Module["ERRNO_MESSAGES"] = function() { abort("'ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setErrNo")) Module["setErrNo"] = function() { abort("'setErrNo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "inetPton4")) Module["inetPton4"] = function() { abort("'inetPton4' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "inetNtop4")) Module["inetNtop4"] = function() { abort("'inetNtop4' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "inetPton6")) Module["inetPton6"] = function() { abort("'inetPton6' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "inetNtop6")) Module["inetNtop6"] = function() { abort("'inetNtop6' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "readSockaddr")) Module["readSockaddr"] = function() { abort("'readSockaddr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeSockaddr")) Module["writeSockaddr"] = function() { abort("'writeSockaddr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "DNS")) Module["DNS"] = function() { abort("'DNS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getHostByName")) Module["getHostByName"] = function() { abort("'getHostByName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "GAI_ERRNO_MESSAGES")) Module["GAI_ERRNO_MESSAGES"] = function() { abort("'GAI_ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "Protocols")) Module["Protocols"] = function() { abort("'Protocols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "Sockets")) Module["Sockets"] = function() { abort("'Sockets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getRandomDevice")) Module["getRandomDevice"] = function() { abort("'getRandomDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "traverseStack")) Module["traverseStack"] = function() { abort("'traverseStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UNWIND_CACHE")) Module["UNWIND_CACHE"] = function() { abort("'UNWIND_CACHE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "withBuiltinMalloc")) Module["withBuiltinMalloc"] = function() { abort("'withBuiltinMalloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "readAsmConstArgsArray")) Module["readAsmConstArgsArray"] = function() { abort("'readAsmConstArgsArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "readAsmConstArgs")) Module["readAsmConstArgs"] = function() { abort("'readAsmConstArgs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "mainThreadEM_ASM")) Module["mainThreadEM_ASM"] = function() { abort("'mainThreadEM_ASM' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "jstoi_q")) Module["jstoi_q"] = function() { abort("'jstoi_q' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "jstoi_s")) Module["jstoi_s"] = function() { abort("'jstoi_s' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getExecutableName")) Module["getExecutableName"] = function() { abort("'getExecutableName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "listenOnce")) Module["listenOnce"] = function() { abort("'listenOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "autoResumeAudioContext")) Module["autoResumeAudioContext"] = function() { abort("'autoResumeAudioContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "dynCallLegacy")) Module["dynCallLegacy"] = function() { abort("'dynCallLegacy' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getDynCaller")) Module["getDynCaller"] = function() { abort("'getDynCaller' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "dynCall")) Module["dynCall"] = function() { abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "callRuntimeCallbacks")) Module["callRuntimeCallbacks"] = function() { abort("'callRuntimeCallbacks' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "runtimeKeepaliveCounter")) Module["runtimeKeepaliveCounter"] = function() { abort("'runtimeKeepaliveCounter' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "keepRuntimeAlive")) Module["keepRuntimeAlive"] = function() { abort("'keepRuntimeAlive' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "runtimeKeepalivePush")) Module["runtimeKeepalivePush"] = function() { abort("'runtimeKeepalivePush' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "runtimeKeepalivePop")) Module["runtimeKeepalivePop"] = function() { abort("'runtimeKeepalivePop' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "callUserCallback")) Module["callUserCallback"] = function() { abort("'callUserCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "maybeExit")) Module["maybeExit"] = function() { abort("'maybeExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "reallyNegative")) Module["reallyNegative"] = function() { abort("'reallyNegative' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "unSign")) Module["unSign"] = function() { abort("'unSign' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "reSign")) Module["reSign"] = function() { abort("'reSign' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "formatString")) Module["formatString"] = function() { abort("'formatString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "PATH")) Module["PATH"] = function() { abort("'PATH' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "PATH_FS")) Module["PATH_FS"] = function() { abort("'PATH_FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "SYSCALLS")) Module["SYSCALLS"] = function() { abort("'SYSCALLS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "syscallMmap2")) Module["syscallMmap2"] = function() { abort("'syscallMmap2' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "syscallMunmap")) Module["syscallMunmap"] = function() { abort("'syscallMunmap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getSocketFromFD")) Module["getSocketFromFD"] = function() { abort("'getSocketFromFD' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getSocketAddress")) Module["getSocketAddress"] = function() { abort("'getSocketAddress' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "JSEvents")) Module["JSEvents"] = function() { abort("'JSEvents' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerKeyEventCallback")) Module["registerKeyEventCallback"] = function() { abort("'registerKeyEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "specialHTMLTargets")) Module["specialHTMLTargets"] = function() { abort("'specialHTMLTargets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "maybeCStringToJsString")) Module["maybeCStringToJsString"] = function() { abort("'maybeCStringToJsString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "findEventTarget")) Module["findEventTarget"] = function() { abort("'findEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "findCanvasEventTarget")) Module["findCanvasEventTarget"] = function() { abort("'findCanvasEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getBoundingClientRect")) Module["getBoundingClientRect"] = function() { abort("'getBoundingClientRect' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillMouseEventData")) Module["fillMouseEventData"] = function() { abort("'fillMouseEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerMouseEventCallback")) Module["registerMouseEventCallback"] = function() { abort("'registerMouseEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerWheelEventCallback")) Module["registerWheelEventCallback"] = function() { abort("'registerWheelEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerUiEventCallback")) Module["registerUiEventCallback"] = function() { abort("'registerUiEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerFocusEventCallback")) Module["registerFocusEventCallback"] = function() { abort("'registerFocusEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillDeviceOrientationEventData")) Module["fillDeviceOrientationEventData"] = function() { abort("'fillDeviceOrientationEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerDeviceOrientationEventCallback")) Module["registerDeviceOrientationEventCallback"] = function() { abort("'registerDeviceOrientationEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillDeviceMotionEventData")) Module["fillDeviceMotionEventData"] = function() { abort("'fillDeviceMotionEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerDeviceMotionEventCallback")) Module["registerDeviceMotionEventCallback"] = function() { abort("'registerDeviceMotionEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "screenOrientation")) Module["screenOrientation"] = function() { abort("'screenOrientation' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillOrientationChangeEventData")) Module["fillOrientationChangeEventData"] = function() { abort("'fillOrientationChangeEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerOrientationChangeEventCallback")) Module["registerOrientationChangeEventCallback"] = function() { abort("'registerOrientationChangeEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillFullscreenChangeEventData")) Module["fillFullscreenChangeEventData"] = function() { abort("'fillFullscreenChangeEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerFullscreenChangeEventCallback")) Module["registerFullscreenChangeEventCallback"] = function() { abort("'registerFullscreenChangeEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerRestoreOldStyle")) Module["registerRestoreOldStyle"] = function() { abort("'registerRestoreOldStyle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "hideEverythingExceptGivenElement")) Module["hideEverythingExceptGivenElement"] = function() { abort("'hideEverythingExceptGivenElement' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "restoreHiddenElements")) Module["restoreHiddenElements"] = function() { abort("'restoreHiddenElements' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setLetterbox")) Module["setLetterbox"] = function() { abort("'setLetterbox' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "currentFullscreenStrategy")) Module["currentFullscreenStrategy"] = function() { abort("'currentFullscreenStrategy' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "restoreOldWindowedStyle")) Module["restoreOldWindowedStyle"] = function() { abort("'restoreOldWindowedStyle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "softFullscreenResizeWebGLRenderTarget")) Module["softFullscreenResizeWebGLRenderTarget"] = function() { abort("'softFullscreenResizeWebGLRenderTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "doRequestFullscreen")) Module["doRequestFullscreen"] = function() { abort("'doRequestFullscreen' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillPointerlockChangeEventData")) Module["fillPointerlockChangeEventData"] = function() { abort("'fillPointerlockChangeEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerPointerlockChangeEventCallback")) Module["registerPointerlockChangeEventCallback"] = function() { abort("'registerPointerlockChangeEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerPointerlockErrorEventCallback")) Module["registerPointerlockErrorEventCallback"] = function() { abort("'registerPointerlockErrorEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "requestPointerLock")) Module["requestPointerLock"] = function() { abort("'requestPointerLock' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillVisibilityChangeEventData")) Module["fillVisibilityChangeEventData"] = function() { abort("'fillVisibilityChangeEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerVisibilityChangeEventCallback")) Module["registerVisibilityChangeEventCallback"] = function() { abort("'registerVisibilityChangeEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerTouchEventCallback")) Module["registerTouchEventCallback"] = function() { abort("'registerTouchEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillGamepadEventData")) Module["fillGamepadEventData"] = function() { abort("'fillGamepadEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerGamepadEventCallback")) Module["registerGamepadEventCallback"] = function() { abort("'registerGamepadEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerBeforeUnloadEventCallback")) Module["registerBeforeUnloadEventCallback"] = function() { abort("'registerBeforeUnloadEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "fillBatteryEventData")) Module["fillBatteryEventData"] = function() { abort("'fillBatteryEventData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "battery")) Module["battery"] = function() { abort("'battery' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerBatteryEventCallback")) Module["registerBatteryEventCallback"] = function() { abort("'registerBatteryEventCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setCanvasElementSize")) Module["setCanvasElementSize"] = function() { abort("'setCanvasElementSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getCanvasElementSize")) Module["getCanvasElementSize"] = function() { abort("'getCanvasElementSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "polyfillSetImmediate")) Module["polyfillSetImmediate"] = function() { abort("'polyfillSetImmediate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "demangle")) Module["demangle"] = function() { abort("'demangle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "demangleAll")) Module["demangleAll"] = function() { abort("'demangleAll' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "jsStackTrace")) Module["jsStackTrace"] = function() { abort("'jsStackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackTrace")) Module["stackTrace"] = function() { abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getEnvStrings")) Module["getEnvStrings"] = function() { abort("'getEnvStrings' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "checkWasiClock")) Module["checkWasiClock"] = function() { abort("'checkWasiClock' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "flush_NO_FILESYSTEM")) Module["flush_NO_FILESYSTEM"] = function() { abort("'flush_NO_FILESYSTEM' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToI64")) Module["writeI53ToI64"] = function() { abort("'writeI53ToI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToI64Clamped")) Module["writeI53ToI64Clamped"] = function() { abort("'writeI53ToI64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToI64Signaling")) Module["writeI53ToI64Signaling"] = function() { abort("'writeI53ToI64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToU64Clamped")) Module["writeI53ToU64Clamped"] = function() { abort("'writeI53ToU64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeI53ToU64Signaling")) Module["writeI53ToU64Signaling"] = function() { abort("'writeI53ToU64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "readI53FromI64")) Module["readI53FromI64"] = function() { abort("'readI53FromI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "readI53FromU64")) Module["readI53FromU64"] = function() { abort("'readI53FromU64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "convertI32PairToI53")) Module["convertI32PairToI53"] = function() { abort("'convertI32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "convertU32PairToI53")) Module["convertU32PairToI53"] = function() { abort("'convertU32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "uncaughtExceptionCount")) Module["uncaughtExceptionCount"] = function() { abort("'uncaughtExceptionCount' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "exceptionLast")) Module["exceptionLast"] = function() { abort("'exceptionLast' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "exceptionCaught")) Module["exceptionCaught"] = function() { abort("'exceptionCaught' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ExceptionInfoAttrs")) Module["ExceptionInfoAttrs"] = function() { abort("'ExceptionInfoAttrs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ExceptionInfo")) Module["ExceptionInfo"] = function() { abort("'ExceptionInfo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "CatchInfo")) Module["CatchInfo"] = function() { abort("'CatchInfo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "exception_addRef")) Module["exception_addRef"] = function() { abort("'exception_addRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "exception_decRef")) Module["exception_decRef"] = function() { abort("'exception_decRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "Browser")) Module["Browser"] = function() { abort("'Browser' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "funcWrappers")) Module["funcWrappers"] = function() { abort("'funcWrappers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getFuncWrapper")) Module["getFuncWrapper"] = function() { abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setMainLoop")) Module["setMainLoop"] = function() { abort("'setMainLoop' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "FS")) Module["FS"] = function() { abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "mmapAlloc")) Module["mmapAlloc"] = function() { abort("'mmapAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "MEMFS")) Module["MEMFS"] = function() { abort("'MEMFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "TTY")) Module["TTY"] = function() { abort("'TTY' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "PIPEFS")) Module["PIPEFS"] = function() { abort("'PIPEFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "SOCKFS")) Module["SOCKFS"] = function() { abort("'SOCKFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "_setNetworkCallback")) Module["_setNetworkCallback"] = function() { abort("'_setNetworkCallback' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "tempFixedLengthArray")) Module["tempFixedLengthArray"] = function() { abort("'tempFixedLengthArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "miniTempWebGLFloatBuffers")) Module["miniTempWebGLFloatBuffers"] = function() { abort("'miniTempWebGLFloatBuffers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "heapObjectForWebGLType")) Module["heapObjectForWebGLType"] = function() { abort("'heapObjectForWebGLType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "heapAccessShiftForWebGLHeap")) Module["heapAccessShiftForWebGLHeap"] = function() { abort("'heapAccessShiftForWebGLHeap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "GL")) Module["GL"] = function() { abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emscriptenWebGLGet")) Module["emscriptenWebGLGet"] = function() { abort("'emscriptenWebGLGet' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "computeUnpackAlignedImageSize")) Module["computeUnpackAlignedImageSize"] = function() { abort("'computeUnpackAlignedImageSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emscriptenWebGLGetTexPixelData")) Module["emscriptenWebGLGetTexPixelData"] = function() { abort("'emscriptenWebGLGetTexPixelData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emscriptenWebGLGetUniform")) Module["emscriptenWebGLGetUniform"] = function() { abort("'emscriptenWebGLGetUniform' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emscriptenWebGLGetVertexAttrib")) Module["emscriptenWebGLGetVertexAttrib"] = function() { abort("'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeGLArray")) Module["writeGLArray"] = function() { abort("'writeGLArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "AL")) Module["AL"] = function() { abort("'AL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "SDL_unicode")) Module["SDL_unicode"] = function() { abort("'SDL_unicode' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "SDL_ttfContext")) Module["SDL_ttfContext"] = function() { abort("'SDL_ttfContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "SDL_audio")) Module["SDL_audio"] = function() { abort("'SDL_audio' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "SDL")) Module["SDL"] = function() { abort("'SDL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "SDL_gfx")) Module["SDL_gfx"] = function() { abort("'SDL_gfx' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "GLUT")) Module["GLUT"] = function() { abort("'GLUT' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "EGL")) Module["EGL"] = function() { abort("'EGL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "GLFW_Window")) Module["GLFW_Window"] = function() { abort("'GLFW_Window' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "GLFW")) Module["GLFW"] = function() { abort("'GLFW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "GLEW")) Module["GLEW"] = function() { abort("'GLEW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "IDBStore")) Module["IDBStore"] = function() { abort("'IDBStore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "runAndAbortIfError")) Module["runAndAbortIfError"] = function() { abort("'runAndAbortIfError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emval_handle_array")) Module["emval_handle_array"] = function() { abort("'emval_handle_array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emval_free_list")) Module["emval_free_list"] = function() { abort("'emval_free_list' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emval_symbols")) Module["emval_symbols"] = function() { abort("'emval_symbols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "init_emval")) Module["init_emval"] = function() { abort("'init_emval' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "count_emval_handles")) Module["count_emval_handles"] = function() { abort("'count_emval_handles' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "get_first_emval")) Module["get_first_emval"] = function() { abort("'get_first_emval' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getStringOrSymbol")) Module["getStringOrSymbol"] = function() { abort("'getStringOrSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "requireHandle")) Module["requireHandle"] = function() { abort("'requireHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emval_newers")) Module["emval_newers"] = function() { abort("'emval_newers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "craftEmvalAllocator")) Module["craftEmvalAllocator"] = function() { abort("'craftEmvalAllocator' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emval_get_global")) Module["emval_get_global"] = function() { abort("'emval_get_global' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "emval_methodCallers")) Module["emval_methodCallers"] = function() { abort("'emval_methodCallers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "InternalError")) Module["InternalError"] = function() { abort("'InternalError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "BindingError")) Module["BindingError"] = function() { abort("'BindingError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UnboundTypeError")) Module["UnboundTypeError"] = function() { abort("'UnboundTypeError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "PureVirtualError")) Module["PureVirtualError"] = function() { abort("'PureVirtualError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "init_embind")) Module["init_embind"] = function() { abort("'init_embind' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "throwInternalError")) Module["throwInternalError"] = function() { abort("'throwInternalError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "throwBindingError")) Module["throwBindingError"] = function() { abort("'throwBindingError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "throwUnboundTypeError")) Module["throwUnboundTypeError"] = function() { abort("'throwUnboundTypeError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ensureOverloadTable")) Module["ensureOverloadTable"] = function() { abort("'ensureOverloadTable' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "exposePublicSymbol")) Module["exposePublicSymbol"] = function() { abort("'exposePublicSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "replacePublicSymbol")) Module["replacePublicSymbol"] = function() { abort("'replacePublicSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "extendError")) Module["extendError"] = function() { abort("'extendError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "createNamedFunction")) Module["createNamedFunction"] = function() { abort("'createNamedFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registeredInstances")) Module["registeredInstances"] = function() { abort("'registeredInstances' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getBasestPointer")) Module["getBasestPointer"] = function() { abort("'getBasestPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerInheritedInstance")) Module["registerInheritedInstance"] = function() { abort("'registerInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "unregisterInheritedInstance")) Module["unregisterInheritedInstance"] = function() { abort("'unregisterInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getInheritedInstance")) Module["getInheritedInstance"] = function() { abort("'getInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getInheritedInstanceCount")) Module["getInheritedInstanceCount"] = function() { abort("'getInheritedInstanceCount' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getLiveInheritedInstances")) Module["getLiveInheritedInstances"] = function() { abort("'getLiveInheritedInstances' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registeredTypes")) Module["registeredTypes"] = function() { abort("'registeredTypes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "awaitingDependencies")) Module["awaitingDependencies"] = function() { abort("'awaitingDependencies' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "typeDependencies")) Module["typeDependencies"] = function() { abort("'typeDependencies' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registeredPointers")) Module["registeredPointers"] = function() { abort("'registeredPointers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerType")) Module["registerType"] = function() { abort("'registerType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "whenDependentTypesAreResolved")) Module["whenDependentTypesAreResolved"] = function() { abort("'whenDependentTypesAreResolved' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "embind_charCodes")) Module["embind_charCodes"] = function() { abort("'embind_charCodes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "embind_init_charCodes")) Module["embind_init_charCodes"] = function() { abort("'embind_init_charCodes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "readLatin1String")) Module["readLatin1String"] = function() { abort("'readLatin1String' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getTypeName")) Module["getTypeName"] = function() { abort("'getTypeName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "heap32VectorToArray")) Module["heap32VectorToArray"] = function() { abort("'heap32VectorToArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "requireRegisteredType")) Module["requireRegisteredType"] = function() { abort("'requireRegisteredType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getShiftFromSize")) Module["getShiftFromSize"] = function() { abort("'getShiftFromSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "integerReadValueFromPointer")) Module["integerReadValueFromPointer"] = function() { abort("'integerReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "enumReadValueFromPointer")) Module["enumReadValueFromPointer"] = function() { abort("'enumReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "floatReadValueFromPointer")) Module["floatReadValueFromPointer"] = function() { abort("'floatReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "simpleReadValueFromPointer")) Module["simpleReadValueFromPointer"] = function() { abort("'simpleReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "runDestructors")) Module["runDestructors"] = function() { abort("'runDestructors' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "new_")) Module["new_"] = function() { abort("'new_' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "craftInvokerFunction")) Module["craftInvokerFunction"] = function() { abort("'craftInvokerFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "embind__requireFunction")) Module["embind__requireFunction"] = function() { abort("'embind__requireFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "tupleRegistrations")) Module["tupleRegistrations"] = function() { abort("'tupleRegistrations' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "structRegistrations")) Module["structRegistrations"] = function() { abort("'structRegistrations' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "genericPointerToWireType")) Module["genericPointerToWireType"] = function() { abort("'genericPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "constNoSmartPtrRawPointerToWireType")) Module["constNoSmartPtrRawPointerToWireType"] = function() { abort("'constNoSmartPtrRawPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "nonConstNoSmartPtrRawPointerToWireType")) Module["nonConstNoSmartPtrRawPointerToWireType"] = function() { abort("'nonConstNoSmartPtrRawPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "init_RegisteredPointer")) Module["init_RegisteredPointer"] = function() { abort("'init_RegisteredPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer")) Module["RegisteredPointer"] = function() { abort("'RegisteredPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer_getPointee")) Module["RegisteredPointer_getPointee"] = function() { abort("'RegisteredPointer_getPointee' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer_destructor")) Module["RegisteredPointer_destructor"] = function() { abort("'RegisteredPointer_destructor' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer_deleteObject")) Module["RegisteredPointer_deleteObject"] = function() { abort("'RegisteredPointer_deleteObject' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "RegisteredPointer_fromWireType")) Module["RegisteredPointer_fromWireType"] = function() { abort("'RegisteredPointer_fromWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "runDestructor")) Module["runDestructor"] = function() { abort("'runDestructor' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "releaseClassHandle")) Module["releaseClassHandle"] = function() { abort("'releaseClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "finalizationGroup")) Module["finalizationGroup"] = function() { abort("'finalizationGroup' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "detachFinalizer_deps")) Module["detachFinalizer_deps"] = function() { abort("'detachFinalizer_deps' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "detachFinalizer")) Module["detachFinalizer"] = function() { abort("'detachFinalizer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "attachFinalizer")) Module["attachFinalizer"] = function() { abort("'attachFinalizer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "makeClassHandle")) Module["makeClassHandle"] = function() { abort("'makeClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "init_ClassHandle")) Module["init_ClassHandle"] = function() { abort("'init_ClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle")) Module["ClassHandle"] = function() { abort("'ClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_isAliasOf")) Module["ClassHandle_isAliasOf"] = function() { abort("'ClassHandle_isAliasOf' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "throwInstanceAlreadyDeleted")) Module["throwInstanceAlreadyDeleted"] = function() { abort("'throwInstanceAlreadyDeleted' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_clone")) Module["ClassHandle_clone"] = function() { abort("'ClassHandle_clone' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_delete")) Module["ClassHandle_delete"] = function() { abort("'ClassHandle_delete' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "deletionQueue")) Module["deletionQueue"] = function() { abort("'deletionQueue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_isDeleted")) Module["ClassHandle_isDeleted"] = function() { abort("'ClassHandle_isDeleted' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ClassHandle_deleteLater")) Module["ClassHandle_deleteLater"] = function() { abort("'ClassHandle_deleteLater' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "flushPendingDeletes")) Module["flushPendingDeletes"] = function() { abort("'flushPendingDeletes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "delayFunction")) Module["delayFunction"] = function() { abort("'delayFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setDelayFunction")) Module["setDelayFunction"] = function() { abort("'setDelayFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "RegisteredClass")) Module["RegisteredClass"] = function() { abort("'RegisteredClass' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "shallowCopyInternalPointer")) Module["shallowCopyInternalPointer"] = function() { abort("'shallowCopyInternalPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "downcastPointer")) Module["downcastPointer"] = function() { abort("'downcastPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "upcastPointer")) Module["upcastPointer"] = function() { abort("'upcastPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "validateThis")) Module["validateThis"] = function() { abort("'validateThis' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "char_0")) Module["char_0"] = function() { abort("'char_0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "char_9")) Module["char_9"] = function() { abort("'char_9' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "makeLegalFunctionName")) Module["makeLegalFunctionName"] = function() { abort("'makeLegalFunctionName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "warnOnce")) Module["warnOnce"] = function() { abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackSave")) Module["stackSave"] = function() { abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackRestore")) Module["stackRestore"] = function() { abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackAlloc")) Module["stackAlloc"] = function() { abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "AsciiToString")) Module["AsciiToString"] = function() { abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToAscii")) Module["stringToAscii"] = function() { abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UTF16ToString")) Module["UTF16ToString"] = function() { abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF16")) Module["stringToUTF16"] = function() { abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "lengthBytesUTF16")) Module["lengthBytesUTF16"] = function() { abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UTF32ToString")) Module["UTF32ToString"] = function() { abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF32")) Module["stringToUTF32"] = function() { abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "lengthBytesUTF32")) Module["lengthBytesUTF32"] = function() { abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "allocateUTF8")) Module["allocateUTF8"] = function() { abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "allocateUTF8OnStack")) Module["allocateUTF8OnStack"] = function() { abort("'allocateUTF8OnStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
Module["writeStackCookie"] = writeStackCookie;
Module["checkStackCookie"] = checkStackCookie;
if (!Object.getOwnPropertyDescriptor(Module, "intArrayFromBase64")) Module["intArrayFromBase64"] = function() { abort("'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "tryParseAsDataURI")) Module["tryParseAsDataURI"] = function() { abort("'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_NORMAL")) Object.defineProperty(Module, "ALLOC_NORMAL", { configurable: true, get: function() { abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_STACK")) Object.defineProperty(Module, "ALLOC_STACK", { configurable: true, get: function() { abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });

var calledRun;

/**
 * @constructor
 * @this {ExitStatus}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
}

var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!calledRun) run();
  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
};

function stackCheckInit() {
  // This is normally called automatically during __wasm_call_ctors but need to
  // get these values before even running any of the ctors so we call it redundantly
  // here.
  // TODO(sbc): Move writeStackCookie to native to to avoid this.
  _emscripten_stack_init();
  writeStackCookie();
}

/** @type {function(Array=)} */
function run(args) {
  args = args || arguments_;

  if (runDependencies > 0) {
    return;
  }

  stackCheckInit();

  preRun();

  // a preRun added a dependency, run will be called later
  if (runDependencies > 0) {
    return;
  }

  function doRun() {
    // run may have just been called through dependencies being fulfilled just in this very frame,
    // or while the async setStatus time below was happening
    if (calledRun) return;
    calledRun = true;
    Module['calledRun'] = true;

    if (ABORT) return;

    initRuntime();

    preMain();

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else
  {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = run;

function checkUnflushedContent() {
  // Compiler settings do not allow exiting the runtime, so flushing
  // the streams is not possible. but in ASSERTIONS mode we check
  // if there was something to flush, and if so tell the user they
  // should request that the runtime be exitable.
  // Normally we would not even include flush() at all, but in ASSERTIONS
  // builds we do so just for this check, and here we see if there is any
  // content to flush, that is, we check if there would have been
  // something a non-ASSERTIONS build would have not seen.
  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0
  // mode (which has its own special function for this; otherwise, all
  // the code is inside libc)
  var oldOut = out;
  var oldErr = err;
  var has = false;
  out = err = function(x) {
    has = true;
  }
  try { // it doesn't matter if it fails
    var flush = flush_NO_FILESYSTEM;
    if (flush) flush();
  } catch(e) {}
  out = oldOut;
  err = oldErr;
  if (has) {
    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');
    warnOnce('(this may also be due to not including full filesystem support - try building with -s FORCE_FILESYSTEM=1)');
  }
}

/** @param {boolean|number=} implicit */
function exit(status, implicit) {
  EXITSTATUS = status;

  checkUnflushedContent();

  // if this is just main exit-ing implicitly, and the status is 0, then we
  // don't need to do anything here and can just leave. if the status is
  // non-zero, though, then we need to report it.
  // (we may have warned about this earlier, if a situation justifies doing so)
  if (implicit && keepRuntimeAlive() && status === 0) {
    return;
  }

  if (keepRuntimeAlive()) {
    // if exit() was called, we may warn the user if the runtime isn't actually being shut down
    if (!implicit) {
      var msg = 'program exited (with status: ' + status + '), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)';
      err(msg);
    }
  } else {

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);

    ABORT = true;
  }

  quit_(status, new ExitStatus(status));
}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

run();





